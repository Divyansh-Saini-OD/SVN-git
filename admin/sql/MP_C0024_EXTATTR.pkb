
/*****************************************************************************
--  Note: This generated code is for demonstration purposes only and may
--        not be deployable.
*****************************************************************************/

CREATE OR REPLACE PACKAGE ""MP_C0024_EXTATTR"" AS
OWB$MAP_OBJECT_ID VARCHAR2(32) := '';
sql_stmt  VARCHAR2(32767);
get_abort BOOLEAN := FALSE;
get_abort_procedure BOOLEAN := FALSE;
get_trigger_success BOOLEAN := TRUE;
get_errors NUMBER(22) := 0;
get_status NUMBER(22) := 0;
get_error_ratio NUMBER(22) := 0;
get_global_names              VARCHAR2(10) := 'FALSE';
-- Status variable for Batch cursors
"XXOD_HZ_IMP_EXT_ATTRIBS_INT_St" BOOLEAN := FALSE; 

"CO_0_CR" VARCHAR2(30) := 'XXCONV';"P_BATCH_ID" NUMBER;"P_AOPS_BATCH_ID" NUMBER;

-- Function Main 
-- Entry point in package ""MP_C0024_EXTATTR""
FUNCTION Main("P_BATCH_ID" IN NUMBER
 DEFAULT NULL, "P_AOPS_BATCH_ID" IN NUMBER
 DEFAULT NULL) RETURN NUMBER;  

END ""MP_C0024_EXTATTR"";

/

CREATE OR REPLACE PACKAGE BODY ""MP_C0024_EXTATTR"" AS




---------------------------------------------------------------------------
-- Function "XXOD_HZ_IMP_EXT_ATTRIBS_I_Bat"
--   performs batch extraction
--   Returns TRUE on success
--   Returns FALSE on failure
---------------------------------------------------------------------------
FUNCTION "XXOD_HZ_IMP_EXT_ATTRIBS_I_Bat" ("P_BATCH_ID" IN NUMBER
 DEFAULT NULL, "P_AOPS_BATCH_ID" IN NUMBER
 DEFAULT NULL) 
 RETURN BOOLEAN IS

BEGIN
  EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';

  BEGIN
    INSERT
    /*+ APPEND PARALLEL("XXOD_HZ_IMP_EXT_ATTRIBS_INT") */
    INTO
      "XXOD_HZ_IMP_EXT_ATTRIBS_INT"
      ("BATCH_ID",
      "CREATED_BY_MODULE",
      "ORIG_SYSTEM",
      "ORIG_SYSTEM_REFERENCE",
      "INTERFACE_ENTITY_NAME",
      "INTERFACE_ENTITY_REFERENCE",
      "ATTRIBUTE_GROUP_CODE",
      "C_EXT_ATTR1",
      "C_EXT_ATTR2",
      "C_EXT_ATTR3",
      "C_EXT_ATTR4",
      "C_EXT_ATTR5",
      "C_EXT_ATTR6",
      "C_EXT_ATTR7",
      "C_EXT_ATTR8",
      "C_EXT_ATTR9",
      "C_EXT_ATTR10",
      "C_EXT_ATTR11",
      "C_EXT_ATTR13",
      "C_EXT_ATTR14",
      "C_EXT_ATTR15",
      "C_EXT_ATTR16",
      "C_EXT_ATTR17",
      "C_EXT_ATTR18",
      "C_EXT_ATTR19",
      "C_EXT_ATTR20",
      "N_EXT_ATTR1",
      "N_EXT_ATTR2",
      "N_EXT_ATTR3",
      "N_EXT_ATTR4",
      "D_EXT_ATTR1",
      "D_EXT_ATTR2")
      (SELECT
/*+ NO_MERGE */
  "MP_C0024_EXTATTR"."P_BATCH_ID" "P_BATCH_ID$1",
  "MP_C0024_EXTATTR"."CO_0_CR" "CREATED_BY_MODULE",
  "OREATTRF"."OREATTRF_ORIG_SYSTEM" "OREATTRF_ORIG_SYSTEM",
  "OREATTRF"."OREATTRF_ORIG_SYSREF" "OREATTRF_ORIG_SYSREF",
  "OREATTRF"."OREATTRF_ENTITY_NAME" "OREATTRF_ENTITY_NAME",
  "OREATTRF"."OREATTRF_ENTITY_REFERENCE" "OREATTRF_ENTITY_REFERENCE",
  "OREATTRF"."OREATTRF_GROUP_CODE" "OREATTRF_GROUP_CODE",
  "OREATTRF"."OREATTRF_ATTRIBUTE_1" "OREATTRF_ATTRIBUTE_1",
  "OREATTRF"."OREATTRF_ATTRIBUTE_2" "OREATTRF_ATTRIBUTE_2",
  "OREATTRF"."OREATTRF_ATTRIBUTE_3" "OREATTRF_ATTRIBUTE_3",
  "OREATTRF"."OREATTRF_ATTRIBUTE_4" "OREATTRF_ATTRIBUTE_4",
  "OREATTRF"."OREATTRF_ATTRIBUTE_5" "OREATTRF_ATTRIBUTE_5",
  "OREATTRF"."OREATTRF_ATTRIBUTE_6" "OREATTRF_ATTRIBUTE_6",
  CASE WHEN ( "OREATTRF"."OREATTRF_GROUP_CODE" = 'BILLDOCS' AND 
"OREATTRF"."OREATTRF_ATTRIBUTE_7" = 'PRIM')
THEN 'Y'
WHEN ( "OREATTRF"."OREATTRF_GROUP_CODE" = 'BILLDOCS' AND 
"OREATTRF"."OREATTRF_ATTRIBUTE_7" = 'MAIL')
THEN 'N'
ELSE
 "OREATTRF"."OREATTRF_ATTRIBUTE_7" 
END/* EXPRESSION.OUTGRP1.C_EXT_ATTR7 */ "C_EXT_ATTR7",
  "OREATTRF"."OREATTRF_ATTRIBUTE_8" "OREATTRF_ATTRIBUTE_8",
  "OREATTRF"."OREATTRF_ATTRIBUTE_9" "OREATTRF_ATTRIBUTE_9",
  "OREATTRF"."OREATTRF_ATTRIBUTE_10" "OREATTRF_ATTRIBUTE_10",
  "OREATTRF"."OREATTRF_ATTRIBUTE_11" "OREATTRF_ATTRIBUTE_11",
  "OREATTRF"."OREATTRF_ATTRIBUTE_13" "OREATTRF_ATTRIBUTE_13",
  "OREATTRF"."OREATTRF_ATTRIBUTE_14" "OREATTRF_ATTRIBUTE_14",
  "OREATTRF"."OREATTRF_ATTRIBUTE_15" "OREATTRF_ATTRIBUTE_15",
  "OREATTRF"."OREATTRF_ATTRIBUTE_16" "OREATTRF_ATTRIBUTE_16",
  "OREATTRF"."OREATTRF_ATTRIBUTE_17" "OREATTRF_ATTRIBUTE_17",
  "OREATTRF"."OREATTRF_ATTRIBUTE_18" "OREATTRF_ATTRIBUTE_18",
  "OREATTRF"."OREATTRF_ATTRIBUTE_19" "OREATTRF_ATTRIBUTE_19",
  "OREATTRF"."OREATTRF_ATTRIBUTE_20" "OREATTRF_ATTRIBUTE_20",
  "OREATTRF"."OREATTRF_NUMBER_01" "OREATTRF_NUMBER_01",
  "OREATTRF"."OREATTRF_NUMBER_02" "OREATTRF_NUMBER_02",
  "OREATTRF"."OREATTRF_NUMBER_03" "OREATTRF_NUMBER_03",
  "OREATTRF"."OREATTRF_NUMBER_04" "OREATTRF_NUMBER_04",
  CASE  WHEN TRIM("OREATTRF"."OREATTRF_DATE_01") <> ' ' THEN 
TO_DATE( "OREATTRF"."OREATTRF_DATE_01" ,'YYYYMMDD')  ELSE
NULL END

-- CASE structure re-arranged on 14-Jul-2008/* EXPRESSION.OUTGRP1.D_EXT_ATTR1 */
 "D_EXT_ATTR1",
  CASE WHEN  TRIM("OREATTRF"."OREATTRF_DATE_02") <> ' ' THEN 
TO_DATE( "OREATTRF"."OREATTRF_DATE_02" ,'YYYYMMDD') ELSE
NULL END

-- CASE structure re-arranged on 14-Jul-2008/* EXPRESSION.OUTGRP1.D_EXT_ATTR2 */
 "D_EXT_ATTR2"
FROM
  "SIMPLIFY"."OREATTRF"@"GANDHI.NA.ODCORP.NET" "OREATTRF"
  WHERE 
  ( "OREATTRF"."OREATTFF_BATCH_NBR" = "MP_C0024_EXTATTR"."P_AOPS_BATCH_ID" )
      );
    COMMIT;
  EXCEPTION WHEN OTHERS THEN
    ROLLBACK;
    COMMIT;
    RETURN FALSE;
  END;
  COMMIT;
  RETURN TRUE;
END "XXOD_HZ_IMP_EXT_ATTRIBS_I_Bat";

FUNCTION Main("P_BATCH_ID" IN NUMBER
 DEFAULT NULL, "P_AOPS_BATCH_ID" IN NUMBER
 DEFAULT NULL) RETURN NUMBER IS
get_batch_status           BOOLEAN := TRUE;
BEGIN
  -- Mapping input parameter global variable assignments
  "MP_C0024_EXTATTR"."P_BATCH_ID" := "MP_C0024_EXTATTR".Main."P_BATCH_ID";"MP_C0024_EXTATTR"."P_AOPS_BATCH_ID" := "MP_C0024_EXTATTR".Main."P_AOPS_BATCH_ID";
  

  
  
  
  
  
PROCEDURE EXEC_AUTONOMOUS_SQL(CMD IN VARCHAR2) IS
  PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
  EXECUTE IMMEDIATE (CMD);
  COMMIT;
END;
  -- Initialize all batch status variables
	"XXOD_HZ_IMP_EXT_ATTRIBS_INT_St" := FALSE;



			
"XXOD_HZ_IMP_EXT_ATTRIBS_INT_St" := "XXOD_HZ_IMP_EXT_ATTRIBS_I_Bat"; 


RETURN get_status;
END Main;
END ""MP_C0024_EXTATTR"";

/

