-- Declare the SQL type for the PL/SQL type XX_INV_ITEM_IN_PKG.G_MASTER_ITM_HDR_REC_TYPE
CREATE OR REPLACE TYPE XX_INV_ITEM_IN_PKG_G_MASTER_I AS OBJECT (
      DESCRIPTION VARCHAR2(500),
      ITEM_NUMBER VARCHAR2(40),
      TAX_CATEGORY VARCHAR2(50),
      ITEM_TYPE VARCHAR2(30),
      ITEM_STATUS VARCHAR2(10),
      BASE_UOM_CODE VARCHAR2(3),
      SELLABLE VARCHAR2(1),
      ORDERABLE_IND VARCHAR2(1)
);
/
show errors
-- Declare the SQL type for the PL/SQL type XX_INV_ITEM_IN_PKG.G_MASTER_ITM_CATEGORY_REC_TYPE
CREATE OR REPLACE TYPE XX_INV_ITEM_IN_PKG_G_MASTER_1 AS OBJECT (
      DEPT VARCHAR2(40),
      CLASS VARCHAR2(40),
      SUBCLASS VARCHAR2(40),
      PRIVATE_BRAND_LABEL VARCHAR2(40)
);
/
show errors
-- Declare the SQL type for the PL/SQL type ROWTYPE_PL0
CREATE OR REPLACE TYPE XX_INV_ITEM_IN_PKG_ROWTYPE_SQ AS OBJECT (
      SOURCE_SYSTEM_CODE VARCHAR2(5),
      SOURCE_SYSTEM_REF VARCHAR2(50),
      INVENTORY_ITEM_ID NUMBER,
      ORGANIZATION_ID NUMBER,
      ORDER_AS_TYPE VARCHAR2(3),
      PACK_IND VARCHAR2(3),
      PACK_TYPE VARCHAR2(3),
      PACKAGE_SIZE NUMBER(12, 4),
      SHIP_ALONE_IND VARCHAR2(3),
      HANDLING_SENSITIVITY VARCHAR2(18),
      OD_META_CD VARCHAR2(18),
      OD_OVRSIZE_DELVRY_FLG VARCHAR2(3),
      OD_PROD_PROTECT_CD VARCHAR2(18),
      OD_GIFT_CERTIF_FLG VARCHAR2(3),
      OD_IMPRINTED_ITEM_FLG VARCHAR2(3),
      OD_RECYCLE_FLG VARCHAR2(3),
      OD_READY_TO_ASSEMBLE_FLG VARCHAR2(3),
      OD_PRIVATE_BRAND_FLG VARCHAR2(3),
      OD_GSA_FLG VARCHAR2(3),
      OD_HUB_FLAG VARCHAR2(3),
      OD_CALL_FOR_PRICE_CD VARCHAR2(18),
      OD_COST_UP_FLG VARCHAR2(1),
      MASTER_ITEM VARCHAR2(75),
      SUBSELL_MASTER_QTY NUMBER(4),
      SIMPLE_PACK_IND VARCHAR2(3),
      OD_SELL_RESTRICT_CD VARCHAR2(18),
      OD_LIST_OFF_FLG VARCHAR2(3),
      OD_ASSORTMENT_CD VARCHAR2(18),
      OD_OFF_CAT_FLG VARCHAR2(3),
      OD_RETAIL_PRICING_FLG VARCHAR2(3),
      OD_COUPON_DISC_FLG VARCHAR2(3),
      OD_SKU_TYPE_CD VARCHAR2(18),
      ITEM_NUMBER_TYPE VARCHAR2(18),
      SHORT_DESC VARCHAR2(60),
      STORE_ORD_MULT VARCHAR2(3),
      LAST_UPDATE_DATE DATE,
      LAST_UPDATE_LOGIN NUMBER,
      LAST_UPDATED_BY NUMBER,
      CREATION_DATE DATE,
      CREATED_BY NUMBER,
      RMS_TIMESTAMP TIMESTAMP
);
/
show errors
-- Declare the SQL type for the PL/SQL type ROWTYPE_PL1
CREATE OR REPLACE TYPE XXINVITEMINPKGGLOCATION_ROWTY AS OBJECT (
      SOURCE_SYSTEM_CODE VARCHAR2(5),
      SOURCE_SYSTEM_REF VARCHAR2(50),
      INVENTORY_ITEM_ID NUMBER,
      ORGANIZATION_ID NUMBER,
      OD_DIST_TARGET NUMBER(9),
      OD_EBW_QTY NUMBER(9),
      OD_INFINITE_QTY_CD VARCHAR2(18),
      OD_LOCK_UP_ITEM_FLG VARCHAR2(3),
      OD_PROPRIETARY_TYPE_CD VARCHAR2(18),
      OD_REPLEN_SUB_TYPE_CD VARCHAR2(18),
      OD_REPLEN_TYPE_CD VARCHAR2(18),
      OD_WHSE_ITEM_CD VARCHAR2(18),
      OD_ABC_CLASS VARCHAR2(18),
      LOCAL_ITEM_DESC VARCHAR2(300),
      LOCAL_SHORT_DESC VARCHAR2(60),
      PRIMARY_SUPP NUMBER(10),
      OD_CHANNEL_BLOCK VARCHAR2(3),
      LAST_UPDATE_DATE DATE,
      LAST_UPDATE_LOGIN NUMBER,
      LAST_UPDATED_BY NUMBER,
      CREATION_DATE DATE,
      CREATED_BY NUMBER,
      RMS_TIMESTAMP TIMESTAMP
);
/
show errors
-- Declare the SQL type for the PL/SQL type XX_INV_ITEM_IN_PKG.G_LOCATION_REC
CREATE OR REPLACE TYPE XX_INV_ITEM_IN_PKG_G_LOCATION AS OBJECT (
      ATTRIBUTE XXINVITEMINPKGGLOCATION_ROWTY,
      LOCATION VARCHAR2(150),
      ITEM_STATUS VARCHAR2(10)
);
/
show errors
-- Declare package containing conversion functions between SQL and PL/SQL types
CREATE OR REPLACE PACKAGE BPEL_I0142_ITEMEBSIN AS
	-- Declare the conversion functions the PL/SQL type XX_INV_ITEM_IN_PKG.G_MASTER_ITM_HDR_REC_TYPE
	FUNCTION PL_TO_SQL0(aPlsqlItem XX_INV_ITEM_IN_PKG.G_MASTER_ITM_HDR_REC_TYPE)
 	RETURN XX_INV_ITEM_IN_PKG_G_MASTER_I;
	FUNCTION SQL_TO_PL0(aSqlItem XX_INV_ITEM_IN_PKG_G_MASTER_I)
	RETURN XX_INV_ITEM_IN_PKG.G_MASTER_ITM_HDR_REC_TYPE;
	-- Declare the conversion functions the PL/SQL type XX_INV_ITEM_IN_PKG.G_MASTER_ITM_CATEGORY_REC_TYPE
	FUNCTION PL_TO_SQL1(aPlsqlItem XX_INV_ITEM_IN_PKG.G_MASTER_ITM_CATEGORY_REC_TYPE)
 	RETURN XX_INV_ITEM_IN_PKG_G_MASTER_1;
	FUNCTION SQL_TO_PL1(aSqlItem XX_INV_ITEM_IN_PKG_G_MASTER_1)
	RETURN XX_INV_ITEM_IN_PKG.G_MASTER_ITM_CATEGORY_REC_TYPE;
	-- Redefine a PL/SQL RECORD type originally defined via CURSOR%ROWTYPE
	TYPE ROWTYPE_PL0 IS RECORD (
		SOURCE_SYSTEM_CODE VARCHAR2(5),
		SOURCE_SYSTEM_REF VARCHAR2(50),
		INVENTORY_ITEM_ID NUMBER,
		ORGANIZATION_ID NUMBER,
		ORDER_AS_TYPE VARCHAR2(3),
		PACK_IND VARCHAR2(3),
		PACK_TYPE VARCHAR2(3),
		PACKAGE_SIZE NUMBER(12, 4),
		SHIP_ALONE_IND VARCHAR2(3),
		HANDLING_SENSITIVITY VARCHAR2(18),
		OD_META_CD VARCHAR2(18),
		OD_OVRSIZE_DELVRY_FLG VARCHAR2(3),
		OD_PROD_PROTECT_CD VARCHAR2(18),
		OD_GIFT_CERTIF_FLG VARCHAR2(3),
		OD_IMPRINTED_ITEM_FLG VARCHAR2(3),
		OD_RECYCLE_FLG VARCHAR2(3),
		OD_READY_TO_ASSEMBLE_FLG VARCHAR2(3),
		OD_PRIVATE_BRAND_FLG VARCHAR2(3),
		OD_GSA_FLG VARCHAR2(3),
		OD_HUB_FLAG VARCHAR2(3),
		OD_CALL_FOR_PRICE_CD VARCHAR2(18),
		OD_COST_UP_FLG VARCHAR2(1),
		MASTER_ITEM VARCHAR2(75),
		SUBSELL_MASTER_QTY NUMBER(4),
		SIMPLE_PACK_IND VARCHAR2(3),
		OD_SELL_RESTRICT_CD VARCHAR2(18),
		OD_LIST_OFF_FLG VARCHAR2(3),
		OD_ASSORTMENT_CD VARCHAR2(18),
		OD_OFF_CAT_FLG VARCHAR2(3),
		OD_RETAIL_PRICING_FLG VARCHAR2(3),
		OD_COUPON_DISC_FLG VARCHAR2(3),
		OD_SKU_TYPE_CD VARCHAR2(18),
		ITEM_NUMBER_TYPE VARCHAR2(18),
		SHORT_DESC VARCHAR2(60),
		STORE_ORD_MULT VARCHAR2(3),
		LAST_UPDATE_DATE DATE,
		LAST_UPDATE_LOGIN NUMBER,
		LAST_UPDATED_BY NUMBER,
		CREATION_DATE DATE,
		CREATED_BY NUMBER,
		RMS_TIMESTAMP TIMESTAMP);
	-- Declare the conversion functions the PL/SQL type ROWTYPE_PL0
	FUNCTION PL_TO_SQL2(aPlsqlItem ROWTYPE_PL0)
 	RETURN XX_INV_ITEM_IN_PKG_ROWTYPE_SQ;
	FUNCTION SQL_TO_PL2(aSqlItem XX_INV_ITEM_IN_PKG_ROWTYPE_SQ)
	RETURN ROWTYPE_PL0;
	-- Redefine a PL/SQL RECORD type originally defined via CURSOR%ROWTYPE
	TYPE ROWTYPE_PL1 IS RECORD (
		SOURCE_SYSTEM_CODE VARCHAR2(5),
		SOURCE_SYSTEM_REF VARCHAR2(50),
		INVENTORY_ITEM_ID NUMBER,
		ORGANIZATION_ID NUMBER,
		OD_DIST_TARGET NUMBER(9),
		OD_EBW_QTY NUMBER(9),
		OD_INFINITE_QTY_CD VARCHAR2(18),
		OD_LOCK_UP_ITEM_FLG VARCHAR2(3),
		OD_PROPRIETARY_TYPE_CD VARCHAR2(18),
		OD_REPLEN_SUB_TYPE_CD VARCHAR2(18),
		OD_REPLEN_TYPE_CD VARCHAR2(18),
		OD_WHSE_ITEM_CD VARCHAR2(18),
		OD_ABC_CLASS VARCHAR2(18),
		LOCAL_ITEM_DESC VARCHAR2(300),
		LOCAL_SHORT_DESC VARCHAR2(60),
		PRIMARY_SUPP NUMBER(10),
		OD_CHANNEL_BLOCK VARCHAR2(3),
		LAST_UPDATE_DATE DATE,
		LAST_UPDATE_LOGIN NUMBER,
		LAST_UPDATED_BY NUMBER,
		CREATION_DATE DATE,
		CREATED_BY NUMBER,
		RMS_TIMESTAMP TIMESTAMP);
	-- Declare the conversion functions the PL/SQL type ROWTYPE_PL1
	FUNCTION PL_TO_SQL3(aPlsqlItem ROWTYPE_PL1)
 	RETURN XXINVITEMINPKGGLOCATION_ROWTY;
	FUNCTION SQL_TO_PL4(aSqlItem XXINVITEMINPKGGLOCATION_ROWTY)
	RETURN ROWTYPE_PL1;
	-- Declare the conversion functions the PL/SQL type XX_INV_ITEM_IN_PKG.G_LOCATION_REC
	FUNCTION PL_TO_SQL4(aPlsqlItem XX_INV_ITEM_IN_PKG.G_LOCATION_REC)
 	RETURN XX_INV_ITEM_IN_PKG_G_LOCATION;
	FUNCTION SQL_TO_PL3(aSqlItem XX_INV_ITEM_IN_PKG_G_LOCATION)
	RETURN XX_INV_ITEM_IN_PKG.G_LOCATION_REC;
   PROCEDURE XX_INV_ITEM_IN_PKG$INTERFACE_ (P_ACTIONEXPRESSION VARCHAR2,P_REASON_CODE VARCHAR2,P_RMS_TIMESTAMP VARCHAR2,P_MASTER_ITEM_HDR_REC XX_INV_ITEM_IN_PKG_G_MASTER_I,P_MASTER_ITEM_CATEGORY_REC XX_INV_ITEM_IN_PKG_G_MASTER_1,P_MASTER_ITEM_ATTRI_REC XX_INV_ITEM_IN_PKG_ROWTYPE_SQ,P_LOCATION_REC XX_INV_ITEM_IN_PKG_G_LOCATION,X_MESSAGE_CODE OUT NUMBER,X_MESSAGE_DATA OUT VARCHAR2);
END BPEL_I0142_ITEMEBSIN;
/
show errors
CREATE OR REPLACE PACKAGE BODY BPEL_I0142_ITEMEBSIN IS
	FUNCTION PL_TO_SQL0(aPlsqlItem XX_INV_ITEM_IN_PKG.G_MASTER_ITM_HDR_REC_TYPE)
 	RETURN XX_INV_ITEM_IN_PKG_G_MASTER_I IS 
	aSqlItem XX_INV_ITEM_IN_PKG_G_MASTER_I; 
	BEGIN 
		-- initialize the object
		aSqlItem := XX_INV_ITEM_IN_PKG_G_MASTER_I(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.DESCRIPTION := aPlsqlItem.DESCRIPTION;
		aSqlItem.ITEM_NUMBER := aPlsqlItem.ITEM_NUMBER;
		aSqlItem.TAX_CATEGORY := aPlsqlItem.TAX_CATEGORY;
		aSqlItem.ITEM_TYPE := aPlsqlItem.ITEM_TYPE;
		aSqlItem.ITEM_STATUS := aPlsqlItem.ITEM_STATUS;
		aSqlItem.BASE_UOM_CODE := aPlsqlItem.BASE_UOM_CODE;
		aSqlItem.SELLABLE := aPlsqlItem.SELLABLE;
		aSqlItem.ORDERABLE_IND := aPlsqlItem.ORDERABLE_IND;
		RETURN aSqlItem;
	END PL_TO_SQL0;
	FUNCTION SQL_TO_PL0(aSqlItem XX_INV_ITEM_IN_PKG_G_MASTER_I) 
	RETURN XX_INV_ITEM_IN_PKG.G_MASTER_ITM_HDR_REC_TYPE IS 
	aPlsqlItem XX_INV_ITEM_IN_PKG.G_MASTER_ITM_HDR_REC_TYPE; 
	BEGIN 
		aPlsqlItem.DESCRIPTION := aSqlItem.DESCRIPTION;
		aPlsqlItem.ITEM_NUMBER := aSqlItem.ITEM_NUMBER;
		aPlsqlItem.TAX_CATEGORY := aSqlItem.TAX_CATEGORY;
		aPlsqlItem.ITEM_TYPE := aSqlItem.ITEM_TYPE;
		aPlsqlItem.ITEM_STATUS := aSqlItem.ITEM_STATUS;
		aPlsqlItem.BASE_UOM_CODE := aSqlItem.BASE_UOM_CODE;
		aPlsqlItem.SELLABLE := aSqlItem.SELLABLE;
		aPlsqlItem.ORDERABLE_IND := aSqlItem.ORDERABLE_IND;
		RETURN aPlsqlItem;
	END SQL_TO_PL0;
	FUNCTION PL_TO_SQL1(aPlsqlItem XX_INV_ITEM_IN_PKG.G_MASTER_ITM_CATEGORY_REC_TYPE)
 	RETURN XX_INV_ITEM_IN_PKG_G_MASTER_1 IS 
	aSqlItem XX_INV_ITEM_IN_PKG_G_MASTER_1; 
	BEGIN 
		-- initialize the object
		aSqlItem := XX_INV_ITEM_IN_PKG_G_MASTER_1(NULL, NULL, NULL, NULL);
		aSqlItem.DEPT := aPlsqlItem.DEPT;
		aSqlItem.CLASS := aPlsqlItem.CLASS;
		aSqlItem.SUBCLASS := aPlsqlItem.SUBCLASS;
		aSqlItem.PRIVATE_BRAND_LABEL := aPlsqlItem.PRIVATE_BRAND_LABEL;
		RETURN aSqlItem;
	END PL_TO_SQL1;
	FUNCTION SQL_TO_PL1(aSqlItem XX_INV_ITEM_IN_PKG_G_MASTER_1) 
	RETURN XX_INV_ITEM_IN_PKG.G_MASTER_ITM_CATEGORY_REC_TYPE IS 
	aPlsqlItem XX_INV_ITEM_IN_PKG.G_MASTER_ITM_CATEGORY_REC_TYPE; 
	BEGIN 
		aPlsqlItem.DEPT := aSqlItem.DEPT;
		aPlsqlItem.CLASS := aSqlItem.CLASS;
		aPlsqlItem.SUBCLASS := aSqlItem.SUBCLASS;
		aPlsqlItem.PRIVATE_BRAND_LABEL := aSqlItem.PRIVATE_BRAND_LABEL;
		RETURN aPlsqlItem;
	END SQL_TO_PL1;
	FUNCTION PL_TO_SQL2(aPlsqlItem ROWTYPE_PL0)
 	RETURN XX_INV_ITEM_IN_PKG_ROWTYPE_SQ IS 
	aSqlItem XX_INV_ITEM_IN_PKG_ROWTYPE_SQ; 
	BEGIN 
		-- initialize the object
		aSqlItem := XX_INV_ITEM_IN_PKG_ROWTYPE_SQ(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.SOURCE_SYSTEM_CODE := aPlsqlItem.SOURCE_SYSTEM_CODE;
		aSqlItem.SOURCE_SYSTEM_REF := aPlsqlItem.SOURCE_SYSTEM_REF;
		aSqlItem.INVENTORY_ITEM_ID := aPlsqlItem.INVENTORY_ITEM_ID;
		aSqlItem.ORGANIZATION_ID := aPlsqlItem.ORGANIZATION_ID;
		aSqlItem.ORDER_AS_TYPE := aPlsqlItem.ORDER_AS_TYPE;
		aSqlItem.PACK_IND := aPlsqlItem.PACK_IND;
		aSqlItem.PACK_TYPE := aPlsqlItem.PACK_TYPE;
		aSqlItem.PACKAGE_SIZE := aPlsqlItem.PACKAGE_SIZE;
		aSqlItem.SHIP_ALONE_IND := aPlsqlItem.SHIP_ALONE_IND;
		aSqlItem.HANDLING_SENSITIVITY := aPlsqlItem.HANDLING_SENSITIVITY;
		aSqlItem.OD_META_CD := aPlsqlItem.OD_META_CD;
		aSqlItem.OD_OVRSIZE_DELVRY_FLG := aPlsqlItem.OD_OVRSIZE_DELVRY_FLG;
		aSqlItem.OD_PROD_PROTECT_CD := aPlsqlItem.OD_PROD_PROTECT_CD;
		aSqlItem.OD_GIFT_CERTIF_FLG := aPlsqlItem.OD_GIFT_CERTIF_FLG;
		aSqlItem.OD_IMPRINTED_ITEM_FLG := aPlsqlItem.OD_IMPRINTED_ITEM_FLG;
		aSqlItem.OD_RECYCLE_FLG := aPlsqlItem.OD_RECYCLE_FLG;
		aSqlItem.OD_READY_TO_ASSEMBLE_FLG := aPlsqlItem.OD_READY_TO_ASSEMBLE_FLG;
		aSqlItem.OD_PRIVATE_BRAND_FLG := aPlsqlItem.OD_PRIVATE_BRAND_FLG;
		aSqlItem.OD_GSA_FLG := aPlsqlItem.OD_GSA_FLG;
		aSqlItem.OD_HUB_FLAG := aPlsqlItem.OD_HUB_FLAG;
		aSqlItem.OD_CALL_FOR_PRICE_CD := aPlsqlItem.OD_CALL_FOR_PRICE_CD;
		aSqlItem.OD_COST_UP_FLG := aPlsqlItem.OD_COST_UP_FLG;
		aSqlItem.MASTER_ITEM := aPlsqlItem.MASTER_ITEM;
		aSqlItem.SUBSELL_MASTER_QTY := aPlsqlItem.SUBSELL_MASTER_QTY;
		aSqlItem.SIMPLE_PACK_IND := aPlsqlItem.SIMPLE_PACK_IND;
		aSqlItem.OD_SELL_RESTRICT_CD := aPlsqlItem.OD_SELL_RESTRICT_CD;
		aSqlItem.OD_LIST_OFF_FLG := aPlsqlItem.OD_LIST_OFF_FLG;
		aSqlItem.OD_ASSORTMENT_CD := aPlsqlItem.OD_ASSORTMENT_CD;
		aSqlItem.OD_OFF_CAT_FLG := aPlsqlItem.OD_OFF_CAT_FLG;
		aSqlItem.OD_RETAIL_PRICING_FLG := aPlsqlItem.OD_RETAIL_PRICING_FLG;
		aSqlItem.OD_COUPON_DISC_FLG := aPlsqlItem.OD_COUPON_DISC_FLG;
		aSqlItem.OD_SKU_TYPE_CD := aPlsqlItem.OD_SKU_TYPE_CD;
		aSqlItem.ITEM_NUMBER_TYPE := aPlsqlItem.ITEM_NUMBER_TYPE;
		aSqlItem.SHORT_DESC := aPlsqlItem.SHORT_DESC;
		aSqlItem.STORE_ORD_MULT := aPlsqlItem.STORE_ORD_MULT;
		aSqlItem.LAST_UPDATE_DATE := aPlsqlItem.LAST_UPDATE_DATE;
		aSqlItem.LAST_UPDATE_LOGIN := aPlsqlItem.LAST_UPDATE_LOGIN;
		aSqlItem.LAST_UPDATED_BY := aPlsqlItem.LAST_UPDATED_BY;
		aSqlItem.CREATION_DATE := aPlsqlItem.CREATION_DATE;
		aSqlItem.CREATED_BY := aPlsqlItem.CREATED_BY;
		aSqlItem.RMS_TIMESTAMP := aPlsqlItem.RMS_TIMESTAMP;
		RETURN aSqlItem;
	END PL_TO_SQL2;
	FUNCTION SQL_TO_PL2(aSqlItem XX_INV_ITEM_IN_PKG_ROWTYPE_SQ) 
	RETURN ROWTYPE_PL0 IS 
	aPlsqlItem ROWTYPE_PL0; 
	BEGIN 
		aPlsqlItem.SOURCE_SYSTEM_CODE := aSqlItem.SOURCE_SYSTEM_CODE;
		aPlsqlItem.SOURCE_SYSTEM_REF := aSqlItem.SOURCE_SYSTEM_REF;
		aPlsqlItem.INVENTORY_ITEM_ID := aSqlItem.INVENTORY_ITEM_ID;
		aPlsqlItem.ORGANIZATION_ID := aSqlItem.ORGANIZATION_ID;
		aPlsqlItem.ORDER_AS_TYPE := aSqlItem.ORDER_AS_TYPE;
		aPlsqlItem.PACK_IND := aSqlItem.PACK_IND;
		aPlsqlItem.PACK_TYPE := aSqlItem.PACK_TYPE;
		aPlsqlItem.PACKAGE_SIZE := aSqlItem.PACKAGE_SIZE;
		aPlsqlItem.SHIP_ALONE_IND := aSqlItem.SHIP_ALONE_IND;
		aPlsqlItem.HANDLING_SENSITIVITY := aSqlItem.HANDLING_SENSITIVITY;
		aPlsqlItem.OD_META_CD := aSqlItem.OD_META_CD;
		aPlsqlItem.OD_OVRSIZE_DELVRY_FLG := aSqlItem.OD_OVRSIZE_DELVRY_FLG;
		aPlsqlItem.OD_PROD_PROTECT_CD := aSqlItem.OD_PROD_PROTECT_CD;
		aPlsqlItem.OD_GIFT_CERTIF_FLG := aSqlItem.OD_GIFT_CERTIF_FLG;
		aPlsqlItem.OD_IMPRINTED_ITEM_FLG := aSqlItem.OD_IMPRINTED_ITEM_FLG;
		aPlsqlItem.OD_RECYCLE_FLG := aSqlItem.OD_RECYCLE_FLG;
		aPlsqlItem.OD_READY_TO_ASSEMBLE_FLG := aSqlItem.OD_READY_TO_ASSEMBLE_FLG;
		aPlsqlItem.OD_PRIVATE_BRAND_FLG := aSqlItem.OD_PRIVATE_BRAND_FLG;
		aPlsqlItem.OD_GSA_FLG := aSqlItem.OD_GSA_FLG;
		aPlsqlItem.OD_HUB_FLAG := aSqlItem.OD_HUB_FLAG;
		aPlsqlItem.OD_CALL_FOR_PRICE_CD := aSqlItem.OD_CALL_FOR_PRICE_CD;
		aPlsqlItem.OD_COST_UP_FLG := aSqlItem.OD_COST_UP_FLG;
		aPlsqlItem.MASTER_ITEM := aSqlItem.MASTER_ITEM;
		aPlsqlItem.SUBSELL_MASTER_QTY := aSqlItem.SUBSELL_MASTER_QTY;
		aPlsqlItem.SIMPLE_PACK_IND := aSqlItem.SIMPLE_PACK_IND;
		aPlsqlItem.OD_SELL_RESTRICT_CD := aSqlItem.OD_SELL_RESTRICT_CD;
		aPlsqlItem.OD_LIST_OFF_FLG := aSqlItem.OD_LIST_OFF_FLG;
		aPlsqlItem.OD_ASSORTMENT_CD := aSqlItem.OD_ASSORTMENT_CD;
		aPlsqlItem.OD_OFF_CAT_FLG := aSqlItem.OD_OFF_CAT_FLG;
		aPlsqlItem.OD_RETAIL_PRICING_FLG := aSqlItem.OD_RETAIL_PRICING_FLG;
		aPlsqlItem.OD_COUPON_DISC_FLG := aSqlItem.OD_COUPON_DISC_FLG;
		aPlsqlItem.OD_SKU_TYPE_CD := aSqlItem.OD_SKU_TYPE_CD;
		aPlsqlItem.ITEM_NUMBER_TYPE := aSqlItem.ITEM_NUMBER_TYPE;
		aPlsqlItem.SHORT_DESC := aSqlItem.SHORT_DESC;
		aPlsqlItem.STORE_ORD_MULT := aSqlItem.STORE_ORD_MULT;
		aPlsqlItem.LAST_UPDATE_DATE := aSqlItem.LAST_UPDATE_DATE;
		aPlsqlItem.LAST_UPDATE_LOGIN := aSqlItem.LAST_UPDATE_LOGIN;
		aPlsqlItem.LAST_UPDATED_BY := aSqlItem.LAST_UPDATED_BY;
		aPlsqlItem.CREATION_DATE := aSqlItem.CREATION_DATE;
		aPlsqlItem.CREATED_BY := aSqlItem.CREATED_BY;
		aPlsqlItem.RMS_TIMESTAMP := aSqlItem.RMS_TIMESTAMP;
		RETURN aPlsqlItem;
	END SQL_TO_PL2;
	FUNCTION PL_TO_SQL3(aPlsqlItem ROWTYPE_PL1)
 	RETURN XXINVITEMINPKGGLOCATION_ROWTY IS 
	aSqlItem XXINVITEMINPKGGLOCATION_ROWTY; 
	BEGIN 
		-- initialize the object
		aSqlItem := XXINVITEMINPKGGLOCATION_ROWTY(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.SOURCE_SYSTEM_CODE := aPlsqlItem.SOURCE_SYSTEM_CODE;
		aSqlItem.SOURCE_SYSTEM_REF := aPlsqlItem.SOURCE_SYSTEM_REF;
		aSqlItem.INVENTORY_ITEM_ID := aPlsqlItem.INVENTORY_ITEM_ID;
		aSqlItem.ORGANIZATION_ID := aPlsqlItem.ORGANIZATION_ID;
		aSqlItem.OD_DIST_TARGET := aPlsqlItem.OD_DIST_TARGET;
		aSqlItem.OD_EBW_QTY := aPlsqlItem.OD_EBW_QTY;
		aSqlItem.OD_INFINITE_QTY_CD := aPlsqlItem.OD_INFINITE_QTY_CD;
		aSqlItem.OD_LOCK_UP_ITEM_FLG := aPlsqlItem.OD_LOCK_UP_ITEM_FLG;
		aSqlItem.OD_PROPRIETARY_TYPE_CD := aPlsqlItem.OD_PROPRIETARY_TYPE_CD;
		aSqlItem.OD_REPLEN_SUB_TYPE_CD := aPlsqlItem.OD_REPLEN_SUB_TYPE_CD;
		aSqlItem.OD_REPLEN_TYPE_CD := aPlsqlItem.OD_REPLEN_TYPE_CD;
		aSqlItem.OD_WHSE_ITEM_CD := aPlsqlItem.OD_WHSE_ITEM_CD;
		aSqlItem.OD_ABC_CLASS := aPlsqlItem.OD_ABC_CLASS;
		aSqlItem.LOCAL_ITEM_DESC := aPlsqlItem.LOCAL_ITEM_DESC;
		aSqlItem.LOCAL_SHORT_DESC := aPlsqlItem.LOCAL_SHORT_DESC;
		aSqlItem.PRIMARY_SUPP := aPlsqlItem.PRIMARY_SUPP;
		aSqlItem.OD_CHANNEL_BLOCK := aPlsqlItem.OD_CHANNEL_BLOCK;
		aSqlItem.LAST_UPDATE_DATE := aPlsqlItem.LAST_UPDATE_DATE;
		aSqlItem.LAST_UPDATE_LOGIN := aPlsqlItem.LAST_UPDATE_LOGIN;
		aSqlItem.LAST_UPDATED_BY := aPlsqlItem.LAST_UPDATED_BY;
		aSqlItem.CREATION_DATE := aPlsqlItem.CREATION_DATE;
		aSqlItem.CREATED_BY := aPlsqlItem.CREATED_BY;
		aSqlItem.RMS_TIMESTAMP := aPlsqlItem.RMS_TIMESTAMP;
		RETURN aSqlItem;
	END PL_TO_SQL3;
	FUNCTION SQL_TO_PL4(aSqlItem XXINVITEMINPKGGLOCATION_ROWTY) 
	RETURN ROWTYPE_PL1 IS 
	aPlsqlItem ROWTYPE_PL1; 
	BEGIN 
		aPlsqlItem.SOURCE_SYSTEM_CODE := aSqlItem.SOURCE_SYSTEM_CODE;
		aPlsqlItem.SOURCE_SYSTEM_REF := aSqlItem.SOURCE_SYSTEM_REF;
		aPlsqlItem.INVENTORY_ITEM_ID := aSqlItem.INVENTORY_ITEM_ID;
		aPlsqlItem.ORGANIZATION_ID := aSqlItem.ORGANIZATION_ID;
		aPlsqlItem.OD_DIST_TARGET := aSqlItem.OD_DIST_TARGET;
		aPlsqlItem.OD_EBW_QTY := aSqlItem.OD_EBW_QTY;
		aPlsqlItem.OD_INFINITE_QTY_CD := aSqlItem.OD_INFINITE_QTY_CD;
		aPlsqlItem.OD_LOCK_UP_ITEM_FLG := aSqlItem.OD_LOCK_UP_ITEM_FLG;
		aPlsqlItem.OD_PROPRIETARY_TYPE_CD := aSqlItem.OD_PROPRIETARY_TYPE_CD;
		aPlsqlItem.OD_REPLEN_SUB_TYPE_CD := aSqlItem.OD_REPLEN_SUB_TYPE_CD;
		aPlsqlItem.OD_REPLEN_TYPE_CD := aSqlItem.OD_REPLEN_TYPE_CD;
		aPlsqlItem.OD_WHSE_ITEM_CD := aSqlItem.OD_WHSE_ITEM_CD;
		aPlsqlItem.OD_ABC_CLASS := aSqlItem.OD_ABC_CLASS;
		aPlsqlItem.LOCAL_ITEM_DESC := aSqlItem.LOCAL_ITEM_DESC;
		aPlsqlItem.LOCAL_SHORT_DESC := aSqlItem.LOCAL_SHORT_DESC;
		aPlsqlItem.PRIMARY_SUPP := aSqlItem.PRIMARY_SUPP;
		aPlsqlItem.OD_CHANNEL_BLOCK := aSqlItem.OD_CHANNEL_BLOCK;
		aPlsqlItem.LAST_UPDATE_DATE := aSqlItem.LAST_UPDATE_DATE;
		aPlsqlItem.LAST_UPDATE_LOGIN := aSqlItem.LAST_UPDATE_LOGIN;
		aPlsqlItem.LAST_UPDATED_BY := aSqlItem.LAST_UPDATED_BY;
		aPlsqlItem.CREATION_DATE := aSqlItem.CREATION_DATE;
		aPlsqlItem.CREATED_BY := aSqlItem.CREATED_BY;
		aPlsqlItem.RMS_TIMESTAMP := aSqlItem.RMS_TIMESTAMP;
		RETURN aPlsqlItem;
	END SQL_TO_PL4;
	FUNCTION PL_TO_SQL4(aPlsqlItem XX_INV_ITEM_IN_PKG.G_LOCATION_REC)
 	RETURN XX_INV_ITEM_IN_PKG_G_LOCATION IS 
	aSqlItem XX_INV_ITEM_IN_PKG_G_LOCATION; 
	BEGIN 
		-- initialize the object
		aSqlItem := XX_INV_ITEM_IN_PKG_G_LOCATION(NULL, NULL, NULL);
		aSqlItem.ATTRIBUTE := PL_TO_SQL3(aPlsqlItem.ATTRIBUTE);
		aSqlItem.LOCATION := aPlsqlItem.LOCATION;
		aSqlItem.ITEM_STATUS := aPlsqlItem.ITEM_STATUS;
		RETURN aSqlItem;
	END PL_TO_SQL4;
	FUNCTION SQL_TO_PL3(aSqlItem XX_INV_ITEM_IN_PKG_G_LOCATION) 
	RETURN XX_INV_ITEM_IN_PKG.G_LOCATION_REC IS 
	aPlsqlItem XX_INV_ITEM_IN_PKG.G_LOCATION_REC; 
	BEGIN 
		aPlsqlItem.ATTRIBUTE := SQL_TO_PL4(aSqlItem.ATTRIBUTE);
		aPlsqlItem.LOCATION := aSqlItem.LOCATION;
		aPlsqlItem.ITEM_STATUS := aSqlItem.ITEM_STATUS;
		RETURN aPlsqlItem;
	END SQL_TO_PL3;

   PROCEDURE XX_INV_ITEM_IN_PKG$INTERFACE_ (P_ACTIONEXPRESSION VARCHAR2,P_REASON_CODE VARCHAR2,P_RMS_TIMESTAMP VARCHAR2,P_MASTER_ITEM_HDR_REC XX_INV_ITEM_IN_PKG_G_MASTER_I,P_MASTER_ITEM_CATEGORY_REC XX_INV_ITEM_IN_PKG_G_MASTER_1,P_MASTER_ITEM_ATTRI_REC XX_INV_ITEM_IN_PKG_ROWTYPE_SQ,P_LOCATION_REC XX_INV_ITEM_IN_PKG_G_LOCATION,X_MESSAGE_CODE OUT NUMBER,X_MESSAGE_DATA OUT VARCHAR2) IS
      P_MASTER_ITEM_HDR_REC_ APPS.XX_INV_ITEM_IN_PKG.G_MASTER_ITM_HDR_REC_TYPE;
      P_MASTER_ITEM_CATEGORY_REC_ APPS.XX_INV_ITEM_IN_PKG.G_MASTER_ITM_CATEGORY_REC_TYPE;
      P_MASTER_ITEM_ATTRI_REC_ ROWTYPE_PL0;
      P_LOCATION_REC_ APPS.XX_INV_ITEM_IN_PKG.G_LOCATION_REC;
   BEGIN
      P_MASTER_ITEM_HDR_REC_ := BPEL_I0142_ITEMEBSIN.SQL_TO_PL0(P_MASTER_ITEM_HDR_REC);
      P_MASTER_ITEM_CATEGORY_REC_ := BPEL_I0142_ITEMEBSIN.SQL_TO_PL1(P_MASTER_ITEM_CATEGORY_REC);
      P_MASTER_ITEM_ATTRI_REC_ := BPEL_I0142_ITEMEBSIN.SQL_TO_PL2(P_MASTER_ITEM_ATTRI_REC);
      P_LOCATION_REC_ := BPEL_I0142_ITEMEBSIN.SQL_TO_PL3(P_LOCATION_REC);
      APPS.XX_INV_ITEM_IN_PKG.INTERFACE_ITEM_DATA(P_ACTIONEXPRESSION,P_REASON_CODE,P_RMS_TIMESTAMP,P_MASTER_ITEM_HDR_REC_,P_MASTER_ITEM_CATEGORY_REC_,P_MASTER_ITEM_ATTRI_REC_,P_LOCATION_REC_,X_MESSAGE_CODE,X_MESSAGE_DATA);
   END XX_INV_ITEM_IN_PKG$INTERFACE_;

END BPEL_I0142_ITEMEBSIN;
/
show errors
exit
