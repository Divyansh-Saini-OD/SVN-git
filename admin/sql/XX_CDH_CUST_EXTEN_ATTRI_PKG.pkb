
create or replace 
PACKAGE BODY XX_CDH_CUST_EXTEN_ATTRI_PKG
-- +======================================================================================+
-- |                  Office Depot - Project Simplify                                     |
-- |                Oracle NAIO Consulting Organization                                   |
-- +======================================================================================+
-- | Name        :  XXCDHCREATEEXTB.pls                                                   |
-- | Description :  CDH Customer Conversion Create Extensible                             |
-- |                Attribute package body                                                |
-- |                                                                                      |
-- |Change Record:                                                                        |
-- |===============                                                                       |
-- |Version   Date        Author             Remarks                                      |
-- |========  =========== ================== =============================================|
-- |DRAFT 1a  24-Apr-2007 Jeevan Babu        Initial draft version                        |
-- |Draft 1b  10-Jul-2007 Ambarish Mukherjee Modified to look at ERROR_HANDLER stack      |
-- |Draft 1c  27-Aug-2007 Ambarish Mukherjee Added Multithreading                         |
-- |Draft 1d  02-Jan-2008 Hema Chikkanna     Added procedure to update N_EXT_ATTR1        |
-- |                                         column of XXOD_HZ_IMP_EXT_ATTRIBS_STG table  |
-- |                                         for CDH common view to bring in site level   |
-- |                                         contacts from SOLAR                          |
-- |Draft 1e  15-Jan-2008 Hema Chikkanna     Modified the cursor lcu_extn_attr in proc    |
-- |                                         SOLAR_EXT_ATTR_STG_UPDT_WORKER to accomdate  |
-- |                                         c_ext_attr19 as orig_system                  |
-- |Draft 1f  16-Jan-2008 Ambarish Mukherjee Modified API calls for not logging errors in |
-- |                                         mtl_interface_errors                         |
-- |Draft 1g  07-Feb-2008 Hema Chikkanna     Modified the procedure                       |
-- |                                         SOLAR_EXT_ATTR_STG_UPDT_MAIN to introduce    |
-- |                                         pause in the parent program all the child    |
-- |                                         program completes                            |
-- |1.0       22-Feb-2008 Ambarish Mukherjee Modified to add support for owner_table_id   |
-- |                                         if OSR is not passed.                        |
-- |1.1       25-JUN-2013 Deepak V           I0024 - Signature for object EGO_USER_ATTR_ROW_OBJ |
-- |                                         has been changed for R12 Upgrade retrofit.   |
-- |1.2  	  27-Jul-2017  Amber Gupta		 Modified wrt defect# 42657 Replacing FND_PROFILE.VALUE('XX_CDH_CONV_WORKERS')
-- |										 with a global variable to avoid multiple calls.|
-- |1.3       27-Apr-2018 Aswani Koneru     Modified wrt defect#44137 Replacing the mod function in
--                                          C_XXOD_HZ_IMP_EXT_ATTRIBS_STG cursor in EXTENSIBLE_MAIN_WORKER procedure with NTILE|
-- +======================================================================================+

AS
gt_request_id                 fnd_concurrent_requests.request_id%TYPE
                             := fnd_global.conc_request_id();

gt_program_id                 fnd_concurrent_requests.CONCURRENT_PROGRAM_ID%TYPE
                             := fnd_global.conc_program_id();

gt_prg_appl_id                fnd_concurrent_requests.program_application_id%TYPE;

gn_batch_id                   NUMBER;

-- Added below wrt V 1.2 Defect#42657
gt_chd_workers				        NUMBER := fnd_profile.value('XX_CDH_CONV_WORKERS');

-- +===================================================================+
-- | Name        :  EXTENSIBLE_MAIN                                    |
-- | Description :  This procedure is invoked from the CDH Conversion  |
-- |                Master Concurrent Request.This would submit Child  |
-- |                programs based on batch_ids generated by ETL       |
-- |                                                                   |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+
PROCEDURE EXTENSIBLE_MAIN
      (  x_errbuf            OUT VARCHAR2,
         x_retcode           OUT VARCHAR2,
         p_batch_id          IN  NUMBER,
         p_process_yn        IN  VARCHAR2
      )
IS
lt_conc_request_id     NUMBER;
ln_no_of_workers       NUMBER;
le_skip_procedure      EXCEPTION;
BEGIN
   IF p_process_yn = 'N' THEN
      RAISE le_skip_procedure;
   END IF;

   ln_no_of_workers := fnd_profile.value('XX_CDH_CONV_WORKERS');

   FOR i IN 1..ln_no_of_workers
   LOOP

      lt_conc_request_id := FND_REQUEST.submit_request
                                    (   application => 'XXCNV',
                                        program     => 'XX_CDH_EXT_ATTRIBUTE_WORKER',
                                        description => i,
                                        start_time  => NULL,
                                        sub_request => FALSE,
                                        argument1   => p_batch_id,
                                        argument2   => i
                                    );
      IF lt_conc_request_id = 0 THEN
         x_errbuf  := fnd_message.get;
         x_retcode := 2;
         fnd_file.put_line (fnd_file.log, 'Customer Contact Point Worker '||i||' Program failed to submit: ' || x_errbuf);
         x_errbuf  := 'Customer Contact Point Worker '||i||' Program failed to submit: ' || x_errbuf;
      ELSE
         fnd_file.put_line (fnd_file.log, ' ');
         fnd_file.put_line (fnd_file.log, 'Customer Contact Point Worker '||i||' Program submitted with request id: '|| TO_CHAR( lt_conc_request_id ));
         COMMIT;
      END IF;

   END LOOP;

EXCEPTION
   WHEN le_skip_procedure THEN
      x_retcode := 0;
      fnd_file.put_line (fnd_file.log,'Processing was skipped!!');
   WHEN OTHERS THEN
      log_debug_msg( 'Unexpected Error in procedure EXTENSIBLE_MAIN - '||SQLERRM);
      x_retcode := 2;
      x_errbuf  := 'Unexpected Error in procedure EXTENSIBLE_MAIN - '||SQLERRM;

END EXTENSIBLE_MAIN;

-- +===================================================================+
-- | Name        :  EXTENSIBLE_MAIN_WORKER                             |
-- | Description :  This procedure is invoked from the CDH Conversion  |
-- |                Master Concurrent Request.This would submit Child  |
-- |                programs based on batch_ids generated by ETL       |
-- |                                                                   |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+
PROCEDURE EXTENSIBLE_MAIN_WORKER
      (  x_errbuf            OUT VARCHAR2,
         x_retcode           OUT VARCHAR2,
         p_batch_id          IN  NUMBER,
         p_worker_id         IN  NUMBER
      )
IS
ln_no_of_workers NUMBER; --Added wrt V1.3 defect#44137
CURSOR C_XXOD_HZ_IMP_EXT_ATTRIBS_STG(cp_batch_id NUMBER)
IS
WITH  xxod_hz_imp_ext_attribs_stg_v AS  -- Modified wrt V1.3 defect#44137
(SELECT XXSTG.*,NTILE(ln_no_of_workers) OVER (ORDER BY ROWID DESC) worker_id 
FROM   xxod_hz_imp_ext_attribs_stg XXSTG
WHERE  batch_id = cp_batch_id
--AND    interface_status IN ('1', '4', '6')
 )
SELECT XXSTG.* From Xxod_Hz_Imp_Ext_Attribs_Stg_V XXSTGV,Xxod_Hz_Imp_Ext_Attribs_Stg XXSTG
WHERE worker_id =   p_worker_id 
AND XXSTGV.Batch_Id = XXSTG.Batch_Id AND XXSTGV.Record_Id = XXSTG.Record_Id
AND    XXSTG.interface_status IN ('1', '4', '6') ;
/*SELECT *
FROM   xxod_hz_imp_ext_attribs_stg
WHERE  batch_id = cp_batch_id
AND    interface_status IN ('1','4','6')
AND 	MOD(NVL(TO_NUMBER(REGEXP_SUBSTR(orig_system_reference, '[123456789]{1,7}')), ASCII(orig_system_reference)), gt_chd_workers) 
			= DECODE(p_worker_id,gt_chd_workers,0,p_worker_id) */-- Added wrt V1.2 defect 42657
--AND    MOD(NVL(TO_NUMBER(REGEXP_SUBSTR(orig_system_reference, '[123456789]{1,7}')), ASCII(orig_system_reference)), fnd_profile.value('XX_CDH_CONV_WORKERS')) = DECODE(p_worker_id,fnd_profile.value('XX_CDH_CONV_WORKERS'),0,p_worker_id) -- Commented wrt V1.2 defect 42657
--AND    MOD(ascii(orig_system_reference),fnd_profile.value('XX_CDH_CONV_WORKERS')) = DECODE(p_worker_id,fnd_profile.value('XX_CDH_CONV_WORKERS'),0,p_worker_id);


TYPE l_xxod_ext_attribs_stg IS TABLE OF C_XXOD_HZ_IMP_EXT_ATTRIBS_STG%ROWTYPE INDEX BY BINARY_INTEGER;
TYPE xx_upd_interface_table IS TABLE OF VARCHAR2(10) INDEX BY BINARY_INTEGER;
TYPE xx_upd_record_table IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;

lx_od_ext_attrib_stg                 l_xxod_ext_attribs_stg;
lx_upd_interface_table               xx_upd_interface_table;
lx_upd_record_table                  xx_upd_record_table;
lc_user_table                        EGO_USER_ATTR_ROW_TABLE :=
                                      EGO_USER_ATTR_ROW_TABLE();
lc_temp_user_table                   EGO_USER_ATTR_ROW_TABLE :=
                                      EGO_USER_ATTR_ROW_TABLE();
lc_row_temp_obj                      EGO_USER_ATTR_ROW_OBJ :=
                                     EGO_USER_ATTR_ROW_OBJ(null,null,null,null,null,null,null,null,null,null,null,null); -- Edited for R12 retrofit (25-JUN-2013)
lc_data_table                        EGO_USER_ATTR_DATA_TABLE :=
                                     EGO_USER_ATTR_DATA_TABLE();
lc_temp_data_table                   EGO_USER_ATTR_DATA_TABLE :=
                                      EGO_USER_ATTR_DATA_TABLE();
lc_data_temp_obj                     EGO_USER_ATTR_DATA_OBJ:=
                                      EGO_USER_ATTR_DATA_OBJ(null,null,null,null,null,null,null,null);
od_ext_attrib                        EXCEPTION;
ln_owner_table_id                    HZ_ORIG_SYS_REFERENCES.OWNER_TABLE_ID%TYPE;
ln_retcode                           NUMBER;
ln_errbuf                            VARCHAR2(2000);
lc_rowid                             VARCHAR2(100);
lc_extension_id                      NUMBER;
lc_profile_id                        NUMBER;
lc_attr_group_id                     NUMBER;
l_record_count                       NUMBER;
l_sucess_count                       NUMBER;
l_failed_count                       NUMBER;
l_db_count                           NUMBER;
l_failed_row_id_list                 VARCHAR2(1000);
l_return_status                      VARCHAR2(1000);
l_errorcode                          NUMBER;
l_msg_count                          NUMBER;
l_msg_data                           VARCHAR2(1000);
ln_conversion_id                     NUMBER;
ln_bulk_limit                        NUMBER := XX_CDH_CONV_MASTER_PKG.g_bulk_fetch_limit;

ln_msg_text                          VARCHAR2(32000);
l_errors_tbl                         ERROR_HANDLER.Error_Tbl_Type;

--Retrieve Organization profile Id based on Party Id
CURSOR c_org_profile (p_party_id number)
IS
SELECT organization_profile_id
FROM   hz_organization_profiles
WHERE  party_id = p_party_id
AND    effective_end_date IS NULL;

--Retrieve Person profile Id based on Party Id
CURSOR c_per_profile (p_party_id number)
IS
SELECT person_profile_id
FROM   hz_person_profiles
WHERE  party_id = p_party_id
AND    effective_end_date IS NULL;

BEGIN
   Log_Debug_Msg('==================       BEGIN       =================');
   Log_Debug_Msg('==========  Create Extensible Attribute ==============');
   gn_batch_id := p_batch_id;
   -- Fetching records from the staging table based on the batch_id
   -- and interface status
   ln_conversion_id:=00245;
   l_sucess_count:=0;
   l_failed_count:=0;
   l_record_count:=0;
   ln_no_of_workers:= fnd_profile.value('XX_CDH_CONV_WORKERS');
   OPEN c_xxod_hz_imp_ext_attribs_stg(p_batch_id);
   LOOP
      FETCH c_xxod_hz_imp_ext_attribs_stg BULK COLLECT INTO lx_od_ext_attrib_stg LIMIT ln_bulk_limit ;

      IF lx_od_ext_attrib_stg.COUNT = 0 THEN
         Log_Debug_Msg('No records exist in the staging table for batch_id - '||p_batch_id||' for Extensible Attribute');
         RAISE od_ext_attrib;
      ELSIF lx_od_ext_attrib_stg.COUNT > 0 THEN
         FOR i in lx_od_ext_attrib_stg.FIRST .. lx_od_ext_attrib_stg.LAST
         LOOP
            Log_Debug_Msg('--------------------------------------------------');
            Log_Debug_Msg('Extensible Attribute: Record Id :'||lx_od_ext_attrib_stg(i).record_id);
            ln_msg_text:='';
            lc_user_table :=lc_temp_user_table;
            lc_data_table :=lc_temp_data_table;
            l_record_count := l_record_count +1;
            lc_rowid := NULL;
            /*   IF mod(l_record_count,10) = 0 THEN
                   COMMIT;
                 END IF;
            */

            IF lx_od_ext_attrib_stg(i).orig_system      IS NULL AND
               lx_od_ext_attrib_stg(i).owner_table_name IS NULL AND
               lx_od_ext_attrib_stg(i).owner_table_id   IS NULL THEN
               Log_Debug_Msg('Extensible Attribute: Orig System is Null');
               lx_od_ext_attrib_stg(i).interface_status :='6';
               log_exception
                  (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                     ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                     ,p_staging_column_name    => 'RECORD_ID'
                     ,p_staging_column_value   => lx_od_ext_attrib_stg(i).record_id
                     ,p_batch_id               => gn_batch_id
                     ,p_exception_log          => 'Extensible Attribute: Orig System is Null'
                     ,p_oracle_error_msg       => SQLERRM
                     ,p_source_system_code     => lx_od_ext_attrib_stg(i).orig_system
                     ,p_source_system_ref      => lx_od_ext_attrib_stg(i).orig_system_reference
                     ,p_oracle_error_code      => SQLCODE
                  );
            END IF;

            IF lx_od_ext_attrib_stg(i).orig_system_reference IS NULL AND
               lx_od_ext_attrib_stg(i).owner_table_name      IS NULL AND
               lx_od_ext_attrib_stg(i).owner_table_id        IS NULL THEN
               Log_Debug_Msg('Extensible Attribute: Orig System Reference is Null');
               lx_od_ext_attrib_stg(i).interface_status :='6';
               log_exception
                  (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                     ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                     ,p_staging_column_name    => 'RECORD_ID'
                     ,p_staging_column_value   => lx_od_ext_attrib_stg(i).record_id
                     ,p_batch_id               => gn_batch_id
                     ,p_exception_log          => 'Extensible Attribute: Orig System Reference is Null'
                     ,p_oracle_error_msg       => SQLERRM
                     ,p_source_system_code     => lx_od_ext_attrib_stg(i).orig_system
                     ,p_source_system_ref      => lx_od_ext_attrib_stg(i).orig_system_reference
                     ,p_oracle_error_code      => SQLCODE
                  );
            END IF;

            IF lx_od_ext_attrib_stg(i).owner_table_name      IS NULL AND
               lx_od_ext_attrib_stg(i).orig_system           IS NULL AND
               lx_od_ext_attrib_stg(i).orig_system_reference IS NULL THEN
               Log_Debug_Msg('Extensible Attribute: OWNER_TABLE_NAME is Null');
               lx_od_ext_attrib_stg(i).interface_status :='6';
               log_exception
                  (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                     ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                     ,p_staging_column_name    => 'RECORD_ID'
                     ,p_staging_column_value   => lx_od_ext_attrib_stg(i).record_id
                     ,p_batch_id               => gn_batch_id
                     ,p_exception_log          => 'Extensible Attribute: OWNER_TABLE_NAME is Null'
                     ,p_oracle_error_msg       => SQLERRM
                     ,p_source_system_code     => lx_od_ext_attrib_stg(i).orig_system
                     ,p_source_system_ref      => lx_od_ext_attrib_stg(i).orig_system_reference
                     ,p_oracle_error_code      => SQLCODE
                  );
            END IF;

            IF lx_od_ext_attrib_stg(i).owner_table_id        IS NULL AND
               lx_od_ext_attrib_stg(i).orig_system           IS NULL AND
               lx_od_ext_attrib_stg(i).orig_system_reference IS NULL THEN
               Log_Debug_Msg('Extensible Attribute: OWNER_TABLE_ID is Null');
               lx_od_ext_attrib_stg(i).interface_status :='6';
               log_exception
                  (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                     ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                     ,p_staging_column_name    => 'RECORD_ID'
                     ,p_staging_column_value   => lx_od_ext_attrib_stg(i).record_id
                     ,p_batch_id               => gn_batch_id
                     ,p_exception_log          => 'Extensible Attribute: OWNER_TABLE_ID is Null'
                     ,p_oracle_error_msg       => SQLERRM
                     ,p_source_system_code     => lx_od_ext_attrib_stg(i).orig_system
                     ,p_source_system_ref      => lx_od_ext_attrib_stg(i).orig_system_reference
                     ,p_oracle_error_code      => SQLCODE
                  );
            END IF;

            ------------------------------------------------
            -- Step 1: Person Profile Extensible attributes
            ------------------------------------------------

            IF lx_od_ext_attrib_stg(i).interface_entity_name = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_PERSON THEN

               IF lx_od_ext_attrib_stg(i).orig_system           IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).orig_system_reference IS NOT NULL THEN

                  XX_CDH_CONV_MASTER_PKG.get_osr_owner_table_id
                     (   p_orig_system         => lx_od_ext_attrib_stg(i).orig_system
                        ,p_orig_sys_reference  => lx_od_ext_attrib_stg(i).orig_system_reference
                        ,p_owner_table_name    => 'HZ_PARTIES'
                        ,x_owner_table_id      => ln_owner_table_id
                        ,x_retcode             => ln_retcode
                        ,x_errbuf              => ln_errbuf
                     );

                  IF ln_owner_table_id IS NULL THEN
                     Log_Debug_Msg('Extensible Attribute: Person Party id is Null');
                     lx_od_ext_attrib_stg(i).interface_status :='6';

                     log_exception
                        (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                           ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                           ,p_staging_column_name    => 'RECORD_ID'
                           ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                           ,p_batch_id               => gn_batch_id
                           ,p_exception_log          => 'Extensible Attribute: Person Party id is Null'
                           ,p_oracle_error_msg       => SQLERRM
                           ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                           ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                           ,p_oracle_error_code      => SQLCODE
                        );
                  END IF;

                  --
                  -- Retreive Person Profile Id based on the Person Party Id
                  --
                  lc_profile_id := NULL;
                  OPEN  C_per_profile (ln_owner_table_id);
                  FETCH C_per_profile INTO lc_profile_id;
                  CLOSE C_per_profile;
               END IF;

               IF lx_od_ext_attrib_stg(i).owner_table_name IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).owner_table_id   IS NOT NULL THEN

                  IF lx_od_ext_attrib_stg(i).owner_table_name = 'HZ_PERSON_PROFILES' THEN
                     lc_profile_id := lx_od_ext_attrib_stg(i).owner_table_id;
                  END IF;
               END IF;

               IF lc_profile_id IS NULL THEN
                  Log_Debug_Msg('Extensible Attribute: Person Profile id not found');
                  lx_od_ext_attrib_stg(i).interface_status :='6';
                  log_exception
                     (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                        ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                        ,p_staging_column_name    => 'RECORD_ID'
                        ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                        ,p_batch_id               => gn_batch_id
                        ,p_exception_log          => 'Extensible Attribute: Person Profile id not found'
                        ,p_oracle_error_msg       => SQLERRM
                        ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                        ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                        ,p_oracle_error_code      => SQLCODE
                     );
               END IF;

               IF lc_profile_id IS NOT NULL THEN
                  --
                  -- Retreive Attribute Group Id based on the Flex Fleid and Attribute Group Code
                  --
                  lx_od_ext_attrib_stg(I).interface_status :='4';
                  Build_extensible_table
                     (   p_user_row_table        => lc_user_table,
                         p_user_data_table       => lc_data_table,
                         p_ext_attribs_row       => lx_od_ext_attrib_stg(I)
                     );
                  IF lx_od_ext_attrib_stg(I).interface_status ='4' THEN

                     HZ_EXTENSIBILITY_PUB.PROCESS_PERSON_RECORD
                        (   p_api_version           => XX_CDH_CUST_EXTEN_ATTRI_PKG.G_API_VERSION,
                            p_person_profile_id     => lc_profile_id,
                            p_attributes_row_table  => lc_user_table,
                            p_attributes_data_table => lc_data_table,
                           -- Added by Ambarish 16-Jan-08
                            p_log_errors            => FND_API.G_FALSE,
                           ---
                            x_failed_row_id_list    => l_failed_row_id_list,
                            x_return_status         => l_return_status,
                            x_errorcode             => l_errorcode,
                            x_msg_count             => l_msg_count,
                            x_msg_data              => l_msg_data
                        );
                     Log_debug_msg ('Process_person_record : l_return_status '|| l_return_status);
                     IF l_return_status = FND_API.G_RET_STS_SUCCESS THEN
                        lx_od_ext_attrib_stg(i).interface_status := 7;
                        Log_Debug_Msg( 'HZ_EXTENSIBILITY_PUB.Process_person_record API successful.');
                     ELSE
                        lx_od_ext_attrib_stg(i).interface_status := 6;

                        IF l_msg_count > 0 THEN
                           Log_Debug_Msg('HZ_EXTENSIBILITY_PUB.Process_person_record API returned Error.');
                         -- Start Changes By Ambarish
                           ERROR_HANDLER.Get_Message_List(l_errors_tbl);
                           FOR i IN 1..l_errors_tbl.COUNT
                           LOOP
                              ln_msg_text := ln_msg_text||' '||l_errors_tbl(i).message_text;
                           END LOOP;
                         -- End Changes By Ambarish
                           log_exception
                              (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                                 ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                                 ,p_staging_column_name    => 'RECORD_ID'
                                 ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                                 ,p_batch_id               => gn_batch_id
                                 ,p_exception_log          => XX_CDH_CONV_MASTER_PKG.TRIM_INPUT_MSG('HZ_EXTENSIBILITY_PUB.Process_person_record API returned Error'||ln_msg_text)
                                 ,p_oracle_error_msg       => SQLERRM
                                 ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                                 ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                                 ,p_oracle_error_code      => SQLCODE
                              );
                        END IF;
                     END IF;
                  END IF;
               END IF; -- lc_profile_id if condition

            ------------------------------------------------------
            -- Step 2: Organization Profile Extensible attributes
            ------------------------------------------------------
            ELSIF lx_od_ext_attrib_stg(i).interface_entity_name = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_ORGANIZATION THEN

               IF lx_od_ext_attrib_stg(i).orig_system           IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).orig_system_reference IS NOT NULL  THEN

                  XX_CDH_CONV_MASTER_PKG.get_osr_owner_table_id
                     (   p_orig_system         => lx_od_ext_attrib_stg(i).orig_system
                        ,p_orig_sys_reference  => lx_od_ext_attrib_stg(i).orig_system_reference
                        ,p_owner_table_name    => 'HZ_PARTIES'
                        ,x_owner_table_id      => ln_owner_table_id
                        ,x_retcode             => ln_retcode
                        ,x_errbuf              => ln_errbuf
                     );

                  IF ln_owner_table_id IS NULL THEN
                     Log_Debug_Msg('Extensible Attribute: Organization Party id is Null');
                     lx_od_ext_attrib_stg(i).interface_status :='6';
                     log_exception
                        (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                           ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                           ,p_staging_column_name    => 'RECORD_ID'
                           ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                           ,p_batch_id               => gn_batch_id
                           ,p_exception_log          => 'Extensible Attribute: Organization Party id is Null'
                           ,p_oracle_error_msg       => SQLERRM
                           ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                           ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                           ,p_oracle_error_code      => SQLCODE
                        );
                  END IF;

                  -- Retreive Organization Profile Id based on the Organization Party Id

                  lc_profile_id := NULL;
                  OPEN  C_org_profile(ln_owner_table_id);
                  FETCH C_org_profile INTO lc_profile_id;
                  CLOSE C_org_profile;
               END IF;

               IF lx_od_ext_attrib_stg(i).owner_table_name IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).owner_table_id   IS NOT NULL THEN

                  IF lx_od_ext_attrib_stg(i).owner_table_name = 'HZ_ORGANIZATION_PROFILES' THEN
                     lc_profile_id := lx_od_ext_attrib_stg(i).owner_table_id;
                  END IF;
               END IF;

               IF lc_profile_id IS NULL THEN
                  Log_Debug_Msg('Extensible Attribute: Organization Profile Id is null');
                  lx_od_ext_attrib_stg(i).interface_status :='6';
                  log_exception
                       (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                          ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                          ,p_staging_column_name    => 'RECORD_ID'
                          ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                          ,p_batch_id               => gn_batch_id
                          ,p_exception_log          => 'Extensible Attribute: Organization Profile Id is null'
                          ,p_oracle_error_msg       => SQLERRM
                          ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                          ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                          ,p_oracle_error_code      => SQLCODE
                       );
               ELSIF lc_profile_id IS NOT NULL THEN
                  lx_od_ext_attrib_stg(I).interface_status :='4';
                  Build_extensible_table
                     (   p_user_row_table        => lc_user_table,
                         p_user_data_table       => lc_data_table,
                         p_ext_attribs_row       => lx_od_ext_attrib_stg(I)
                     );
                  IF lx_od_ext_attrib_stg(I).interface_status ='4' THEN
                     HZ_EXTENSIBILITY_PUB.Process_Organization_Record
                        (   p_api_version           => XX_CDH_CUST_EXTEN_ATTRI_PKG.G_API_VERSION,
                            p_org_profile_id        => lc_profile_id,
                            p_attributes_row_table  => lc_user_table,
                            p_attributes_data_table => lc_data_table,
                          -- Added by Ambarish 16-Jan-08
                            p_log_errors            => FND_API.G_FALSE,
                          ---
                            x_failed_row_id_list    => l_failed_row_id_list,
                            x_return_status         => l_return_status,
                            x_errorcode             => l_errorcode,
                            x_msg_count             => l_msg_count,
                            x_msg_data              => l_msg_data
                        );
                     Log_debug_msg ('Process_Organization_Record :l_return_status '|| l_return_status);

                     IF l_return_status = FND_API.G_RET_STS_SUCCESS THEN
                        lx_od_ext_attrib_stg(i).interface_status := 7;
                        Log_Debug_Msg( 'HZ_EXTENSIBILITY_PUB.Process_Organization_Record API successful.');
                     ELSE
                        lx_od_ext_attrib_stg(i).interface_status := 6;
                        IF l_msg_count > 0 THEN
                           Log_Debug_Msg('HZ_EXTENSIBILITY_PUB.Process_Organization_Record API returned Error.');
                         -- Start Changes By Ambarish
                           ERROR_HANDLER.Get_Message_List(l_errors_tbl);
                           FOR i IN 1..l_errors_tbl.COUNT
                           LOOP
                              ln_msg_text := ln_msg_text||' '||l_errors_tbl(i).message_text;
                           END LOOP;
                         -- End Changes by Ambarish
                         log_exception
                           (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                              ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                              ,p_staging_column_name    => 'RECORD_ID'
                              ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                              ,p_batch_id               => gn_batch_id
                              ,p_exception_log          => XX_CDH_CONV_MASTER_PKG.TRIM_INPUT_MSG('HZ_EXTENSIBILITY_PUB.Process_Organization_Record API returned Error'||ln_msg_text)
                              ,p_oracle_error_msg       => SQLERRM
                              ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                              ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                              ,p_oracle_error_code      => SQLCODE
                           );
                        END IF;
                     END IF;
                  END IF;
               END IF; --lc_profile_id if condition statement

            --------------------------------------
            -- Step 3: Site Extensible attributes
            --------------------------------------
            ELSIF lx_od_ext_attrib_stg(i).interface_entity_name = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_SITE THEN

               IF lx_od_ext_attrib_stg(i).orig_system           IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).orig_system_reference IS NOT NULL THEN

                  XX_CDH_CONV_MASTER_PKG.get_osr_owner_table_id
                     (   p_orig_system         => lx_od_ext_attrib_stg(i).orig_system
                        ,p_orig_sys_reference  => lx_od_ext_attrib_stg(i).orig_system_reference
                        ,p_owner_table_name    => 'HZ_PARTY_SITES'
                        ,x_owner_table_id      => ln_owner_table_id
                        ,x_retcode             => ln_retcode
                        ,x_errbuf              => ln_errbuf
                     );
               END IF;

               IF lx_od_ext_attrib_stg(i).owner_table_name IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).owner_table_id   IS NOT NULL THEN

                  IF lx_od_ext_attrib_stg(i).owner_table_name = 'HZ_PARTY_SITES' THEN
                     ln_owner_table_id := lx_od_ext_attrib_stg(i).owner_table_id;
                  END IF;
               END IF;


               IF ln_owner_table_id IS NULL THEN
                  Log_Debug_Msg('Extensible Attribute: Site Id is Null');
                  lx_od_ext_attrib_stg(i).interface_status :='6';
                  log_exception
                     (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                        ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                        ,p_staging_column_name    => 'RECORD_ID'
                        ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                        ,p_batch_id               => gn_batch_id
                        ,p_exception_log          => 'Extensible Attribute: Site Id is Null'
                        ,p_oracle_error_msg       => SQLERRM
                        ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                        ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                        ,p_oracle_error_code      => SQLCODE
                     );
               ELSIF ln_owner_table_id IS NOT NULL THEN
                  lc_profile_id :=NULL;
                  lc_profile_id :=ln_owner_table_id;
                  -- Retreive Attribute Group Id based on the Flex Fleid and Attribute Group Code
                  lx_od_ext_attrib_stg(I).interface_status :='4';
                  Build_extensible_table
                     (   p_user_row_table        => lc_user_table,
                         p_user_data_table       => lc_data_table,
                         p_ext_attribs_row       => lx_od_ext_attrib_stg(I)
                     );
                  IF lx_od_ext_attrib_stg(I).interface_status ='4' THEN

                     HZ_EXTENSIBILITY_PUB.Process_PartySite_Record
                        (   p_api_version           => XX_CDH_CUST_EXTEN_ATTRI_PKG.G_API_VERSION,
                            p_party_site_id         => lc_profile_id,
                            p_attributes_row_table  => lc_user_table,
                            p_attributes_data_table => lc_data_table,
                          -- Added by Ambarish 16-Jan-08
                            p_log_errors            => FND_API.G_FALSE,
                          ---
                            x_failed_row_id_list    => l_failed_row_id_list,
                            x_return_status         => l_return_status,
                            x_errorcode             => l_errorcode,
                            x_msg_count             => l_msg_count,
                            x_msg_data              => l_msg_data
                        );

                     Log_debug_msg ('Process_PartySite_Record : l_return_status '|| l_return_status);
                     IF l_return_status = FND_API.G_RET_STS_SUCCESS THEN
                        lx_od_ext_attrib_stg(i).interface_status := 7;
                        Log_Debug_Msg( 'HZ_EXTENSIBILITY_PUB.Process_PartySite_Record API successful.');
                     ELSE
                        lx_od_ext_attrib_stg(i).interface_status := 6;
                        IF l_msg_count > 0 THEN
                           Log_Debug_Msg('HZ_EXTENSIBILITY_PUB.Process_PartySite_Record API returned Error.');

                         -- Start Changes By Ambarish
                           ERROR_HANDLER.Get_Message_List(l_errors_tbl);
                           FOR i IN 1..l_errors_tbl.COUNT
                           LOOP
                              ln_msg_text := ln_msg_text||' '||l_errors_tbl(i).message_text;
                           END LOOP;
                         -- End Changes By Ambarish
                           log_exception
                              (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                                 ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                                 ,p_staging_column_name    => 'RECORD_ID'
                                 ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                                 ,p_batch_id               => gn_batch_id
                                 ,p_exception_log          => XX_CDH_CONV_MASTER_PKG.TRIM_INPUT_MSG('HZ_EXTENSIBILITY_PUB.Process_PartySite_Record API returned Error'||ln_msg_text)
                                 ,p_oracle_error_msg       => SQLERRM
                                 ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                                 ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                                 ,p_oracle_error_code      => SQLCODE
                              );
                        END IF;
                     END IF;
                  END IF;
               END IF; -- ln_owner_table_id if condition


            -----------------------------------------
            -- Step 4: Account Extensible attributes
            -----------------------------------------

            ELSIF lx_od_ext_attrib_stg(i).interface_entity_name = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_ACCOUNT THEN

               IF lx_od_ext_attrib_stg(i).orig_system           IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).orig_system_reference IS NOT NULL THEN

                  XX_CDH_CONV_MASTER_PKG.get_osr_owner_table_id
                     (   p_orig_system         => lx_od_ext_attrib_stg(i).orig_system
                        ,p_orig_sys_reference  => lx_od_ext_attrib_stg(i).orig_system_reference
                        ,p_owner_table_name    => 'HZ_CUST_ACCOUNTS'
                        ,x_owner_table_id      => ln_owner_table_id
                        ,x_retcode             => ln_retcode
                        ,x_errbuf              => ln_errbuf
                     );
               END IF;

               IF lx_od_ext_attrib_stg(i).owner_table_name IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).owner_table_id   IS NOT NULL THEN

                  IF lx_od_ext_attrib_stg(i).owner_table_name = 'HZ_CUST_ACCOUNTS' THEN
                     ln_owner_table_id := lx_od_ext_attrib_stg(i).owner_table_id;
                  END IF;
               END IF;


               IF ln_owner_table_id IS NULL THEN
                  Log_Debug_Msg('Extensible Attribute: Account Id is Null');
                  lx_od_ext_attrib_stg(i).interface_status :='6';
                  log_exception
                     (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                        ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                        ,p_staging_column_name    => 'RECORD_ID'
                        ,p_staging_column_value   => lx_od_ext_attrib_stg(i).record_id
                        ,p_batch_id               => gn_batch_id
                        ,p_exception_log          => 'Extensible Attribute: Account Id is Null'
                        ,p_oracle_error_msg       => SQLERRM
                        ,p_source_system_code     => lx_od_ext_attrib_stg(i).orig_system
                        ,p_source_system_ref      => lx_od_ext_attrib_stg(i).orig_system_reference
                        ,p_oracle_error_code      => SQLCODE
                     );
               ELSIF ln_owner_table_id IS NOT NULL THEN
                  lc_profile_id :=NULL;
                  lc_profile_id :=ln_owner_table_id;

                  -- Retreive Attribute Group Id based on the Flex Fleid and Attribute Group Code
                  lx_od_ext_attrib_stg(I).interface_status :='4';
                  Build_extensible_table
                     (   p_user_row_table        => lc_user_table,
                         p_user_data_table       => lc_data_table,
                         p_ext_attribs_row       => lx_od_ext_attrib_stg(I)
                     );
                  IF lx_od_ext_attrib_stg(I).interface_status = '4' THEN

                     XX_CDH_HZ_EXTENSIBILITY_PUB.Process_Account_Record
                        (   p_api_version           => XX_CDH_CUST_EXTEN_ATTRI_PKG.G_API_VERSION,
                            p_cust_account_id       => lc_profile_id,
                            p_attributes_row_table  => lc_user_table,
                            p_attributes_data_table => lc_data_table,
                          -- Added by Ambarish 16-Jan-08
                            p_log_errors            => FND_API.G_FALSE,
                          ---
                            x_failed_row_id_list    => l_failed_row_id_list,
                            x_return_status         => l_return_status,
                            x_errorcode             => l_errorcode,
                            x_msg_count             => l_msg_count,
                            x_msg_data              => l_msg_data
                        );
                     Log_debug_msg ('Process_Account_Record : l_return_status '|| l_return_status);

                     IF l_return_status = FND_API.G_RET_STS_SUCCESS THEN
                        lx_od_ext_attrib_stg(i).interface_status := 7;
                        Log_Debug_Msg( 'XX_HZ_EXTENSIBILITY_PUB.Process_Account_Record API successful.');
                     ELSE
                        lx_od_ext_attrib_stg(i).interface_status := 6;
                        IF l_msg_count > 0 THEN
                          -- Start Changes By Ambarish
                           ERROR_HANDLER.Get_Message_List(l_errors_tbl);
                           FOR i IN 1..l_errors_tbl.COUNT
                           LOOP
                              ln_msg_text := ln_msg_text||' '||l_errors_tbl(i).message_text;
                           END LOOP;
                           Log_Debug_Msg('XX_HZ_EXTENSIBILITY_PUB.Process_Account_Record API returned Error.');
                          -- End Changes   By Ambarish
                          log_exception
                             (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                                ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                                ,p_staging_column_name    => 'RECORD_ID'
                                ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                                ,p_batch_id               => gn_batch_id
                                ,p_exception_log          => XX_CDH_CONV_MASTER_PKG.TRIM_INPUT_MSG('XX_HZ_EXTENSIBILITY_PUB.Process_Account_Record API returned Error'||ln_msg_text)
                                ,p_oracle_error_msg       => SQLERRM
                                ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                                ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                                ,p_oracle_error_code      => SQLCODE
                             );
                        END IF;
                     END IF;
                  END IF;
               END IF; --ln_owner_table_id if condition

            ---------------------------------------------
            -- Step 5: Account Site Extensible attributes
            ---------------------------------------------
            ELSIF lx_od_ext_attrib_stg(i).interface_entity_name = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_ACC_SITE THEN

               IF lx_od_ext_attrib_stg(i).orig_system           IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).orig_system_reference IS NOT NULL THEN

                  XX_CDH_CONV_MASTER_PKG.get_osr_owner_table_id
                     (   p_orig_system         => lx_od_ext_attrib_stg(i).orig_system
                        ,p_orig_sys_reference  => lx_od_ext_attrib_stg(i).orig_system_reference
                        ,p_owner_table_name    => 'HZ_CUST_ACCT_SITES_ALL'
                        ,x_owner_table_id      => ln_owner_table_id
                        ,x_retcode             => ln_retcode
                        ,x_errbuf              => ln_errbuf
                     );
               END IF;

               IF lx_od_ext_attrib_stg(i).owner_table_name IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).owner_table_id   IS NOT NULL THEN

                  IF lx_od_ext_attrib_stg(i).owner_table_name = 'HZ_CUST_ACCT_SITES_ALL' THEN
                     ln_owner_table_id := lx_od_ext_attrib_stg(i).owner_table_id;
                  END IF;
               END IF;

               IF ln_owner_table_id IS NULL THEN
                  Log_Debug_Msg('Extensible Attribute: Account Site Id is Null');
                  lx_od_ext_attrib_stg(i).interface_status :='6';
                  log_exception
                     (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                        ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                        ,p_staging_column_name    => 'RECORD_ID'
                        ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                        ,p_batch_id               => gn_batch_id
                        ,p_exception_log          => 'Extensible Attribute: Site Id is Null'
                        ,p_oracle_error_msg       => SQLERRM
                        ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                        ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                        ,p_oracle_error_code      => SQLCODE
                     );

               ELSIF ln_owner_table_id IS NOT NULL THEN
                  lc_profile_id := NULL;
                  lc_profile_id := ln_owner_table_id;

                  -- Retreive Attribute Group Id based on the Flex Fleid and Attribute Group Code
                  lx_od_ext_attrib_stg(I).interface_status :='4';
                  Build_extensible_table
                     (   p_user_row_table        => lc_user_table,
                         p_user_data_table       => lc_data_table,
                         p_ext_attribs_row       => lx_od_ext_attrib_stg(I)
                     );

                  IF lx_od_ext_attrib_stg(I).interface_status ='4' THEN

                     XX_CDH_HZ_EXTENSIBILITY_PUB.Process_Acct_site_Record
                        (   p_api_version           => XX_CDH_CUST_EXTEN_ATTRI_PKG.G_API_VERSION,
                            p_cust_acct_site_id     => lc_profile_id,
                            p_attributes_row_table  => lc_user_table,
                            p_attributes_data_table => lc_data_table,
                          -- Added by Ambarish 16-Jan-08
                            p_log_errors            => FND_API.G_FALSE,
                          ---
                            x_failed_row_id_list    => l_failed_row_id_list,
                            x_return_status         => l_return_status,
                            x_errorcode             => l_errorcode,
                            x_msg_count             => l_msg_count,
                            x_msg_data              => l_msg_data
                        );
                     Log_debug_msg ('Process_Acct_site_Record : l_return_status '|| l_return_status);

                     IF l_return_status = FND_API.G_RET_STS_SUCCESS THEN
                        lx_od_ext_attrib_stg(i).interface_status := 7;
                        Log_Debug_Msg( 'XX_HZ_EXTENSIBILITY_PUB.Process_Acct_site_Record API successful.');
                     ELSE
                        lx_od_ext_attrib_stg(i).interface_status := 6;

                        IF l_msg_count > 0 THEN
                           Log_Debug_Msg('XX_HZ_EXTENSIBILITY_PUB.Process_Acct_site_Record API returned Error.');
                         -- Start Changes By Ambarish
                           ERROR_HANDLER.Get_Message_List(l_errors_tbl);
                           FOR i IN 1..l_errors_tbl.COUNT
                           LOOP
                              ln_msg_text := ln_msg_text||' '||l_errors_tbl(i).message_text;
                           END LOOP;
                         -- End Changes By Ambarish

                         log_exception
                            (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                               ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                               ,p_staging_column_name    => 'RECORD_ID'
                               ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                               ,p_batch_id               => gn_batch_id
                               ,p_exception_log          => XX_CDH_CONV_MASTER_PKG.TRIM_INPUT_MSG('XX_HZ_EXTENSIBILITY_PUB.Process_Acct_site_Record API returned Error'||ln_msg_text)
                               ,p_oracle_error_msg       => SQLERRM
                               ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                               ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                               ,p_oracle_error_code      => SQLCODE
                            );
                        END IF;
                     END IF;
                  END IF;
               END IF;-- ln_owner_table_id if condition

            ---------------------------------------------------
            -- Step 6: Account Site Use Extensible attributes
            ---------------------------------------------------
            ELSIF lx_od_ext_attrib_stg(i).interface_entity_name = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_ACC_SITE_USE THEN

               IF lx_od_ext_attrib_stg(i).orig_system           IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).orig_system_reference IS NOT NULL THEN

                  XX_CDH_CONV_MASTER_PKG.get_osr_owner_table_id
                     (   p_orig_system         => lx_od_ext_attrib_stg(i).orig_system
                        ,p_orig_sys_reference  => lx_od_ext_attrib_stg(i).orig_system_reference
                        ,p_owner_table_name    => 'HZ_CUST_SITE_USES_ALL'
                        ,x_owner_table_id      => ln_owner_table_id
                        ,x_retcode             => ln_retcode
                        ,x_errbuf              => ln_errbuf
                     );
               END IF;

               IF lx_od_ext_attrib_stg(i).owner_table_name IS NOT NULL AND
                  lx_od_ext_attrib_stg(i).owner_table_id   IS NOT NULL THEN

                  IF lx_od_ext_attrib_stg(i).owner_table_name = 'HZ_CUST_SITE_USES_ALL' THEN
                     ln_owner_table_id := lx_od_ext_attrib_stg(i).owner_table_id;
                  END IF;
               END IF;

               IF ln_owner_table_id IS NULL THEN
                  Log_Debug_Msg('Extensible Attribute: Account Site Use Id is Null');
                  lx_od_ext_attrib_stg(i).interface_status :='6';
                  log_exception
                     (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                        ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                        ,p_staging_column_name    => 'RECORD_ID'
                        ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                        ,p_batch_id               => gn_batch_id
                        ,p_exception_log          => 'Extensible Attribute: Account Site Use Id is Null'
                        ,p_oracle_error_msg       => SQLERRM
                        ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                        ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                        ,p_oracle_error_code      => SQLCODE
                     );
               ELSIF ln_owner_table_id IS NOT NULL THEN
                  lc_profile_id :=NULL;
                  lc_profile_id :=ln_owner_table_id;
                  log_debug_msg (ln_owner_table_id);
                 -- Retreive Attribute Group Id based on the Flex Fleid and Attribute Group Code
                  lx_od_ext_attrib_stg(I).interface_status :='4';

                  Build_extensible_table
                     (   p_user_row_table        => lc_user_table,
                         p_user_data_table       => lc_data_table,
                         p_ext_attribs_row       => lx_od_ext_attrib_stg(I)
                     );

                  IF lx_od_ext_attrib_stg(I).interface_status ='4' THEN

                     XX_CDH_HZ_EXTENSIBILITY_PUB.Process_Acct_site_use_Record
                        (   p_api_version           => XX_CDH_CUST_EXTEN_ATTRI_PKG.G_API_VERSION,
                            p_site_use_id           => lc_profile_id,
                            p_attributes_row_table  => lc_user_table,
                            p_attributes_data_table => lc_data_table,
                          -- Added by Ambarish 16-Jan-08
                            p_log_errors            => FND_API.G_FALSE,
                          ---
                            x_failed_row_id_list    => l_failed_row_id_list,
                            x_return_status         => l_return_status,
                            x_errorcode             => l_errorcode,
                            x_msg_count             => l_msg_count,
                            x_msg_data              => l_msg_data
                        );

                     Log_debug_msg ('Process_Acct_site_use_Record : l_return_status '|| l_return_status);
                     IF l_return_status = FND_API.G_RET_STS_SUCCESS THEN
                        lx_od_ext_attrib_stg(i).interface_status := 7;
                        Log_Debug_Msg( 'XX_HZ_EXTENSIBILITY_PUB.Process_Acct_site_use_Record API successful.');
                     ELSE
                        lx_od_ext_attrib_stg(i).interface_status := 6;
                        IF l_msg_count > 0 THEN
                           Log_Debug_Msg('XX_HZ_EXTENSIBILITY_PUB.Process_Acct_site_use_Record API returned Error.');
                         -- Start Changes By Ambarish
                           ERROR_HANDLER.Get_Message_List(l_errors_tbl);
                           FOR i IN 1..l_errors_tbl.COUNT
                           LOOP
                              ln_msg_text := ln_msg_text||' '||l_errors_tbl(i).message_text;
                           END LOOP;
                         -- End Changes By Ambarish

                           log_exception
                              (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                                 ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                                 ,p_staging_column_name    => 'RECORD_ID'
                                 ,p_staging_column_value   => lx_od_ext_attrib_stg(I).record_id
                                 ,p_batch_id               => gn_batch_id
                                 ,p_exception_log          => XX_CDH_CONV_MASTER_PKG.TRIM_INPUT_MSG('XX_HZ_EXTENSIBILITY_PUB.Process_Acct_site_use_Record API returned Error'||ln_msg_text)
                                 ,p_oracle_error_msg       => SQLERRM
                                 ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                                 ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                                 ,p_oracle_error_code      => SQLCODE
                              );
                        END IF;
                     END IF;
                  END IF;
               END IF;-- ln_owner_table_id if condition


            ELSE
               Log_Debug_Msg('Extensible Attribute: interface_entity_name value is invalid');
               lx_od_ext_attrib_stg(i).interface_status :='6';
               log_exception
                  (   p_record_control_id      => lx_od_ext_attrib_stg(i).record_id
                     ,p_procedure_name         => 'EXTENSIBLE_MAIN'
                     ,p_staging_column_name    => 'INTERFACE_ENTITY_NAME'
                     ,p_staging_column_value   => lx_od_ext_attrib_stg(I).interface_entity_name
                     ,p_batch_id               => gn_batch_id
                     ,p_exception_log          => 'Extensible Attribute: interface_entity_name value is invalid'
                     ,p_oracle_error_msg       => SQLERRM
                     ,p_source_system_code     => lx_od_ext_attrib_stg(I).orig_system
                     ,p_source_system_ref      => lx_od_ext_attrib_stg(I).orig_system_reference
                     ,p_oracle_error_code      => SQLCODE
                  );
            END IF;

            IF lx_od_ext_attrib_stg(i).interface_status ='7' THEN
               l_sucess_count := l_sucess_count +1;
            ELSIF  lx_od_ext_attrib_stg(i).interface_status ='6' THEN
               l_failed_count := l_failed_count +1;
            END IF;
         END LOOP;

         FOR i IN lx_od_ext_attrib_stg.FIRST .. lx_od_ext_attrib_stg.LAST
         LOOP
            lx_upd_record_table(i) := lx_od_ext_attrib_stg(i).record_id;
            lx_upd_interface_table(i) :=lx_od_ext_attrib_stg(i).interface_status;
         END LOOP;

         FORALL i in 1 .. lx_od_ext_attrib_stg.last
         UPDATE XXOD_HZ_IMP_EXT_ATTRIBS_STG
         SET interface_status =lx_upd_interface_table(i)
         WHERE record_id = lx_upd_record_table(i);

         COMMIT;
      END IF;
      EXIT WHEN c_xxod_hz_imp_ext_attribs_stg%notfound;
   END LOOP;
   CLOSE c_xxod_hz_imp_ext_attribs_stg;
   IF ( l_sucess_count +l_failed_count ) > 0 THEN
      XX_COM_CONV_ELEMENTS_PKG.Log_control_info_proc
         (   p_conversion_id            => ln_conversion_id
            ,p_batch_id                 => gn_batch_id
            ,p_num_bus_objs_processed   => 0
         );

      XX_COM_CONV_ELEMENTS_PKG.upd_control_info_proc
         (   p_conc_mst_req_id              => APPS.FND_GLOBAL.CONC_REQUEST_ID
            ,p_batch_id                     => gn_batch_id
            ,p_conversion_id                => ln_conversion_id
            ,p_num_bus_objs_failed_valid    => 0
            ,p_num_bus_objs_failed_process  => l_failed_count
            ,p_num_bus_objs_succ_process    => l_sucess_count
         );
      Log_Debug_Msg('--------------------------------------------------');
      Log_debug_msg('Extensible Attribute: Total No. of Records Processed :'||( l_sucess_count +l_failed_count ));
      Log_debug_msg('Extensible Attribute: Total No. of Records succeded :'||l_sucess_count);
      Log_debug_msg('Extensible Attribute: Total No. of Records failed :'||l_failed_count);

      FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'==========  Create Extensible Attribute ==============');
      FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'--------------------------------------------------');
      FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'Extensible Attribute: Total No. of Records Processed :'||( l_sucess_count +l_failed_count ));
      FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'Extensible Attribute: Total No. of Records succeded :'||l_sucess_count);
      FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'Extensible Attribute: Total No. of Records failed :'||l_failed_count);
   END IF;
   Log_Debug_Msg('==================       END       =================');
EXCEPTION
   WHEN od_ext_attrib THEN
      NULL;
   WHEN OTHERS THEN
      log_debug_msg(sqlerrm||'  '||sqlcode);
END EXTENSIBLE_MAIN_WORKER;

-- +===================================================================+
-- | Name : Log_Debug_Msg                                              |
-- | Description :                                                     |
-- |                                                                   |
-- | Parameters :  p_debug_msg                                         |
-- |                                                                   |
-- +===================================================================+
PROCEDURE Log_Debug_Msg(
         p_debug_msg              IN        VARCHAR2)
AS

BEGIN
   XX_CDH_CONV_MASTER_PKG.WRITE_CONC_LOG_MESSAGE( P_DEBUG_MSG);
END Log_Debug_Msg;

-- +===================================================================+
-- | Name : LOG_EXCEPTION                                              |
-- | Description :                                                     |
-- |                                                                   |
-- | Parameters :                                                      |
-- |                                                                   |
-- +===================================================================+

PROCEDURE log_exception
   (   p_record_control_id      IN NUMBER
      ,p_procedure_name         IN VARCHAR2
      ,p_staging_column_name    IN VARCHAR2
      ,p_staging_column_value   IN VARCHAR2
      ,p_batch_id               IN NUMBER
      ,p_exception_log          IN VARCHAR2
      ,p_oracle_error_msg       IN VARCHAR2
      ,p_source_system_code     IN VARCHAR2
      ,p_source_system_ref      IN VARCHAR2
      ,p_oracle_error_code      IN VARCHAR2
   )

AS
   lc_package_name           VARCHAR2(32)  := 'XX_CDH_CUST_EXTEN_ATTRI_PKG';
   lc_source_system_code     VARCHAR2(5)   := 'SSR';
   lc_source_system_ref      VARCHAR2(80)  := 'Source System Ref';
   lc_oracle_error_code      VARCHAR2(10)  := 'ErrCode';
   lc_staging_table_name     VARCHAR2(100) := 'XXOD_HZ_IMP_EXT_ATTRIBS_STG';
   ln_conversion_id          NUMBER        := 00245;

BEGIN
   XX_COM_CONV_ELEMENTS_PKG.log_exceptions_proc
      (   p_conversion_id          => ln_conversion_id
         ,p_record_control_id      => p_record_control_id
         ,p_source_system_code     => p_source_system_code
         ,p_package_name           => lc_package_name
         ,p_procedure_name         => p_procedure_name
         ,p_staging_table_name     => lc_staging_table_name
         ,p_staging_column_name    => p_staging_column_name
         ,p_staging_column_value   => p_staging_column_value
         ,p_source_system_ref      => p_source_system_ref
         ,p_batch_id               => p_batch_id
         ,p_exception_log          => p_exception_log
         ,p_oracle_error_code      => p_oracle_error_code
         ,p_oracle_error_msg       => p_oracle_error_msg
      );

EXCEPTION
   WHEN OTHERS THEN
      Log_Debug_Msg('Error in Calling Procedure :'||SQLERRM);
END log_exception;

-- +===================================================================+
-- | Name        :  Build_extensible_table                             |
-- | Description :  This procedure is used to construct the table      |
-- |                Structure used by the extensiable api's.           |
-- |                                                                   |
-- |                                                                   |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |              p_user_row_table is table structure contains the     |
-- |              Attribute group information                          |
-- |              p_user_data_table is table structure contains the    |
-- |              attribute columns informations                       |
-- |              p_ext_attribs_row is staging table row information   |
-- |              which needs to be create/updated to extensible attrs |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+
PROCEDURE Build_extensible_table
      (   p_user_row_table  IN OUT EGO_USER_ATTR_ROW_TABLE,
          p_user_data_table IN OUT EGO_USER_ATTR_DATA_TABLE,
          p_ext_attribs_row IN OUT xxod_hz_imp_ext_attribs_stg%ROWTYPE
      )
IS

  --Retrieve Attribute Group id based on the Attribute Group code and
  -- Flexfleid Name
  CURSOR c_ego_attr_grp_id ( p_flexfleid_name VARCHAR2, p_context_code VARCHAR2)
  IS
  SELECT attr_group_id
  FROM   ego_fnd_dsc_flx_ctx_ext
  WHERE  descriptive_flexfield_name = p_flexfleid_name
  AND    descriptive_flex_context_code = p_context_code;

  --
  CURSOR c_ext_attr_name( p_flexfleid_name VARCHAR2, p_context_code VARCHAR2)
  IS
  SELECT *
  FROM   fnd_descr_flex_column_usages
  WHERE  descriptive_flexfield_name    = p_flexfleid_name
  AND    descriptive_flex_context_code = p_context_code
  AND    enabled_flag                  = 'Y';

  TYPE l_xxod_ext_attribs_stg          IS TABLE OF c_ext_attr_name%ROWTYPE INDEX BY BINARY_INTEGER;
  lx_od_ext_attrib_stg                 l_xxod_ext_attribs_stg;

  lc_row_temp_obj                      EGO_USER_ATTR_ROW_OBJ :=
                                       EGO_USER_ATTR_ROW_OBJ(null,null,null,null,null,null,null,null,null,null,null,null); -- Edited for R12 retrofit (25-JUN-2013)

  lc_data_temp_obj                     EGO_USER_ATTR_DATA_OBJ:=
                                       EGO_USER_ATTR_DATA_OBJ(null,null,null,null,null,null,null,null);
  lc_count                             NUMBER := 1;
  l_flexfleid_name                     VARCHAR2(50);
  l_attr_group_id                      NUMBER;
  lc_exception                         EXCEPTION;
  j                                    PLS_INTEGER :=0;
BEGIN

IF p_ext_attribs_row.interface_entity_name    = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_PERSON THEN
   l_flexfleid_name:='HZ_PERSON_PROFILES_GROUP';
ELSIF p_ext_attribs_row.interface_entity_name = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_ORGANIZATION THEN
   l_flexfleid_name:='HZ_ORG_PROFILES_GROUP';
ELSIF p_ext_attribs_row.interface_entity_name = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_SITE THEN
   l_flexfleid_name:='HZ_PARTY_SITES_GROUP';
ELSIF p_ext_attribs_row.interface_entity_name = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_ACCOUNT THEN
   l_flexfleid_name:='XX_CDH_CUST_ACCOUNT';
ELSIF p_ext_attribs_row.interface_entity_name = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_ACC_SITE THEN
   l_flexfleid_name:='XX_CDH_CUST_ACCT_SITE';
ELSIF p_ext_attribs_row.interface_entity_name = XX_CDH_CUST_EXTEN_ATTRI_PKG.G_ACC_SITE_USE THEN
   l_flexfleid_name:='XX_CDH_ACCT_SITE_USES';
END IF;

OPEN  c_ego_attr_grp_id (l_flexfleid_name,p_ext_attribs_row.ATTRIBUTE_GROUP_CODE);
FETCH c_ego_attr_grp_id INTO l_attr_group_id;
CLOSE c_ego_attr_grp_id;

IF l_attr_group_id IS NULL THEN
   Log_Debug_Msg('Extensible Attribute: '||INITCAP(p_ext_attribs_row.interface_entity_name)||' Attribute Group Id is null');
   p_ext_attribs_row.interface_status :='6';
   log_exception
      (   p_record_control_id      => p_ext_attribs_row.record_id
         ,p_procedure_name         => 'BUILD_EXTENSIBLE_TABLE'
         ,p_staging_column_name    => 'ATTRIBUTE_GROUP_CODE'
         ,p_staging_column_value   => p_ext_attribs_row.ATTRIBUTE_GROUP_CODE
         ,p_batch_id               => gn_batch_id
         ,p_exception_log          => 'Extensible Attribute: '||initcap(p_ext_attribs_row.interface_entity_name)||' Attribute Group Id is null'
         ,p_oracle_error_msg       => SQLERRM
         ,p_source_system_code     => p_ext_attribs_row.orig_system
         ,p_source_system_ref      => p_ext_attribs_row.orig_system_reference
         ,p_oracle_error_code      => SQLCODE
      );

END IF;

OPEN  c_ext_attr_name (l_flexfleid_name,p_ext_attribs_row.ATTRIBUTE_GROUP_CODE);
FETCH c_ext_attr_name BULK COLLECT INTO lx_od_ext_attrib_stg;
CLOSE c_ext_attr_name;

p_user_row_table.extend;
p_user_row_table(1)                  := lc_row_temp_obj;
p_user_row_table(1).row_identifier   := p_ext_attribs_row.record_id;
p_user_row_table(1).attr_group_id    := l_attr_group_id;
p_user_row_table(1).transaction_type := ego_user_attrs_data_pvt.g_sync_mode;

FOR i IN 1 .. lx_od_ext_attrib_stg.COUNT
LOOP

   --p_user_data_table.extend;
   --p_user_data_table(i)                := lc_data_temp_obj;
   --p_user_data_table(i).row_identifier := p_ext_attribs_row.record_id;
   --p_user_data_table(i).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

   -------------------------
   -- Character Attributes
   -------------------------

   IF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR1'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr1) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr1) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr1;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR2'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr2) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr2) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr2;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR3'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr3) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr3) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr3;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR4'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr4) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr4) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr4;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR5'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr5) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr5) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr5;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR6'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr6) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr6) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr6;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR7'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr7) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr7) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr7;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR8'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr8) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr8) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr8;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR9'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr9) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr9) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr9;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR10'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr10) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr10) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr10;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR11'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr11) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr11) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr11;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR12'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr12) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr12) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr12;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR13'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr13) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr13) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr13;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR14'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr14) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr14) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr14;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR15'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr15) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr15) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr15;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR16'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr16) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr16) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr16;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR17'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr17) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr17) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr17;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR18'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr18) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr18) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr18;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR19'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr19) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr19) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr19;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='C_EXT_ATTR20'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr20) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_char(p_ext_attribs_row.c_ext_attr20) = FND_API.G_MISS_CHAR THEN
            p_user_data_table(j).attr_value_str := NULL;
         ELSE
            p_user_data_table(j).attr_value_str := p_ext_attribs_row.c_ext_attr20;
         END IF;
      END IF;

   -------------------------
   -- Number Attributes
   -------------------------
   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR1'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr1) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr1) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr1;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR2'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr2) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr2) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr2;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR3'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr3) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr3) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr3;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR4'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr4) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr4) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr4;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR5'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr5) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr5) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr5;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR6'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr6) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr6) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr6;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR7'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr7) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr7) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr7;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR8'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr8) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr8) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr8;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR9'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr9) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr9) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr9;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR10'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr10) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr10) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr10;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR11'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr11) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr11) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr11;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR12'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr12) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr12) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr12;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR13'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr13) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr13) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr13;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR14'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr14) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr14) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr14;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR15'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr15) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr15) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr15;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR16'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr16) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr16) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr16;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR17'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr17) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr17) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr17;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR18'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr18) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr18) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr18;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR19'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr19) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr19) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr19;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='N_EXT_ATTR20'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr20) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_num(p_ext_attribs_row.n_ext_attr20) = FND_API.G_MISS_NUM THEN
            p_user_data_table(j).attr_value_num := NULL;
         ELSE
            p_user_data_table(j).attr_value_num := p_ext_attribs_row.n_ext_attr20;
         END IF;
      END IF;

   -------------------------
   -- DATE Attributes
   -------------------------
   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='D_EXT_ATTR1'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr1) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr1) = FND_API.G_MISS_DATE THEN
            p_user_data_table(j).attr_value_date := NULL;
         ELSE
            p_user_data_table(j).attr_value_date := p_ext_attribs_row.d_ext_attr1;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='D_EXT_ATTR2'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr2) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr2) = FND_API.G_MISS_DATE THEN
            p_user_data_table(j).attr_value_date := NULL;
         ELSE
            p_user_data_table(j).attr_value_date := p_ext_attribs_row.d_ext_attr2;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='D_EXT_ATTR3'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr3) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr3) = FND_API.G_MISS_DATE THEN
            p_user_data_table(j).attr_value_date := NULL;
         ELSE
            p_user_data_table(j).attr_value_date := p_ext_attribs_row.d_ext_attr3;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='D_EXT_ATTR4'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr4) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr4) = FND_API.G_MISS_DATE THEN
            p_user_data_table(j).attr_value_date := NULL;
         ELSE
            p_user_data_table(j).attr_value_date := p_ext_attribs_row.d_ext_attr4;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='D_EXT_ATTR5'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr5) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr5) = FND_API.G_MISS_DATE THEN
            p_user_data_table(j).attr_value_date := NULL;
         ELSE
            p_user_data_table(j).attr_value_date := p_ext_attribs_row.d_ext_attr5;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='D_EXT_ATTR6'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr6) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr6) = FND_API.G_MISS_DATE THEN
            p_user_data_table(j).attr_value_date := NULL;
         ELSE
            p_user_data_table(j).attr_value_date := p_ext_attribs_row.d_ext_attr6;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='D_EXT_ATTR7'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr7) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr7) = FND_API.G_MISS_DATE THEN
            p_user_data_table(j).attr_value_date := NULL;
         ELSE
            p_user_data_table(j).attr_value_date := p_ext_attribs_row.d_ext_attr7;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='D_EXT_ATTR8'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr8) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr8) = FND_API.G_MISS_DATE THEN
            p_user_data_table(j).attr_value_date := NULL;
         ELSE
            p_user_data_table(j).attr_value_date := p_ext_attribs_row.d_ext_attr8;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='D_EXT_ATTR9'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr9) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr9) = FND_API.G_MISS_DATE THEN
            p_user_data_table(j).attr_value_date := NULL;
         ELSE
            p_user_data_table(j).attr_value_date := p_ext_attribs_row.d_ext_attr9;
         END IF;
      END IF;

   ELSIF lx_od_ext_attrib_stg(i).application_column_name ='D_EXT_ATTR10'  THEN

      IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr10) IS NULL THEN
         NULL;
      ELSE
         p_user_data_table.extend;
         j                                   := j+1;
         p_user_data_table(j)                := lc_data_temp_obj;
         p_user_data_table(j).row_identifier := p_ext_attribs_row.record_id;
         p_user_data_table(j).attr_name      := lx_od_ext_attrib_stg(i).end_user_column_name;

         IF xx_cdh_conv_master_pkg.get_hz_imp_g_miss_date(p_ext_attribs_row.d_ext_attr10) = FND_API.G_MISS_DATE THEN
            p_user_data_table(j).attr_value_date := NULL;
         ELSE
            p_user_data_table(j).attr_value_date := p_ext_attribs_row.d_ext_attr10;
         END IF;
      END IF;

   END IF;

END LOOP;

EXCEPTION
   WHEN lc_exception THEN
      NULL;
   WHEN OTHERS THEN
      log_debug_msg(SQLCODE ||SQLERRM);
END Build_extensible_table;

-- +===================================================================+
-- | Name        :  solar_ext_attr_stg_updt_main                       |
-- | Description :  This main procedure is used to update N_EXT_ATTR1  |
-- |                column of XXOD_HZ_IMP_EXT_ATTRIBS_STG table CDH    |
-- |                common view to bring in site level contacts from   |
-- |                Solar inturn using the worker program              |
-- |                                                                   |
-- | Parameters  :   x_errbuf            OUT VARCHAR2                  |
-- |                 x_retcode           OUT VARCHAR2                  |
-- |                 p_batch_id          IN  PLS_INTEGER               |
-- |                 p_process_yn        IN  VARCHAR2                  |
-- |                                                                   |
-- |                                                                   |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+
PROCEDURE SOLAR_EXT_ATTR_STG_UPDT_MAIN
      (   x_errbuf            OUT NOCOPY VARCHAR2
         ,x_retcode           OUT NOCOPY VARCHAR2
         ,p_batch_id          IN  PLS_INTEGER
         ,p_process_yn        IN  VARCHAR2
      )
IS

ln_conc_request_id     PLS_INTEGER;
ln_no_of_workers       PLS_INTEGER;
lc_request_data        VARCHAR2(100);
exp_skip_procedure     EXCEPTION;

BEGIN

   FND_MSG_PUB.initialize;

   IF p_process_yn = 'N' THEN

      RAISE EXP_SKIP_PROCEDURE;

   END IF;

   ln_no_of_workers := FND_PROFILE.VALUE('XX_CDH_CONV_WORKERS');

   lc_request_data  := fnd_conc_global.request_data;

   IF lc_request_data IS NULL THEN

      FOR idx IN 1..ln_no_of_workers
      LOOP

        ln_conc_request_id := FND_REQUEST.submit_request
                              (   application => 'XXCNV',
                                  program     => 'XX_CDH_SOLAR_EXT_ATTR_WORKER',
                                  description => idx,
                                  start_time  => NULL,
                                  sub_request => TRUE,
                                  argument1   => p_batch_id,
                                  argument2   => idx
                              );
        IF ln_conc_request_id = 0 THEN

           x_errbuf  := FND_MESSAGE.GET;
           x_retcode := 2;
           Log_Debug_Msg ('Customer Site level contact update worker  '||idx||' Program failed to submit: ' || x_errbuf);
           x_errbuf  := 'Customer Site level contact update worker '||idx||' Program failed to submit: ' || x_errbuf;
        ELSE

           Log_Debug_Msg (' ');
           Log_Debug_Msg ('Customer Site level contact update worker '||idx||' Program submitted with request id: '|| TO_CHAR( ln_conc_request_id ));
           COMMIT;
        END IF;

        FND_CONC_GLOBAL.set_req_globals
                    (  conc_status  => 'PAUSED',
                       request_data => TO_CHAR( ln_no_of_workers )
                      );
      END LOOP;

    END IF; -- end of lc_request_data value check

    IF lc_request_data IS NOT NULL THEN
       --Restart of the main / parent request
       FND_FILE.put_line(FND_FILE.log, 'Restart of SOLAR Extensible Attribute Update Master Program');

    END IF;

EXCEPTION

   WHEN EXP_SKIP_PROCEDURE THEN
      x_retcode := 0;
      Log_Debug_Msg('Solar Extensible Attribute Update Processing was Skipped!!');

   WHEN OTHERS THEN

      log_debug_msg( 'Unexpected Error in procedure SOLAR_EXT_ATTR_STG_UPDT_MAIN - '||SQLERRM);
      x_retcode := 2;
      x_errbuf  := 'Unexpected Error in procedure SOLAR_EXT_ATTR_STG_UPDT_MAIN - '||SQLERRM;

END SOLAR_EXT_ATTR_STG_UPDT_MAIN;

-- +===================================================================+
-- | Name        :  solar_ext_attr_stg_updt_worker                     |
-- | Description :  This worker procedure is called from the main      |
-- |                program to update N_EXT_ATTR1 column of table      |
-- |                XXOD_HZ_IMP_EXT_ATTRIBS_STG table CDH common view  |
-- |                to bring in site level contacts from Solar.        |
-- |                                                                   |
-- | Parameters  :   x_errbuf            OUT VARCHAR2                  |
-- |                 x_retcode           OUT VARCHAR2                  |
-- |                 p_batch_id          IN  PLS_INTEGER               |
-- |                 p_worker_id         IN  PLS_INTEGER               |
-- |                                                                   |
-- |                                                                   |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+
PROCEDURE solar_ext_attr_stg_updt_worker
      (   x_errbuf            OUT NOCOPY VARCHAR2
         ,x_retcode           OUT NOCOPY VARCHAR2
         ,p_batch_id          IN  PLS_INTEGER
         ,p_worker_id         IN  PLS_INTEGER
      )
IS

ln_last_updated_by            PLS_INTEGER      := FND_GLOBAL.user_id;
ld_last_update_date           DATE             := SYSDATE;
ln_last_update_login          PLS_INTEGER      := FND_GLOBAL.login_id;
ln_request_id                 PLS_INTEGER      := FND_GLOBAL.conc_request_id;
ln_prog_appl_id               PLS_INTEGER      := FND_GLOBAL.prog_appl_id;

TYPE extn_rec_type IS RECORD
   (   relationship_id        HZ_ORG_CONTACTS.party_relationship_id%TYPE,
       record_id              XXOD_HZ_IMP_EXT_ATTRIBS_STG.record_id%TYPE
   );

TYPE extn_tbl_type            IS TABLE OF extn_rec_type;
lt_extn                       extn_tbl_type;

TYPE rel_tbl_type             IS TABLE OF HZ_ORG_CONTACTS.party_relationship_id%TYPE INDEX BY BINARY_INTEGER;

lt_rel_extn                   rel_tbl_type ;

TYPE rec_tbl_type             IS TABLE OF XXOD_HZ_IMP_EXT_ATTRIBS_STG.record_id%TYPE INDEX BY BINARY_INTEGER;

lt_rec_extn                   rec_tbl_type;

ln_no_of_child_prog           PLS_INTEGER := FND_PROFILE.VALUE('XX_CDH_CONV_WORKERS');
ln_bulk_limit                 NUMBER := XX_CDH_CONV_MASTER_PKG.g_bulk_fetch_limit;
ln_updt_count                 PLS_INTEGER := 0;
ln_record_count               PLS_INTEGER := 0;


CURSOR lcu_extn_attr IS
SELECT hoc.party_relationship_id,
       xhieas.record_id
FROM   hz_org_contacts              hoc,
       xxod_hz_imp_ext_attribs_stg  xhieas,
       hz_orig_sys_references       hosr
WHERE  xhieas.c_ext_attr20          = hosr.orig_system_reference
AND    xhieas.c_ext_attr19          = hosr.orig_system
AND    hosr.owner_table_id          = hoc.org_contact_id
AND    xhieas.attribute_group_code  = 'SITE_CONTACTS'
AND    hosr.owner_table_name        = 'HZ_ORG_CONTACTS'
AND    hoc.status                   = 'A'
AND    hosr.status                  = 'A'
AND    xhieas.interface_status      IN ('1','4','6')
AND    xhieas.batch_id              = p_batch_id
AND    MOD(NVL(TO_NUMBER(REGEXP_SUBSTR(XHIEAS.orig_system_reference, '[123456789]{1,7}'))
           , ASCII(XHIEAS.orig_system_reference)), ln_no_of_child_prog)
                 = DECODE(p_worker_id,ln_no_of_child_prog,0,p_worker_id);


BEGIN

   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'******************** Extensible Attribute Update Program ********************');
   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'');
   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'********************************* BEGIN *********************************');
   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'');

   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'Begin of Worker Program: '||p_worker_id );
   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'');
   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'Batch Id: '||p_batch_id );
   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'');

   ln_updt_count   := 0;
   ln_record_count := 0;

   -- Open the cursor for the bulk fetch

   OPEN lcu_extn_attr;

   LOOP
      FETCH lcu_extn_attr BULK COLLECT INTO lt_extn LIMIT LN_BULK_LIMIT;

      IF (lt_extn.COUNT > 0) THEN
         ln_record_count := ln_record_count + lt_extn.COUNT;

         FOR idx IN lt_extn.FIRST .. lt_extn.LAST
         LOOP
            lt_rel_extn(lt_rel_extn.COUNT+1) := lt_extn(idx).relationship_id;
            lt_rec_extn(lt_rec_extn.COUNT+1) := lt_extn(idx).record_id;
         END LOOP;
      END IF;

      EXIT WHEN lcu_extn_attr%NOTFOUND;
      lt_extn.DELETE;

   END LOOP;

   CLOSE lcu_extn_attr;

   FORALL idx IN lt_rel_extn.FIRST ..lt_rel_extn.LAST

   UPDATE xxod_hz_imp_ext_attribs_stg    XHIEAS
   SET    XHIEAS.n_ext_attr1             = lt_rel_extn(idx)
         ,XHIEAS.last_update_date        = ld_last_update_date
         ,XHIEAS.last_updated_by         = ln_last_updated_by
         ,XHIEAS.last_update_login       = ln_last_update_login
         ,XHIEAS.request_id              = ln_request_id
         ,XHIEAS.program_application_id  = ln_prog_appl_id
   WHERE  XHIEAS.record_id               = lt_rec_extn(idx);

   ln_updt_count := SQL%ROWCOUNT;

   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'Number of records fetched: '||ln_record_count);
   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,' ');
   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'Number of records Updated: '||NVL(ln_updt_count,0));
   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,' ');
   COMMIT;

   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'********************************* END *********************************');
   FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'');

   -- Delete the PL/SQL table records after processing

   lt_rel_extn.DELETE;
   lt_rec_extn.DELETE;

EXCEPTION
   WHEN OTHERS THEN
      ROLLBACK;
      CLOSE lcu_extn_attr;
      x_retcode := 2;
      x_errbuf  := 'Unexpected Error in procedure SOLAR_EXT_ATTR_STG_UPDT_WORKER - '||SQLERRM;
      log_debug_msg( 'Unexpected Error in procedure SOLAR_EXT_ATTR_STG_UPDT_WORKER - '||SQLERRM);
      FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'********************************* END *********************************');
      FND_FILE.PUT_LINE (FND_FILE.OUTPUT,'');

END SOLAR_EXT_ATTR_STG_UPDT_WORKER;

-- End of changes on 2-Jan-2008
END XX_CDH_CUST_EXTEN_ATTRI_PKG;