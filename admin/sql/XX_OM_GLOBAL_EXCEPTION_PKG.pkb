SET SHOW          OFF;
SET VERIFY        OFF;
SET ECHO          OFF;      
SET TAB           OFF;
SET FEEDBACK      OFF;
WHENEVER SQLERROR CONTINUE; 
WHENEVER OSERROR EXIT FAILURE ROLLBACK;

CREATE OR REPLACE
PACKAGE BODY xx_om_global_exception_pkg AS

-- +=====================================================================+
-- |                  Office Depot - Project Simplify                    |
-- |                                                                     |
-- +=====================================================================+
-- | Name  : XX_OM_GLOBALEXCEPTION_PKG.PKB                               |
-- | Description      : This Package is used by all custom programs      |
-- |                     to insert exceptions into xx_om_global_         |
-- |                     exceptions.Once the errors are fixed it insert  |
-- |                     into xx_om_global_exceptions_out with released  |
-- |                     flag as Y                                       |
-- |                                                                     |
-- |Change Record:                                                       |
-- |===============                                                      |
-- |Version    Date          Author           Remarks                    |
-- |=======    ==========    =============    ========================   |
-- |DRAFT 1A   06-MAR-2007   Bapuji          Initial draft version       |
-- |      1B   07-JUN-2007   Bapuji          changed to coding standards |
-- |                                                                     |
-- +=====================================================================+


-- +=============================================================+
-- | Name  : INSERT_EXCEPTION                                    |
-- | Description: This Procedure will insert all the exceptions  |
-- |              generated by custom programs                   |
-- |                                                             |
-- | Parameters:  p_report_exception IN error msg capture by     |
-- |              object xx_om_report_eception_t                 |
-- | Return:      x_err_buf OUT Sucess or Failure to insert      |
-- |              x_ret_code OUT Message of sucess or failure    |
-- +=============================================================+

PROCEDURE insert_exception (
                p_report_exception IN xx_om_report_exception_t
              , x_err_buf          OUT NOCOPY VARCHAR2
              , x_ret_code         OUT NOCOPY VARCHAR2
              ) IS

ln_exception_id     NUMBER        :=0;
PRAGMA AUTONOMOUS_TRANSACTION;

BEGIN

SELECT xxom.xx_om_exception_id_s.nextval
INTO   ln_exception_id
FROM   DUAL;

INSERT INTO  xxom.xx_om_global_exceptions (
                                 exception_id
                              ,  exception_Header
                              ,  track_Code
                              ,  solution_Domain
                              ,  function_name
                              ,  error_Code
                              ,  description
                              ,  entity_ref
                              ,  entity_ref_id
                              ,  exception_Sent_Flag
                              ,  creation_Date
                              ,  created_by
                              ,  last_update_date
                              ,  last_updated_by
                              )  VALUES  (
                                 ln_exception_id
                              ,  p_report_exception.p_exception_header
                              ,  p_report_exception.p_Track_Code
                              ,  p_report_exception.p_Solution_Domain
                              ,  p_report_exception.p_Function
                              ,  p_report_exception.p_error_code
                              ,  p_report_exception.p_error_Description
                              ,  p_report_exception.p_entity_ref
                              ,  p_report_exception.P_entity_ref_id
                              ,  'N'
                              ,  SYSDATE
                              ,  g_user_id
                              ,  SYSDATE
                              ,  g_user_id
                              );

COMMIT;

x_ret_code := FND_API.G_RET_STS_SUCCESS ;
x_err_buf  := 'Success';

EXCEPTION
WHEN OTHERS THEN

    x_ret_code := FND_API.G_RET_STS_ERROR;
    x_err_buf  :=SUBSTR(SQLERRM,1,240);

END insert_exception;


-- +=============================================================+
-- | Name  : GENERATE_XML                                        |
-- | Description: This Procedure will capture the errors inserted|
-- |              xx_om_global_exception in xml data format      |
-- |              and insert it into xx_om_global_exceptions_out |
-- |                                                             |
-- | Return:      x_err_buf OUT Sucess or Failure to insert      |
-- |              x_ret_code OUT Message of sucess or failure    |
-- +=============================================================+

PROCEDURE generate_xml  (
                x_err_buf          OUT NOCOPY VARCHAR2
              , x_ret_code         OUT NOCOPY VARCHAR2
              ) IS

CURSOR xx_exc_c IS
    SELECT *
      FROM xxom.xx_om_global_exceptions;

BEGIN

FOR xx_exc_r IN xx_exc_c LOOP
--Not yet Finilized how we are going to send the xml data.
    g_exc_out := '<Exception>
                 <ExHeader></ ExHeader >
                 <TrackCode>OTC</TrackCode>
                 <Domain>IF</Domain>
                 <Function>PICK_RELEASE</Function>
                 <ErrCode>1405</ErrCode >
                 <ErrDesc> fetched column value is NULL</ErrDesc >
                 </ Exception >'; --'xml format data';

INSERT INTO xxom.xx_om_global_exceptions_out (
                    exception_id
                  , exception_clob
                  , Exception_Released_Flag
                  ) VALUES (
                    xx_exc_r.exception_id
                  , g_exc_out
                  , 'N'
                  );

END LOOP;
x_ret_code := FND_API.G_RET_STS_SUCCESS ;
x_err_buf  := 'Success';

EXCEPTION
WHEN OTHERS THEN
    x_ret_code := FND_API.G_RET_STS_ERROR;
    x_err_buf  :=SUBSTR(SQLERRM,1,240);

END generate_xml;

END xx_om_global_exception_pkg;



/

SHOW ERRORS;
