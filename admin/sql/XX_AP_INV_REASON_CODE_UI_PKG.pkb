SET VERIFY OFF;
SET SHOW OFF;
SET ECHO OFF;
SET TAB OFF;
SET FEEDBACK OFF;
WHENEVER SQLERROR CONTINUE;
WHENEVER OSERROR EXIT FAILURE ROLLBACK;

CREATE OR REPLACE PACKAGE BODY XX_AP_INV_REASON_CODE_UI_PKG
AS
  -- +============================================================================================+
  -- |  Office Depot - Project Simplify                                                           |
  -- |                                                                                            |
  -- +============================================================================================+
  -- | Name       :  xx_ap_inv_reason_code_ui_pkg                                                 |
  -- | RICE ID   :    E3522 AP Dashboard Report Package
  -- | Solution ID:   216 Invoice Details with Reason Code
  -- |  Description:  Dash board Query to get validated invoice details with reason code
  -- |  Change Record:                                                                            |
  -- +============================================================================================+
  -- | Version     Date         Author           Remarks                                          |
  -- | =========   ===========  =============    ===============================================  |
  -- | 1.0         11/17/2017   Ragni Gupta       Initial version                                 |
  -- | 1.1         03/31/2020   Mayur Palsokar    Modified GET_AP_INV_REASONCODE_DETAIL, GET_AP_INV_REASONCODE_SUMMARY for NAIT-27208|
  -- +============================================================================================+

FUNCTION GET_AP_INV_REASONCODE_SUMMARY(
    P_START_DATE      DATE,
    P_END_DATE        DATE,
    P_PERIOD_FROM     VARCHAR2,
    P_PERIOD_TO       VARCHAR2,
	P_INV_START_DATE  DATE,             -- Added by Mayur for NAIT-27208
	P_INV_END_DATE    DATE,             -- Added by Mayur for NAIT-27208
    P_ORG_ID          NUMBER,
    P_VENDOR_ID       NUMBER,
    P_VENDOR_SITE_ID  NUMBER,
    P_VEND_ASSIT_CODE VARCHAR2,
    P_ITEM_ID         NUMBER,
    P_REASON_CODE     VARCHAR2,
    P_DROPSHIP        VARCHAR2)
  RETURN XX_AP_INV_REASON_CODE_UI_PKG.AP_INV_REASONCODE_SUM_DB_CTT PIPELINED
IS

  CURSOR C1(P_DT_FROM DATE,P_DT_TO DATE,
            P_INV_START_DATE DATE, P_INV_END_DATE DATE)    -- Added by Mayur for NAIT-27208
  IS
    SELECT ORG_ID,
      VENDORASISTANT,
      SUPP_NUM,
      VENDOR_NAME,
      SITE,
      SITE_CATEGORY,
      INVOICE_NUM,
      INVOICE_AMOUNT,
      SUM(PERCENT),
      DEBIT_MEMO,
      REASON_CODE,
      CHARGEBACK_FLAG,
      SUM(REASON_AMT) REASON_AMT,
      DROPSHIP,
	  GL_DATE,       -- Added by Mayur for NAIT-27208
	  INVOICE_DATE   -- Added by Mayur for NAIT-27208
    FROM
      (SELECT
        /*+ LEADING (AIA) */
        AIA.ORG_ID,
        XX_AP_INV_REASON_CODE_UI_PKG.VENDOR_ASSISTANT( NVL(ASSA.ATTRIBUTE6,'Open')) VENDORASISTANT,
        ASUP.SEGMENT1 SUPP_NUM,
        ASUP.VENDOR_NAME,
        ASSA.VENDOR_SITE_CODE SITE,
        ASSA.ATTRIBUTE8 SITE_CATEGORY,
        AIA.INVOICE_NUM,
        AIA.INVOICE_AMOUNT,
        XX_AP_INV_REASON_CODE_UI_PKG.DEBIT_MEMO_AMT(PH.PO_HEADER_ID,AILA.PO_LINE_ID, AILA.AMOUNT, AILA.ATTRIBUTE11, AIA.INVOICE_AMOUNT) PERCENT,
        XX_AP_INV_REASON_CODE_UI_PKG.DEBIT_MEMO(AIA.INVOICE_NUM, AILA.LINE_NUMBER) DEBIT_MEMO,
        AILA.ATTRIBUTE11 REASON_CODE,
        NULL CHARGEBACK_FLAG,
        DECODE(AILA.ATTRIBUTE11, 'PD', XX_AP_INV_REASON_CODE_UI_PKG.DEBIT_MEMO_AMT( PH.PO_HEADER_ID,AILA.PO_LINE_ID,AILA.AMOUNT, AILA.ATTRIBUTE11, AIA.INVOICE_AMOUNT),AILA.AMOUNT) REASON_AMT,
        DECODE(SUBSTR(PH.ATTRIBUTE_CATEGORY,1,1),'D','Y','N') DROPSHIP,
		AIA.GL_DATE GL_DATE,           -- Added by Mayur for NAIT-27208
		AIA.INVOICE_DATE INVOICE_DATE  -- Added by Mayur for NAIT-27208
      FROM PO_HEADERS_ALL PH,
        AP_SUPPLIERS ASUP,
        AP_SUPPLIER_SITES_ALL ASSA,
        AP_INVOICE_LINES_ALL AILA,
        AP_INVOICES_ALL AIA
      WHERE 1=1
      AND AIA.GL_DATE BETWEEN TO_DATE(TO_CHAR(P_DT_FROM)
        ||' 00:00:00','DD-MON-RR HH24:MI:SS')
      AND TO_DATE(TO_CHAR(P_DT_TO)
        ||' 23:59:59','DD-MON-RR HH24:MI:SS')
	  AND (AIA.INVOICE_DATE >= TO_DATE(TO_CHAR(P_INV_START_DATE),'DD-MON-RR') OR P_INV_START_DATE IS NULL) -- Added by Mayur for NAIT-27208
      AND (AIA.INVOICE_DATE <= TO_DATE(TO_CHAR(P_INV_END_DATE),'DD-MON-RR') OR P_INV_END_DATE IS NULL)     -- Added by Mayur for NAIT-27208
	  AND AIA.INVOICE_TYPE_LOOKUP_CODE                          ='STANDARD'
      AND AIA.INVOICE_NUM NOT LIKE '%ODDBUIA%'
      AND AIA.CANCELLED_DATE IS NULL
      AND AILA.INVOICE_ID                                       =AIA.INVOICE_ID
      AND NVL(AILA.INVENTORY_ITEM_ID,-1)                        =NVL(P_ITEM_ID,NVL(AILA.INVENTORY_ITEM_ID,-1))
      AND AILA.ATTRIBUTE11                                     IS NOT NULL
      AND NVL(AILA.ATTRIBUTE11,'X')                             =NVL(P_REASON_CODE,NVL(AILA.ATTRIBUTE11,'X'))
      AND ASSA.VENDOR_SITE_ID                                   =AIA.VENDOR_SITE_ID +0
      AND ASUP.VENDOR_ID                                        = ASSA.VENDOR_ID
      AND ASSA.VENDOR_SITE_ID                                   =NVL(P_VENDOR_SITE_ID,ASSA.VENDOR_SITE_ID)
      AND ASSA.VENDOR_ID                                        =NVL(P_VENDOR_ID,ASSA.VENDOR_ID)
      AND ASSA.ATTRIBUTE6                                       =NVL(P_VEND_ASSIT_CODE,ASSA.ATTRIBUTE6)
      AND PH.PO_HEADER_ID                                       =NVL(AIA.PO_HEADER_ID,AIA.QUICK_PO_HEADER_ID)
      AND DECODE(SUBSTR(PH.ATTRIBUTE_CATEGORY,1,1),'D','Y','N') =NVL(P_DROPSHIP,DECODE(SUBSTR(PH.ATTRIBUTE_CATEGORY,1,1),'D','Y','N'))
      AND NOT EXISTS (SELECT 'x'
                 FROM AP_HOLDS_ALL
             WHERE INVOICE_ID=AIA.INVOICE_ID
              AND RELEASE_LOOKUP_CODE IS NULL
               )
      AND EXISTS
        (SELECT 'x'
        FROM XLA_EVENTS XEV,
          XLA_TRANSACTION_ENTITIES XTE
        WHERE XTE.SOURCE_ID_INT_1=AIA.INVOICE_ID
        AND XTE.APPLICATION_ID   = 200
        AND XTE.ENTITY_CODE      = 'AP_INVOICES'
        AND XEV.ENTITY_ID        = XTE.ENTITY_ID
        AND XEV.EVENT_TYPE_CODE LIKE '%VALIDATED%'
        )
      --AND APPS.AP_INVOICES_PKG.GET_APPROVAL_STATUS(AIA.INVOICE_ID, AIA.INVOICE_AMOUNT,AIA.PAYMENT_STATUS_FLAG,AIA.INVOICE_TYPE_LOOKUP_CODE)='APPROVED'
    AND EXISTS
      (SELECT 1
      FROM XX_FIN_TRANSLATEVALUES TV,
        XX_FIN_TRANSLATEDEFINITION TD
      WHERE TD.TRANSLATION_NAME = 'XX_AP_TRADE_CATEGORIES'
      AND TV.TRANSLATE_ID       = TD.TRANSLATE_ID
      AND TV.ENABLED_FLAG       = 'Y'
      AND SYSDATE BETWEEN TV.START_DATE_ACTIVE AND NVL(TV.END_DATE_ACTIVE,SYSDATE)
      AND TV.TARGET_VALUE1 = ASSA.ATTRIBUTE8
        ||''
      )
    AND EXISTS
      (SELECT 1
      FROM XX_FIN_TRANSLATEVALUES TV ,
        XX_FIN_TRANSLATEDEFINITION TD
      WHERE TD.TRANSLATION_NAME = 'XX_AP_TR_MATCH_INVOICES'
      AND TV.TRANSLATE_ID       = TD.TRANSLATE_ID
      AND TV.ENABLED_FLAG       ='Y'
      AND SYSDATE BETWEEN TV.START_DATE_ACTIVE AND NVL(TV.END_DATE_ACTIVE,SYSDATE)
      AND TV.TARGET_VALUE1 = AIA.SOURCE
      )  
      )
    GROUP BY ORG_ID,
      VENDORASISTANT,
      SUPP_NUM,
      VENDOR_NAME,
      SITE,
      SITE_CATEGORY,
      INVOICE_NUM,
      INVOICE_AMOUNT,
      DEBIT_MEMO,
      REASON_CODE,
      CHARGEBACK_FLAG,
      DROPSHIP,
      GL_DATE,        -- Added by Mayur for NAIT-27208
	  INVOICE_DATE;   -- Added by Mayur for NAIT-27208
	  
	  
    L_AP_INV_REASONCODE_SUM_DB XX_AP_INV_REASON_CODE_UI_PKG.AP_INV_REASONCODE_SUM_DB_CTT;
    L_ERROR_COUNT NUMBER;
    --ex_dml_errors EXCEPTION;
    -- PRAGMA EXCEPTION_INIT(ex_dml_errors, -24381);
    N            NUMBER := 0;
    L_START_DATE DATE;
    L_END_DATE   DATE;
	
  BEGIN

  xla_security_pkg.set_security_context(602);

    --insert into xx_testrg values ('inside proce',null);
    IF P_PERIOD_FROM IS NOT NULL AND P_PERIOD_TO IS NOT NULL THEN
      BEGIN
        SELECT START_DATE
        INTO L_START_DATE
        FROM GL_PERIODS
        WHERE 1         =1
        AND PERIOD_NAME = P_PERIOD_FROM;
      EXCEPTION
      WHEN OTHERS THEN
        L_START_DATE := SYSDATE;
      END;
      BEGIN
        SELECT END_DATE
        INTO L_END_DATE
        FROM GL_PERIODS
        WHERE 1         =1
        AND PERIOD_NAME = P_PERIOD_TO;
      EXCEPTION
      WHEN OTHERS THEN
        L_START_DATE := SYSDATE;
      END;
    END IF;
    IF ( P_START_DATE IS NOT NULL AND P_END_DATE IS NOT NULL ) THEN
      L_START_DATE    := P_START_DATE;
      L_END_DATE      := P_END_DATE;
    END IF;
	
    OPEN C1 (L_START_DATE,L_END_DATE, 
	 P_INV_START_DATE, P_INV_END_DATE);     -- Added by Mayur for NAIT-27208
    LOOP
      FETCH C1 BULK COLLECT
      INTO L_AP_INV_REASONCODE_SUM_DB LIMIT 500;
      FOR I IN 1 .. L_AP_INV_REASONCODE_SUM_DB.COUNT
      LOOP
        PIPE ROW (L_AP_INV_REASONCODE_SUM_DB(I));
      END LOOP;
      EXIT
    WHEN C1%NOTFOUND;
    END LOOP;
    CLOSE C1;
    RETURN ;
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error caught in main procedure '||SQLERRM);
  END GET_AP_INV_REASONCODE_SUMMARY;
  
  
FUNCTION GET_AP_INV_REASONCODE_DETAIL(
    P_START_DATE      DATE,
    P_END_DATE        DATE,
    P_PERIOD_FROM     VARCHAR2,
    P_PERIOD_TO       VARCHAR2,
	P_INV_START_DATE  DATE,             -- Added by Mayur for NAIT-27208
	P_INV_END_DATE    DATE,             -- Added by Mayur for NAIT-27208
    P_ORG_ID          NUMBER,
    P_VENDOR_ID       NUMBER,
    P_VENDOR_SITE_ID  NUMBER,
    P_VEND_ASSIT_CODE VARCHAR2,
    P_ITEM_ID         NUMBER,
    P_REASON_CODE     VARCHAR2,
    P_DROPSHIP        VARCHAR2)
  RETURN XX_AP_INV_REASON_CODE_UI_PKG.AP_INV_REASONCODE_DB_CTT PIPELINED
IS
  CURSOR C1(P_DT_FROM DATE,P_DT_TO DATE,
         P_INV_START_DATE  DATE, P_INV_END_DATE    DATE)-- Added by Mayur for NAIT-27208
  IS
    SELECT
      /*+ LEADING (AIA) */
      AIA.ORG_ID,
      XX_AP_INV_REASON_CODE_UI_PKG.VENDOR_ASSISTANT( NVL(ASSA.ATTRIBUTE6,'Open')) VENDORASISTANT,
      ASUP.SEGMENT1 SUPP_NUM,
      ASUP.VENDOR_NAME,
      ASSA.VENDOR_SITE_CODE SITE,
      ASSA.ATTRIBUTE8 SITE_CATEGORY,
      AIA.INVOICE_NUM,
      AIA.INVOICE_AMOUNT,
      ROUND((DECODE(AILA.ATTRIBUTE11,'PD',XX_AP_INV_REASON_CODE_UI_PKG.DEBIT_MEMO_AMT(PH.PO_HEADER_ID,AILA.PO_LINE_ID, AILA.AMOUNT, AILA.ATTRIBUTE11, AIA.INVOICE_AMOUNT),AILA.AMOUNT)/AIA.INVOICE_AMOUNT)*100,2) PERCENT,
      XX_AP_INV_REASON_CODE_UI_PKG.DEBIT_MEMO(AIA.INVOICE_NUM, AILA.LINE_NUMBER) DEBIT_MEMO,
      PH.ATTRIBUTE_CATEGORY PO_TYPE,
      PH.SEGMENT1 PO_NUM,
      DECODE(SIGN(AILA.INVENTORY_ITEM_ID),1,XX_AP_INV_REASON_CODE_UI_PKG.GET_SKU(AILA.INVENTORY_ITEM_ID),NULL) SKU,
      AILA.ATTRIBUTE11 REASON_CODE,
      AILA.DESCRIPTION,
      NULL CHARGEBACK_FLAG,
      DECODE(AILA.ATTRIBUTE11, 'PD', XX_AP_INV_REASON_CODE_UI_PKG.DEBIT_MEMO_AMT( PH.PO_HEADER_ID,AILA.PO_LINE_ID,AILA.AMOUNT, AILA.ATTRIBUTE11, AIA.INVOICE_AMOUNT),AILA.AMOUNT) REASON_AMT,
      DECODE(SUBSTR(PH.ATTRIBUTE_CATEGORY,1,1),'D','Y','N') DROPSHIP,
	  AIA.GL_DATE GL_DATE,           -- Added by Mayur for NAIT-27208
      AIA.INVOICE_DATE INVOICE_DATE  -- Added by Mayur for NAIT-27208
    FROM PO_HEADERS_ALL PH,
      AP_SUPPLIERS ASUP,
      AP_SUPPLIER_SITES_ALL ASSA,
      AP_INVOICE_LINES_ALL AILA,
      AP_INVOICES_ALL AIA
    WHERE 1=1
    AND AIA.GL_DATE BETWEEN TO_DATE(TO_CHAR(P_DT_FROM)
      ||' 00:00:00','DD-MON-RR HH24:MI:SS')
    AND TO_DATE(TO_CHAR(P_DT_TO)
      ||' 23:59:59','DD-MON-RR HH24:MI:SS')
	AND (AIA.INVOICE_DATE >= TO_DATE(TO_CHAR(P_INV_START_DATE),'DD-MON-RR') OR P_INV_START_DATE IS NULL) -- Added by Mayur for NAIT-27208
    AND (AIA.INVOICE_DATE <= TO_DATE(TO_CHAR(P_INV_END_DATE),'DD-MON-RR') OR P_INV_END_DATE IS NULL)     -- Added by Mayur for NAIT-27208
    AND AIA.INVOICE_TYPE_LOOKUP_CODE                          ='STANDARD'
    AND AIA.INVOICE_NUM NOT LIKE '%ODDBUIA%'
    AND AIA.CANCELLED_DATE IS NULL
    AND AILA.INVOICE_ID                                       =AIA.INVOICE_ID
    AND NVL(AILA.INVENTORY_ITEM_ID,-1)                        =NVL(P_ITEM_ID,NVL(AILA.INVENTORY_ITEM_ID,-1))
    AND AILA.ATTRIBUTE11                                     IS NOT NULL
    AND NVL(AILA.ATTRIBUTE11,'X')                             =NVL(P_REASON_CODE,NVL(AILA.ATTRIBUTE11,'X'))
    AND ASSA.VENDOR_SITE_ID                                   =AIA.VENDOR_SITE_ID +0
    AND ASUP.VENDOR_ID                                        = ASSA.VENDOR_ID
    AND ASSA.VENDOR_SITE_ID                                   =NVL(P_VENDOR_SITE_ID,ASSA.VENDOR_SITE_ID)
    AND ASSA.VENDOR_ID                                        =NVL(P_VENDOR_ID,ASSA.VENDOR_ID)
    AND ASSA.ATTRIBUTE6                                       =NVL(P_VEND_ASSIT_CODE,ASSA.ATTRIBUTE6)
    AND PH.PO_HEADER_ID                                       =NVL(AIA.PO_HEADER_ID,AIA.QUICK_PO_HEADER_ID)
    AND DECODE(SUBSTR(PH.ATTRIBUTE_CATEGORY,1,1),'D','Y','N') =NVL(P_DROPSHIP,DECODE(SUBSTR(PH.ATTRIBUTE_CATEGORY,1,1),'D','Y','N'))
    AND NOT EXISTS (SELECT 'x'
                 FROM AP_HOLDS_ALL
             WHERE INVOICE_ID=AIA.INVOICE_ID
              AND RELEASE_LOOKUP_CODE IS NULL
               )

    AND EXISTS
      (SELECT 'x'
      FROM XLA_EVENTS XEV,
        XLA_TRANSACTION_ENTITIES XTE
      WHERE XTE.SOURCE_ID_INT_1=AIA.INVOICE_ID
      AND XTE.APPLICATION_ID   = 200
      AND XTE.ENTITY_CODE      = 'AP_INVOICES'
      AND XEV.ENTITY_ID        = XTE.ENTITY_ID
      AND XEV.EVENT_TYPE_CODE LIKE '%VALIDATED%'
      )
   -- AND APPS.AP_INVOICES_PKG.GET_APPROVAL_STATUS(AIA.INVOICE_ID, AIA.INVOICE_AMOUNT,AIA.PAYMENT_STATUS_FLAG,AIA.INVOICE_TYPE_LOOKUP_CODE)='APPROVED'
  AND EXISTS
    (SELECT 1
    FROM XX_FIN_TRANSLATEVALUES TV,
      XX_FIN_TRANSLATEDEFINITION TD
    WHERE TD.TRANSLATION_NAME = 'XX_AP_TRADE_CATEGORIES'
    AND TV.TRANSLATE_ID       = TD.TRANSLATE_ID
    AND TV.ENABLED_FLAG       = 'Y'
    AND SYSDATE BETWEEN TV.START_DATE_ACTIVE AND NVL(TV.END_DATE_ACTIVE,SYSDATE)
    AND TV.TARGET_VALUE1 = ASSA.ATTRIBUTE8
      ||''
    )
  AND EXISTS
    (SELECT 1
    FROM XX_FIN_TRANSLATEVALUES TV ,
      XX_FIN_TRANSLATEDEFINITION TD
    WHERE TD.TRANSLATION_NAME = 'XX_AP_TR_MATCH_INVOICES'
    AND TV.TRANSLATE_ID       = TD.TRANSLATE_ID
    AND TV.ENABLED_FLAG       ='Y'
    AND SYSDATE BETWEEN TV.START_DATE_ACTIVE AND NVL(TV.END_DATE_ACTIVE,SYSDATE)
    AND TV.TARGET_VALUE1 = AIA.SOURCE
    ) 
    ;
	
  L_AP_INV_REASONCODE_DB XX_AP_INV_REASON_CODE_UI_PKG.AP_INV_REASONCODE_DB_CTT;
  L_ERROR_COUNT NUMBER;
  --ex_dml_errors EXCEPTION;
  -- PRAGMA EXCEPTION_INIT(ex_dml_errors, -24381);
  N            NUMBER := 0;
  L_START_DATE DATE;
  L_END_DATE   DATE;
BEGIN

xla_security_pkg.set_security_context(602);

  --insert into xx_testrg values ('inside proce',null);
  IF P_PERIOD_FROM IS NOT NULL AND P_PERIOD_TO IS NOT NULL THEN
    BEGIN
      SELECT START_DATE
      INTO L_START_DATE
      FROM GL_PERIODS
      WHERE 1         =1
      AND PERIOD_NAME = P_PERIOD_FROM;
    EXCEPTION
    WHEN OTHERS THEN
      L_START_DATE := SYSDATE;
    END;
    BEGIN
      SELECT END_DATE
      INTO L_END_DATE
      FROM GL_PERIODS
      WHERE 1         =1
      AND PERIOD_NAME = P_PERIOD_TO;
    EXCEPTION
    WHEN OTHERS THEN
      L_START_DATE := SYSDATE;
    END;
  END IF;
  IF ( P_START_DATE IS NOT NULL AND P_END_DATE IS NOT NULL ) THEN
    L_START_DATE    := P_START_DATE;
    L_END_DATE      := P_END_DATE;
  END IF;
  OPEN C1 (L_START_DATE,L_END_DATE, 
         P_INV_START_DATE, P_INV_END_DATE);   -- Added by Mayur for NAIT-27208
  LOOP
    FETCH C1 BULK COLLECT
    INTO L_AP_INV_REASONCODE_DB LIMIT 500;
    FOR I IN 1 .. L_AP_INV_REASONCODE_DB.COUNT
    LOOP
      PIPE ROW (L_AP_INV_REASONCODE_DB(I));
    END LOOP;
    EXIT
  WHEN C1%NOTFOUND;
  END LOOP;
  CLOSE C1;
  RETURN ;
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('Error caught in main procedure '||SQLERRM);
END GET_AP_INV_REASONCODE_DETAIL;

FUNCTION VENDOR_ASSISTANT(
    P_ASSISTANT_CODE VARCHAR2)
  RETURN VARCHAR2
IS
  L_VENDOR_ASSISTANT XX_FIN_TRANSLATEVALUES.TARGET_VALUE1%TYPE;
BEGIN
  BEGIN
    SELECT B.TARGET_VALUE2
      -- b.target_value1 vend_assistant_code
    INTO L_VENDOR_ASSISTANT
    FROM XX_FIN_TRANSLATEVALUES B ,
      XX_FIN_TRANSLATEDEFINITION A
    WHERE A.TRANSLATION_NAME = 'XX_AP_VENDOR_ASSISTANTS'
    AND B.TRANSLATE_ID       = A.TRANSLATE_ID
    AND B.ENABLED_FLAG       ='Y'
    AND SYSDATE BETWEEN B.START_DATE_ACTIVE AND NVL(B.END_DATE_ACTIVE,SYSDATE)
    AND B.TARGET_VALUE1 = P_ASSISTANT_CODE;
  EXCEPTION
  WHEN OTHERS THEN
    L_VENDOR_ASSISTANT := NULL;
  END ;
  RETURN L_VENDOR_ASSISTANT;
END VENDOR_ASSISTANT;

FUNCTION DEBIT_MEMO(
    P_INVOICE_NUM VARCHAR2,
    LINE_NUM      NUMBER)
  RETURN VARCHAR2
IS
  L_INVOICE_DM AP_INVOICES_ALL.INVOICE_NUM%TYPE;
  L_INVOICE_NUM AP_INVOICES_ALL.INVOICE_NUM%TYPE;
BEGIN
  L_INVOICE_NUM :=P_INVOICE_NUM||'DM';
  BEGIN
    SELECT AIA.INVOICE_NUM
    INTO L_INVOICE_DM
    FROM AP_INVOICES_ALL AIA,
      AP_INVOICE_LINES_ALL AILDM
    WHERE 1                         = 1
    AND TO_NUMBER(AILDM.ATTRIBUTE5) = LINE_NUM
    AND AILDM.INVOICE_ID            = AIA.INVOICE_ID
    AND AIA.INVOICE_NUM             = L_INVOICE_NUM;
  EXCEPTION
  WHEN OTHERS THEN
    L_INVOICE_DM := NULL;
  END ;
  RETURN L_INVOICE_DM;
END DEBIT_MEMO;

FUNCTION DEBIT_MEMO_AMT(
    P_PO_HEADER_ID NUMBER,
    P_PO_LINE_ID   NUMBER,
    P_LINE_AMT     NUMBER,
    P_REASON_CODE  VARCHAR2,
    P_INV_AMT      NUMBER)
  RETURN NUMBER
IS
  L_AMOUNT AP_INVOICE_LINES_ALL.AMOUNT%TYPE;
  L_INVOICE_NUM AP_INVOICES_ALL.INVOICE_NUM%TYPE;
  L_UNIT_PRICE PO_LINES_ALL.UNIT_PRICE%TYPE;
  L_QUANTITY PO_LINES_ALL.QUANTITY%TYPE;
  L_LINE_AMOUNT AP_INVOICE_LINES_ALL.AMOUNT%TYPE;
BEGIN
  IF P_REASON_CODE = 'PD' THEN
    BEGIN
      SELECT NVL(PLA.UNIT_PRICE,0),
        NVL(PLA.QUANTITY,0)
      INTO L_UNIT_PRICE,
        L_QUANTITY
      FROM PO_LINES_ALL PLA
      WHERE PLA.PO_HEADER_ID=P_PO_HEADER_ID
      AND PLA.PO_LINE_ID    =P_PO_LINE_ID;
      L_LINE_AMOUNT        := P_LINE_AMT-(L_UNIT_PRICE*L_QUANTITY);
    EXCEPTION
    WHEN OTHERS THEN
      L_LINE_AMOUNT := 0;
    END;
  ELSE
    L_LINE_AMOUNT := P_LINE_AMT;
  END IF;
  L_AMOUNT := ROUND((L_LINE_AMOUNT/P_INV_AMT)*100,2);
  RETURN L_AMOUNT;
EXCEPTION
WHEN OTHERS THEN
  RETURN 0;
END DEBIT_MEMO_AMT;

FUNCTION GET_PO_HEADER_DET(
    P_PO_CRITERIA  VARCHAR2,
    P_PO_HEADER_ID NUMBER)
  RETURN VARCHAR2
IS
  L_ATTRIBUTE_CATEGORY PO_HEADERS_ALL.ATTRIBUTE_CATEGORY%TYPE;
  L_SEGMENT1 PO_HEADERS_ALL.SEGMENT1%TYPE;
BEGIN
  SELECT POH.ATTRIBUTE_CATEGORY ,
    POH.SEGMENT1
  INTO L_ATTRIBUTE_CATEGORY,
    L_SEGMENT1
  FROM PO_HEADERS_ALL POH
  WHERE POH.PO_HEADER_ID=P_PO_HEADER_ID;
  IF P_PO_CRITERIA      ='PO_ATTRIBUTE' THEN
    RETURN L_ATTRIBUTE_CATEGORY;
  ELSE
    RETURN L_SEGMENT1;
  END IF;
EXCEPTION
WHEN OTHERS THEN
  RETURN NULL;
END GET_PO_HEADER_DET;

FUNCTION GET_SKU(
    P_ITEM_ID NUMBER)
  RETURN NUMBER
IS
  L_SKU MTL_SYSTEM_ITEMS_B.SEGMENT1%TYPE;
BEGIN
  SELECT SEGMENT1
  INTO L_SKU
  FROM MTL_SYSTEM_ITEMS_B
  WHERE 1               = 1
  AND INVENTORY_ITEM_ID = P_ITEM_ID
  AND ORGANIZATION_ID+0 =441;
  RETURN L_SKU;
EXCEPTION
WHEN OTHERS THEN
  L_SKU:=NULL;
  RETURN L_SKU;
END GET_SKU;
END XX_AP_INV_REASON_CODE_UI_PKG;
/
SHOW ERRORS;