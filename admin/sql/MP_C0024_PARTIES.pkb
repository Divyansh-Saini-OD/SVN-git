
/*****************************************************************************
--  Note: This generated code is for demonstration purposes only and may
--        not be deployable.
*****************************************************************************/

CREATE OR REPLACE PACKAGE ""MP_C0024_PARTIES"" AS
OWB$MAP_OBJECT_ID VARCHAR2(32) := '';
sql_stmt  VARCHAR2(32767);
get_abort BOOLEAN := FALSE;
get_abort_procedure BOOLEAN := FALSE;
get_trigger_success BOOLEAN := TRUE;
get_errors NUMBER(22) := 0;
get_status NUMBER(22) := 0;
get_error_ratio NUMBER(22) := 0;
get_global_names              VARCHAR2(10) := 'FALSE';
-- Status variable for Batch cursors
"XXOD_HZ_IMP_PARTIES_INT_St" BOOLEAN := FALSE; 

"CS_0_CR" VARCHAR2(30) := 'XXCONV';"CS_1_AT" VARCHAR2(150) := 'CUSTOMER';"P_BATCH_ID" NUMBER;"P_AOPS_BATCH_ID" NUMBER;

-- Function Main 
-- Entry point in package ""MP_C0024_PARTIES""
FUNCTION Main("P_BATCH_ID" IN NUMBER
 DEFAULT NULL, "P_AOPS_BATCH_ID" IN NUMBER
 DEFAULT NULL) RETURN NUMBER;  

END ""MP_C0024_PARTIES"";

/

CREATE OR REPLACE PACKAGE BODY ""MP_C0024_PARTIES"" AS




---------------------------------------------------------------------------
-- Function "XXOD_HZ_IMP_PARTIES_INT_Bat"
--   performs batch extraction
--   Returns TRUE on success
--   Returns FALSE on failure
---------------------------------------------------------------------------
FUNCTION "XXOD_HZ_IMP_PARTIES_INT_Bat" ("P_BATCH_ID" IN NUMBER
 DEFAULT NULL, "P_AOPS_BATCH_ID" IN NUMBER
 DEFAULT NULL) 
 RETURN BOOLEAN IS

BEGIN
  EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';

  BEGIN
    INSERT
    INTO
      "XXOD_HZ_IMP_PARTIES_INT"
      ("ATTRIBUTE1",
      "ATTRIBUTE4",
      "ATTRIBUTE9",
      "ATTRIBUTE10",
      "ATTRIBUTE11",
      "ATTRIBUTE13",
      "ATTRIBUTE23",
      "BATCH_ID",
      "BRANCH_FLAG",
      "CREATED_BY_MODULE",
      "DUNS_NUMBER_C",
      "GSA_INDICATOR_FLAG",
      "HQ_BRANCH_IND",
      "KNOWN_AS",
      "ORGANIZATION_NAME",
      "PARENT_SUB_IND",
      "PARTY_ID",
      "PARTY_ORIG_SYSTEM",
      "PARTY_ORIG_SYSTEM_REFERENCE",
      "PARTY_TYPE",
      "PERSON_FIRST_NAME",
      "PERSON_IDEN_TYPE",
      "PERSON_IDENTIFIER",
      "PERSON_LAST_NAME",
      "PERSON_MIDDLE_NAME",
      "PERSON_NAME_SUFFIX",
      "PERSON_PRE_NAME_ADJUNCT",
      "PREF_FUNCTIONAL_CURRENCY",
      "SALUTATION",
      "TAX_REFERENCE",
      "WOMAN_OWNED_IND")
      (SELECT
/*+ NO_MERGE */
  "PARTIES"."CAN_CROSS_SELL_ATR1" "CAN_CROSS_SELL_ATR1",
  CASE WHEN  "PARTIES"."CUST_LEVEL_ATR4" = 'SV'
THEN 'SILVER'
WHEN  "PARTIES"."CUST_LEVEL_ATR4" = 'PR'
THEN 'GOLD'
WHEN  "PARTIES"."CUST_LEVEL_ATR4" = 'TM'
THEN 'PLATINUM'
WHEN  "PARTIES"."CUST_LEVEL_ATR4" = 'RG'
THEN 'REGULAR'
ELSE 'REGULAR'
END/* EXPRESSION.OUTGRP1.ATTRIBUTE4 */ "ATTRIBUTE4",
  "PARTIES"."WMN_OWND_IND_ATR9" "WMN_OWND_IND_ATR9",
  "PARTIES"."WH_COLLAR_WKRS_ATR10" "WH_COLLAR_WKRS_ATR10",
  "PARTIES"."ATTRIBUTE11" "ATTRIBUTE11",
  "MP_C0024_PARTIES"."CS_1_AT" "ATTRIBUTE13",
  "PARTIES"."MNRTY_OWN_CLASS_ATR23" "MNRTY_OWN_CLASS_ATR23",
  "MP_C0024_PARTIES"."P_BATCH_ID" "P_BATCH_ID$1",
  "PARTIES"."BRANCH_FLAG" "BRANCH_FLAG",
  "MP_C0024_PARTIES"."CS_0_CR" "CRTMODULE",
  "PARTIES"."DUNS_NBR" "DUNS_NBR",
  "PARTIES"."GSA_IND" "GSA_IND",
  "PARTIES"."BRANCH_IND" "BRANCH_IND",
  "PARTIES"."AKA_1" "AKA_1",
  "PARTIES"."ORG_NAME" "ORG_NAME",
  "PARTIES"."PAR_SUB_IND" "PAR_SUB_IND",
  TRIM( "PARTIES"."ORACLE_PARTY_ID" )/* EXP_TRIM.OUTGRP1.ORACLE_PARTY_ID */ "ORACLE_PARTY_ID",
  "PARTIES"."PARTY_ORIG_SYSTEM" "PARTY_ORIG_SYSTEM",
  "PARTIES"."PARTY_ORIG_SYSREF" "PARTY_ORIG_SYSREF",
  "PARTIES"."PARTY_TYPE_PER_ORG" "PARTY_TYPE_PER_ORG",
  "PARTIES"."FIRST_NAME" "FIRST_NAME",
  "PARTIES"."PERSON_ID_TYPE" "PERSON_ID_TYPE",
  "PARTIES"."PERSON_ID" "PERSON_ID",
  "PARTIES"."LAST_NAME" "LAST_NAME",
  "PARTIES"."MIDDLE_NAME" "MIDDLE_NAME",
  "PARTIES"."PERSON_NAME_SUFFIX" "PERSON_NAME_SUFFIX",
  "PARTIES"."SALUTATION_WRITTEN" "SALUTATION_WRITTEN",
  "PARTIES"."ORG_CURR" "ORG_CURR",
  "PARTIES"."SALUTATION" "SALUTATION",
  "PARTIES"."VAT_NBR" "VAT_NBR",
  "PARTIES"."WMN_OWN_IND" "WMN_OWN_IND"
FROM
  "SIMPLIFY"."PARTIES"@"GANDHI.NA.ODCORP.NET" "PARTIES"
  WHERE 
  ( "PARTIES"."BATCH_NBR" = "MP_C0024_PARTIES"."P_AOPS_BATCH_ID" )
      );
    COMMIT;
  EXCEPTION WHEN OTHERS THEN
    ROLLBACK;
    COMMIT;
    RETURN FALSE;
  END;
  COMMIT;
  RETURN TRUE;
END "XXOD_HZ_IMP_PARTIES_INT_Bat";

FUNCTION Main("P_BATCH_ID" IN NUMBER
 DEFAULT NULL, "P_AOPS_BATCH_ID" IN NUMBER
 DEFAULT NULL) RETURN NUMBER IS
get_batch_status           BOOLEAN := TRUE;
BEGIN
  -- Mapping input parameter global variable assignments
  "MP_C0024_PARTIES"."P_BATCH_ID" := "MP_C0024_PARTIES".Main."P_BATCH_ID";"MP_C0024_PARTIES"."P_AOPS_BATCH_ID" := "MP_C0024_PARTIES".Main."P_AOPS_BATCH_ID";
  

  
  
  
  
  
PROCEDURE EXEC_AUTONOMOUS_SQL(CMD IN VARCHAR2) IS
  PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
  EXECUTE IMMEDIATE (CMD);
  COMMIT;
END;
  -- Initialize all batch status variables
	"XXOD_HZ_IMP_PARTIES_INT_St" := FALSE;



			
"XXOD_HZ_IMP_PARTIES_INT_St" := "XXOD_HZ_IMP_PARTIES_INT_Bat"; 


RETURN get_status;
END Main;
END ""MP_C0024_PARTIES"";

/

