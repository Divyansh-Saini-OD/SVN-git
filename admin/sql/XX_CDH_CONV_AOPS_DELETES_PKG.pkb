SET VERIFY OFF;
WHENEVER SQLERROR CONTINUE;
WHENEVER OSERROR EXIT FAILURE ROLLBACK;

CREATE OR REPLACE PACKAGE BODY XX_CDH_CONV_AOPS_DELETES_PKG
-- +===================================================================+
-- |                  Office Depot - Project Simplify                  |
-- |                  Oracle  Consulting Organization                  |
-- +===================================================================+
-- | Name        :  XX_CDH_CONV_AOPS_DELETES_PKG.pks                   |
-- | Description :  CDH Customer Conversion AOPS Delete Spec           |
-- |                                                                   |
-- |Change Record:                                                     |
-- |===============                                                    |
-- |Version   Date        Author             Remarks                   |
-- |========  =========== ================== ==========================|
-- |1.0       11-Aug-2008 Abhradip Ghosh     Initial version           |
-- +===================================================================+
AS
gt_request_id                 fnd_concurrent_requests.request_id%TYPE := fnd_global.conc_request_id();
gc_procedure_name             VARCHAR2(30)                            := 'AOPS_DELETES_CHILD';
gn_batch_id                   NUMBER                                  := 0;

                              
-- +===================================================================+
-- | Name        : get_attr_group_id                                   |
-- | Description :                                                     |
-- | Parameters  :  IN  flex_field_name                                |
-- |                IN  context_code                                   |
-- |                OUT attr_group_id                                  |
-- +===================================================================+
PROCEDURE get_attr_group_id 
    (
        p_flexfleid_name IN VARCHAR2
      , p_context_code   IN VARCHAR2
      , x_attribute_group_id OUT NUMBER
    )
AS
BEGIN
  BEGIN 
    SELECT attr_group_id
      into x_attribute_group_id
    FROM   ego_fnd_dsc_flx_ctx_ext
    WHERE  descriptive_flexfield_name = p_flexfleid_name
    AND    descriptive_flex_context_code = p_context_code;
  EXCEPTION WHEN OTHERS THEN
    x_attribute_group_id := -1;
  END;
END;                              
-- +===================================================================+
-- | Name        : log_debug_msg                                       |
-- | Description :                                                     |
-- |                                                                   |
-- | Parameters  :  p_debug_msg                                        |
-- |                                                                   |
-- +===================================================================+
PROCEDURE log_debug_msg(
                        p_debug_msg IN VARCHAR2
                       )
AS
BEGIN
    XX_CDH_CONV_MASTER_PKG.write_conc_log_message(p_debug_msg);
END log_debug_msg;

-- +===================================================================+
-- | Name        :  conv_master_main                                   |
-- | Description :  This procedure submits Child programs              |
-- |                based on batch_ids generated by ETL/FileLoad       |
-- |                                                                   |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+
PROCEDURE aops_deletes_main
      (  x_errbuf              OUT VARCHAR2,
         x_retcode             OUT VARCHAR2,
         p_batch_id_from       IN  NUMBER,
         p_batch_id_to         IN  NUMBER,
         p_submit_deletes      IN  VARCHAR2,
         p_process_accounts    IN  VARCHAR2,
         p_process_addresses   IN  VARCHAR2,
         p_process_contacts    IN  VARCHAR2,
         p_process_phones      IN  VARCHAR2,
         p_process_emails      IN  VARCHAR2,
         p_process_spc         IN  VARCHAR2         
      )
IS
CURSOR C_BATCHES IS
     SELECT batch_id
     FROM   hz_imp_batch_summary bs,
            fnd_user us,
            ar_lookups al
     WHERE  bs.created_by      = us.user_id (+)
     AND    bs.original_system = al.lookup_code (+)
     AND    al.lookup_type (+) = 'ORIG_SYSTEM'
     AND    (NVL(bs.batch_status,'X') NOT IN ('REJECTED','PURGED','COMPLETED','X') OR NVL(bs.batch_status,'X') = 'ACTIVE')
     AND    NVL(bs.main_conc_status,'X') <> 'PROCESSING'
     AND    bs.original_system = 'CSV' -- All file loads are CSV
     and    nvl(bs.batch_id, 0) between nvl(p_batch_id_from, 0) and nvl(p_batch_id_to, 0);

lt_conc_request_id     NUMBER;
ln_no_of_workers       NUMBER;
lv_request_data        VARCHAR2(100);
le_skip_procedure      EXCEPTION;

BEGIN
   
   IF p_submit_deletes = 'N' THEN
      RAISE le_skip_procedure;
   END IF;   
   
   ln_no_of_workers := fnd_profile.value('XX_CDH_CONV_WORKERS');
   
   lv_request_data := fnd_conc_global.request_data;
   
   IF lv_request_data IS NULL THEN
      
      FOR i IN C_BATCHES
      LOOP
        for worker in 1..ln_no_of_workers
        LOOP
             lt_conc_request_id := FND_REQUEST.submit_request 
                                       (   application => 'XXCNV',
                                           program     => 'XX_CDH_AOPS_DELETE_WORKER',
                                           description => i.batch_id || '-' || worker,
                                           start_time  => NULL,
                                           sub_request => TRUE, 
                                           argument1   => i.batch_id,
                                           argument2   => worker,
                                           argument3   => p_process_accounts,
                                           argument4   => p_process_addresses,
                                           argument5   => p_process_contacts,
                                           argument6   => p_process_phones,
                                           argument7   => p_process_emails,
                                           argument8   => p_process_spc
                                       );
           IF lt_conc_request_id = 0 THEN
              x_errbuf  := fnd_message.get;
              x_retcode := 2;
              fnd_file.put_line (fnd_file.log, 'AOPS Deletes Master (Batch: ' || i.batch_id || ') ' ||worker||' Program failed to submit: ' || x_errbuf);
              x_errbuf  := 'AOPS Deletes Master  (Batch: ' || i.batch_id || ') ' ||worker||' Program failed to submit: ' || x_errbuf;
           ELSE
              fnd_file.put_line (fnd_file.log, ' ');
              fnd_file.put_line (fnd_file.log, 'AOPS Deletes Master  (Batch: ' || i.batch_id || ') ' ||worker||' Program submitted with request id: '|| TO_CHAR( lt_conc_request_id ));
              COMMIT;
           END IF;
        END LOOP; -- Loop for workers
      END LOOP; -- Loop for batches
   
      fnd_conc_global.set_req_globals 
            (  conc_status  => 'PAUSED',
               request_data => TO_CHAR( ln_no_of_workers )
            );
   END IF;
   
   IF lv_request_data IS NOT NULL THEN --Restart of the main / parent request
      fnd_file.put_line(fnd_file.log, 'ReStart of CDH AOPS Deletes Master Program');
   END IF;

EXCEPTION
   WHEN le_skip_procedure THEN
      x_retcode := 0;
      fnd_file.put_line (fnd_file.log,'Processing was skipped!!');
   WHEN OTHERS THEN
      log_debug_msg( 'Unexpected Error in procedure aops_deletes_main - '||SQLERRM);
      x_retcode := 2;
      x_errbuf  := 'Unexpected Error in procedure aops_deletes_main - '||SQLERRM;
END aops_deletes_main;

-- +====================================================================+
-- | Name        : log_exception                                        |
-- | Description : This procedure is used for logging exceptions into   |
-- |               conversion common elements tables.                   |
-- |                                                                    |
-- | Parameters  : p_conversion_id,p_record_control_id,p_procedure_name |
-- |               p_batch_id,p_exception_log,p_oracle_error_msg        |
-- +====================================================================+
PROCEDURE log_exception
    (
         p_record_control_id      IN NUMBER
        ,p_source_system_code     IN VARCHAR2
        ,p_source_system_ref      IN VARCHAR2
        ,p_procedure_name         IN VARCHAR2
        ,p_staging_table_name     IN VARCHAR2
        ,p_staging_column_name    IN VARCHAR2
        ,p_staging_column_value   IN VARCHAR2
        ,p_batch_id               IN NUMBER
        ,p_exception_log          IN VARCHAR2
        ,p_oracle_error_code      IN VARCHAR2
        ,p_oracle_error_msg       IN VARCHAR2
    )

AS

lc_package_name           VARCHAR2(32)  := 'XX_CDH_CONV_AOPS_DELETES_PKG';
ln_conversion_id          NUMBER        := 00240.9;

BEGIN
    XX_COM_CONV_ELEMENTS_PKG.log_exceptions_proc
        (
          p_conversion_id          => ln_conversion_id
         ,p_record_control_id      => p_record_control_id
         ,p_source_system_code     => p_source_system_code
         ,p_package_name           => lc_package_name
         ,p_procedure_name         => p_procedure_name
         ,p_staging_table_name     => p_staging_table_name
         ,p_staging_column_name    => p_staging_column_name
         ,p_staging_column_value   => p_staging_column_value
         ,p_source_system_ref      => p_source_system_ref
         ,p_batch_id               => p_batch_id
         ,p_exception_log          => p_exception_log
         ,p_oracle_error_code      => p_oracle_error_code
         ,p_oracle_error_msg       => p_oracle_error_msg
        );
EXCEPTION
WHEN OTHERS THEN
    log_debug_msg('LOG_EXCEPTION: Error in logging exception :'||SQLERRM);

 END log_exception;

-- +===================================================================+
-- | Name        :  delete_accounts                                    |
-- | Description :  This procedure is used to inactivate the accounts  |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+

PROCEDURE delete_accounts(
                          p_aops_entity_osr   IN VARCHAR2
                          , p_record_id       IN VARCHAR2
                          , x_return_status   OUT VARCHAR2
                         )
IS
lc_procedure_name           VARCHAR2(1000) := 'DELETE_ACCOUNTS';
cust_account_rec_type       HZ_CUST_ACCOUNT_V2PUB.CUST_ACCOUNT_REC_TYPE;
ln_cust_account_id          NUMBER; 
lc_staging_column_name      VARCHAR2(32);
lc_staging_column_value     VARCHAR2(500);
lc_exception_log            VARCHAR2(2000);
lc_oracle_error_msg         VARCHAR2(2000);
ln_retcode                  VARCHAR2(50);
ln_errbuf                   VARCHAR2(2000);
ln_object_version_number    NUMBER;
lc_return_status            VARCHAR(1);
ln_msg_count                NUMBER;
lc_msg_data                 VARCHAR2(4000);
l_msg_text                  VARCHAR2(4200);

BEGIN

     x_return_status := 'S';
     
     XX_CDH_CONV_MASTER_PKG.get_osr_owner_table_id
            (
             p_orig_system          => 'A0'
             , p_orig_sys_reference => p_aops_entity_osr
             , p_owner_table_name   => 'HZ_CUST_ACCOUNTS'
             , x_owner_table_id     => ln_cust_account_id
             , x_retcode            => ln_retcode
             , x_errbuf             => ln_errbuf
             );
     
     IF ln_cust_account_id IS NULL THEN
        log_debug_msg(lc_procedure_name||': account_id is not found');
        lc_staging_column_name                  := 'organization_name';
        lc_staging_column_value                 := p_aops_entity_osr;
        lc_exception_log                        := 'cust_account_id is not found';
        lc_oracle_error_msg                     := 'cust_account_id is not found';
        log_exception
                    (
                      p_record_control_id    => p_record_id
                     ,p_source_system_code   => 'A0'
                     ,p_source_system_ref    => p_aops_entity_osr
                     ,p_procedure_name       => lc_procedure_name
                     ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                     ,p_staging_column_name  => lc_staging_column_name
                     ,p_staging_column_value => lc_staging_column_value
                     ,p_batch_id             => gn_batch_id
                     ,p_exception_log        => lc_exception_log
                     ,p_oracle_error_code    => SQLCODE
                     ,p_oracle_error_msg     => lc_oracle_error_msg
                    );
        x_return_status := 'E';
        
     ELSE
         
         BEGIN
         
              ln_object_version_number := NULL;
         
              SELECT object_version_number
              INTO   ln_object_version_number
              FROM   hz_cust_accounts
              WHERE  cust_account_id =  ln_cust_account_id;
         
         EXCEPTION
            WHEN OTHERS THEN
                log_debug_msg(lc_procedure_name||': Error while fetching object_version_number for cust_account_id - '||ln_cust_account_id);
                log_debug_msg(lc_procedure_name||': Error - '||SQLERRM);
                lc_staging_column_name                  := 'account_orig_system_reference';
                lc_staging_column_value                 := p_aops_entity_osr;
                lc_exception_log                        := 'Error while fetching object_version_number for cust_account_id - '||ln_cust_account_id;
                lc_oracle_error_msg                     := 'Error while fetching object_version_number for cust_account_id - '||ln_cust_account_id;
                log_exception
                         (
                             p_record_control_id    => p_record_id
                            ,p_source_system_code   => 'A0'
                            ,p_source_system_ref    => p_aops_entity_osr
                            ,p_procedure_name       => lc_procedure_name
                            ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                            ,p_staging_column_name  => lc_staging_column_name
                            ,p_staging_column_value => lc_staging_column_value
                            ,p_batch_id             => gn_batch_id
                            ,p_exception_log        => lc_exception_log
                            ,p_oracle_error_code    => SQLCODE
                            ,p_oracle_error_msg     => lc_oracle_error_msg
                     );
               x_return_status := 'E';      
         END;
         
         IF x_return_status <> 'E' THEN
            
            cust_account_rec_type.cust_account_id           := ln_cust_account_id;
            cust_account_rec_type.status                    := 'I';
            
            HZ_CUST_ACCOUNT_V2PUB.update_cust_account
            (
             p_init_msg_list          => FND_API.G_TRUE,
             p_cust_account_rec       => cust_account_rec_type,
             p_object_version_number  => ln_object_version_number,
             x_return_status          => lc_return_status,
             x_msg_count              => ln_msg_count,
             x_msg_data               => lc_msg_data
            );
            
            log_debug_msg(CHR(10)||'=====================================');
            log_debug_msg('After calling update_cust_account API');
            log_debug_msg('======================================');
            log_debug_msg('ln_object_version_number = '||ln_object_version_number);
            log_debug_msg('x_acct_return_status = '||lc_return_status);
            
            IF(lc_return_status = 'S') THEN
               log_debug_msg(CHR(10)||'Customer Account is successfully updated !!!');
            ELSE
                log_debug_msg(CHR(10)||'Customer Account is not updated !!!');
                IF ln_msg_count >= 1 THEN
                   log_debug_msg(CHR(10)||lc_procedure_name||': Errors in updating Customer Account');
                   log_debug_msg('------------------------------------------------------------');
                   FOR I IN 1..ln_msg_count
                   LOOP
                       l_msg_text := l_msg_text||' '||FND_MSG_PUB.Get(I, FND_API.G_FALSE);
                       Log_Debug_Msg('Error - '|| FND_MSG_PUB.Get(I, FND_API.G_FALSE));
                   END LOOP;
                   log_debug_msg('------------------------------------------------------------'||CHR(10));
                END IF;
                
                log_exception
                            (
                                p_record_control_id     => p_record_id
                               ,p_source_system_code    => 'A0'
                               ,p_source_system_ref     => p_aops_entity_osr
                               ,p_procedure_name        => lc_procedure_name
                               ,p_staging_table_name    => 'HZ_IMP_PARTIES_INT'
                               ,p_staging_column_name   => 'RECORD_ID'
                               ,p_staging_column_value  => p_record_id
                               ,p_batch_id              => gn_batch_id
                               ,p_exception_log         => XX_CDH_CONV_MASTER_PKG.trim_input_msg(l_msg_text)
                               ,p_oracle_error_code     => SQLCODE
                               ,p_oracle_error_msg      => lc_oracle_error_msg
                        );
                        
                x_return_status := 'E';        
            END IF;
            
         END IF;
            
     END IF;
                                 
END delete_accounts;

-- +===================================================================+
-- | Name        :  delete_account_sites                               |
-- | Description :  This procedure is used to inactivate the accounts  |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+

PROCEDURE delete_account_sites(
                               p_aops_entity_osr   IN VARCHAR2
                               , p_record_id       IN VARCHAR2
                               , x_return_status   OUT VARCHAR2
                              )
IS
lc_procedure_name           VARCHAR2(1000) := 'DELETE_ACCOUNT_SITES';
cust_acct_site_rec_type     HZ_CUST_ACCOUNT_SITE_V2PUB.CUST_ACCT_SITE_REC_TYPE;
ln_cust_account_site_id     NUMBER; 
lc_staging_column_name      VARCHAR2(32);
lc_staging_column_value     VARCHAR2(500);
lc_exception_log            VARCHAR2(2000);
lc_oracle_error_msg         VARCHAR2(2000);
ln_retcode                  VARCHAR2(50);
ln_errbuf                   VARCHAR2(2000);
ln_object_version_number    NUMBER;
lc_return_status            VARCHAR(1);
ln_msg_count                NUMBER;
lc_msg_data                 VARCHAR2(4000);
l_msg_text                  VARCHAR2(4200);

BEGIN

     x_return_status := 'S';
     
     XX_CDH_CONV_MASTER_PKG.get_osr_owner_table_id
            (
             p_orig_system          => 'A0'
             , p_orig_sys_reference => p_aops_entity_osr
             , p_owner_table_name   => 'HZ_CUST_ACCT_SITES_ALL'
             , x_owner_table_id     => ln_cust_account_site_id
             , x_retcode            => ln_retcode
             , x_errbuf             => ln_errbuf
             );
     
     IF ln_cust_account_site_id IS NULL THEN
        log_debug_msg(lc_procedure_name||': account_site_id is not found');
        lc_staging_column_name                  := 'organization_name';
        lc_staging_column_value                 := p_aops_entity_osr;
        lc_exception_log                        := 'cust_account_site_id is not found';
        lc_oracle_error_msg                     := 'cust_account_site_id is not found';
        log_exception
                    (
                      p_record_control_id    => p_record_id
                     ,p_source_system_code   => 'A0'
                     ,p_source_system_ref    => p_aops_entity_osr
                     ,p_procedure_name       => lc_procedure_name
                     ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                     ,p_staging_column_name  => lc_staging_column_name
                     ,p_staging_column_value => lc_staging_column_value
                     ,p_batch_id             => gn_batch_id
                     ,p_exception_log        => lc_exception_log
                     ,p_oracle_error_code    => SQLCODE
                     ,p_oracle_error_msg     => lc_oracle_error_msg
                    );
        x_return_status := 'E';
        
     ELSE
         
         BEGIN
         
              ln_object_version_number := NULL;
         
              SELECT object_version_number
              INTO   ln_object_version_number
              FROM   hz_cust_acct_sites
              WHERE  cust_acct_site_id =  ln_cust_account_site_id;
         
         EXCEPTION
            WHEN OTHERS THEN
                log_debug_msg(lc_procedure_name||': Error while fetching object_version_number for cust_acct_site_id - '||ln_cust_account_site_id || ' in OU: ' || fnd_global.org_id);
                log_debug_msg(lc_procedure_name||': Error - '||SQLERRM);
                lc_staging_column_name                  := 'account_site_orig_system_reference';
                lc_staging_column_value                 := p_aops_entity_osr;
                lc_exception_log                        := 'Error while fetching object_version_number for cust_acct_site_id - '||ln_cust_account_site_id;
                lc_oracle_error_msg                     := 'Error while fetching object_version_number for cust_acct_site_id - '||ln_cust_account_site_id;
                log_exception
                         (
                             p_record_control_id    => p_record_id
                            ,p_source_system_code   => 'A0'
                            ,p_source_system_ref    => p_aops_entity_osr
                            ,p_procedure_name       => lc_procedure_name
                            ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                            ,p_staging_column_name  => lc_staging_column_name
                            ,p_staging_column_value => lc_staging_column_value
                            ,p_batch_id             => gn_batch_id
                            ,p_exception_log        => lc_exception_log
                            ,p_oracle_error_code    => SQLCODE
                            ,p_oracle_error_msg     => lc_oracle_error_msg
                     );
               x_return_status := 'E';      
         END;
         
         IF x_return_status <> 'E' THEN
            
            cust_acct_site_rec_type.cust_acct_site_id         := ln_cust_account_site_id;
            cust_acct_site_rec_type.status                    := 'I';
            
            HZ_CUST_ACCOUNT_SITE_V2PUB.update_cust_acct_site
            (
             p_init_msg_list             => FND_API.G_TRUE,
             p_cust_acct_site_rec        => cust_acct_site_rec_type,
             p_object_version_number     => ln_object_version_number,
             x_return_status             => lc_return_status,
             x_msg_count                 => ln_msg_count,
             x_msg_data                  => lc_msg_data
            );
            
            log_debug_msg(CHR(10)||'=====================================');
            log_debug_msg('After calling update_cust_account_site API');
            log_debug_msg('======================================');
            log_debug_msg('ln_object_version_number = '||ln_object_version_number);
            log_debug_msg('x_acct_return_status = '||lc_return_status);
            
            IF(lc_return_status = 'S') THEN
               log_debug_msg(CHR(10)||'Customer Account Site is successfully updated !!!');
            ELSE
                log_debug_msg(CHR(10)||'Customer Account Site is not updated !!!');
                IF ln_msg_count >= 1 THEN
                   log_debug_msg(CHR(10)||lc_procedure_name||': Errors in updating Customer Account Site');
                   log_debug_msg('------------------------------------------------------------');
                   FOR I IN 1..ln_msg_count
                   LOOP
                       l_msg_text := l_msg_text||' '||FND_MSG_PUB.Get(I, FND_API.G_FALSE);
                       Log_Debug_Msg('Error - '|| FND_MSG_PUB.Get(I, FND_API.G_FALSE));
                   END LOOP;
                   log_debug_msg('------------------------------------------------------------'||CHR(10));
                END IF;
                
                log_exception
                            (
                                p_record_control_id     => p_record_id
                               ,p_source_system_code    => 'A0'
                               ,p_source_system_ref     => p_aops_entity_osr
                               ,p_procedure_name        => lc_procedure_name
                               ,p_staging_table_name    => 'HZ_IMP_PARTIES_INT'
                               ,p_staging_column_name   => 'RECORD_ID'
                               ,p_staging_column_value  => p_record_id
                               ,p_batch_id              => gn_batch_id
                               ,p_exception_log         => XX_CDH_CONV_MASTER_PKG.trim_input_msg(l_msg_text)
                               ,p_oracle_error_code     => SQLCODE
                               ,p_oracle_error_msg      => lc_oracle_error_msg
                        );
                        
                x_return_status := 'E';        
            END IF;
            
         END IF;
            
     END IF;
                                 
END delete_account_sites;

-- +===================================================================+
-- | Name        :  delete_account_contacts                            |
-- | Description :  This procedure is used to inactivate the account   |
-- |                contact                                            |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+

PROCEDURE delete_account_contacts(
                                  p_aops_entity_osr   IN VARCHAR2
                                  , p_record_id       IN VARCHAR2
                                  , x_return_status   OUT VARCHAR2
                                 )
IS
lc_procedure_name           VARCHAR2(1000) := 'DELETE_ACCOUNT_CONTACTS';
l_cust_acct_role_rec        HZ_CUST_ACCOUNT_ROLE_V2PUB.cust_account_role_rec_type;
l_df_cust_acct_role_rec     HZ_CUST_ACCOUNT_ROLE_V2PUB.cust_account_role_rec_type;
ln_cust_account_role_id     NUMBER; 
lc_staging_column_name      VARCHAR2(32);
lc_staging_column_value     VARCHAR2(500);
lc_exception_log            VARCHAR2(2000);
lc_oracle_error_msg         VARCHAR2(2000);
ln_retcode                  VARCHAR2(50);
ln_errbuf                   VARCHAR2(2000);
ln_object_version_number    NUMBER;
lc_return_status            VARCHAR(1);
ln_msg_count                NUMBER;
lc_msg_data                 VARCHAR2(4000);
l_msg_text                  VARCHAR2(4200);

BEGIN

     x_return_status := 'S';
     
     XX_CDH_CONV_MASTER_PKG.get_osr_owner_table_id
            (
             p_orig_system          => 'A0'
             , p_orig_sys_reference => p_aops_entity_osr
             , p_owner_table_name   => 'HZ_CUST_ACCOUNT_ROLES'
             , x_owner_table_id     => ln_cust_account_role_id
             , x_retcode            => ln_retcode
             , x_errbuf             => ln_errbuf
             );
     
     IF ln_cust_account_role_id IS NULL THEN
        log_debug_msg(lc_procedure_name||': cust_account_role_id is not found');
        lc_staging_column_name                  := 'organization_name';
        lc_staging_column_value                 := p_aops_entity_osr;
        lc_exception_log                        := 'cust_account_role_id is not found';
        lc_oracle_error_msg                     := 'cust_account_role_id is not found';
        log_exception
                    (
                      p_record_control_id    => p_record_id
                     ,p_source_system_code   => 'A0'
                     ,p_source_system_ref    => p_aops_entity_osr
                     ,p_procedure_name       => lc_procedure_name
                     ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                     ,p_staging_column_name  => lc_staging_column_name
                     ,p_staging_column_value => lc_staging_column_value
                     ,p_batch_id             => gn_batch_id
                     ,p_exception_log        => lc_exception_log
                     ,p_oracle_error_code    => SQLCODE
                     ,p_oracle_error_msg     => lc_oracle_error_msg
                    );
        x_return_status := 'E';
        
     ELSE
         
         BEGIN
         
              ln_object_version_number := NULL;
         
              SELECT object_version_number
              INTO   ln_object_version_number
              FROM   hz_cust_account_roles
              WHERE  cust_account_role_id =  ln_cust_account_role_id;
         
         EXCEPTION
            WHEN OTHERS THEN
                log_debug_msg(lc_procedure_name||': Error while fetching object_version_number for cust_account_role_id - '||ln_cust_account_role_id);
                log_debug_msg(lc_procedure_name||': Error - '||SQLERRM);
                lc_staging_column_name                  := 'organization_name';
                lc_staging_column_value                 := p_aops_entity_osr;
                lc_exception_log                        := 'Error while fetching object_version_number for cust_account_role_id - '||ln_cust_account_role_id;
                lc_oracle_error_msg                     := 'Error while fetching object_version_number for cust_account_role_id - '||ln_cust_account_role_id;
                log_exception
                         (
                             p_record_control_id    => p_record_id
                            ,p_source_system_code   => 'A0'
                            ,p_source_system_ref    => p_aops_entity_osr
                            ,p_procedure_name       => lc_procedure_name
                            ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                            ,p_staging_column_name  => lc_staging_column_name
                            ,p_staging_column_value => lc_staging_column_value
                            ,p_batch_id             => gn_batch_id
                            ,p_exception_log        => lc_exception_log
                            ,p_oracle_error_code    => SQLCODE
                            ,p_oracle_error_msg     => lc_oracle_error_msg
                     );
               x_return_status := 'E';      
         END;
         
         IF x_return_status <> 'E' THEN
            
            l_cust_acct_role_rec                       := l_df_cust_acct_role_rec;
            l_cust_acct_role_rec.cust_account_role_id  := ln_cust_account_role_id;
            l_cust_acct_role_rec.status                := 'I';
            
            HZ_CUST_ACCOUNT_ROLE_V2PUB.update_cust_account_role 
            (
             p_init_msg_list             => FND_API.G_TRUE,
             p_cust_account_role_rec     => l_cust_acct_role_rec,
             p_object_version_number     => ln_object_version_number,
             x_return_status             => lc_return_status,
             x_msg_count                 => ln_msg_count,
             x_msg_data                  => lc_msg_data
            );
            
            log_debug_msg(CHR(10)||'=====================================');
            log_debug_msg('After calling update_cust_account_role API');
            log_debug_msg('======================================');
            log_debug_msg('ln_object_version_number = '||ln_object_version_number);
            log_debug_msg('x_acct_role_return_status = '||lc_return_status);
            
            IF(lc_return_status = 'S') THEN
               log_debug_msg(CHR(10)||'Customer Account Contact is successfully updated !!!');
            ELSE
                log_debug_msg(CHR(10)||'Customer Account Contact is not updated !!!');
                IF ln_msg_count >= 1 THEN
                   log_debug_msg(CHR(10)||lc_procedure_name||': Errors in updating Customer Account Contact');
                   log_debug_msg('------------------------------------------------------------');
                   FOR I IN 1..ln_msg_count
                   LOOP
                       l_msg_text := l_msg_text||' '||FND_MSG_PUB.Get(I, FND_API.G_FALSE);
                       Log_Debug_Msg('Error - '|| FND_MSG_PUB.Get(I, FND_API.G_FALSE));
                   END LOOP;
                   log_debug_msg('------------------------------------------------------------'||CHR(10));
                END IF;
                
                log_exception
                            (
                                p_record_control_id     => p_record_id
                               ,p_source_system_code    => 'A0'
                               ,p_source_system_ref     => p_aops_entity_osr
                               ,p_procedure_name        => lc_procedure_name
                               ,p_staging_table_name    => 'HZ_IMP_PARTIES_INT'
                               ,p_staging_column_name   => 'RECORD_ID'
                               ,p_staging_column_value  => p_record_id
                               ,p_batch_id              => gn_batch_id
                               ,p_exception_log         => XX_CDH_CONV_MASTER_PKG.trim_input_msg(l_msg_text)
                               ,p_oracle_error_code     => SQLCODE
                               ,p_oracle_error_msg      => lc_oracle_error_msg
                        );
                        
                x_return_status := 'E';        
            END IF;
            
         END IF;
            
     END IF;
                                 
END delete_account_contacts;

-- +===================================================================+
-- | Name        :  delete_acct_cnt_pnt_phone                          |
-- | Description :  This procedure is used to inactivate the accounts  |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+

PROCEDURE delete_acct_cnt_pnt_phone(
                                    p_aops_entity_osr   IN VARCHAR2
                                    , p_record_id       IN VARCHAR2
                                    , x_return_status   OUT VARCHAR2
                                   )
IS
lc_procedure_name           VARCHAR2(1000) := 'DELETE_ACCT_CNT_PNT_PHONE';
l_contact_point_rec         HZ_CONTACT_POINT_V2PUB.contact_point_rec_type;
l_edi_rec                   HZ_CONTACT_POINT_V2PUB.edi_rec_type;
l_eft_rec                   HZ_CONTACT_POINT_V2PUB.eft_rec_type;
l_email_rec                 HZ_CONTACT_POINT_V2PUB.email_rec_type;
l_phone_rec                 HZ_CONTACT_POINT_V2PUB.phone_rec_type;
l_telex_rec                 HZ_CONTACT_POINT_V2PUB.telex_rec_type;
l_web_rec                   HZ_CONTACT_POINT_V2PUB.web_rec_type;
l_df_contact_point_rec      HZ_CONTACT_POINT_V2PUB.contact_point_rec_type;
ln_contact_point_id         NUMBER; 
lc_staging_column_name      VARCHAR2(32);
lc_staging_column_value     VARCHAR2(500);
lc_exception_log            VARCHAR2(2000);
lc_oracle_error_msg         VARCHAR2(2000);
ln_retcode                  VARCHAR2(50);
ln_errbuf                   VARCHAR2(2000);
ln_object_version_number    NUMBER;
lc_return_status            VARCHAR(1);
ln_msg_count                NUMBER;
lc_msg_data                 VARCHAR2(4000);
l_msg_text                  VARCHAR2(4200);

BEGIN

     x_return_status := 'S';
     
     XX_CDH_CONV_MASTER_PKG.get_osr_owner_table_id
            (
             p_orig_system          => 'A0'
             , p_orig_sys_reference => p_aops_entity_osr
             , p_owner_table_name   => 'HZ_CONTACT_POINTS'               
             , x_owner_table_id     => ln_contact_point_id
             , x_retcode            => ln_retcode
             , x_errbuf             => ln_errbuf
             );
     
     IF ln_contact_point_id IS NULL THEN
        log_debug_msg(lc_procedure_name||': ln_contact_point_id is not found');
        lc_staging_column_name                  := 'organization_name';
        lc_staging_column_value                 := p_aops_entity_osr;
        lc_exception_log                        := 'contact_point_id is not found';
        lc_oracle_error_msg                     := 'contact_point_id is not found';
        log_exception
                    (
                      p_record_control_id    => p_record_id
                     ,p_source_system_code   => 'A0'
                     ,p_source_system_ref    => p_aops_entity_osr
                     ,p_procedure_name       => lc_procedure_name
                     ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                     ,p_staging_column_name  => lc_staging_column_name
                     ,p_staging_column_value => lc_staging_column_value
                     ,p_batch_id             => gn_batch_id
                     ,p_exception_log        => lc_exception_log
                     ,p_oracle_error_code    => SQLCODE
                     ,p_oracle_error_msg     => lc_oracle_error_msg
                    );
        x_return_status := 'E';
        
     ELSE
         
         BEGIN
         
              ln_object_version_number := NULL;
         
              SELECT object_version_number
              INTO   ln_object_version_number
              FROM   hz_contact_points
              WHERE  contact_point_id =  ln_contact_point_id;
         
         EXCEPTION
            WHEN OTHERS THEN
                log_debug_msg(lc_procedure_name||': Error while fetching object_version_number for contact_point_id - '||ln_contact_point_id);
                log_debug_msg(lc_procedure_name||': Error - '||SQLERRM);
                lc_staging_column_name                  := 'organization_name';
                lc_staging_column_value                 := p_aops_entity_osr;
                lc_exception_log                        := 'Error while fetching object_version_number for contact_point_id - '||ln_contact_point_id;
                lc_oracle_error_msg                     := 'Error while fetching object_version_number for contact_point_id - '||ln_contact_point_id;
                log_exception
                         (
                             p_record_control_id    => p_record_id
                            ,p_source_system_code   => 'A0'
                            ,p_source_system_ref    => p_aops_entity_osr
                            ,p_procedure_name       => lc_procedure_name
                            ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                            ,p_staging_column_name  => lc_staging_column_name
                            ,p_staging_column_value => lc_staging_column_value
                            ,p_batch_id             => gn_batch_id
                            ,p_exception_log        => lc_exception_log
                            ,p_oracle_error_code    => SQLCODE
                            ,p_oracle_error_msg     => lc_oracle_error_msg
                     );
               x_return_status := 'E';      
         END;
         
         IF x_return_status <> 'E' THEN
            
            l_contact_point_rec                       := l_df_contact_point_rec;
            l_contact_point_rec.contact_point_id      := ln_contact_point_id;
            l_contact_point_rec.status                := 'I';
            
            HZ_CONTACT_POINT_V2PUB.update_contact_point
            (  p_init_msg_list          => FND_API.G_TRUE,
               p_contact_point_rec      => l_contact_point_rec,
               p_edi_rec                => l_edi_rec,
               p_email_rec              => l_email_rec,
               p_phone_rec              => l_phone_rec,
               p_telex_rec              => l_telex_rec,
               p_web_rec                => l_web_rec,
               p_object_version_number  => ln_object_version_number,
               x_return_status          => lc_return_status,
               x_msg_count              => ln_msg_count,
               x_msg_data               => lc_msg_data
            );
                                    
            log_debug_msg(CHR(10)||'=====================================');
            log_debug_msg('After calling update_contact_point API');
            log_debug_msg('======================================');
            log_debug_msg('ln_object_version_number = '||ln_object_version_number);
            log_debug_msg('x_acct_contact_return_status = '||lc_return_status);
            
            IF(lc_return_status = 'S') THEN
               log_debug_msg(CHR(10)||'Customer Account Contact Point is successfully updated !!!');
            ELSE
                log_debug_msg(CHR(10)||'Customer Account Contact Point is not updated !!!');
                IF ln_msg_count >= 1 THEN
                   log_debug_msg(CHR(10)||lc_procedure_name||': Errors in updating Customer Account Contact Point');
                   log_debug_msg('------------------------------------------------------------');
                   FOR I IN 1..ln_msg_count
                   LOOP
                       l_msg_text := l_msg_text||' '||FND_MSG_PUB.Get(I, FND_API.G_FALSE);
                       Log_Debug_Msg('Error - '|| FND_MSG_PUB.Get(I, FND_API.G_FALSE));
                   END LOOP;
                   log_debug_msg('------------------------------------------------------------'||CHR(10));
                END IF;
                
                log_exception
                            (
                                p_record_control_id     => p_record_id
                               ,p_source_system_code    => 'A0'
                               ,p_source_system_ref     => p_aops_entity_osr
                               ,p_procedure_name        => lc_procedure_name
                               ,p_staging_table_name    => 'HZ_IMP_PARTIES_INT'
                               ,p_staging_column_name   => 'RECORD_ID'
                               ,p_staging_column_value  => p_record_id
                               ,p_batch_id              => gn_batch_id
                               ,p_exception_log         => XX_CDH_CONV_MASTER_PKG.trim_input_msg(l_msg_text)
                               ,p_oracle_error_code     => SQLCODE
                               ,p_oracle_error_msg      => lc_oracle_error_msg
                        );
                        
                x_return_status := 'E';        
            END IF;
            
         END IF;
            
     END IF;
                                 
END delete_acct_cnt_pnt_phone;

-- +===================================================================+
-- | Name        :  delete_acct_cnt_pnt_email                          |
-- | Description :  This procedure is used to inactivate the accounts  |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+

PROCEDURE delete_acct_cnt_pnt_email(
                                    p_aops_entity_osr   IN VARCHAR2
                                    , p_record_id       IN VARCHAR2
                                    , x_return_status   OUT VARCHAR2
                                   )
IS
lc_procedure_name           VARCHAR2(1000) := 'DELETE_ACCT_CNT_PNT_EMAIL';
l_contact_point_rec         HZ_CONTACT_POINT_V2PUB.contact_point_rec_type;
l_edi_rec                   HZ_CONTACT_POINT_V2PUB.edi_rec_type;
l_eft_rec                   HZ_CONTACT_POINT_V2PUB.eft_rec_type;
l_email_rec                 HZ_CONTACT_POINT_V2PUB.email_rec_type;
l_phone_rec                 HZ_CONTACT_POINT_V2PUB.phone_rec_type;
l_telex_rec                 HZ_CONTACT_POINT_V2PUB.telex_rec_type;
l_web_rec                   HZ_CONTACT_POINT_V2PUB.web_rec_type;
l_df_contact_point_rec      HZ_CONTACT_POINT_V2PUB.contact_point_rec_type;
ln_contact_point_id         NUMBER; 
lc_staging_column_name      VARCHAR2(32);
lc_staging_column_value     VARCHAR2(500);
lc_exception_log            VARCHAR2(2000);
lc_oracle_error_msg         VARCHAR2(2000);
ln_retcode                  VARCHAR2(50);
ln_errbuf                   VARCHAR2(2000);
ln_object_version_number    NUMBER;
lc_return_status            VARCHAR(1);
ln_msg_count                NUMBER;
lc_msg_data                 VARCHAR2(4000);
l_msg_text                  VARCHAR2(4200);

BEGIN

     x_return_status := 'S';
     
     XX_CDH_CONV_MASTER_PKG.get_osr_owner_table_id
            (
             p_orig_system          => 'A0'
             , p_orig_sys_reference => p_aops_entity_osr
             , p_owner_table_name   => 'HZ_CONTACT_POINTS'               
             , x_owner_table_id     => ln_contact_point_id
             , x_retcode            => ln_retcode
             , x_errbuf             => ln_errbuf
             );
     
     IF ln_contact_point_id IS NULL THEN
        log_debug_msg(lc_procedure_name||': ln_contact_point_id is not found');
        lc_staging_column_name                  := 'organization_name';
        lc_staging_column_value                 := p_aops_entity_osr;
        lc_exception_log                        := 'contact_point_id is not found';
        lc_oracle_error_msg                     := 'contact_point_id is not found';
        log_exception
                    (
                      p_record_control_id    => p_record_id
                     ,p_source_system_code   => 'A0'
                     ,p_source_system_ref    => p_aops_entity_osr
                     ,p_procedure_name       => lc_procedure_name
                     ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                     ,p_staging_column_name  => lc_staging_column_name
                     ,p_staging_column_value => lc_staging_column_value
                     ,p_batch_id             => gn_batch_id
                     ,p_exception_log        => lc_exception_log
                     ,p_oracle_error_code    => SQLCODE
                     ,p_oracle_error_msg     => lc_oracle_error_msg
                    );
        x_return_status := 'E';
        
     ELSE
         
         BEGIN
         
              ln_object_version_number := NULL;
         
              SELECT object_version_number
              INTO   ln_object_version_number
              FROM   hz_contact_points
              WHERE  contact_point_id =  ln_contact_point_id;
         
         EXCEPTION
            WHEN OTHERS THEN
                log_debug_msg(lc_procedure_name||': Error while fetching object_version_number for contact_point_id - '||ln_contact_point_id);
                log_debug_msg(lc_procedure_name||': Error - '||SQLERRM);
                lc_staging_column_name                  := 'organization_name';
                lc_staging_column_value                 := p_aops_entity_osr;
                lc_exception_log                        := 'Error while fetching object_version_number for contact_point_id - '||ln_contact_point_id;
                lc_oracle_error_msg                     := 'Error while fetching object_version_number for contact_point_id - '||ln_contact_point_id;
                log_exception
                         (
                             p_record_control_id    => p_record_id
                            ,p_source_system_code   => 'A0'
                            ,p_source_system_ref    => p_aops_entity_osr
                            ,p_procedure_name       => lc_procedure_name
                            ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                            ,p_staging_column_name  => lc_staging_column_name
                            ,p_staging_column_value => lc_staging_column_value
                            ,p_batch_id             => gn_batch_id
                            ,p_exception_log        => lc_exception_log
                            ,p_oracle_error_code    => SQLCODE
                            ,p_oracle_error_msg     => lc_oracle_error_msg
                     );
               x_return_status := 'E';      
         END;
         
         IF x_return_status <> 'E' THEN
            
            l_contact_point_rec                       := l_df_contact_point_rec;
            l_contact_point_rec.contact_point_id      := ln_contact_point_id;
            l_contact_point_rec.status                := 'I';
            
            HZ_CONTACT_POINT_V2PUB.update_contact_point
            (  p_init_msg_list          => FND_API.G_TRUE,
               p_contact_point_rec      => l_contact_point_rec,
               p_edi_rec                => l_edi_rec,
               p_email_rec              => l_email_rec,
               p_phone_rec              => l_phone_rec,
               p_telex_rec              => l_telex_rec,
               p_web_rec                => l_web_rec,
               p_object_version_number  => ln_object_version_number,
               x_return_status          => lc_return_status,
               x_msg_count              => ln_msg_count,
               x_msg_data               => lc_msg_data
            );
                                    
            log_debug_msg(CHR(10)||'=====================================');
            log_debug_msg('After calling update_contact_point API');
            log_debug_msg('======================================');
            log_debug_msg('ln_object_version_number = '||ln_object_version_number);
            log_debug_msg('x_acct_contact_return_status = '||lc_return_status);
            
            IF(lc_return_status = 'S') THEN
               log_debug_msg(CHR(10)||'Customer Account Contact Point is successfully updated !!!');
            ELSE
                log_debug_msg(CHR(10)||'Customer Account Contact Point is not updated !!!');
                IF ln_msg_count >= 1 THEN
                   log_debug_msg(CHR(10)||lc_procedure_name||': Errors in updating Customer Account Contact Point');
                   log_debug_msg('------------------------------------------------------------');
                   FOR I IN 1..ln_msg_count
                   LOOP
                       l_msg_text := l_msg_text||' '||FND_MSG_PUB.Get(I, FND_API.G_FALSE);
                       Log_Debug_Msg('Error - '|| FND_MSG_PUB.Get(I, FND_API.G_FALSE));
                   END LOOP;
                   log_debug_msg('------------------------------------------------------------'||CHR(10));
                END IF;
                
                log_exception
                            (
                                p_record_control_id     => p_record_id
                               ,p_source_system_code    => 'A0'
                               ,p_source_system_ref     => p_aops_entity_osr
                               ,p_procedure_name        => lc_procedure_name
                               ,p_staging_table_name    => 'HZ_IMP_PARTIES_INT'
                               ,p_staging_column_name   => 'RECORD_ID'
                               ,p_staging_column_value  => p_record_id
                               ,p_batch_id              => gn_batch_id
                               ,p_exception_log         => XX_CDH_CONV_MASTER_PKG.trim_input_msg(l_msg_text)
                               ,p_oracle_error_code     => SQLCODE
                               ,p_oracle_error_msg      => lc_oracle_error_msg
                        );
                        
                x_return_status := 'E';        
            END IF;
            
         END IF;
            
     END IF;
                                 
END delete_acct_cnt_pnt_email;

-- +===================================================================+
-- | Name        :  delete_spc                                         |
-- | Description :  This procedure is used to delete spc card records  |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+

PROCEDURE delete_spc(
              p_aops_entity_osr   IN VARCHAR2
            , p_record_id       IN VARCHAR2
            , x_return_status   OUT VARCHAR2
            )
IS
lc_procedure_name           VARCHAR2(1000) := 'DELETE_SPC';
lc_staging_column_name      VARCHAR2(32);
lc_staging_column_value     VARCHAR2(500);
lc_exception_log            VARCHAR2(2000);
lc_oracle_error_msg         VARCHAR2(2000);
ln_count                    NUMBER := 0;
ln_attribute_group_id       NUMBER := 0;
BEGIN

     x_return_status := 'S';
     
     select count(1) 
       into ln_count
     from XX_CDH_A_EXT_SPC_INFO_V
     where SPC_CARD_NUM = p_aops_entity_osr;
     log_debug_msg('Delete SPC: Found ' || ln_count || ' for SPC: ' || p_aops_entity_osr);
     
     IF (ln_count = 0) THEN
        log_debug_msg(lc_procedure_name||': SP Card is not found');
        lc_staging_column_name                  := 'organization_name';
        lc_staging_column_value                 := p_aops_entity_osr;
        lc_exception_log                        := 'SPC is not found';
        lc_oracle_error_msg                     := 'SPC is not found';
        log_exception
                    (
                      p_record_control_id    => p_record_id
                     ,p_source_system_code   => 'A0'
                     ,p_source_system_ref    => p_aops_entity_osr
                     ,p_procedure_name       => lc_procedure_name
                     ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                     ,p_staging_column_name  => lc_staging_column_name
                     ,p_staging_column_value => lc_staging_column_value
                     ,p_batch_id             => gn_batch_id
                     ,p_exception_log        => lc_exception_log
                     ,p_oracle_error_code    => SQLCODE
                     ,p_oracle_error_msg     => lc_oracle_error_msg
                    );
        x_return_status := 'E';
        
     ELSE
         BEGIN
             if (x_return_status <> 'E') then
               -- Get the attribute group id to move this record to.
               get_attr_group_id('XX_CDH_CUST_ACCOUNT', 'DELETED_SPC_INFO', ln_attribute_group_id);
               if (ln_attribute_group_id <= 0) then
                 log_debug_msg(lc_procedure_name||': Could not find extensible group DELETED_SPC_INFO for Accounts.');
                 lc_staging_column_name                  := 'organization_name';
                 lc_staging_column_value                 := p_aops_entity_osr;
                 lc_exception_log                        := 'Could not find extensible group DELETED_SPC_INFO for Account.';
                 lc_oracle_error_msg                     := 'Could not find extensible group DELETED_SPC_INFO for Account.';
                 log_exception
                                (
                                  p_record_control_id    => p_record_id
                                 ,p_source_system_code   => 'A0'
                                 ,p_source_system_ref    => p_aops_entity_osr
                                 ,p_procedure_name       => lc_procedure_name
                                 ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                 ,p_staging_column_name  => lc_staging_column_name
                                 ,p_staging_column_value => lc_staging_column_value
                                 ,p_batch_id             => gn_batch_id
                                 ,p_exception_log        => lc_exception_log
                                 ,p_oracle_error_code    => SQLCODE
                                 ,p_oracle_error_msg     => lc_oracle_error_msg
                                );
                 x_return_status := 'E';
               else
                 BEGIN
                     UPDATE XX_CDH_CUST_ACCT_EXT_B
                       set attr_group_id = ln_attribute_group_id
                     where N_EXT_ATTR1  = p_aops_entity_osr;
                 EXCePTION WHEN OTHERS THEN
                     log_debug_msg('Deleted Web Contact: ' || p_aops_entity_osr);               
                     log_debug_msg(lc_procedure_name||': Could not update attribute group id for web contact.');
                     lc_staging_column_name                  := 'organization_name';
                     lc_staging_column_value                 := p_aops_entity_osr;
                     lc_exception_log                        := 'Could not update attribute group id for web contact.';
                     lc_oracle_error_msg                     := 'Could not update attribute group id for web contact.';
                     log_exception
                                (
                                  p_record_control_id    => p_record_id
                                 ,p_source_system_code   => 'A0'
                                 ,p_source_system_ref    => p_aops_entity_osr
                                 ,p_procedure_name       => lc_procedure_name
                                 ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                 ,p_staging_column_name  => lc_staging_column_name
                                 ,p_staging_column_value => lc_staging_column_value
                                 ,p_batch_id             => gn_batch_id
                                 ,p_exception_log        => lc_exception_log
                                 ,p_oracle_error_code    => SQLCODE
                                 ,p_oracle_error_msg     => lc_oracle_error_msg
                                );
                     x_return_status := 'E';
                 END;
               end if;
             end if;
         EXCEPTION
            WHEN OTHERS THEN
                log_debug_msg(lc_procedure_name||': Error while deleting from XX_CDH_CUST_ACCT_EXT_B/TL for SPC- '|| p_aops_entity_osr);
                log_debug_msg(lc_procedure_name||': Error - '||SQLERRM);
                lc_staging_column_name                  := 'organization_name';
                lc_staging_column_value                 := p_aops_entity_osr;
                lc_exception_log                        := 'Error while deleting SPC - '||p_aops_entity_osr;
                lc_oracle_error_msg                     := 'Error while deleting SPC - '||p_aops_entity_osr;
                log_exception
                         (
                             p_record_control_id    => p_record_id
                            ,p_source_system_code   => 'A0'
                            ,p_source_system_ref    => p_aops_entity_osr
                            ,p_procedure_name       => lc_procedure_name
                            ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                            ,p_staging_column_name  => lc_staging_column_name
                            ,p_staging_column_value => lc_staging_column_value
                            ,p_batch_id             => gn_batch_id
                            ,p_exception_log        => lc_exception_log
                            ,p_oracle_error_code    => SQLCODE
                            ,p_oracle_error_msg     => lc_oracle_error_msg
                     );
               x_return_status := 'E';  
        END;
  END IF;            
END delete_spc;

-- +===================================================================+
-- | Name        :  revole_all_self_service                            |
-- | Description :  This procedure is used to revoke self service roles|
-- |                from a user at the account level                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+
procedure revoke_all_self_service(
              p_aops_contact_osr   IN VARCHAR2
            , p_record_id       IN VARCHAR2
            , x_return_status   OUT VARCHAR2
            )
IS
lc_procedure_name           VARCHAR2(1000) := 'revoke_account_self_service';
CURSOR c_role_resps_account IS
    SELECT rp.responsibility_id, rp.object_version_number 
    FROM hz_cust_account_roles rl, hz_role_responsibility rp
    WHERE rp.cust_account_role_id = rl.cust_account_role_id
    AND rp.RESPONSIBILITY_TYPE = 'SELF_SERVICE_USER'
    AND rl.orig_system_reference = p_aops_contact_osr;
ln_get_responsibility_id    NUMBER := 0;
--ln_object_version_number    NUMBER := 0;
l_role_responsibility_rec   HZ_CUST_ACCOUNT_ROLE_V2PUB.role_responsibility_rec_type;
l_records_updated           NUMBER := 0;
ln_msg_count                NUMBER;
lc_msg_data                 VARCHAR2(4000);
l_msg_text                  VARCHAR2(4200);

lc_staging_column_name      VARCHAR2(32);
lc_staging_column_value     VARCHAR2(500);
lc_exception_log            VARCHAR2(2000);
lc_oracle_error_msg         VARCHAR2(2000);
BEGIN
    x_return_status := FND_API.G_RET_STS_SUCCESS;
    for role_rec in c_role_resps_account 
    loop
        l_role_responsibility_rec.RESPONSIBILITY_TYPE   := 'REVOKED_SELF_SERVICE_ROLE';
        l_role_responsibility_rec.responsibility_id     := role_rec.responsibility_id;
        l_records_updated := l_records_updated + 1;
        
        HZ_CUST_ACCOUNT_ROLE_V2PUB.update_role_responsibility
            (  p_init_msg_list            => FND_API.G_FALSE
            ,  p_role_responsibility_rec  => l_role_responsibility_rec
            ,  p_object_version_number    => role_rec.object_version_number
            ,  x_return_status            => l_msg_text
            ,  x_msg_count                => ln_msg_count
            ,  x_msg_data                 => lc_msg_data
        );
        if (l_msg_text <> FND_API.G_RET_STS_SUCCESS) then
            log_debug_msg(lc_procedure_name||': Could not assign REVOKED_SELF_SERVICE_ROLE role.');
            lc_staging_column_name                  := 'organization_name';
            lc_staging_column_value                 := p_aops_contact_osr;
            lc_exception_log                        := 'Could not assign REVOKED_SELF_SERVICE_ROLE role. ' || lc_msg_data;
            lc_oracle_error_msg                     := 'Could not assign REVOKED_SELF_SERVICE_ROLE role. ' || lc_msg_data;
            log_exception(
                p_record_control_id    => p_record_id
                ,p_source_system_code   => 'A0'
                ,p_source_system_ref    => p_aops_contact_osr
                ,p_procedure_name       => lc_procedure_name
                ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                ,p_staging_column_name  => lc_staging_column_name
                ,p_staging_column_value => lc_staging_column_value
                ,p_batch_id             => gn_batch_id
                ,p_exception_log        => lc_exception_log
                ,p_oracle_error_code    => SQLCODE
                ,p_oracle_error_msg     => lc_oracle_error_msg
            );
            x_return_status := 'E';
        end if;
    end loop; -- for role_rec
    
    -- Check if any rows are updated.
    -- If none, then we did not find the SELF_SERVICE_ROLE for the contact
    if (l_records_updated = 0) then
        log_debug_msg(lc_procedure_name||': Web contact does not have SELF_SERVICE_USER role or contact not found');
        lc_staging_column_name                  := 'organization_name';
        lc_staging_column_value                 := p_aops_contact_osr;
        lc_exception_log                        := 'Web Contact does not have SELF_SERVICE_USER role or contact not found.';
        lc_oracle_error_msg                     := 'Web Contact does not have SELF_SERVICE_USER role or contact not found.';
        log_exception(
            p_record_control_id    => p_record_id
            ,p_source_system_code   => 'A0'
            ,p_source_system_ref    => p_aops_contact_osr
            ,p_procedure_name       => lc_procedure_name
            ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
            ,p_staging_column_name  => lc_staging_column_name
            ,p_staging_column_value => lc_staging_column_value
            ,p_batch_id             => gn_batch_id
            ,p_exception_log        => lc_exception_log
            ,p_oracle_error_code    => SQLCODE
            ,p_oracle_error_msg     => lc_oracle_error_msg
        );
        x_return_status := 'E';
    else
        -- Update the external users table
        update XX_EXTERNAL_USERS
          set status = '2'
        where contact_osr = p_aops_contact_osr;      
    end if; -- if l_records_updated
END revoke_all_self_service;
-- +===================================================================+
-- | Name        :  delete_www                                         |
-- | Description :  This procedure is used to delete web contacts      |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+

PROCEDURE delete_www(
              p_aops_entity_osr   IN VARCHAR2
            , p_record_id       IN VARCHAR2
            , x_return_status   OUT VARCHAR2
            )
IS
lc_procedure_name           VARCHAR2(1000) := 'DELETE_WWW';
lc_staging_column_name      VARCHAR2(32);
lc_staging_column_value     VARCHAR2(500);
lc_exception_log            VARCHAR2(2000);
lc_oracle_error_msg         VARCHAR2(2000);
ln_count                    NUMBER := 0;
ln_get_responsibility_id    NUMBER := 0;
ln_object_version_number    NUMBER := 0;
l_role_responsibility_rec   HZ_CUST_ACCOUNT_ROLE_V2PUB.role_responsibility_rec_type;
ln_msg_count                NUMBER;
lc_msg_data                 VARCHAR2(4000);
l_msg_text                  VARCHAR2(4200);
ln_attribute_group_id       NUMBER := -1;
lc_webcontact_party_osr     VARCHAR2(100);

BEGIN

     x_return_status := 'S';
     
     select count(1) 
       into ln_count
     from XX_CDH_AS_EXT_WEBCTS_V v, XX_EXTERNAL_USERS u
     where v.WEBCONTACTS_CONTACT_PARTY_OSR = u.CONTACT_OSR
     and u.WEBUSER_OSR = p_aops_entity_osr;
     log_debug_msg('Web Contact: Found ' || ln_count || ' for OSR: ' || p_aops_entity_osr);
     
     IF (ln_count = 0) THEN
        log_debug_msg(lc_procedure_name||': Web contact not found');
        lc_staging_column_name                  := 'organization_name';
        lc_staging_column_value                 := p_aops_entity_osr;
        lc_exception_log                        := 'Web Contact is not found' || ' for WebUser OSR: ' || p_aops_entity_osr ;
        lc_oracle_error_msg                     := 'Web Contact is not found' || ' for WebUser OSR: ' || p_aops_entity_osr;
        log_exception
                    (
                      p_record_control_id    => p_record_id
                     ,p_source_system_code   => 'A0'
                     ,p_source_system_ref    => p_aops_entity_osr
                     ,p_procedure_name       => lc_procedure_name
                     ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                     ,p_staging_column_name  => lc_staging_column_name
                     ,p_staging_column_value => lc_staging_column_value
                     ,p_batch_id             => gn_batch_id
                     ,p_exception_log        => lc_exception_log
                     ,p_oracle_error_code    => SQLCODE
                     ,p_oracle_error_msg     => lc_oracle_error_msg
                    );
        x_return_status := 'E';
        
     ELSE
         BEGIN
             -- We know there is atleast one 
             -- So get the WEBCONTACTS_CONTACT_PARTY_OSR based on XX_EXTERNAL_USERS.webuser_osr
             select v.webcontacts_contact_party_osr 
               into lc_webcontact_party_osr
             from XX_CDH_AS_EXT_WEBCTS_V v, XX_EXTERNAL_USERS u
             where v.WEBCONTACTS_CONTACT_PARTY_OSR = u.CONTACT_OSR
             and u.WEBUSER_OSR = p_aops_entity_osr
             and rownum = 1;
             
             revoke_all_self_service(
                 p_aops_contact_osr   => lc_webcontact_party_osr
                 , p_record_id         => p_record_id
                 , x_return_status     => x_return_status);
             if (x_return_status <> FND_API.G_RET_STS_SUCCESS) then
                 log_debug_msg(lc_procedure_name||': Could not assign REVOKED_SELF_SERVICE_ROLE role for webuser_osr' || p_aops_entity_osr || '(ContactOSR:' || lc_webcontact_party_osr || ')' );
                 lc_staging_column_name                  := 'organization_name';
                 lc_staging_column_value                 := p_aops_entity_osr;
                 lc_exception_log                        := 'Could not assign REVOKED_SELF_SERVICE_ROLE role. ' || lc_msg_data  || ' WebContactOSR: ' || lc_webcontact_party_osr;
                 lc_oracle_error_msg                     := 'Could not assign REVOKED_SELF_SERVICE_ROLE role. ' || lc_msg_data || ' WebContactOSR: ' || lc_webcontact_party_osr;
                 log_exception(
                     p_record_control_id    => p_record_id
                     ,p_source_system_code   => 'A0'
                     ,p_source_system_ref    => p_aops_entity_osr
                     ,p_procedure_name       => lc_procedure_name
                     ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                     ,p_staging_column_name  => lc_staging_column_name
                     ,p_staging_column_value => lc_staging_column_value
                     ,p_batch_id             => gn_batch_id
                     ,p_exception_log        => lc_exception_log
                     ,p_oracle_error_code    => SQLCODE
                     ,p_oracle_error_msg     => lc_oracle_error_msg
                  );
                  x_return_status := 'E';
             else
               -- Get the attribute group id to move this record to.
               get_attr_group_id('XX_CDH_CUST_ACCT_SITE', 'DELETED_WEBCONTACTS', ln_attribute_group_id);
               if (ln_attribute_group_id <= 0) then
                 log_debug_msg(lc_procedure_name||': Could not find extensible group DELETED_WEBCONTACTS for Account Sites.');
                 lc_staging_column_name                  := 'organization_name';
                 lc_staging_column_value                 := p_aops_entity_osr;
                 lc_exception_log                        := 'Could not find extensible group DELETED_WEBCONTACTS for Account Sites.' || ' WebContactOSR: ' || lc_webcontact_party_osr;
                 lc_oracle_error_msg                     := 'Could not find extensible group DELETED_WEBCONTACTS for Account Sites.' || ' WebContactOSR: ' || lc_webcontact_party_osr;
                 log_exception
                                (
                                  p_record_control_id    => p_record_id
                                 ,p_source_system_code   => 'A0'
                                 ,p_source_system_ref    => p_aops_entity_osr
                                 ,p_procedure_name       => lc_procedure_name
                                 ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                 ,p_staging_column_name  => lc_staging_column_name
                                 ,p_staging_column_value => lc_staging_column_value
                                 ,p_batch_id             => gn_batch_id
                                 ,p_exception_log        => lc_exception_log
                                 ,p_oracle_error_code    => SQLCODE
                                 ,p_oracle_error_msg     => lc_oracle_error_msg
                                );
                 x_return_status := 'E';
               else
                 BEGIN
                     UPDATE XX_CDH_ACCT_SITE_EXT_B
                       set attr_group_id = ln_attribute_group_id
                     where C_EXT_ATTR20 = lc_webcontact_party_osr;
                 EXCePTION WHEN OTHERS THEN
                     log_debug_msg('Deleted WebUser OSR: ' || p_aops_entity_osr  || ' WebContactOSR: ' || lc_webcontact_party_osr);               
                     log_debug_msg(lc_procedure_name||': Could not update attribute group id for web contact.');
                     lc_staging_column_name                  := 'organization_name';
                     lc_staging_column_value                 := p_aops_entity_osr;
                     lc_exception_log                        := 'Could not update attribute group id for web contact.' || ' WebContactOSR: ' || lc_webcontact_party_osr;
                     lc_oracle_error_msg                     := 'Could not update attribute group id for web contact.' || ' WebContactOSR: ' || lc_webcontact_party_osr;
                     log_exception
                                (
                                  p_record_control_id    => p_record_id
                                 ,p_source_system_code   => 'A0'
                                 ,p_source_system_ref    => p_aops_entity_osr
                                 ,p_procedure_name       => lc_procedure_name
                                 ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                 ,p_staging_column_name  => lc_staging_column_name
                                 ,p_staging_column_value => lc_staging_column_value
                                 ,p_batch_id             => gn_batch_id
                                 ,p_exception_log        => lc_exception_log
                                 ,p_oracle_error_code    => SQLCODE
                                 ,p_oracle_error_msg     => lc_oracle_error_msg
                                );
                     x_return_status := 'E';
                 END;
               end if;
             end if;
         EXCEPTION
            WHEN OTHERS THEN
                log_debug_msg(lc_procedure_name||': Error while deleting Web Contacts- '|| p_aops_entity_osr);
                log_debug_msg(lc_procedure_name||': Error - '||SQLERRM);
                lc_staging_column_name                  := 'organization_name';
                lc_staging_column_value                 := p_aops_entity_osr;
                lc_exception_log                        := 'Error while deleting SPC - '||p_aops_entity_osr;
                lc_oracle_error_msg                     := 'Error while deleting SPC - '||p_aops_entity_osr;
                log_exception
                         (
                             p_record_control_id    => p_record_id
                            ,p_source_system_code   => 'A0'
                            ,p_source_system_ref    => p_aops_entity_osr
                            ,p_procedure_name       => lc_procedure_name
                            ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                            ,p_staging_column_name  => lc_staging_column_name
                            ,p_staging_column_value => lc_staging_column_value
                            ,p_batch_id             => gn_batch_id
                            ,p_exception_log        => lc_exception_log
                            ,p_oracle_error_code    => SQLCODE
                            ,p_oracle_error_msg     => lc_oracle_error_msg
                     );
               x_return_status := 'E';      
         END;
                     
     END IF;            
END delete_www;


-- +===================================================================+
-- | Name        :  delete_wst                                         |
-- | Description :  This procedure is used to ship-to associations for |
-- |                delete web contacts                                |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+
PROCEDURE delete_wst(
              p_aops_entity_osr   IN VARCHAR2
            , p_record_id       IN VARCHAR2
            , x_return_status   OUT VARCHAR2
            )
IS
lc_procedure_name           VARCHAR2(1000) := 'DELETE_WST';
lc_staging_column_name      VARCHAR2(32);
lc_staging_column_value     VARCHAR2(500);
lc_exception_log            VARCHAR2(2000);
lc_oracle_error_msg         VARCHAR2(2000);
ln_count                    NUMBER := 0;
ln_get_responsibility_id    NUMBER := 0;
ln_object_version_number    NUMBER := 0;
l_role_responsibility_rec   HZ_CUST_ACCOUNT_ROLE_V2PUB.role_responsibility_rec_type;
ln_msg_count                NUMBER;
lc_msg_data                 VARCHAR2(4000);
l_msg_text                  VARCHAR2(4200);
ln_attribute_group_id       NUMBER := -1;
lc_aops_account_number      VARCHAR2(100);
lc_contact_osr              VARCHAR2(100);
lc_site_sequence_num        VARCHAR2(100);
ln_contact_associations_count number := 0;
LN_CUST_ACCT_SHIPTO_SITE_ID NUMBER := 0;
LC_CONTACT_BILLTO_OSR       VARCHAR2(100);
BEGIN
    -- Format of the AOPS OSR for this delete entity  is "Contact OSR"-"SiteSequence #"
    -- Ex: 00000003806030-00004
    lc_contact_osr := substr(p_aops_entity_osr, 1, instr(p_aops_entity_osr, '-') - 1);
    lc_site_sequence_num  := substr(p_aops_entity_osr, instr(p_aops_entity_osr, '-') + 1);
    log_debug_msg(lc_procedure_name||': Web contact OSR: ' || lc_contact_osr);
    log_debug_msg(lc_procedure_name||': Site Seq #: ' || lc_site_sequence_num);
     x_return_status := 'S';
     
     select count(1) 
       into ln_count
     from XX_CDH_AS_EXT_WEBCTS_V
     where WEBCONTACTS_CONTACT_PARTY_OSR = lc_contact_osr;
     
     IF (ln_count = 0) THEN
        log_debug_msg(lc_procedure_name||': Web contact not found');
        lc_staging_column_name                  := 'organization_name';
        lc_staging_column_value                 := p_aops_entity_osr;
        lc_exception_log                        := 'Web Contact is not found' || lc_contact_osr || '(For Entity' || p_aops_entity_osr || ')';
        lc_oracle_error_msg                     := 'Web Contact is not found' || lc_contact_osr || '(For Entity' || p_aops_entity_osr || ')';
        log_exception
                    (
                      p_record_control_id    => p_record_id
                     ,p_source_system_code   => 'A0'
                     ,p_source_system_ref    => p_aops_entity_osr
                     ,p_procedure_name       => lc_procedure_name
                     ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                     ,p_staging_column_name  => lc_staging_column_name
                     ,p_staging_column_value => lc_staging_column_value
                     ,p_batch_id             => gn_batch_id
                     ,p_exception_log        => lc_exception_log
                     ,p_oracle_error_code    => SQLCODE
                     ,p_oracle_error_msg     => lc_oracle_error_msg
                    );
        x_return_status := 'E';
     ELSE -- IF (ln_count = 0)
             -- This contact has more than one ship-to assigned
             -- We should only delete the WEB_CONTACTS record for the specific site
             BEGIN
                 -- Get the new attribute group for DELETED WEBCONTACT
                 get_attr_group_id('XX_CDH_CUST_ACCT_SITE', 'DELETED_WEBCONTACTS', ln_attribute_group_id);
                 if (ln_attribute_group_id <= 0) then
                     log_debug_msg(lc_procedure_name||': Could not find extensible group DELETED_WEBCONTACTS for Account Sites.');
                     lc_staging_column_name                  := 'organization_name';
                     lc_staging_column_value                 := p_aops_entity_osr;
                     lc_exception_log                        := 'Could not find extensible group DELETED_WEBCONTACTS for Account Sites.';
                     lc_oracle_error_msg                     := 'Could not find extensible group DELETED_WEBCONTACTS for Account Sites.';
                     log_exception(
                                  p_record_control_id    => p_record_id
                                 ,p_source_system_code   => 'A0'
                                 ,p_source_system_ref    => p_aops_entity_osr
                                 ,p_procedure_name       => lc_procedure_name
                                 ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                 ,p_staging_column_name  => lc_staging_column_name
                                 ,p_staging_column_value => lc_staging_column_value
                                 ,p_batch_id             => gn_batch_id
                                 ,p_exception_log        => lc_exception_log
                                 ,p_oracle_error_code    => SQLCODE
                                 ,p_oracle_error_msg     => lc_oracle_error_msg
                                );
                     x_return_status := 'E';
                 else -- attribute group id <= 0
                     -- Get the account to which this contact is associated.
                     -- We did find a record in the extensibles - so the account does exist
                     select substr(webcontacts_bill_to_osr, 1, instr(webcontacts_bill_to_osr, '-') - 1)
                       into lc_aops_account_number
                     from XX_CDH_AS_EXT_WEBCTS_V
                     where webcontacts_contact_party_osr = lc_contact_osr
                     and rownum = 1;
                     log_debug_msg(lc_procedure_name||': AOPS Account Num: ' || lc_aops_account_number);
                     
                     -- Again, there should be just one tying the contact to the ship-to
                     -- and the account site should have come from AOPS
                     begin 
                         select webcontacts_bill_to_osr, s.cust_acct_site_id
                             into lc_contact_billto_osr, ln_cust_acct_shipto_site_id
                         from XX_CDH_AS_EXT_WEBCTS_V wcv, hz_cust_acct_sites s
                         where wcv.cust_acct_site_id = s.cust_acct_site_id
                         and s.orig_system_reference = lc_aops_account_number || '-' || lc_site_sequence_num || '-A0'
                         and wcv.WEBCONTACTS_CONTACT_PARTY_OSR = lc_contact_osr
                         and rownum = 1;
                     exception when others then
                         log_debug_msg(lc_procedure_name||': Could not find WEBCONTACT ' || lc_contact_osr || ' for Account/Site: ' ||  lc_aops_account_number || '/' || lc_site_sequence_num);
                         lc_staging_column_name                  := 'organization_name';
                         lc_staging_column_value                 := p_aops_entity_osr;
                         lc_exception_log                        := 'Could not find WEBCONTACT ' || lc_contact_osr || ' for Account/Site: ' ||  lc_aops_account_number || '/' || lc_site_sequence_num;
                         lc_oracle_error_msg                     := 'Could not find WEBCONTACT ' || lc_contact_osr || ' for Account/Site: ' ||  lc_aops_account_number || '/' || lc_site_sequence_num;
                         log_exception
                                (
                                  p_record_control_id    => p_record_id
                                 ,p_source_system_code   => 'A0'
                                 ,p_source_system_ref    => p_aops_entity_osr
                                 ,p_procedure_name       => lc_procedure_name
                                 ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                 ,p_staging_column_name  => lc_staging_column_name
                                 ,p_staging_column_value => lc_staging_column_value
                                 ,p_batch_id             => gn_batch_id
                                 ,p_exception_log        => lc_exception_log
                                 ,p_oracle_error_code    => SQLCODE
                                 ,p_oracle_error_msg     => lc_oracle_error_msg
                                );
                         x_return_status := 'E';
                     end;
                     if (x_return_status <> 'E') then
                         select count(1) 
                             into ln_contact_associations_count
                         from XX_CDH_AS_EXT_WEBCTS_V wcv
                         where wcv.WEBCONTACTS_CONTACT_PARTY_OSR = lc_contact_osr
                         and   wcv.webcontacts_bill_to_osr       = lc_contact_billto_osr;
                         -- At this time, we already have atleast one association between the billto and the contact
                         -- If there is only one, then we remove the bill-to site level self-service role 
                         -- If there is more than one, we only remove the extensible
                         if (ln_contact_associations_count = 1) then
                             -- Remove bill-to self-service role for this contact
                             -- Get the bill-to id and the SELF_SERVICE_ROLE for the contact
                             BEGIN
                                 SELECT rp.responsibility_id, rp.object_version_number
                                     into ln_get_responsibility_id, ln_object_version_number
                                 FROM hz_cust_account_roles rl, hz_role_responsibility rp, hz_cust_acct_sites s
                                 WHERE rp.cust_account_role_id = rl.cust_account_role_id
                                 AND rp.RESPONSIBILITY_TYPE = 'SELF_SERVICE_USER'
                                 AND rl.orig_system_reference = lc_contact_osr
                                 and rl.cust_acct_site_id = s.cust_acct_site_id
                                 and s.orig_system_reference = lc_contact_billto_osr;

                                 l_role_responsibility_rec.RESPONSIBILITY_TYPE   := 'REVOKED_SELF_SERVICE_ROLE';
                                 l_role_responsibility_rec.responsibility_id     := ln_get_responsibility_id;
                                 
                                 HZ_CUST_ACCOUNT_ROLE_V2PUB.update_role_responsibility
                                      (  p_init_msg_list            => FND_API.G_FALSE
                                      ,  p_role_responsibility_rec  => l_role_responsibility_rec
                                      ,  p_object_version_number    => ln_object_version_number
                                      ,  x_return_status            => l_msg_text
                                      ,  x_msg_count                => ln_msg_count
                                      ,  x_msg_data                 => lc_msg_data
                                  );
                                  if (l_msg_text <> FND_API.G_RET_STS_SUCCESS) then
                                      log_debug_msg(lc_procedure_name||': Could not assign REVOKED_SELF_SERVICE_ROLE role for site.');
                                      lc_staging_column_name                  := 'organization_name';
                                      lc_staging_column_value                 := p_aops_entity_osr;
                                      lc_exception_log                        := 'Could not assign REVOKED_SELF_SERVICE_ROLE role for site. ' || lc_msg_data;
                                      lc_oracle_error_msg                     := 'Could not assign REVOKED_SELF_SERVICE_ROLE role for site. ' || lc_msg_data;
                                      log_exception(
                                          p_record_control_id    => p_record_id
                                          ,p_source_system_code   => 'A0'
                                          ,p_source_system_ref    => p_aops_entity_osr
                                          ,p_procedure_name       => lc_procedure_name
                                          ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                          ,p_staging_column_name  => lc_staging_column_name
                                          ,p_staging_column_value => lc_staging_column_value
                                          ,p_batch_id             => gn_batch_id
                                          ,p_exception_log        => lc_exception_log
                                          ,p_oracle_error_code    => SQLCODE
                                          ,p_oracle_error_msg     => lc_oracle_error_msg
                                      );
                                      x_return_status := 'E';
                                  end if;                                 
                             EXCEPTION WHEN OTHERS THEN
                                 log_debug_msg(lc_procedure_name||': Could not find WEBCONTACT ' || lc_contact_osr || ' for Account/Site: ' ||  lc_aops_account_number || '/' || lc_site_sequence_num);
                                 lc_staging_column_name                  := 'organization_name';
                                 lc_staging_column_value                 := p_aops_entity_osr;
                                 lc_exception_log                        := 'Could not find WEBCONTACT ' || lc_contact_osr || ' for Account/Site: ' ||  lc_aops_account_number || '/' || lc_site_sequence_num;
                                 lc_oracle_error_msg                     := 'Could not find WEBCONTACT ' || lc_contact_osr || ' for Account/Site: ' ||  lc_aops_account_number || '/' || lc_site_sequence_num;
                                 log_exception(
                                      p_record_control_id    => p_record_id
                                     ,p_source_system_code   => 'A0'
                                     ,p_source_system_ref    => p_aops_entity_osr
                                     ,p_procedure_name       => lc_procedure_name
                                     ,p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                     ,p_staging_column_name  => lc_staging_column_name
                                     ,p_staging_column_value => lc_staging_column_value
                                     ,p_batch_id             => gn_batch_id
                                     ,p_exception_log        => lc_exception_log
                                     ,p_oracle_error_code    => SQLCODE
                                     ,p_oracle_error_msg     => lc_oracle_error_msg
                                    );
                                  x_return_status := 'E';
                              END;   
                         end if;
                         if (x_return_status <> 'E') then
                             -- If there are no errors so far, move the site extensible as well.
                             UPDATE XX_CDH_ACCT_SITE_EXT_B
                               set attr_group_id = ln_attribute_group_id
                             where C_EXT_ATTR20 = lc_contact_osr
                             and C_EXT_ATTR19 = lc_contact_billto_osr;
                             
                             update XX_EXTERNAL_USERS
                                set status = '1'
                             where contact_osr = lc_contact_osr
                             and acct_site_osr = lc_contact_billto_osr;

                         end if; -- ln_contact_associations_count = 1
                     end if;
                 end if;    
                 

                 
            end;
     END IF;            
END delete_wst;

-- +===================================================================+
-- | Name        :  aops_deletes_child                                 |
-- | Description :  This procedure is invoked from the CDH Conversion  |
-- |                Child  Concurrent Request.This would submit        |
-- |                conversion programs based on input parameters.     |
-- |                                                                   |
-- |                                                                   |
-- | Parameters  :                                                     |
-- |                                                                   |
-- | Returns     :                                                     |
-- |                                                                   |
-- +===================================================================+
PROCEDURE aops_deletes_child
      (  x_errbuf              OUT VARCHAR2,
         x_retcode             OUT VARCHAR2,
         p_batch_id            IN  NUMBER,
         p_worker_id           IN  NUMBER,
         p_process_accounts    IN  VARCHAR2,
         p_process_addresses   IN  VARCHAR2,
         p_process_contacts    IN  VARCHAR2,
         p_process_phones      IN  VARCHAR2,
         p_process_emails      IN  VARCHAR2,
         p_process_spc         IN  VARCHAR2
      )
IS
lc_procedure_name           VARCHAR2(1000) := 'AOPS_DELETES_CHILD';
    CURSOR C_HZ_IMP_PARTIES_INT_DEL
        ( cp_batch_id   NUMBER )
    IS
    SELECT  party_orig_system_reference record_id,
            known_as                    aops_entity, 
            organization_name           aops_entity_osr, 
            -- Not formatting the delete date since we do not look for this it currently
            -- to_date(nvl(principal_name, to_char(sysdate, 'MM/DD/YYYY')), 'MM/DD/YYYY')  aops_delete_date, 
            principal_name aops_delete_date, 
            error_id                    interface_status
    FROM    HZ_IMP_PARTIES_INT
    WHERE   batch_id = cp_batch_id
    AND     MOD(NVL(TO_NUMBER(REGEXP_SUBSTR(organization_name, '[123456789]{1,7}')), ASCII(organization_name)), fnd_profile.value('XX_CDH_CONV_WORKERS')) = DECODE(p_worker_id,fnd_profile.value('XX_CDH_CONV_WORKERS'),0,p_worker_id)
    AND     nvl(error_id, 1) IN ('1','4','6');
    
    --variables for CUSTOMER_ACCOUNT_SITE creation
    TYPE xx_aops_delete_table      IS TABLE OF C_HZ_IMP_PARTIES_INT_DEL%ROWTYPE INDEX BY BINARY_INTEGER;
    lc_aops_delete_table           xx_aops_delete_table;
    
    TYPE xx_upd_record_table        IS TABLE OF hz_imp_parties_int.party_orig_system_reference%TYPE INDEX BY BINARY_INTEGER;
    TYPE xx_upd_interface_table     IS TABLE OF hz_imp_parties_int.error_id%TYPE INDEX BY BINARY_INTEGER;
    
    lc_aops_delete_record_table     xx_upd_record_table;
    lc_aops_delete_interface_table  xx_upd_interface_table;
    
    lc_aops_delete_return_status    VARCHAR(1)      := 'E';
    ln_conversion_id                NUMBER          := 00240.9;
    ln_aops_delete_rec_pro_succ     NUMBER          := 0;
    ln_aops_delete_rec_pro_fail     NUMBER          := 0;
    lc_num_pro_rec_read             NUMBER          := 0;
        
    ln_exists                       NUMBER          := 1;

    ln_bulk_limit                   NUMBER := XX_CDH_CONV_MASTER_PKG.g_bulk_fetch_limit;
    le_exception                    EXCEPTION;
    lc_staging_column_name          VARCHAR2(32);
    lc_staging_column_value         VARCHAR2(500);
    lc_exception_log                VARCHAR2(2000);
    lc_oracle_error_msg             VARCHAR2(2000);
    lc_return_status                VARCHAR2(1);
    
BEGIN

   --------------------
   -- Check that the batch exists
   --------------------
      BEGIN
            
         ln_exists := 0;

         SELECT 1
         INTO   ln_exists
         FROM   hz_imp_batch_summary bs,
                fnd_user us,
                ar_lookups al
         WHERE  bs.created_by      = us.user_id (+)
         AND    bs.original_system = al.lookup_code (+)
         AND    al.lookup_type (+) = 'ORIG_SYSTEM'
         AND    (NVL(bs.batch_status,'X') NOT IN ('REJECTED','PURGED','COMPLETED','X') OR NVL(bs.batch_status,'X') = 'ACTIVE')
         AND    NVL(bs.main_conc_status,'X') <> 'PROCESSING'
         AND    bs.original_system = 'CSV' -- All file loads are CSV
         AND    bs.batch_id        = p_batch_id;

      EXCEPTION
         WHEN TOO_MANY_ROWS THEN
            ln_exists := 1;
         WHEN OTHERS THEN
            ln_exists := 0;
      END;

      ----------------------------------------------------------
      -- Check for the rest only if batch_id is active
      ----------------------------------------------------------
      
      IF ln_exists = 1 THEN
        --Cursor to fecth records from staging table
        BEGIN
        
           gn_batch_id := p_batch_id;
           log_debug_msg(CHR(10)||'========================       BEGIN      ==========================');
           log_debug_msg('================ AOPS Customer Deletes ================='||CHR(10));
        
           --Main cursor to loop through each accout
           OPEN C_HZ_IMP_PARTIES_INT_DEL ( cp_batch_id => gn_batch_id);
           LOOP
              FETCH C_HZ_IMP_PARTIES_INT_DEL BULK COLLECT INTO lc_aops_delete_table LIMIT ln_bulk_limit;
              lc_aops_delete_interface_table.DELETE;
              lc_aops_delete_record_table.DELETE;
        
              IF lc_aops_delete_table.COUNT < 1 THEN
                 fnd_file.put_line(fnd_file.output,'No records found for the batch_id : '||gn_batch_id);
              ELSE
                 FOR i IN lc_aops_delete_table.first .. lc_aops_delete_table.last
                 LOOP
                    lc_aops_delete_return_status       := 'E';
        
                    log_debug_msg(CHR(10)||'Record-id:'||lc_aops_delete_table(i).record_id);
                    log_debug_msg('=====================');
                    
                    IF lc_aops_delete_table(i).aops_entity = 'CST' THEN
                       
                       IF lc_aops_delete_table(i).aops_entity_osr IS NULL THEN
                              
                          log_debug_msg(lc_procedure_name||': account_orig_system_reference is NULL');
                          lc_staging_column_name     := 'organization_name';
                          lc_staging_column_value    := lc_aops_delete_table(i).aops_entity_osr;
                          lc_exception_log           := 'account_orig_system_reference is NULL ';
                          lc_oracle_error_msg        := 'account_orig_system_reference is NULL';
                          log_exception
                                      (
                                         p_record_control_id    => lc_aops_delete_table(i).record_id
                                       , p_source_system_code   => 'A0'
                                       , p_source_system_ref    => lc_aops_delete_table(i).aops_entity_osr
                                       , p_procedure_name       => lc_procedure_name
                                       , p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                       , p_staging_column_name  => lc_staging_column_name
                                       , p_staging_column_value => lc_staging_column_value
                                       , p_batch_id             => gn_batch_id
                                       , p_exception_log        => lc_exception_log
                                       , p_oracle_error_code    => SQLCODE
                                       , p_oracle_error_msg     => lc_oracle_error_msg
                                      );
                          
                          lc_aops_delete_return_status := 'E';
                          
                       ELSE
                           
                           delete_accounts(
                                           p_aops_entity_osr   => lc_aops_delete_table(i).aops_entity_osr
                                           , p_record_id       => lc_aops_delete_table(i).record_id
                                           , x_return_status   => lc_return_status
                                          );
                                          
                           lc_aops_delete_return_status := lc_return_status;
                       
                       END IF;
                       
                    ELSIF lc_aops_delete_table(i).aops_entity = 'ADR' THEN
                                           
                       IF lc_aops_delete_table(i).aops_entity_osr IS NULL THEN
                              
                          log_debug_msg(lc_procedure_name||': account_site_orig_system_reference is NULL');
                          lc_staging_column_name     := 'organization_name';
                          lc_staging_column_value    := lc_aops_delete_table(i).aops_entity_osr;
                          lc_exception_log           := 'account_site_orig_system_reference is NULL ';
                          lc_oracle_error_msg        := 'account_site_orig_system_reference is NULL';
                          log_exception
                                      (
                                         p_record_control_id    => lc_aops_delete_table(i).record_id
                                       , p_source_system_code   => 'A0'
                                       , p_source_system_ref    => lc_aops_delete_table(i).aops_entity_osr
                                       , p_procedure_name       => lc_procedure_name
                                       , p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                       , p_staging_column_name  => lc_staging_column_name
                                       , p_staging_column_value => lc_staging_column_value
                                       , p_batch_id             => gn_batch_id
                                       , p_exception_log        => lc_exception_log
                                       , p_oracle_error_code    => SQLCODE
                                       , p_oracle_error_msg     => lc_oracle_error_msg
                                      );
                          
                          lc_aops_delete_return_status := 'E';
                          
                       ELSE
                           
                           delete_account_sites(
                                                p_aops_entity_osr   => lc_aops_delete_table(i).aops_entity_osr
                                                , p_record_id       => lc_aops_delete_table(i).record_id
                                                , x_return_status   => lc_return_status
                                               );
                                          
                           lc_aops_delete_return_status := lc_return_status;
                       
                       END IF;
                       
                    ELSIF lc_aops_delete_table(i).aops_entity = 'CNT' THEN
                                           
                       IF lc_aops_delete_table(i).aops_entity_osr IS NULL THEN
                              
                          log_debug_msg(lc_procedure_name||': Contact OSR is NULL');
                          lc_staging_column_name     := 'organization_name';
                          lc_staging_column_value    := lc_aops_delete_table(i).aops_entity_osr;
                          lc_exception_log           := 'contact_orig_system_reference is NULL ';
                          lc_oracle_error_msg        := 'contact_orig_system_reference is NULL';
                          log_exception
                                      (
                                         p_record_control_id    => lc_aops_delete_table(i).record_id
                                       , p_source_system_code   => 'A0'
                                       , p_source_system_ref    => lc_aops_delete_table(i).aops_entity_osr
                                       , p_procedure_name       => lc_procedure_name
                                       , p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                       , p_staging_column_name  => lc_staging_column_name
                                       , p_staging_column_value => lc_staging_column_value
                                       , p_batch_id             => gn_batch_id
                                       , p_exception_log        => lc_exception_log
                                       , p_oracle_error_code    => SQLCODE
                                       , p_oracle_error_msg     => lc_oracle_error_msg
                                      );
                          
                          lc_aops_delete_return_status := 'E';
                          
                       ELSE
                           
                           delete_account_contacts(
                                                   p_aops_entity_osr   => lc_aops_delete_table(i).aops_entity_osr
                                                   , p_record_id       => lc_aops_delete_table(i).record_id
                                                   , x_return_status   => lc_return_status
                                                  );
                                          
                           lc_aops_delete_return_status := lc_return_status;
                       
                       END IF;
                       
                    ELSIF lc_aops_delete_table(i).aops_entity = 'PH' THEN
                                           
                       IF lc_aops_delete_table(i).aops_entity_osr IS NULL THEN
                              
                          log_debug_msg(lc_procedure_name||': Contact Point (Phone) OSR is NULL');
                          lc_staging_column_name     := 'organization_name';
                          lc_staging_column_value    := lc_aops_delete_table(i).aops_entity_osr;
                          lc_exception_log           := 'cnt_pnt_phone_orig_system_reference is NULL ';
                          lc_oracle_error_msg        := 'cnt_pnt_phone_orig_system_reference is NULL';
                          log_exception
                                      (
                                         p_record_control_id    => lc_aops_delete_table(i).record_id
                                       , p_source_system_code   => 'A0'
                                       , p_source_system_ref    => lc_aops_delete_table(i).aops_entity_osr
                                       , p_procedure_name       => lc_procedure_name
                                       , p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                       , p_staging_column_name  => lc_staging_column_name
                                       , p_staging_column_value => lc_staging_column_value
                                       , p_batch_id             => gn_batch_id
                                       , p_exception_log        => lc_exception_log
                                       , p_oracle_error_code    => SQLCODE
                                       , p_oracle_error_msg     => lc_oracle_error_msg
                                      );
                          
                          lc_aops_delete_return_status := 'E';
                          
                       ELSE
                           
                           delete_acct_cnt_pnt_phone(
                                                     p_aops_entity_osr   => lc_aops_delete_table(i).aops_entity_osr
                                                     , p_record_id       => lc_aops_delete_table(i).record_id
                                                     , x_return_status   => lc_return_status
                                                    );
                                          
                           lc_aops_delete_return_status := lc_return_status;
                       
                       END IF;
                       
                    ELSIF lc_aops_delete_table(i).aops_entity = 'EM' THEN
                                           
                       IF lc_aops_delete_table(i).aops_entity_osr IS NULL THEN
                              
                          log_debug_msg(lc_procedure_name||': Contact Point (Email) OSR is NULL');
                          lc_staging_column_name     := 'organization_name';
                          lc_staging_column_value    := lc_aops_delete_table(i).aops_entity_osr;
                          lc_exception_log           := 'cnt_pnt_email_orig_system_reference is NULL ';
                          lc_oracle_error_msg        := 'cnt_pnt_email_orig_system_reference is NULL';
                          log_exception
                                      (
                                         p_record_control_id    => lc_aops_delete_table(i).record_id
                                       , p_source_system_code   => 'A0'
                                       , p_source_system_ref    => lc_aops_delete_table(i).aops_entity_osr
                                       , p_procedure_name       => lc_procedure_name
                                       , p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                       , p_staging_column_name  => lc_staging_column_name
                                       , p_staging_column_value => lc_staging_column_value
                                       , p_batch_id             => gn_batch_id
                                       , p_exception_log        => lc_exception_log
                                       , p_oracle_error_code    => SQLCODE
                                       , p_oracle_error_msg     => lc_oracle_error_msg
                                      );
                          
                          lc_aops_delete_return_status := 'E';
                          
                       ELSE
                           
                           delete_acct_cnt_pnt_email(
                                                     p_aops_entity_osr   => lc_aops_delete_table(i).aops_entity_osr
                                                     , p_record_id       => lc_aops_delete_table(i).record_id
                                                     , x_return_status   => lc_return_status
                                                    );
                                          
                           lc_aops_delete_return_status := lc_return_status;
                       
                       END IF;
                    
                    ELSIF lc_aops_delete_table(i).aops_entity = 'SPC' THEN
                                           
                       IF lc_aops_delete_table(i).aops_entity_osr IS NULL THEN
                              
                          log_debug_msg(lc_procedure_name||': Account SPC reference is NULL');
                          lc_staging_column_name     := 'organization_name';
                          lc_staging_column_value    := lc_aops_delete_table(i).aops_entity_osr;
                          lc_exception_log           := 'account_spc_orig_system_reference is NULL ';
                          lc_oracle_error_msg        := 'account_spc_orig_system_reference is NULL';
                          log_exception
                                      (
                                         p_record_control_id    => lc_aops_delete_table(i).record_id
                                       , p_source_system_code   => 'A0'
                                       , p_source_system_ref    => lc_aops_delete_table(i).aops_entity_osr
                                       , p_procedure_name       => lc_procedure_name
                                       , p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                       , p_staging_column_name  => lc_staging_column_name
                                       , p_staging_column_value => lc_staging_column_value
                                       , p_batch_id             => gn_batch_id
                                       , p_exception_log        => lc_exception_log
                                       , p_oracle_error_code    => SQLCODE
                                       , p_oracle_error_msg     => lc_oracle_error_msg
                                      );
                          
                          lc_aops_delete_return_status := 'E';
                          
                       ELSE
                           
                           delete_spc(
                                      p_aops_entity_osr   => lc_aops_delete_table(i).aops_entity_osr
                                      , p_record_id       => lc_aops_delete_table(i).record_id
                                      , x_return_status   => lc_return_status
                                     );
                                                    
                           lc_aops_delete_return_status := lc_return_status;
                       
                       END IF;
                    
                    ELSIF lc_aops_delete_table(i).aops_entity = 'WWW' THEN
                                           
                       IF lc_aops_delete_table(i).aops_entity_osr IS NULL THEN
                              
                          log_debug_msg(lc_procedure_name||': Web Contact OSR is NULL');
                          lc_staging_column_name     := 'organization_name';
                          lc_staging_column_value    := lc_aops_delete_table(i).aops_entity_osr;
                          lc_exception_log           := 'acct_site_www_orig_system_reference is NULL ';
                          lc_oracle_error_msg        := 'acct_site_www_orig_system_reference is NULL';
                          log_exception
                                      (
                                         p_record_control_id    => lc_aops_delete_table(i).record_id
                                       , p_source_system_code   => 'A0'
                                       , p_source_system_ref    => lc_aops_delete_table(i).aops_entity_osr
                                       , p_procedure_name       => lc_procedure_name
                                       , p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                       , p_staging_column_name  => lc_staging_column_name
                                       , p_staging_column_value => lc_staging_column_value
                                       , p_batch_id             => gn_batch_id
                                       , p_exception_log        => lc_exception_log
                                       , p_oracle_error_code    => SQLCODE
                                       , p_oracle_error_msg     => lc_oracle_error_msg
                                      );
                          
                          lc_aops_delete_return_status := 'E';
                          
                       ELSE
                           
                           delete_www(
                                      p_aops_entity_osr   => lc_aops_delete_table(i).aops_entity_osr
                                      , p_record_id       => lc_aops_delete_table(i).record_id
                                      , x_return_status   => lc_return_status
                                     );
                                                    
                           lc_aops_delete_return_status := lc_return_status;
                       
                       END IF;
                    ELSIF lc_aops_delete_table(i).aops_entity = 'WST' THEN
                                           
                       IF lc_aops_delete_table(i).aops_entity_osr IS NULL THEN
                              
                          log_debug_msg(lc_procedure_name||': Web Contact OSR (ShipTo) is NULL');
                          lc_staging_column_name     := 'organization_name';
                          lc_staging_column_value    := lc_aops_delete_table(i).aops_entity_osr;
                          lc_exception_log           := 'acct_site_www_orig_system_reference is NULL ';
                          lc_oracle_error_msg        := 'acct_site_www_orig_system_reference is NULL';
                          log_exception
                                      (
                                         p_record_control_id    => lc_aops_delete_table(i).record_id
                                       , p_source_system_code   => 'A0'
                                       , p_source_system_ref    => lc_aops_delete_table(i).aops_entity_osr
                                       , p_procedure_name       => lc_procedure_name
                                       , p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                       , p_staging_column_name  => lc_staging_column_name
                                       , p_staging_column_value => lc_staging_column_value
                                       , p_batch_id             => gn_batch_id
                                       , p_exception_log        => lc_exception_log
                                       , p_oracle_error_code    => SQLCODE
                                       , p_oracle_error_msg     => lc_oracle_error_msg
                                      );
                          
                          lc_aops_delete_return_status := 'E';
                          
                       ELSE
                           
                           delete_wst(
                                      p_aops_entity_osr   => lc_aops_delete_table(i).aops_entity_osr
                                      , p_record_id       => lc_aops_delete_table(i).record_id
                                      , x_return_status   => lc_return_status
                                     );
                                                    
                           lc_aops_delete_return_status := lc_return_status;
                       
                       END IF;
                    
                    ELSE
                        
                        log_debug_msg(lc_procedure_name||': aops_entity is INVALID');
                        lc_staging_column_name     := 'organization_name';
                        lc_staging_column_value    := lc_aops_delete_table(i).aops_entity_osr;
                        lc_exception_log           := 'aops_entity is INVALID';
                        lc_oracle_error_msg        := 'aops_entity is INVALID';
                        log_exception
                                    (
                                       p_record_control_id    => lc_aops_delete_table(i).record_id
                                     , p_source_system_code   => 'A0'
                                     , p_source_system_ref    => lc_aops_delete_table(i).aops_entity_osr
                                     , p_procedure_name       => lc_procedure_name
                                     , p_staging_table_name   => 'HZ_IMP_PARTIES_INT'
                                     , p_staging_column_name  => lc_staging_column_name
                                     , p_staging_column_value => lc_staging_column_value
                                     , p_batch_id             => gn_batch_id
                                     , p_exception_log        => lc_exception_log
                                     , p_oracle_error_code    => SQLCODE
                                     , p_oracle_error_msg     => lc_oracle_error_msg
                                    );
                        lc_aops_delete_return_status := 'E';
                    END IF;
                    
                    lc_aops_delete_record_table(i) := lc_aops_delete_table(i).record_id;
        
                    IF(lc_aops_delete_return_status = 'S') THEN
                        --Update Interface_Status
                        lc_aops_delete_interface_table(i) := '7';--SUCCESS
                        ln_aops_delete_rec_pro_succ := ln_aops_delete_rec_pro_succ+1;           
                        
                    ELSE
                        --Update Interface_Status
                        lc_aops_delete_interface_table(i) := '6';--FAILED
                        ln_aops_delete_rec_pro_fail := ln_aops_delete_rec_pro_fail+1;
                    END IF;
                 END LOOP;
                 
                 --Bulk update of interface_status column
                 IF lc_aops_delete_record_table.LAST > 0 THEN
                    FORALL i IN 1 .. lc_aops_delete_record_table.LAST
                       UPDATE HZ_IMP_PARTIES_INT
                       SET    ERROR_ID  = lc_aops_delete_interface_table(i)
                       WHERE  party_orig_system_reference = lc_aops_delete_record_table(i);
                 END IF;
        
                 COMMIT;
        
              END IF;
              EXIT WHEN C_HZ_IMP_PARTIES_INT_DEL%NOTFOUND;
           END LOOP;
           CLOSE C_HZ_IMP_PARTIES_INT_DEL;
        
           IF (ln_aops_delete_rec_pro_succ + ln_aops_delete_rec_pro_fail) > 0 THEN
              xx_com_conv_elements_pkg.log_control_info_proc
                 (   p_conversion_id          => ln_conversion_id
                    ,p_batch_id               => gn_batch_id
                    ,p_num_bus_objs_processed => lc_aops_delete_table.COUNT
                 );
        
              lc_num_pro_rec_read := (ln_aops_delete_rec_pro_succ + ln_aops_delete_rec_pro_fail);
              log_debug_msg(CHR(10)||'-----------------------------------------------------------');
              log_debug_msg('Total no.of records read = '||lc_num_pro_rec_read);
              log_debug_msg('Total no.of records succeded = '||ln_aops_delete_rec_pro_succ);
              log_debug_msg('Total no.of records failed = '||ln_aops_delete_rec_pro_fail);
              log_debug_msg('-----------------------------------------------------------');
        
              FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'================ OD: CDH AOPS Delete Main ================='||CHR(10));
              FND_FILE.PUT_LINE(FND_FILE.OUTPUT,CHR(10)||'-----------------------------------------------------------');
              FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'Total no.of records read = '||lc_num_pro_rec_read);
              FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'Total no.of records succeded = '||ln_aops_delete_rec_pro_succ);
              FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'Total no.of records failed = '||ln_aops_delete_rec_pro_fail);
              FND_FILE.PUT_LINE(FND_FILE.OUTPUT,'-----------------------------------------------------------');
        
              XX_COM_CONV_ELEMENTS_PKG.upd_control_info_proc
                 (   p_conc_mst_req_id              => APPS.FND_GLOBAL.CONC_REQUEST_ID
                    ,p_batch_id                     => gn_batch_id
                    ,p_conversion_id                => ln_conversion_id
                    ,p_num_bus_objs_failed_valid    => 0
                    ,p_num_bus_objs_failed_process  => ln_aops_delete_rec_pro_fail
                    ,p_num_bus_objs_succ_process    => ln_aops_delete_rec_pro_succ
                 );
           END IF;
           log_debug_msg(CHR(10)||'-------------------------       END        -------------------------');
           x_retcode := 0;
        EXCEPTION
           WHEN OTHERS THEN
              x_errbuf    := 'Unexpected Error in aops_deletes_worker procedure '||SQLERRM;
              x_retcode   := '2';
        END;
    END IF;
EXCEPTION
   WHEN le_exception THEN
      x_retcode := 2;
   WHEN OTHERS THEN
      x_errbuf  := 'Unexpected error in aops_deletes_child - '||SQLERRM;
      x_retcode := 2;
END aops_deletes_child;


END XX_CDH_CONV_AOPS_DELETES_PKG;
/
SHOW ERRORS;
