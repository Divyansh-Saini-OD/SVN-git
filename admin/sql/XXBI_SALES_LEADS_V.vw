SET VERIFY OFF;
WHENEVER SQLERROR CONTINUE;
WHENEVER OSERROR EXIT FAILURE ROLLBACK;

CREATE OR REPLACE VIEW XXBI_SALES_LEADS_V AS
  SELECT 
--  lds.LEAD_FCT_ID,
	lds.SALES_LEAD_ID,
	lds.LEAD_NUMBER,
	lds.LEAD_NAME,
	lds.CUSTOMER_ID,
	lds.ADDRESS_ID,
  NVL(lds.SOURCE_PROMOTION_ID,-1) SOURCE_PROMOTION_ID,
  P_DIM.VALUE SOURCE_PROMOTION_ID_DSC,
  lds.STATUS_CATEGORY,
  SCAT_DIM.VALUE  STATUS_CATEGORY_DSC,
  NVL(lds.STATUS_CODE,'XX') STATUS_CODE,
  SCODE_DIM.VALUE  STATUS_CODE_DSC,
  NVL(lds.CHANNEL_CODE,'XX') CHANNEL_CODE,
  C_DIM.VALUE CHANNEL_CODE_DSC,
  NVL(lds.LEAD_RANK_CODE,-1) LEAD_RANK_CODE,
  R_DIM.VALUE LEAD_RANK_CODE_DSC,
  NVL(lds.CLOSE_REASON,'XX') CLOSE_REASON,
  (select value from XXBI_LEAD_CLOSE_REASON_DIM_V v where lds.close_reason = v.id) CLOSE_REASON_DSC,
  lds.CURRENCY_CODE,
  NVL(p.STATE,'XX') STATE,
  NVL(p.CITY,'XX') CITY,
  NVL(p.PROVINCE,'XX') PROVINCE,
  DECODE(p.country,'US',p.state,p.province) STATE_PROVINCE,
  p.address1,
  p.address2,
	p.COUNTRY,
  CASE WHEN p.country = 'US' THEN
                    p.address1
                    || '.'
                    || p.address2
                    || '.'
                    || p.city
                    || '.'
                    || p.state
                    || '.'
                    || p.postal_code
 WHEN p.country = 'CA' THEN
                    p.address1
                    || '.'
                    || p.address2
                    || '.'
                    || p.city
                    || '.'
                    || p.province
                    || '.'
                    || p.postal_code
  END  formatted_address,
	NULL METHODOLOGY_ID,
	NULL STAGE_ID,
	NULL SOURCE_LANG,
	NULL MARGIN_AMOUNT,
	lds.creation_date LEAD_CONVERSION_DATE ,
	lds.OPPORTUNITY_ID,
	NULL ORG_ID,
	lds.CREATION_DATE LEAD_CREATION_DATE,
	lds.CREATED_BY LEAD_CREATED_BY,
	lds.LAST_UPDATE_DATE LEAD_LAST_UPDATE_DATE ,
	lds.LAST_UPDATED_BY LEAD_LAST_UPDATED_BY,
	TO_CHAR(lds.CREATION_DATE,'YYYYQMM') LEAD_CREATION_MONTH,
	TO_CHAR(lds.CREATION_DATE,'YYYYQ') LEAD_CREATION_QTR,
	TO_CHAR(lds.CREATION_DATE,'YYYY') LEAD_CREATION_YEAR,
	TO_CHAR(lds.LAST_UPDATE_DATE,'YYYYQMM') LEAD_UPDATION_MONTH,
	TO_CHAR(lds.LAST_UPDATE_DATE,'YYYYQ') LEAD_UPDATION_QTR,
	TO_CHAR(lds.LAST_UPDATE_DATE,'YYYY') LEAD_UPDATION_YEAR,
	SYSDATE CREATION_DATE,
	hz_utility_v2pub.created_by CREATED_BY,
	SYSDATE LAST_UPDATE_DATE,
	hz_utility_v2pub.last_updated_by LAST_UPDATED_BY,
	lds.TOTAL_AMOUNT,
	NULL ATTRIBUTE_CATEGORY,
	NULL N_ATTRIBUTE1,
	NULL N_ATTRIBUTE2,
	NULL N_ATTRIBUTE3,
	NULL N_ATTRIBUTE4,
	NULL N_ATTRIBUTE5,
	NULL N_ATTRIBUTE6,
	NULL N_ATTRIBUTE7,
	NULL N_ATTRIBUTE8,
	NULL N_ATTRIBUTE9,
	NULL N_ATTRIBUTE10,
	NULL C_ATTRIBUTE1,
	NULL C_ATTRIBUTE2,
	NULL C_ATTRIBUTE3,
	NULL C_ATTRIBUTE4,
	NULL C_ATTRIBUTE5,
	NULL C_ATTRIBUTE6,
	NULL C_ATTRIBUTE7,
	NULL C_ATTRIBUTE8,
	NULL C_ATTRIBUTE9,
	NULL C_ATTRIBUTE10,
	NULL D_ATTRIBUTE1,
	NULL D_ATTRIBUTE2,
	NULL D_ATTRIBUTE3,
	NULL D_ATTRIBUTE4,
	NULL D_ATTRIBUTE5,
	NULL D_ATTRIBUTE6,
	NULL D_ATTRIBUTE7,
	NULL D_ATTRIBUTE8,
	NULL D_ATTRIBUTE9,
	NULL D_ATTRIBUTE10,
  p.party_name,
  p.od_party_type customer_type,
  TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) AGE,
    lkup.lookup_code AGE_BUCKET,
   CASE WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) <= 7   THEN lds.TOTAL_AMOUNT
       WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) >  7   THEN 0 END TOTAL_AMOUNT_WTD,
  CASE WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) <= 30  THEN lds.TOTAL_AMOUNT
       WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) >  30  THEN 0 END TOTAL_AMOUNT_MTD,
  CASE WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) <= 365 THEN lds.TOTAL_AMOUNT
       WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) >  365 THEN 0 END TOTAL_AMOUNT_YTD,
  CASE WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) <= 7   THEN 1
       WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) >  7   THEN 0 END LEAD_WTD,
  CASE WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) <= 30  THEN 1
       WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) >  30  THEN 0 END LEAD_MTD,
  CASE WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) <= 365 THEN 1
       WHEN TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE) >  365 THEN 0 END LEAD_YTD
FROM XXBI_SALES_LEADS_MV lds,
     XXBI_SITE_LOC_FCT_MV p,
     fnd_lookup_values lkup,
     XXBI_SALES_CHANNEL_DIM_V C_DIM,
     XXBI_SOURCE_PROMOTIONS_DIM_V P_DIM,
     XXBI_LEAD_RANK_DIM_V R_DIM,
     XXBI_LEAD_STATUS_DIM_V SCODE_DIM,
     XXBI_STATUS_CATEGORY_DIM_V SCAT_DIM
WHERE lds.address_id = p.party_site_id 
AND lkup.lookup_type = 'XXBI_LEAD_AGE_BUCKET'
AND lds.SOURCE_PROMOTION_ID = P_DIM.ID
AND lds.LEAD_RANK_CODE = R_DIM.ID
AND lds.CHANNEL_CODE = C_DIM.ID
AND lds.STATUS_CODE  = SCODE_DIM.ID
AND lds.status_category = SCAT_DIM.ID
AND TRUNC(SYSDATE) - TRUNC(lds.CREATION_DATE)
BETWEEN substr(lkup.tag,0,instr(lkup.tag,'-')-1) AND substr(lkup.tag,instr(lkup.tag,'-')+1,LENGTH(lkup.tag));

----------------------------------------------------------
-- Grant to XXCRM
----------------------------------------------------------
GRANT ALL ON APPS.XXBI_SALES_LEADS_V TO XXCRM;

SHOW ERRORS;
EXIT;