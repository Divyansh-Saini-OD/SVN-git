package od.oracle.apps.xxmer.jitaresults.schema.server;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class SubbuJitaResultsImpl extends OAEntityImpl 
{
  protected static final int PONBR = 0;
  protected static final int RECEIPTNUM = 1;
  protected static final int FROMLOCID = 2;
  protected static final int TOLOCID = 3;
  protected static final int SKU = 4;
  protected static final int ALLOCDT = 5;
  protected static final int ALLOCTIMESTAMP = 6;
  protected static final int ALLOCQTY = 7;
  protected static final int DYNAMICQTY = 8;
  protected static final int LOCKINQTY = 9;
  protected static final int ADTLNEEDQTY = 10;
  protected static final int MARKOUTQTY = 11;
  protected static final int ROWID = 12;
  protected static final int LASTUPDATELOGIN = 13;
  protected static final int LASTUPDATEDBY = 14;
  protected static final int LASTUPDATEDATE = 15;
  protected static final int CREATEDBY = 16;
  protected static final int CREATIONDATE = 17;


  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public SubbuJitaResultsImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxmer.jitaresults.schema.server.SubbuJitaResults");
    }
    return mDefinitionObject;
  }



  /**
   * 
   * Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    super.create(attributeList);
  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**
   * 
   * Gets the attribute value for PoNbr, using the alias name PoNbr
   */
  public Number getPoNbr()
  {
    return (Number)getAttributeInternal(PONBR);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PoNbr
   */
  public void setPoNbr(Number value)
  {
    setAttributeInternal(PONBR, value);
  }

  /**
   * 
   * Gets the attribute value for ReceiptNum, using the alias name ReceiptNum
   */
  public Number getReceiptNum()
  {
    return (Number)getAttributeInternal(RECEIPTNUM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReceiptNum
   */
  public void setReceiptNum(Number value)
  {
    setAttributeInternal(RECEIPTNUM, value);
  }

  /**
   * 
   * Gets the attribute value for FromLocId, using the alias name FromLocId
   */
  public Number getFromLocId()
  {
    return (Number)getAttributeInternal(FROMLOCID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FromLocId
   */
  public void setFromLocId(Number value)
  {
    setAttributeInternal(FROMLOCID, value);
  }

  /**
   * 
   * Gets the attribute value for ToLocId, using the alias name ToLocId
   */
  public Number getToLocId()
  {
    return (Number)getAttributeInternal(TOLOCID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ToLocId
   */
  public void setToLocId(Number value)
  {
    setAttributeInternal(TOLOCID, value);
  }

  /**
   * 
   * Gets the attribute value for Sku, using the alias name Sku
   */
  public Number getSku()
  {
    return (Number)getAttributeInternal(SKU);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Sku
   */
  public void setSku(Number value)
  {
    setAttributeInternal(SKU, value);
  }

  /**
   * 
   * Gets the attribute value for AllocDt, using the alias name AllocDt
   */
  public Date getAllocDt()
  {
    return (Date)getAttributeInternal(ALLOCDT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AllocDt
   */
  public void setAllocDt(Date value)
  {
    setAttributeInternal(ALLOCDT, value);
  }

  /**
   * 
   * Gets the attribute value for AllocTimestamp, using the alias name AllocTimestamp
   */
  public Date getAllocTimestamp()
  {
    return (Date)getAttributeInternal(ALLOCTIMESTAMP);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AllocTimestamp
   */
  public void setAllocTimestamp(Date value)
  {
    setAttributeInternal(ALLOCTIMESTAMP, value);
  }

  /**
   * 
   * Gets the attribute value for AllocQty, using the alias name AllocQty
   */
  public Number getAllocQty()
  {
    return (Number)getAttributeInternal(ALLOCQTY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AllocQty
   */
  public void setAllocQty(Number value)
  {
    setAttributeInternal(ALLOCQTY, value);
  }

  /**
   * 
   * Gets the attribute value for DynamicQty, using the alias name DynamicQty
   */
  public Number getDynamicQty()
  {
    return (Number)getAttributeInternal(DYNAMICQTY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DynamicQty
   */
  public void setDynamicQty(Number value)
  {
    setAttributeInternal(DYNAMICQTY, value);
  }

  /**
   * 
   * Gets the attribute value for LockInQty, using the alias name LockInQty
   */
  public Number getLockInQty()
  {
    return (Number)getAttributeInternal(LOCKINQTY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LockInQty
   */
  public void setLockInQty(Number value)
  {
    setAttributeInternal(LOCKINQTY, value);
  }

  /**
   * 
   * Gets the attribute value for AdtlNeedQty, using the alias name AdtlNeedQty
   */
  public Number getAdtlNeedQty()
  {
    return (Number)getAttributeInternal(ADTLNEEDQTY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AdtlNeedQty
   */
  public void setAdtlNeedQty(Number value)
  {
    setAttributeInternal(ADTLNEEDQTY, value);
  }

  /**
   * 
   * Gets the attribute value for MarkOutQty, using the alias name MarkOutQty
   */
  public Number getMarkOutQty()
  {
    return (Number)getAttributeInternal(MARKOUTQTY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MarkOutQty
   */
  public void setMarkOutQty(Number value)
  {
    setAttributeInternal(MARKOUTQTY, value);
  }

  /**
   * 
   * Gets the attribute value for RowID, using the alias name RowID
   */
  public RowID getRowID()
  {
    return (RowID)getAttributeInternal(ROWID);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PONBR:
        return getPoNbr();
      case RECEIPTNUM:
        return getReceiptNum();
      case FROMLOCID:
        return getFromLocId();
      case TOLOCID:
        return getToLocId();
      case SKU:
        return getSku();
      case ALLOCDT:
        return getAllocDt();
      case ALLOCTIMESTAMP:
        return getAllocTimestamp();
      case ALLOCQTY:
        return getAllocQty();
      case DYNAMICQTY:
        return getDynamicQty();
      case LOCKINQTY:
        return getLockInQty();
      case ADTLNEEDQTY:
        return getAdtlNeedQty();
      case MARKOUTQTY:
        return getMarkOutQty();
      case ROWID:
        return getRowID();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case CREATEDBY:
        return getCreatedBy();
      case CREATIONDATE:
        return getCreationDate();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PONBR:
        setPoNbr((Number)value);
        return;
      case RECEIPTNUM:
        setReceiptNum((Number)value);
        return;
      case FROMLOCID:
        setFromLocId((Number)value);
        return;
      case TOLOCID:
        setToLocId((Number)value);
        return;
      case SKU:
        setSku((Number)value);
        return;
      case ALLOCDT:
        setAllocDt((Date)value);
        return;
      case ALLOCTIMESTAMP:
        setAllocTimestamp((Date)value);
        return;
      case ALLOCQTY:
        setAllocQty((Number)value);
        return;
      case DYNAMICQTY:
        setDynamicQty((Number)value);
        return;
      case LOCKINQTY:
        setLockInQty((Number)value);
        return;
      case ADTLNEEDQTY:
        setAdtlNeedQty((Number)value);
        return;
      case MARKOUTQTY:
        setMarkOutQty((Number)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }
}