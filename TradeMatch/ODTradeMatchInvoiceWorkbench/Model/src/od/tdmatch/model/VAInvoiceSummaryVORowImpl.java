package od.tdmatch.model;

import java.math.BigDecimal;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 23 09:21:26 EDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VAInvoiceSummaryVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        VendorAssistant,
        EmployeeId,
        TotalInvCount,
        TotalInvAmount,
        TotalLineAmount,
        TotalMootCount,
        TotalMootInvAmount,
        TotalMootLineAmount,
        TotalNrfCount,
        TotalNrfAmount,
        SumTotInvAmount,
        SumTotInvCount,
        SumTotLineAmount,
        SumTotMootCount,
        SumTotMootInvAmount,
        SumTotMootLineAmount,
        SumTotNrfAmount,
        SumTotNrfCount,
        VAEmpVendorSummaryVO,
        VAInvoiceSummaryVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int VENDORASSISTANT = AttributesEnum.VendorAssistant.index();
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int TOTALINVCOUNT = AttributesEnum.TotalInvCount.index();
    public static final int TOTALINVAMOUNT = AttributesEnum.TotalInvAmount.index();
    public static final int TOTALLINEAMOUNT = AttributesEnum.TotalLineAmount.index();
    public static final int TOTALMOOTCOUNT = AttributesEnum.TotalMootCount.index();
    public static final int TOTALMOOTINVAMOUNT = AttributesEnum.TotalMootInvAmount.index();
    public static final int TOTALMOOTLINEAMOUNT = AttributesEnum.TotalMootLineAmount.index();
    public static final int TOTALNRFCOUNT = AttributesEnum.TotalNrfCount.index();
    public static final int TOTALNRFAMOUNT = AttributesEnum.TotalNrfAmount.index();
    public static final int SUMTOTINVAMOUNT = AttributesEnum.SumTotInvAmount.index();
    public static final int SUMTOTINVCOUNT = AttributesEnum.SumTotInvCount.index();
    public static final int SUMTOTLINEAMOUNT = AttributesEnum.SumTotLineAmount.index();
    public static final int SUMTOTMOOTCOUNT = AttributesEnum.SumTotMootCount.index();
    public static final int SUMTOTMOOTINVAMOUNT = AttributesEnum.SumTotMootInvAmount.index();
    public static final int SUMTOTMOOTLINEAMOUNT = AttributesEnum.SumTotMootLineAmount.index();
    public static final int SUMTOTNRFAMOUNT = AttributesEnum.SumTotNrfAmount.index();
    public static final int SUMTOTNRFCOUNT = AttributesEnum.SumTotNrfCount.index();
    public static final int VAEMPVENDORSUMMARYVO = AttributesEnum.VAEmpVendorSummaryVO.index();
    public static final int VAINVOICESUMMARYVO1 = AttributesEnum.VAInvoiceSummaryVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VAInvoiceSummaryVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute VendorAssistant.
     * @return the VendorAssistant
     */
    public String getVendorAssistant() {
        return (String) getAttributeInternal(VENDORASSISTANT);
    }

    /**
     * Gets the attribute value for the calculated attribute EmployeeId.
     * @return the EmployeeId
     */
    public String getEmployeeId() {
        return (String) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalInvCount.
     * @return the TotalInvCount
     */
    public Number getTotalInvCount() {
        return (Number) getAttributeInternal(TOTALINVCOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalInvAmount.
     * @return the TotalInvAmount
     */
    public Number getTotalInvAmount() {
        return (Number) getAttributeInternal(TOTALINVAMOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalLineAmount.
     * @return the TotalLineAmount
     */
    public Number getTotalLineAmount() {
        return (Number) getAttributeInternal(TOTALLINEAMOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalMootCount.
     * @return the TotalMootCount
     */
    public Number getTotalMootCount() {
        return (Number) getAttributeInternal(TOTALMOOTCOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalMootInvAmount.
     * @return the TotalMootInvAmount
     */
    public Number getTotalMootInvAmount() {
        return (Number) getAttributeInternal(TOTALMOOTINVAMOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalMootLineAmount.
     * @return the TotalMootLineAmount
     */
    public Number getTotalMootLineAmount() {
        return (Number) getAttributeInternal(TOTALMOOTLINEAMOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalNrfCount.
     * @return the TotalNrfCount
     */
    public Number getTotalNrfCount() {
        return (Number) getAttributeInternal(TOTALNRFCOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalNrfAmount.
     * @return the TotalNrfAmount
     */
    public Number getTotalNrfAmount() {
        return (Number) getAttributeInternal(TOTALNRFAMOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute SumTotInvAmount.
     * @return the SumTotInvAmount
     */
    public BigDecimal getSumTotInvAmount() {
//        return (BigDecimal) getAttributeInternal(SUMTOTINVAMOUNT);
        return ((VAInvoiceSummaryVOImpl)getViewObject()).getSumInvoiceAmt();
    }

    /**
     * Gets the attribute value for the calculated attribute SumTotInvCount.
     * @return the SumTotInvCount
     */
    public BigDecimal getSumTotInvCount() {
//        return (BigDecimal) getAttributeInternal(SUMTOTINVCOUNT);
        return ((VAInvoiceSummaryVOImpl)getViewObject()).getSumInvoiceCount();
    }

    /**
     * Gets the attribute value for the calculated attribute SumTotLineAmount.
     * @return the SumTotLineAmount
     */
    public BigDecimal getSumTotLineAmount() {
//        return (BigDecimal) getAttributeInternal(SUMTOTLINEAMOUNT);
        return ((VAInvoiceSummaryVOImpl)getViewObject()).getSumInvoiceLineAmt();
    }

    /**
     * Gets the attribute value for the calculated attribute SumTotMootCount.
     * @return the SumTotMootCount
     */
    public BigDecimal getSumTotMootCount() {
//        return (BigDecimal) getAttributeInternal(SUMTOTMOOTCOUNT);
        return ((VAInvoiceSummaryVOImpl)getViewObject()).getSumMootCount();
    }

    /**
     * Gets the attribute value for the calculated attribute SumTotMootInvAmount.
     * @return the SumTotMootInvAmount
     */
    public BigDecimal getSumTotMootInvAmount() {
//        return (BigDecimal) getAttributeInternal(SUMTOTMOOTINVAMOUNT);
        return ((VAInvoiceSummaryVOImpl)getViewObject()).getSumMootInvoiceAmt();
    }

    /**
     * Gets the attribute value for the calculated attribute SumTotMootLineAmount.
     * @return the SumTotMootLineAmount
     */
    public BigDecimal getSumTotMootLineAmount() {
//        return (BigDecimal) getAttributeInternal(SUMTOTMOOTLINEAMOUNT);
        return ((VAInvoiceSummaryVOImpl)getViewObject()).getSumMootLineAmt();
    }

    /**
     * Gets the attribute value for the calculated attribute SumTotNrfAmount.
     * @return the SumTotNrfAmount
     */
    public BigDecimal getSumTotNrfAmount() {
//        return (BigDecimal) getAttributeInternal(SUMTOTNRFAMOUNT);
        return ((VAInvoiceSummaryVOImpl)getViewObject()).getSumNrfAmt();
    }

    /**
     * Gets the attribute value for the calculated attribute SumTotNrfCount.
     * @return the SumTotNrfCount
     */
    public BigDecimal getSumTotNrfCount() {
//        return (BigDecimal) getAttributeInternal(SUMTOTNRFCOUNT);
        return ((VAInvoiceSummaryVOImpl)getViewObject()).getSumNrfCount();
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link VAEmpVendorSummaryVO.
     */
    public RowIterator getVAEmpVendorSummaryVO() {
        return (RowIterator) getAttributeInternal(VAEMPVENDORSUMMARYVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VAInvoiceSummaryVO1.
     */
    public RowSet getVAInvoiceSummaryVO1() {
        return (RowSet) getAttributeInternal(VAINVOICESUMMARYVO1);
    }
}

