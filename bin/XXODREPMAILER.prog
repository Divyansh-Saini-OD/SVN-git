#!/bin/ksh
# ----------------------------------------------------------------------------------------
# Filename:   XXODREPEMAILER
# Purpose:    This Program is used to send the Concurrent Program Request Output as an 
#             Email                                                                      
# ----------------------------------------------------------------------------------------

#  Concurrent Program Definitions Parameters

#  var1  is --> Job name 
#  var2  is --> Concurrent Program Request ID.
#  var3  is --> Login Credentials

#  User defined Parameters

#  var9 is --> Email Address(es)
#  var10 is --> Email Subject
#  var11 is --> Email Body Text
#  var12 is  --> Request ID
#  var13 is  --> File name

# |VERSION  AUTHOR                        COMMENTS           DATE            |
# |--------------------------------------------------------------------------|
# |1.0     Tamil Vendhan L             Initial Version    23-DEC-2009       |
# | 2.0      09-SEP-2016    Praveen Vanga          Defect 39261     |
# --------------------------------------------------------------------------|

# Defining User Defined Parameters.

var9=${5}
var10=${6}
var11=${7}
var12=${8}
var13=${9}

echo "Email Address(es)              : "${var9}
echo "Email Subject                  : "${var10}
echo "Email Body Text                : "${var11}
echo "Request ID                     : "${var12}
echo "File name                      : "${var13}
echo "From Address                   : "${10}

p_from_address=${10}

# Assigning Required Parameters to the Shell variables.

to_email_address=${var9}
email_sub=${var10}
email_body=${var11}
req_id=0
attach_file_name=${var13}

# Defining Constants.

u_mail_subject=${email_sub}
filepath=$APPLCSF/$APPLOUT/
cust_path=$XXFIN_DATA/inbound/

# Printing User Defined Parameters in the Request Log File.


if [ "$var12" != "" ]
then

p_req_id=$var12

export SQLPATH=$APPL_TOP
 

# Constructing the names of the request output and email attachment files.
prog_name=`sqlplus -s /nolog <<EOF
set head off
set pagesize 0
set verify off
select  fcp.concurrent_program_name from apps.fnd_concurrent_requests fcr2,
apps.fnd_concurrent_programs_vl fcp
where  fcr2.request_id =$p_req_id
and fcp.concurrent_program_id = fcr2.concurrent_program_id;
EOF`
echo $prog_name

filename=${prog_name}_${p_req_id}_1.PDF
echo $filename
file=$filepath$filename
echo $file


# waiting for the passed request
stat_code=`sqlplus -s /nolog <<EOF
set pagesize 0
set linesize 255
set sqlprompt " "
set serveroutput on 
set verify off
DECLARE
   lb_req_status        BOOLEAN;
   lc_phase             VARCHAR2(50);
   lc_status            VARCHAR2(50);
   lc_devphase          VARCHAR2(50);
   lc_devstatus         VARCHAR2(50);
   lc_message           VARCHAR2(50);
BEGIN
lb_req_status := fnd_concurrent.wait_for_request (
                                              '$p_req_id'
                                             ,'10'
                                             ,''
                                             ,lc_phase
                                             ,lc_status
                                             ,lc_devphase
                                             ,lc_devstatus
                                             ,lc_message );
dbms_output.put_line(lc_phase||'$'||lc_status||'$');
END;
/
SET FEEDBACK OFF
EOF`

if [ ! -f $file ]
then
echo "No Request Output file found.   Email not sent."
else
attachment=${attach_file_name}
cp $file $cust_path$attachment

if [ $? -ne 0 ] 
then
echo "Result/Error                          : Error in copying the file to cust path from file path: "$filepath
exit 2
fi

# Send an email to the user with attachment.

(/usr/bin/uuencode $cust_path$attachment $cust_path$attachment > /dev/null 2>&1)| mailx -r "${p_from_address}" -s "${u_mail_subject}" -a $cust_path$attachment ${to_email_address} <<-EOF
${email_body}

----------------------------------------------------
This is a system generated mail.Please do not reply.
----------------------------------------------------
EOF

if [ $? -ne 0 ] 
then
echo "Result/Error                          : Error in sending the Email"
exit 2
fi

echo "Email Sent with Request Output as Attachment."
chmod 777 $cust_path$attachment
rm $cust_path$attachment

fi

fi

# Exiting from the shell program.
exit 0   # Success.
