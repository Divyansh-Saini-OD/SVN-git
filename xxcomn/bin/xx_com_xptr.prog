# +===================================================================+
# |                  Office Depot - Project Simplify                  |
# |                       WIPRO Technologies                          |
# +===================================================================+
# | Name        : XPTR program                                        |
# | Description : To transfer the output file to Exporter             |
# |                                                                   |
# |Change Record:                                                     |
# |===============                                                    |
# |Version   Date          Author              Remarks                |
# |=======   ==========   =============        =======================|
# |1.0       20-AUG-2008   Sambasiva Reddy D   Initial Version        |
# |1.1       20-AUG-2008   Sambasiva Reddy D   Added code for         |
# |                                            Defect # 10032         |
# |1.2       10-SEP-2008   Ranjith Prabu T     Added code for         |
# |                                            Defect # 10930         |
# |1.3       31-OCT-2008   Aravind A.          Defect 12248           |
# |1.4       18-DEC-2008   Pradeep Krishnan    Added code for         |
# |                                            Defect # 12684         |
# |1.5       14-Jul-2009   Matthew Craig       Added XXOM translation |
# |1.6       30-May-2012   Adithya             Defect # 18550	      |
# |1.7       02-Oct-2012   Abdul Khan          Defect # 19839         |
# |1.8       11-Dec-2013   Avinash Baddam      Changes for Defect # 26630 |
# |1.9       13-Sep-2016   Avinash Baddam      Changes for defect #  39289 |
# |2.0 		 04-Jan-2022   Amit Kumar          Changes for SPLIT DAY1 |
# +===================================================================+

echo "XPTR Log starts here........................" > /tmp/xx_com_xptr.$$
echo "Arguments:$*" >> /tmp/xx_com_xptr.$$
V_SRC_FILE=$2
V_TITLE=$4
V_USER_ID=$5
V_RES_ID=$6
V_RES_APP_ID=$7
echo "Printer:$1" >> /tmp/xx_com_xptr.$$
echo "Source File:$V_SRC_FILE" >> /tmp/xx_com_xptr.$$
echo "Copies:$3" >> /tmp/xx_com_xptr.$$
echo "Title:$V_TITLE" >> /tmp/xx_com_xptr.$$
V_REQUEST_ID=`echo $V_TITLE | cut -d. -f2 `
echo "Concatenated IDs is $V_USER_ID~$V_RES_ID~$V_RES_APP_ID" >> /tmp/xx_com_xptr.$$
echo "Request_id:$V_REQUEST_ID" >> /tmp/xx_com_xptr.$$
export SQLPATH=$APPL_TOP
V_RESULT=`echo "SET ECHO OFF
                SET HEADING OFF
                SET FEEDBACK OFF
                SET LINES 1000
                SET TRIMSPOOL ON
                SET SERVEROUTPUT ON
                DECLARE
                x_result        VARCHAR2(1000);
                ln_request_id   NUMBER := $V_REQUEST_ID;
                lc_program      fnd_concurrent_programs.concurrent_program_name%TYPE;
                lc_request_id   fnd_concurrent_requests.argument1%TYPE;
                lc_xptr_name    xx_fin_translatevalues.target_value1%TYPE := NULL;
                lc_pub_out      fnd_concurrent_requests.argument7%TYPE:=NULL;				
				L_EXISTS 		NUMBER:=0; --Version 2.0
				
                BEGIN
                   BEGIN
                      --SELECT FCP.concurrent_program_name, FCR.argument1, FCR.argument7 -- Commented for defect 26630.
                      SELECT FCP.concurrent_program_name, FCR.argument2, FCR.argument8 -- Changed for defect 26630.
                      INTO   lc_program,lc_request_id,lc_pub_out
                      FROM   fnd_concurrent_programs FCP
                            ,fnd_concurrent_requests FCR
                      WHERE  FCR.request_id = $V_REQUEST_ID
                      AND    FCP.concurrent_program_id = FCR.concurrent_program_id
                      AND    FCR.program_application_id = FCP.application_id;     -- added for defect 10930
                   EXCEPTION
                      WHEN OTHERS THEN
                         DBMS_OUTPUT.PUT_LINE('OERROR~OTHER~'||SUBSTR(SQLERRM,1,255));
                   END;
                   IF lc_program = 'XDOREPPB' THEN
                      ln_request_id := lc_request_id;
                      BEGIN
                         SELECT FCP.concurrent_program_name
                         INTO   lc_program
                         FROM   fnd_concurrent_programs FCP
                               ,fnd_concurrent_requests FCR
                         WHERE  FCR.request_id = lc_request_id
                         AND    FCP.concurrent_program_id = FCR.concurrent_program_id
                         AND    FCR.program_application_id = FCP.application_id;
                      EXCEPTION
                         WHEN OTHERS THEN
                            DBMS_OUTPUT.PUT_LINE('OERROR~OTHER~'||SUBSTR(SQLERRM,1,255));
                      END;
                   ELSE
                      lc_pub_out:=NULL;
                   END IF;
-- MC 14-jul-09 added the OM translation select
                   IF SUBSTR(REPLACE(lc_program,'_',''),1,4) = 'XXOM' THEN
                        BEGIN
                           SELECT VAL.target_value1
                           INTO   lc_xptr_name
                           FROM   xx_fin_translatedefinition DEF
                                 ,xx_fin_translatevalues VAL
                           WHERE  DEF.translate_id = VAL.translate_id
                           AND    DEF.translation_name = 'XXOD_OM_XPTR'
                           AND    VAL.source_value1=lc_program
                           AND    SYSDATE BETWEEN 
                                        DEF.start_date_active 
                                    AND NVL(DEF.end_date_active,SYSDATE+1)
                           AND    SYSDATE BETWEEN 
                                        VAL.start_date_active 
                                    AND NVL(VAL.end_date_active,SYSDATE+1)
                           AND    DEF.enabled_flag = 'Y'
                           AND    VAL.enabled_flag = 'Y';
                           IF lc_xptr_name IS NOT NULL THEN
                              lc_program := lc_xptr_name;
                           END IF;
                        EXCEPTION
                           WHEN OTHERS THEN
                              lc_xptr_name := NULL;
                        END;
                   ELSE
                        BEGIN
                           SELECT VAL.target_value1
                           INTO   lc_xptr_name
                           FROM   xx_fin_translatedefinition DEF
                                 ,xx_fin_translatevalues VAL
                           WHERE  DEF.translate_id = VAL.translate_id
                           AND    DEF.translation_name = 'XXOD_FIN_XPTR'
                           AND    VAL.source_value1=lc_program
                           AND    SYSDATE BETWEEN DEF.start_date_active AND NVL(DEF.end_date_active,SYSDATE+1)
                           AND    SYSDATE BETWEEN VAL.start_date_active AND NVL(VAL.end_date_active,SYSDATE+1)
                           AND    DEF.enabled_flag = 'Y'
                           AND    VAL.enabled_flag = 'Y';
                           IF lc_xptr_name IS NOT NULL THEN
                              lc_program := lc_xptr_name;
                           END IF;
                        EXCEPTION
                           WHEN OTHERS THEN
                              lc_xptr_name := NULL;
                        END;
                   END IF; 
				   
                   FND_GLOBAL.APPS_INITIALIZE('$V_USER_ID'
                                              ,'$V_RES_ID'
                                              ,'$V_RES_APP_ID'
                                                             );
                   lc_program := REPLACE(lc_program,'_','');
				   
				   BEGIN     --Version 2.0 Starts
				    SELECT 1 
					INTO 
					L_EXISTS
					FROM fnd_Concurrent_programs fcp,
					fnd_concurrent_requests fcr
					WHERE fcp.CONCURRENT_PROGRAM_ID = fcr.CONCURRENT_PROGRAM_ID
					AND fcp.CONCURRENT_PROGRAM_NAME ='RGRARG'
					AND fcr.request_id              =ln_request_id
					AND fcr.argument6               ='R_US_USD_P';				   
				   EXCEPTION
				   WHEN OTHERS THEN
				    L_EXISTS:=0;
				   END;
				   
				   IF L_EXISTS=0 then 	   --Version 2.0 ends				   
						SELECT  DECODE (lc_program,'XXTAXARBADDEBT','tx', /*DECODE added for Defect # 19839*/
									'orcl'||DECODE(LOWER(FA.product_code)
												,'ce','cm'
												,'xxfin',DECODE(LOWER(SUBSTR(lc_program,3,2))
																,'ce','cm'
																,LOWER(SUBSTR(lc_program,3,2)))
												,'xxcomn',DECODE(LOWER(SUBSTR(lc_program,3,2))
																,'ce','cm'
																,LOWER(SUBSTR(lc_program,3,2)))
							-- MC 14-jul-09 added XXOM decode
												,'xxom',DECODE(LOWER(SUBSTR(lc_program,1,2))
																,'xx','om'
																,LOWER(SUBSTR(lc_program,1,2)))
												,LOWER(FA.product_code)))
											||'~'||RPAD(DECODE(LOWER(FA.product_code)
															,'xxfin',SUBSTR(lc_program,3,8)
															,'xxcomn',SUBSTR(lc_program,3,8)
															,SUBSTR(lc_program,1,8)),8,'0')
											||CR.request_id||'~'||CR.logfile_name||'~'||lc_pub_out
														||'~'||FND_PROFILE.VALUE_SPECIFIC('XX_FIN_DISABLE_XPTR_OP')    --Defect 12248
						INTO      x_result
						FROM      fnd_concurrent_requests CR
									,fnd_concurrent_programs CP
									,fnd_application FA
						WHERE     CR.request_id = ln_request_id
						AND       CP.concurrent_program_id = CR.concurrent_program_id
						AND       CP.application_id = CR.program_application_id
						AND       FA.application_id = CR.program_application_id;
				   
				   ELSE --Version 2.0 starts
						SELECT 'rorclgl'
							||'~'
							||RPAD(DECODE(LOWER(FA.product_code) ,'xxfin',SUBSTR(lc_program,3,8) ,'xxcomn',SUBSTR(lc_program,3,8) ,SUBSTR(lc_program,1,8)),8,'0')
							||CR.request_id
							||'~'
							||CR.logfile_name
							||'~'
							||lc_pub_out
							||'~'
							||FND_PROFILE.VALUE_SPECIFIC('XX_FIN_DISABLE_XPTR_OP') --Defect 12248
							INTO x_result
							FROM fnd_concurrent_requests CR ,
							fnd_concurrent_programs CP ,
							fnd_application FA
							WHERE CR.request_id          = ln_request_id
							AND CP.concurrent_program_id = CR.concurrent_program_id
							AND CP.application_id        = CR.program_application_id
							AND FA.application_id        = CR.program_application_id;							
				   END IF; --Version 2.0 ends
				   
                   DBMS_OUTPUT.PUT_LINE(x_result);
                EXCEPTION
                    WHEN OTHERS THEN
                       DBMS_OUTPUT.PUT_LINE('OERROR~OTHER~'||SUBSTR(SQLERRM,1,255));
                END; 
/"|sqlplus -s /nolog`
if [ "$?" = 0 ]
then
    if [ "$V_RESULT" = "Not connected" ]
    then
    echo "Could not access the database. XPTR Exiting!!!" >> /tmp/xx_com_xptr.$$
    exit 1;
    else
    echo "Query successful." >> /tmp/xx_com_xptr.$$
    fi
else
    echo "Could not access the database. XPTR Exiting!!!" >> /tmp/xx_com_xptr.$$
    exit 1;
fi
echo "Query Result:$V_RESULT" >> /tmp/xx_com_xptr.$$
V_DIR=`echo $V_RESULT | cut -d~ -f1 `
V_FILE=`echo $V_RESULT | cut -d~ -f2 `
V_LOGFILE=`echo $V_RESULT | cut -d~ -f3 `
V_OUTPUT=`echo $V_RESULT | cut -d~ -f4 `
V_PROFILE=`echo $V_RESULT | cut -d~ -f5 `
#Fixed defect 12248
if [ "$V_PROFILE" = "Y" ]
then
V_ERR=`echo "Y" `
echo "Redirect to XPTR Disabled by profile option - OD: Disable XPTR Output Redirect" >> /tmp/xx_com_xptr.$$
fi
if [ "$V_ERR" != "Y" ]
then
if [ "$V_DIR" = "OERROR" ]
then
    echo "Error occurred while querying the database" >> /tmp/xx_com_xptr.$$
    echo "$V_LOGFILE" >> /tmp/xx_com_xptr.$$
    echo "XPTR Exiting!!!" >> /tmp/xx_com_xptr.$$
    exit 1;
fi
echo "Target Directory:/app/xptrrs/orarpt/$V_DIR" >> /tmp/xx_com_xptr.$$
if [ "$V_OUTPUT" != "" ]
then
V_EXTN=`echo $V_OUTPUT | cut -d. -f2 `
else
V_EXTN=`basename $V_SRC_FILE | cut -d. -f2 `
fi
if [ "$V_EXTN" = "EXCEL" ]
then
V_EXTN=`echo "xls"`
fi
if [ "$V_EXTN" = "excel" ]
then
V_EXTN=`echo "xls"`
fi
V_FILENAME=`echo "$V_FILE.$V_EXTN"`
echo "Target Filename:$V_FILENAME" >> /tmp/xx_com_xptr.$$
echo "Checking for existence of Target Directory....." >> /tmp/xx_com_xptr.$$
if test ! -d /app/xptrrs/orarpt/$V_DIR
then
    echo "Target Directory does not exist! XPTR Exiting!!!" >> /tmp/xx_com_xptr.$$
    echo "XPTR Log ends here." >> /tmp/xx_com_xptr.$$
    cat /tmp/xx_com_xptr.$$ >> $V_LOGFILE
    if [ "$?" = 0 ]
    then
    rm /tmp/xx_com_xptr.$$
    fi
    exit 1;
else
    if test ! -w /app/xptrrs/orarpt/$V_DIR
    then
    echo "Target Directory is not writable! XPTR Exiting!!!" >> /tmp/xx_com_xptr.$$
    echo "XPTR Log ends here." >> /tmp/xx_com_xptr.$$
    cat /tmp/xx_com_xptr.$$ >> $V_LOGFILE
    if [ "$?" = 0 ]
    then
        rm /tmp/xx_com_xptr.$$
    fi
    exit 1;
    fi
    echo "Target Directory Exists and is Writable!" >> /tmp/xx_com_xptr.$$
fi
#Fixed for defect 18550
if [ -s $V_SRC_FILE ] 
then
echo "Copying file $V_SRC_FILE to /app/xptrrs/orarpt/$V_DIR/$V_FILENAME....." >> /tmp/xx_com_xptr.$$
cp $V_SRC_FILE /app/xptrrs/orarpt/$V_DIR/$V_FILENAME
if [ "$?" = 0 ]
then
    echo "File copied successfully!" >> /tmp/xx_com_xptr.$$
else
    echo "File copy failed!!!" >> /tmp/xx_com_xptr.$$
fi
else
echo "File $V_SRC_FILE not copied to /app/xptrrs/orarpt/$V_DIR/$V_FILENAME as it is of 0 bytes!" >> /tmp/xx_com_xptr.$$
fi
fi
echo "XPTR Log ends here." >> /tmp/xx_com_xptr.$$
cat /tmp/xx_com_xptr.$$ >> $V_LOGFILE
if [ "$?" = 0 ]
then
    rm /tmp/xx_com_xptr.$$
fi
