 // +======================================================================================+
 // | Office Depot - Project Simplify                                                      |
 // | Providge Consulting                                                                  |
 // +======================================================================================+
 // |  Class:         InvoiceCopyAMImpl.java                                               |
 // |  Description:   This class is application module for this project                    |
 // |                                                                                      |
 // |  Change Record:                                                                      |
 // |  ==========================                                                          |
 // |Version   Date          Author             Remarks                                    |
 // |=======   ===========   ================   ========================================== |
 // |1.0       26-JUN-2007   BLooman            Initial version                            |
 // |1.1       17-FEB-2017   MBolli         Thread Leak 12.2.5 Upgrade - close all statements, resultsets |
 // |1.2       01-Mar-17     MBolli         If Duplicate Request,for sendEmail in Inv detail page, catch |
 // |                                       SQLException and throw as Warning              |
 // |                                                                                      |
 // +======================================================================================+
 package od.oracle.apps.xxfin.ar.irec.invoicecopy.server;

 //import oracle.apps.ar.irec.accountDetails.server.AccountDetailsAMImpl;
 import oracle.apps.fnd.common.VersionInfo;
 import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
 import oracle.apps.fnd.framework.server.OADBTransactionImpl;
 import oracle.apps.fnd.framework.OAException;
 import java.sql.CallableStatement;
 import java.sql.SQLException;
 import java.sql.Types;

 //  ---------------------------------------------------------------
 //  ---    File generated by Oracle Business Components for Java.
 //  ---------------------------------------------------------------

 // od.oracle.apps.xxfin.ar.irec.invoicecopy.server.InvoiceCopyAM
 public class InvoiceCopyAMImpl extends OAApplicationModuleImpl
 //public class InvoiceCopyAMImpl extends AccountDetailsAMImpl
 {
   public static final String RCS_ID="$Header$ InvoiceCopyAMImpl.java 115.10 2007/07/18 03:00:00 bjl noship ";
   public static final boolean RCS_ID_RECORDED =
         VersionInfo.recordClassVersion(RCS_ID, "od.oracle.apps.xxfin.ar.irec.invoicecopy.server");

   /**
    *
    * This is the default constructor (do not remove)
    */
   public InvoiceCopyAMImpl() {
   }

   public String getProfileValue(String profileName) {
     // get the current transaction / connection
     OADBTransactionImpl txn = (OADBTransactionImpl)getOADBTransaction();

     return txn.getAppsContext().getProfileStore().getProfile(profileName);
   }

   /**
    *
    * Container's getter for CustomerVO1
    */
   public CustomerVOImpl getCustomerVO1()
   {
     return (CustomerVOImpl)findViewObject("CustomerVO1");
   }

   // initQuery is used to set the where condition on the CustomerVO
   //   object to the given Customer Account Id parameter and execute the query
   public void initQuery(String custAccountId) {
     CustomerVOImpl customerVO = getCustomerVO1();

     // set where clause and execute query if the CustomerVO object exists
     if (customerVO != null) {
       customerVO.initQuery(custAccountId);
     }
   }

   // initQuery is used to set the where condition on the CustomerVO
   //   object to the given Customer Account Number parameter and execute the query
   public void initQueryNumber(String accountNumber) {
     CustomerVOImpl customerVO = getCustomerVO1();

     // set where clause and execute query if the CustomerVO object exists
     if (customerVO != null) {
       customerVO.initQuery(accountNumber);
     }
   }

   // function to submit the XDO Request using the send invoice copies API
   public String submitXdoRequest
   ( String custAccountId, String custTrxList, String custConsBillList, String emailFlag,
     String emailAddress, String faxFlag, String faxNumber )
   {
     // get the current transaction / connection
     OADBTransactionImpl txn = (OADBTransactionImpl)getOADBTransaction();
   CallableStatement stmt = null;
     try {
       // build the pl/sql statement block
       //   This api call submits the send invoices conc request.  It is deferred
       //   so that the user does not have to wait for the results.  However, if
       //   any significant errors occur, then the user would have to check the conc
       //   request log to determine the problem
       StringBuffer sqlSB = new StringBuffer();
       sqlSB.append("BEGIN ");
       sqlSB.append("  :1 := ");
       sqlSB.append("    XX_ARI_INVOICE_COPY_PKG.send_invoices_deferred ");
       sqlSB.append("    ( p_cust_account_id      => :2, ");
       sqlSB.append("      p_invoice_trx_list     => :3, ");
       sqlSB.append("      p_cons_bill_list       => :4, ");
       sqlSB.append("      p_email_flag           => :5, ");
       sqlSB.append("      p_email_address        => :6, ");
       sqlSB.append("      p_fax_flag             => :7, ");
       sqlSB.append("      p_fax_number           => :8, ");
       sqlSB.append("      p_print_flag           => NULL, ");
       sqlSB.append("      p_printer_location     => NULL ); ");
       sqlSB.append("END; ");

       //System.out.println("Send Invoices Func: ");
       //System.out.println(sqlSB.toString());

       // create the callable statement using the pl/sql block
       stmt =
         txn.createCallableStatement(sqlSB.toString(),1);

       // register parameters in statement
       stmt.registerOutParameter(1,Types.NUMERIC);
       stmt.setString(2, custAccountId);
       stmt.setString(3, custTrxList);
       stmt.setString(4, custConsBillList);
       stmt.setString(5, emailFlag);
       stmt.setString(6, emailAddress);
       stmt.setString(7, faxFlag);
       stmt.setString(8, faxNumber);

       // execute pl/sql block
       stmt.execute();

       // retrieve the output parameter (Conc Program Request Id)
       String requestId = stmt.getString(1);

       // commit all work and return the Request Id
       txn.commit();
       return requestId;
     }
     catch (SQLException sqlException) {
       if (sqlException.toString().contains("ORA-20300") || sqlException.toString().contains("ORA-20301")) {  // 1.2
          this.writeDiagnostics(this, "InvoiceCopyAMImpl.submitXdoRequest() Exception - "+sqlException.toString(), 1);
          throw new OAException("XXFIN", "XX_ARI_0020_DUP_REQ_INV_EML", null, OAException.WARNING, null);  
       } else {
         // if any other SQL errors occur, display them to the user
         throw new OAException
         ( "Errors submitting XDO Request: " + sqlException.toString(),
           OAException.ERROR );
       }
     }
   finally {
     try {
       if (stmt != null)
         stmt.close();
     }  catch(Exception exc) {  }
     }     
   }


   /**
    *
    * Sample main for debugging Business Components code using the tester.
    */
   public static void main(String[] args)
   {
     launchTester("od.oracle.apps.xxfin.ar.irec.invoicecopy.server", "InvoiceCopyAMLocal");
   }


 }