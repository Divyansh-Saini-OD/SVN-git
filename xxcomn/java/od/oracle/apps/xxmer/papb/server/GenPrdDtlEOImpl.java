package od.oracle.apps.xxmer.papb.server;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class GenPrdDtlEOImpl extends OAEntityImpl 
{
  protected static final int PRODDTLID = 0;
  protected static final int PROJECTID = 1;
  protected static final int PROJECTNO = 2;
  protected static final int VPC = 3;
  protected static final int LINENO = 4;
  protected static final int INITITEMDECISION = 5;
  protected static final int FINALITEMDECISION = 6;
  protected static final int VENDORID = 7;
  protected static final int VENDORNAME = 8;
  protected static final int FACTORYID = 9;
  protected static final int FACTORYNAME = 10;
  protected static final int SOURCINGAGENT = 11;
  protected static final int SUBCLASS = 12;
  protected static final int SUBCLASSNAME = 13;
  protected static final int CLASS1 = 14;
  protected static final int CLASSNAME = 15;
  protected static final int DEPT = 16;
  protected static final int DEPTNAME = 17;
  protected static final int DIVISION = 18;
  protected static final int DIVISIONNAME = 19;
  protected static final int SKU = 20;
  protected static final int PRODUCTIMAGE = 21;
  protected static final int EXISTINGSKU = 22;
  protected static final int PRODUCTDESC = 23;
  protected static final int TESTINGGROUP = 24;
  protected static final int BRAND = 25;
  protected static final int SELLUNIT = 26;
  protected static final int PACKAGINGTYPE = 27;
  protected static final int FOBAMNT = 28;
  protected static final int DDPAMNT = 29;
  protected static final int PROJECTEDGMPCT = 30;
  protected static final int PROJECTSASP = 31;
  protected static final int PROJECTEDGM = 32;
  protected static final int NOOFSTORES = 33;
  protected static final int POGNO = 34;
  protected static final int POGDATE = 35;
  protected static final int QUOTEDATE = 36;
  protected static final int COSTVALPERIOD = 37;
  protected static final int COSTVALDATE = 38;
  protected static final int ITEMDIMEN = 39;
  protected static final int ITEMPURPOSE = 40;
  protected static final int PRODSPECS = 41;
  protected static final int PRODCONSTRUC = 42;
  protected static final int ADDLSOURCECOMMENTS = 43;
  protected static final int ADDLDICOMMENTS = 44;
  protected static final int ATTRIBUTE1 = 45;
  protected static final int ATTRIBUTE2 = 46;
  protected static final int ATTRIBUTE3 = 47;
  protected static final int ATTRIBUTE4 = 48;
  protected static final int ATTRIBUTE5 = 49;
  protected static final int ATTRIBUTE6 = 50;
  protected static final int ATTRIBUTE7 = 51;
  protected static final int ATTRIBUTE8 = 52;
  protected static final int ATTRIBUTE9 = 53;
  protected static final int ATTRIBUTE10 = 54;
  protected static final int ATTRIBUTE11 = 55;
  protected static final int ATTRIBUTE12 = 56;
  protected static final int ATTRIBUTE13 = 57;
  protected static final int ATTRIBUTE14 = 58;
  protected static final int ATTRIBUTE15 = 59;
  protected static final int CREATIONDATE = 60;
  protected static final int CREATEDBY = 61;
  protected static final int LASTUPDATEDATE = 62;
  protected static final int LASTUPDATEDBY = 63;
  protected static final int LASTUPDATELOGIN = 64;
  protected static final int ROWID = 65;


  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public GenPrdDtlEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxmer.papb.server.GenPrdDtlEO");
    }
    return mDefinitionObject;
  }



  /**
   * 
   * Gets the attribute value for ProdDtlId, using the alias name ProdDtlId
   */
  public Number getProdDtlId()
  {
    return (Number)getAttributeInternal(PRODDTLID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProdDtlId
   */
  public void setProdDtlId(Number value)
  {
    setAttributeInternal(PRODDTLID, value);
  }

  /**
   * 
   * Gets the attribute value for ProjectId, using the alias name ProjectId
   */
  public Number getProjectId()
  {
    return (Number)getAttributeInternal(PROJECTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProjectId
   */
  public void setProjectId(Number value)
  {
    setAttributeInternal(PROJECTID, value);
  }

  /**
   * 
   * Gets the attribute value for ProjectNo, using the alias name ProjectNo
   */
  public String getProjectNo()
  {
    return (String)getAttributeInternal(PROJECTNO);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProjectNo
   */
  public void setProjectNo(String value)
  {
    setAttributeInternal(PROJECTNO, value);
  }

  /**
   * 
   * Gets the attribute value for Vpc, using the alias name Vpc
   */
  public String getVpc()
  {
    return (String)getAttributeInternal(VPC);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Vpc
   */
  public void setVpc(String value)
  {
    setAttributeInternal(VPC, value);
  }





  /**
   * 
   * Gets the attribute value for LineNo, using the alias name LineNo
   */
  public Number getLineNo()
  {
    return (Number)getAttributeInternal(LINENO);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LineNo
   */
  public void setLineNo(Number value)
  {
    setAttributeInternal(LINENO, value);
  }

  /**
   * 
   * Gets the attribute value for InitItemDecision, using the alias name InitItemDecision
   */
  public String getInitItemDecision()
  {
    return (String)getAttributeInternal(INITITEMDECISION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InitItemDecision
   */
  public void setInitItemDecision(String value)
  {
    setAttributeInternal(INITITEMDECISION, value);
  }

  /**
   * 
   * Gets the attribute value for FinalItemDecision, using the alias name FinalItemDecision
   */
  public String getFinalItemDecision()
  {
    return (String)getAttributeInternal(FINALITEMDECISION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FinalItemDecision
   */
  public void setFinalItemDecision(String value)
  {
    setAttributeInternal(FINALITEMDECISION, value);
  }

  /**
   * 
   * Gets the attribute value for VendorId, using the alias name VendorId
   */
  public String getVendorId()
  {
    return (String)getAttributeInternal(VENDORID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VendorId
   */
  public void setVendorId(String value)
  {
    setAttributeInternal(VENDORID, value);
  }

  /**
   * 
   * Gets the attribute value for VendorName, using the alias name VendorName
   */
  public String getVendorName()
  {
    return (String)getAttributeInternal(VENDORNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VendorName
   */
  public void setVendorName(String value)
  {
    setAttributeInternal(VENDORNAME, value);
  }

  /**
   * 
   * Gets the attribute value for FactoryId, using the alias name FactoryId
   */
  public String getFactoryId()
  {
    return (String)getAttributeInternal(FACTORYID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FactoryId
   */
  public void setFactoryId(String value)
  {
    setAttributeInternal(FACTORYID, value);
  }

  /**
   * 
   * Gets the attribute value for FactoryName, using the alias name FactoryName
   */
  public String getFactoryName()
  {
    return (String)getAttributeInternal(FACTORYNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FactoryName
   */
  public void setFactoryName(String value)
  {
    setAttributeInternal(FACTORYNAME, value);
  }

  /**
   * 
   * Gets the attribute value for SourcingAgent, using the alias name SourcingAgent
   */
  public String getSourcingAgent()
  {
    return (String)getAttributeInternal(SOURCINGAGENT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SourcingAgent
   */
  public void setSourcingAgent(String value)
  {
    setAttributeInternal(SOURCINGAGENT, value);
  }

  /**
   * 
   * Gets the attribute value for Subclass, using the alias name Subclass
   */
  public Number getSubclass()
  {
    return (Number)getAttributeInternal(SUBCLASS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Subclass
   */
  public void setSubclass(Number value)
  {
    setAttributeInternal(SUBCLASS, value);
  }

  /**
   * 
   * Gets the attribute value for SubclassName, using the alias name SubclassName
   */
  public String getSubclassName()
  {
    return (String)getAttributeInternal(SUBCLASSNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SubclassName
   */
  public void setSubclassName(String value)
  {
    setAttributeInternal(SUBCLASSNAME, value);
  }

  /**
   * 
   * Gets the attribute value for Class1, using the alias name Class1
   */
  public Number getClass1()
  {
    return (Number)getAttributeInternal(CLASS1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Class1
   */
  public void setClass1(Number value)
  {
    setAttributeInternal(CLASS1, value);
  }

  /**
   * 
   * Gets the attribute value for ClassName, using the alias name ClassName
   */
  public String getClassName()
  {
    return (String)getAttributeInternal(CLASSNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ClassName
   */
  public void setClassName(String value)
  {
    setAttributeInternal(CLASSNAME, value);
  }

  /**
   * 
   * Gets the attribute value for Dept, using the alias name Dept
   */
  public Number getDept()
  {
    return (Number)getAttributeInternal(DEPT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Dept
   */
  public void setDept(Number value)
  {
    setAttributeInternal(DEPT, value);
  }

  /**
   * 
   * Gets the attribute value for DeptName, using the alias name DeptName
   */
  public String getDeptName()
  {
    return (String)getAttributeInternal(DEPTNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DeptName
   */
  public void setDeptName(String value)
  {
    setAttributeInternal(DEPTNAME, value);
  }

  /**
   * 
   * Gets the attribute value for Division, using the alias name Division
   */
  public Number getDivision()
  {
    return (Number)getAttributeInternal(DIVISION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Division
   */
  public void setDivision(Number value)
  {
    setAttributeInternal(DIVISION, value);
  }

  /**
   * 
   * Gets the attribute value for DivisionName, using the alias name DivisionName
   */
  public String getDivisionName()
  {
    return (String)getAttributeInternal(DIVISIONNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DivisionName
   */
  public void setDivisionName(String value)
  {
    setAttributeInternal(DIVISIONNAME, value);
  }

  /**
   * 
   * Gets the attribute value for Sku, using the alias name Sku
   */
  public String getSku()
  {
    return (String)getAttributeInternal(SKU);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Sku
   */
  public void setSku(String value)
  {
    setAttributeInternal(SKU, value);
  }

  /**
   * 
   * Gets the attribute value for ProductImage, using the alias name ProductImage
   */
  public String getProductImage()
  {
    return (String)getAttributeInternal(PRODUCTIMAGE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProductImage
   */
  public void setProductImage(String value)
  {
    setAttributeInternal(PRODUCTIMAGE, value);
  }

  /**
   * 
   * Gets the attribute value for ExistingSku, using the alias name ExistingSku
   */
  public String getExistingSku()
  {
    return (String)getAttributeInternal(EXISTINGSKU);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ExistingSku
   */
  public void setExistingSku(String value)
  {
    setAttributeInternal(EXISTINGSKU, value);
  }

  /**
   * 
   * Gets the attribute value for ProductDesc, using the alias name ProductDesc
   */
  public String getProductDesc()
  {
    return (String)getAttributeInternal(PRODUCTDESC);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProductDesc
   */
  public void setProductDesc(String value)
  {
    setAttributeInternal(PRODUCTDESC, value);
  }

  /**
   * 
   * Gets the attribute value for TestingGroup, using the alias name TestingGroup
   */
  public String getTestingGroup()
  {
    return (String)getAttributeInternal(TESTINGGROUP);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TestingGroup
   */
  public void setTestingGroup(String value)
  {
    setAttributeInternal(TESTINGGROUP, value);
  }

  /**
   * 
   * Gets the attribute value for Brand, using the alias name Brand
   */
  public String getBrand()
  {
    return (String)getAttributeInternal(BRAND);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Brand
   */
  public void setBrand(String value)
  {
    setAttributeInternal(BRAND, value);
  }

  /**
   * 
   * Gets the attribute value for SellUnit, using the alias name SellUnit
   */
  public Number getSellUnit()
  {
    return (Number)getAttributeInternal(SELLUNIT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SellUnit
   */
  public void setSellUnit(Number value)
  {
    setAttributeInternal(SELLUNIT, value);
  }

  /**
   * 
   * Gets the attribute value for PackagingType, using the alias name PackagingType
   */
  public String getPackagingType()
  {
    return (String)getAttributeInternal(PACKAGINGTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PackagingType
   */
  public void setPackagingType(String value)
  {
    setAttributeInternal(PACKAGINGTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for FobAmnt, using the alias name FobAmnt
   */
  public Number getFobAmnt()
  {
    return (Number)getAttributeInternal(FOBAMNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FobAmnt
   */
  public void setFobAmnt(Number value)
  {
    setAttributeInternal(FOBAMNT, value);
  }

  /**
   * 
   * Gets the attribute value for DdpAmnt, using the alias name DdpAmnt
   */
  public Number getDdpAmnt()
  {
    return (Number)getAttributeInternal(DDPAMNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DdpAmnt
   */
  public void setDdpAmnt(Number value)
  {
    setAttributeInternal(DDPAMNT, value);
  }

  /**
   * 
   * Gets the attribute value for ProjectedGmPct, using the alias name ProjectedGmPct
   */
  public Number getProjectedGmPct()
  {
    return (Number)getAttributeInternal(PROJECTEDGMPCT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProjectedGmPct
   */
  public void setProjectedGmPct(Number value)
  {
    setAttributeInternal(PROJECTEDGMPCT, value);
  }

  /**
   * 
   * Gets the attribute value for ProjectsAsp, using the alias name ProjectsAsp
   */
  public Number getProjectsAsp()
  {
    return (Number)getAttributeInternal(PROJECTSASP);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProjectsAsp
   */
  public void setProjectsAsp(Number value)
  {
    setAttributeInternal(PROJECTSASP, value);
  }

  /**
   * 
   * Gets the attribute value for ProjectedGm, using the alias name ProjectedGm
   */
  public Number getProjectedGm()
  {
    return (Number)getAttributeInternal(PROJECTEDGM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProjectedGm
   */
  public void setProjectedGm(Number value)
  {
    setAttributeInternal(PROJECTEDGM, value);
  }

  /**
   * 
   * Gets the attribute value for NoOfStores, using the alias name NoOfStores
   */
  public Number getNoOfStores()
  {
    return (Number)getAttributeInternal(NOOFSTORES);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NoOfStores
   */
  public void setNoOfStores(Number value)
  {
    setAttributeInternal(NOOFSTORES, value);
  }

  /**
   * 
   * Gets the attribute value for PogNo, using the alias name PogNo
   */
  public String getPogNo()
  {
    return (String)getAttributeInternal(POGNO);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PogNo
   */
  public void setPogNo(String value)
  {
    setAttributeInternal(POGNO, value);
  }

  /**
   * 
   * Gets the attribute value for PogDate, using the alias name PogDate
   */
  public Date getPogDate()
  {
    return (Date)getAttributeInternal(POGDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PogDate
   */
  public void setPogDate(Date value)
  {
    setAttributeInternal(POGDATE, value);
  }

  /**
   * 
   * Gets the attribute value for QuoteDate, using the alias name QuoteDate
   */
  public Date getQuoteDate()
  {
    return (Date)getAttributeInternal(QUOTEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for QuoteDate
   */
  public void setQuoteDate(Date value)
  {
    setAttributeInternal(QUOTEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CostValPeriod, using the alias name CostValPeriod
   */
  public Number getCostValPeriod()
  {
    return (Number)getAttributeInternal(COSTVALPERIOD);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CostValPeriod
   */
  public void setCostValPeriod(Number value)
  {
    setAttributeInternal(COSTVALPERIOD, value);
  }

  /**
   * 
   * Gets the attribute value for CostValDate, using the alias name CostValDate
   */
  public Date getCostValDate()
  {
    return (Date)getAttributeInternal(COSTVALDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CostValDate
   */
  public void setCostValDate(Date value)
  {
    setAttributeInternal(COSTVALDATE, value);
  }

  /**
   * 
   * Gets the attribute value for ItemDimen, using the alias name ItemDimen
   */
  public String getItemDimen()
  {
    return (String)getAttributeInternal(ITEMDIMEN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ItemDimen
   */
  public void setItemDimen(String value)
  {
    setAttributeInternal(ITEMDIMEN, value);
  }

  /**
   * 
   * Gets the attribute value for ItemPurpose, using the alias name ItemPurpose
   */
  public String getItemPurpose()
  {
    return (String)getAttributeInternal(ITEMPURPOSE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ItemPurpose
   */
  public void setItemPurpose(String value)
  {
    setAttributeInternal(ITEMPURPOSE, value);
  }

  /**
   * 
   * Gets the attribute value for ProdSpecs, using the alias name ProdSpecs
   */
  public String getProdSpecs()
  {
    return (String)getAttributeInternal(PRODSPECS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProdSpecs
   */
  public void setProdSpecs(String value)
  {
    setAttributeInternal(PRODSPECS, value);
  }

  /**
   * 
   * Gets the attribute value for ProdConstruc, using the alias name ProdConstruc
   */
  public String getProdConstruc()
  {
    return (String)getAttributeInternal(PRODCONSTRUC);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProdConstruc
   */
  public void setProdConstruc(String value)
  {
    setAttributeInternal(PRODCONSTRUC, value);
  }

  /**
   * 
   * Gets the attribute value for AddlSourceComments, using the alias name AddlSourceComments
   */
  public String getAddlSourceComments()
  {
    return (String)getAttributeInternal(ADDLSOURCECOMMENTS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AddlSourceComments
   */
  public void setAddlSourceComments(String value)
  {
    setAttributeInternal(ADDLSOURCECOMMENTS, value);
  }

  /**
   * 
   * Gets the attribute value for AddlDiComments, using the alias name AddlDiComments
   */
  public String getAddlDiComments()
  {
    return (String)getAttributeInternal(ADDLDICOMMENTS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AddlDiComments
   */
  public void setAddlDiComments(String value)
  {
    setAttributeInternal(ADDLDICOMMENTS, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute1, using the alias name Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute2, using the alias name Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute3, using the alias name Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute4, using the alias name Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute5, using the alias name Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute6, using the alias name Attribute6
   */
  public String getAttribute6()
  {
    return (String)getAttributeInternal(ATTRIBUTE6);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute6
   */
  public void setAttribute6(String value)
  {
    setAttributeInternal(ATTRIBUTE6, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute7, using the alias name Attribute7
   */
  public String getAttribute7()
  {
    return (String)getAttributeInternal(ATTRIBUTE7);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute7
   */
  public void setAttribute7(String value)
  {
    setAttributeInternal(ATTRIBUTE7, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute8, using the alias name Attribute8
   */
  public String getAttribute8()
  {
    return (String)getAttributeInternal(ATTRIBUTE8);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute8
   */
  public void setAttribute8(String value)
  {
    setAttributeInternal(ATTRIBUTE8, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute9, using the alias name Attribute9
   */
  public String getAttribute9()
  {
    return (String)getAttributeInternal(ATTRIBUTE9);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute9
   */
  public void setAttribute9(String value)
  {
    setAttributeInternal(ATTRIBUTE9, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute10, using the alias name Attribute10
   */
  public String getAttribute10()
  {
    return (String)getAttributeInternal(ATTRIBUTE10);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute10
   */
  public void setAttribute10(String value)
  {
    setAttributeInternal(ATTRIBUTE10, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute11, using the alias name Attribute11
   */
  public String getAttribute11()
  {
    return (String)getAttributeInternal(ATTRIBUTE11);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute11
   */
  public void setAttribute11(String value)
  {
    setAttributeInternal(ATTRIBUTE11, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute12, using the alias name Attribute12
   */
  public String getAttribute12()
  {
    return (String)getAttributeInternal(ATTRIBUTE12);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute12
   */
  public void setAttribute12(String value)
  {
    setAttributeInternal(ATTRIBUTE12, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute13, using the alias name Attribute13
   */
  public String getAttribute13()
  {
    return (String)getAttributeInternal(ATTRIBUTE13);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute13
   */
  public void setAttribute13(String value)
  {
    setAttributeInternal(ATTRIBUTE13, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute14, using the alias name Attribute14
   */
  public String getAttribute14()
  {
    return (String)getAttributeInternal(ATTRIBUTE14);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute14
   */
  public void setAttribute14(String value)
  {
    setAttributeInternal(ATTRIBUTE14, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute15, using the alias name Attribute15
   */
  public String getAttribute15()
  {
    return (String)getAttributeInternal(ATTRIBUTE15);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute15
   */
  public void setAttribute15(String value)
  {
    setAttributeInternal(ATTRIBUTE15, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for RowID, using the alias name RowID
   */
  public RowID getRowID()
  {
    return (RowID)getAttributeInternal(ROWID);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PRODDTLID:
        return getProdDtlId();
      case PROJECTID:
        return getProjectId();
      case PROJECTNO:
        return getProjectNo();
      case VPC:
        return getVpc();
      case LINENO:
        return getLineNo();
      case INITITEMDECISION:
        return getInitItemDecision();
      case FINALITEMDECISION:
        return getFinalItemDecision();
      case VENDORID:
        return getVendorId();
      case VENDORNAME:
        return getVendorName();
      case FACTORYID:
        return getFactoryId();
      case FACTORYNAME:
        return getFactoryName();
      case SOURCINGAGENT:
        return getSourcingAgent();
      case SUBCLASS:
        return getSubclass();
      case SUBCLASSNAME:
        return getSubclassName();
      case CLASS1:
        return getClass1();
      case CLASSNAME:
        return getClassName();
      case DEPT:
        return getDept();
      case DEPTNAME:
        return getDeptName();
      case DIVISION:
        return getDivision();
      case DIVISIONNAME:
        return getDivisionName();
      case SKU:
        return getSku();
      case PRODUCTIMAGE:
        return getProductImage();
      case EXISTINGSKU:
        return getExistingSku();
      case PRODUCTDESC:
        return getProductDesc();
      case TESTINGGROUP:
        return getTestingGroup();
      case BRAND:
        return getBrand();
      case SELLUNIT:
        return getSellUnit();
      case PACKAGINGTYPE:
        return getPackagingType();
      case FOBAMNT:
        return getFobAmnt();
      case DDPAMNT:
        return getDdpAmnt();
      case PROJECTEDGMPCT:
        return getProjectedGmPct();
      case PROJECTSASP:
        return getProjectsAsp();
      case PROJECTEDGM:
        return getProjectedGm();
      case NOOFSTORES:
        return getNoOfStores();
      case POGNO:
        return getPogNo();
      case POGDATE:
        return getPogDate();
      case QUOTEDATE:
        return getQuoteDate();
      case COSTVALPERIOD:
        return getCostValPeriod();
      case COSTVALDATE:
        return getCostValDate();
      case ITEMDIMEN:
        return getItemDimen();
      case ITEMPURPOSE:
        return getItemPurpose();
      case PRODSPECS:
        return getProdSpecs();
      case PRODCONSTRUC:
        return getProdConstruc();
      case ADDLSOURCECOMMENTS:
        return getAddlSourceComments();
      case ADDLDICOMMENTS:
        return getAddlDiComments();
      case ATTRIBUTE1:
        return getAttribute1();
      case ATTRIBUTE2:
        return getAttribute2();
      case ATTRIBUTE3:
        return getAttribute3();
      case ATTRIBUTE4:
        return getAttribute4();
      case ATTRIBUTE5:
        return getAttribute5();
      case ATTRIBUTE6:
        return getAttribute6();
      case ATTRIBUTE7:
        return getAttribute7();
      case ATTRIBUTE8:
        return getAttribute8();
      case ATTRIBUTE9:
        return getAttribute9();
      case ATTRIBUTE10:
        return getAttribute10();
      case ATTRIBUTE11:
        return getAttribute11();
      case ATTRIBUTE12:
        return getAttribute12();
      case ATTRIBUTE13:
        return getAttribute13();
      case ATTRIBUTE14:
        return getAttribute14();
      case ATTRIBUTE15:
        return getAttribute15();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case ROWID:
        return getRowID();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PRODDTLID:
        setProdDtlId((Number)value);
        return;
      case PROJECTID:
        setProjectId((Number)value);
        return;
      case PROJECTNO:
        setProjectNo((String)value);
        return;
      case VPC:
        setVpc((String)value);
        return;
      case LINENO:
        setLineNo((Number)value);
        return;
      case INITITEMDECISION:
        setInitItemDecision((String)value);
        return;
      case FINALITEMDECISION:
        setFinalItemDecision((String)value);
        return;
      case VENDORID:
        setVendorId((String)value);
        return;
      case VENDORNAME:
        setVendorName((String)value);
        return;
      case FACTORYID:
        setFactoryId((String)value);
        return;
      case FACTORYNAME:
        setFactoryName((String)value);
        return;
      case SOURCINGAGENT:
        setSourcingAgent((String)value);
        return;
      case SUBCLASS:
        setSubclass((Number)value);
        return;
      case SUBCLASSNAME:
        setSubclassName((String)value);
        return;
      case CLASS1:
        setClass1((Number)value);
        return;
      case CLASSNAME:
        setClassName((String)value);
        return;
      case DEPT:
        setDept((Number)value);
        return;
      case DEPTNAME:
        setDeptName((String)value);
        return;
      case DIVISION:
        setDivision((Number)value);
        return;
      case DIVISIONNAME:
        setDivisionName((String)value);
        return;
      case SKU:
        setSku((String)value);
        return;
      case PRODUCTIMAGE:
        setProductImage((String)value);
        return;
      case EXISTINGSKU:
        setExistingSku((String)value);
        return;
      case PRODUCTDESC:
        setProductDesc((String)value);
        return;
      case TESTINGGROUP:
        setTestingGroup((String)value);
        return;
      case BRAND:
        setBrand((String)value);
        return;
      case SELLUNIT:
        setSellUnit((Number)value);
        return;
      case PACKAGINGTYPE:
        setPackagingType((String)value);
        return;
      case FOBAMNT:
        setFobAmnt((Number)value);
        return;
      case DDPAMNT:
        setDdpAmnt((Number)value);
        return;
      case PROJECTEDGMPCT:
        setProjectedGmPct((Number)value);
        return;
      case PROJECTSASP:
        setProjectsAsp((Number)value);
        return;
      case PROJECTEDGM:
        setProjectedGm((Number)value);
        return;
      case NOOFSTORES:
        setNoOfStores((Number)value);
        return;
      case POGNO:
        setPogNo((String)value);
        return;
      case POGDATE:
        setPogDate((Date)value);
        return;
      case QUOTEDATE:
        setQuoteDate((Date)value);
        return;
      case COSTVALPERIOD:
        setCostValPeriod((Number)value);
        return;
      case COSTVALDATE:
        setCostValDate((Date)value);
        return;
      case ITEMDIMEN:
        setItemDimen((String)value);
        return;
      case ITEMPURPOSE:
        setItemPurpose((String)value);
        return;
      case PRODSPECS:
        setProdSpecs((String)value);
        return;
      case PRODCONSTRUC:
        setProdConstruc((String)value);
        return;
      case ADDLSOURCECOMMENTS:
        setAddlSourceComments((String)value);
        return;
      case ADDLDICOMMENTS:
        setAddlDiComments((String)value);
        return;
      case ATTRIBUTE1:
        setAttribute1((String)value);
        return;
      case ATTRIBUTE2:
        setAttribute2((String)value);
        return;
      case ATTRIBUTE3:
        setAttribute3((String)value);
        return;
      case ATTRIBUTE4:
        setAttribute4((String)value);
        return;
      case ATTRIBUTE5:
        setAttribute5((String)value);
        return;
      case ATTRIBUTE6:
        setAttribute6((String)value);
        return;
      case ATTRIBUTE7:
        setAttribute7((String)value);
        return;
      case ATTRIBUTE8:
        setAttribute8((String)value);
        return;
      case ATTRIBUTE9:
        setAttribute9((String)value);
        return;
      case ATTRIBUTE10:
        setAttribute10((String)value);
        return;
      case ATTRIBUTE11:
        setAttribute11((String)value);
        return;
      case ATTRIBUTE12:
        setAttribute12((String)value);
        return;
      case ATTRIBUTE13:
        setAttribute13((String)value);
        return;
      case ATTRIBUTE14:
        setAttribute14((String)value);
        return;
      case ATTRIBUTE15:
        setAttribute15((String)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }
}