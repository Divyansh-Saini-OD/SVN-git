package od.oracle.apps.xxmer.plmpjrdashboard.server;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class OD_MyProjectPortfolioVORowImpl extends OAViewRowImpl 
{



  protected static final int ROWNUMBER = 0;
  protected static final int MAXPPAPROJECTID = 1;
  protected static final int PROJNAME = 2;
  protected static final int PROJNUMBER = 3;
  protected static final int PROJECTTYPE = 4;
  protected static final int TASK1 = 5;
  protected static final int TASK2 = 6;
  protected static final int TASK3 = 7;
  protected static final int TASK4 = 8;
  protected static final int TASK5 = 9;
  protected static final int TASK6 = 10;
  protected static final int TASK7 = 11;
  protected static final int TASK8 = 12;
  protected static final int TASK9 = 13;
  protected static final int TASK10 = 14;
  protected static final int TASK11 = 15;
  protected static final int TASK12 = 16;
  protected static final int TASK13 = 17;
  protected static final int TASK14 = 18;
  protected static final int TASK15 = 19;
  protected static final int TASK16 = 20;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public OD_MyProjectPortfolioVORowImpl()
  {
  }


  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ROWNUMBER:
        return getRowNumber();
      case MAXPPAPROJECTID:
        return getMaxPpaProjectId();
      case PROJNAME:
        return getProjName();
      case PROJNUMBER:
        return getProjNumber();
      case PROJECTTYPE:
        return getProjectType();
      case TASK1:
        return getTask1();
      case TASK2:
        return getTask2();
      case TASK3:
        return getTask3();
      case TASK4:
        return getTask4();
      case TASK5:
        return getTask5();
      case TASK6:
        return getTask6();
      case TASK7:
        return getTask7();
      case TASK8:
        return getTask8();
      case TASK9:
        return getTask9();
      case TASK10:
        return getTask10();
      case TASK11:
        return getTask11();
      case TASK12:
        return getTask12();
      case TASK13:
        return getTask13();
      case TASK14:
        return getTask14();
      case TASK15:
        return getTask15();
      case TASK16:
        return getTask16();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case MAXPPAPROJECTID:
        setMaxPpaProjectId((Number)value);
        return;
      case PROJNAME:
        setProjName((String)value);
        return;
      case PROJNUMBER:
        setProjNumber((String)value);
        return;
      case PROJECTTYPE:
        setProjectType((String)value);
        return;
      case TASK1:
        setTask1((String)value);
        return;
      case TASK2:
        setTask2((String)value);
        return;
      case TASK3:
        setTask3((String)value);
        return;
      case TASK4:
        setTask4((String)value);
        return;
      case TASK5:
        setTask5((String)value);
        return;
      case TASK6:
        setTask6((String)value);
        return;
      case TASK7:
        setTask7((String)value);
        return;
      case TASK8:
        setTask8((String)value);
        return;
      case TASK9:
        setTask9((String)value);
        return;
      case TASK10:
        setTask10((String)value);
        return;
      case TASK11:
        setTask11((String)value);
        return;
      case TASK12:
        setTask12((String)value);
        return;
      case TASK13:
        setTask13((String)value);
        return;
      case TASK14:
        setTask14((String)value);
        return;
      case TASK15:
        setTask15((String)value);
        return;
      case TASK16:
        setTask16((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute MaxPpaProjectId
   */
  public Number getMaxPpaProjectId()
  {
    return (Number)getAttributeInternal(MAXPPAPROJECTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute MaxPpaProjectId
   */
  public void setMaxPpaProjectId(Number value)
  {
    setAttributeInternal(MAXPPAPROJECTID, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ProjName
   */
  public String getProjName()
  {
    return (String)getAttributeInternal(PROJNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ProjName
   */
  public void setProjName(String value)
  {
    setAttributeInternal(PROJNAME, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ProjNumber
   */
  public String getProjNumber()
  {
    return (String)getAttributeInternal(PROJNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ProjNumber
   */
  public void setProjNumber(String value)
  {
    setAttributeInternal(PROJNUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ProjectType
   */
  public String getProjectType()
  {
    return (String)getAttributeInternal(PROJECTTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ProjectType
   */
  public void setProjectType(String value)
  {
    setAttributeInternal(PROJECTTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task1
   */
  public String getTask1()
  {
    return (String)getAttributeInternal(TASK1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task1
   */
  public void setTask1(String value)
  {
    setAttributeInternal(TASK1, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task2
   */
  public String getTask2()
  {
    return (String)getAttributeInternal(TASK2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task2
   */
  public void setTask2(String value)
  {
    setAttributeInternal(TASK2, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task3
   */
  public String getTask3()
  {
    return (String)getAttributeInternal(TASK3);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task3
   */
  public void setTask3(String value)
  {
    setAttributeInternal(TASK3, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task4
   */
  public String getTask4()
  {
    return (String)getAttributeInternal(TASK4);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task4
   */
  public void setTask4(String value)
  {
    setAttributeInternal(TASK4, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task5
   */
  public String getTask5()
  {
    return (String)getAttributeInternal(TASK5);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task5
   */
  public void setTask5(String value)
  {
    setAttributeInternal(TASK5, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task6
   */
  public String getTask6()
  {
    return (String)getAttributeInternal(TASK6);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task6
   */
  public void setTask6(String value)
  {
    setAttributeInternal(TASK6, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task7
   */
  public String getTask7()
  {
    return (String)getAttributeInternal(TASK7);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task7
   */
  public void setTask7(String value)
  {
    setAttributeInternal(TASK7, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task8
   */
  public String getTask8()
  {
    return (String)getAttributeInternal(TASK8);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task8
   */
  public void setTask8(String value)
  {
    setAttributeInternal(TASK8, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task9
   */
  public String getTask9()
  {
    return (String)getAttributeInternal(TASK9);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task9
   */
  public void setTask9(String value)
  {
    setAttributeInternal(TASK9, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task10
   */
  public String getTask10()
  {
    return (String)getAttributeInternal(TASK10);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task10
   */
  public void setTask10(String value)
  {
    setAttributeInternal(TASK10, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task11
   */
  public String getTask11()
  {
    return (String)getAttributeInternal(TASK11);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task11
   */
  public void setTask11(String value)
  {
    setAttributeInternal(TASK11, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task12
   */
  public String getTask12()
  {
    return (String)getAttributeInternal(TASK12);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task12
   */
  public void setTask12(String value)
  {
    setAttributeInternal(TASK12, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task13
   */
  public String getTask13()
  {
    return (String)getAttributeInternal(TASK13);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task13
   */
  public void setTask13(String value)
  {
    setAttributeInternal(TASK13, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task14
   */
  public String getTask14()
  {
    return (String)getAttributeInternal(TASK14);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task14
   */
  public void setTask14(String value)
  {
    setAttributeInternal(TASK14, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task15
   */
  public String getTask15()
  {
    return (String)getAttributeInternal(TASK15);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task15
   */
  public void setTask15(String value)
  {
    setAttributeInternal(TASK15, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Task16
   */
  public String getTask16()
  {
    return (String)getAttributeInternal(TASK16);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Task16
   */
  public void setTask16(String value)
  {
    setAttributeInternal(TASK16, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute RowNumber
   */
  public String getRowNumber()
  {
    return (String)getAttributeInternal(ROWNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute RowNumber
   */
  public void setRowNumber(String value)
  {
    setAttributeInternal(ROWNUMBER, value);
  }
}