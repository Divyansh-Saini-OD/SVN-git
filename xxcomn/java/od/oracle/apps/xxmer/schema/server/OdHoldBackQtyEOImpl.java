package od.oracle.apps.xxmer.schema.server;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
//import oracle.jbo.NoDefException;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.common.MessageToken;

//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class OdHoldBackQtyEOImpl extends OAEntityImpl 
{
  protected static final int ITEM = 0;
  protected static final int WAREHOUSELOCATION = 1;
  protected static final int HOLDQUANTITY = 2;
  protected static final int STARTDATE = 3;
  protected static final int ENDDATE = 4;
  protected static final int LASTUPDATEDATE = 5;
  protected static final int LASTUPDATEDBY = 6;
  protected static final int CREATIONDATE = 7;
  protected static final int CREATEDBY = 8;
  protected static final int LASTUPDATELOGIN = 9;
  protected static final int EBSHOLDBACKQTYWHEO = 10;
  protected static final int EBSHOLDBACKQTYHIEREO = 11;






  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public OdHoldBackQtyEOImpl()
  {
    System.out.println("OdHoldBackQtyEOImpl: OdHoldBackQtyEOImpl called");   
    System.out.println("OdHoldBackQtyEOImpl: OdHoldBackQtyEOImpl exited");   
  
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxmer.schema.server.OdHoldBackQtyEO");
    }
    return mDefinitionObject;
  }







  /**
   * 
   * Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    System.out.println("OdHoldBackQtyEOImpl: create called");   
  
    super.create(attributeList);
    System.out.println("OdHoldBackQtyEOImpl: create exited");   

  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    System.out.println("OdHoldBackQtyEOImpl: remove called");   
  
    super.remove();
    System.out.println("OdHoldBackQtyEOImpl: remove exited");   

  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    System.out.println("OdHoldBackQtyEOImpl: validateEntity called");   
  
    super.validateEntity();
    System.out.println("OdHoldBackQtyEOImpl: validateEntity exited");   

  }

  /**
   * 
   * Gets the attribute value for Item, using the alias name Item
   */
  public String getItem()
  {
    System.out.println("OdHoldBackQtyEOImpl: getItem called");   
    System.out.println("OdHoldBackQtyEOImpl: getItem exited");   
  
    return (String)getAttributeInternal(ITEM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Item
   * 
   * and will verify whether item already exists in ebs
   */
  public void setItem(String value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setItem called with value " + value);   
  
    if(value != null )
       {
       System.out.println("OdHoldBackQtyEOImpl: value not null");   
       
    	 OADBTransaction transaction = getOADBTransaction();
    	 Object[] ItemKey = { value};
    	 //EntityDefImpl itemDefinition = EbsHoldBackQtyWhEOImpl.getDefinitionObject();
    	 //Test if Vendor exists in EBS Table
     	 //EbsHoldBackQtyWhEOImpl holdBackQtyTest = 
    	 //  (EbsHoldBackQtyWhEOImpl)itemDefinition.findByPrimaryKey(transaction, new Key(ItemKey));

       //  @@@@@  1/7/08
      System.out.println("OdHoldBackQtyEOImpl: setItem pre ee item assignment");   

       HBQItemEntityExpert item = getHBQItemEntityExpert(getOADBTransaction());

      System.out.println("OdHoldBackQtyEOImpl: setItem item active?");   

       if (!(item.isItemActive(value)))
       {
         System.out.println("OdHoldBackQtyEOImpl: setItem item not active");   
       
    	   MessageToken[] tokens = {new MessageToken("ITEMID",value.toString())};
    	   //  MessageToken[] tokens = {new MessageToken("VENDORID",value.toString())};
 	       //  throw new OAException("XXMER","XXMER_VC_VENDOR_ID_NOT_EXISTS",tokens);
 	       throw new OAException("XXMER","item does not exist",tokens);
       }
       
      	 //If not found throw Exception  
	     //if (holdBackQtyTest == null)
    	 //{ 
    	 //  MessageToken[] tokens = {new MessageToken("VENDORID",value.toString())};
 	     //  throw new OAException("XXMER","XXMER_VC_VENDOR_ID_NOT_EXISTS",tokens);
     	 //}
    	 //This if Vendor Already exists in Table
//    	 EntityDefImpl holdBackQtyDefinition = OdHoldBackQtyEOImpl.getDefinitionObject();
      
//    	 OdHoldBackQtyEOImpl holdBackQtyDupTest = 
//	           (OdHoldBackQtyEOImpl)holdBackQtyDefinition.findByPrimaryKey(transaction, new Key(ItemKey));

    	 //If found throw Exception (Dup key found) 
//    	 if (holdBackQtyDupTest!= null)
//    	 {
//    	   MessageToken[] tokens = {new MessageToken("Item",value.toString())};   
//	       throw new OAException("XXMER","XXMER_VC_DUP",tokens);
//    	 }
   }      
  
    setAttributeInternal(ITEM, value);

    System.out.println("OdHoldBackQtyEOImpl: setItem exited");   
  }

  /**
   * 
   * Gets the attribute value for WarehouseLocation, using the alias name WarehouseLocation
   */
  public String getWarehouseLocation()
  {
    System.out.println("OdHoldBackQtyEOImpl: getWarehouseLocation called");   
    System.out.println("OdHoldBackQtyEOImpl: getWarehouseLocation exited");   

    return (String)getAttributeInternal(WAREHOUSELOCATION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WarehouseLocation
   */
  public void setWarehouseLocation(String value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setWarehouseLocation called");   

    setAttributeInternal(WAREHOUSELOCATION, value);
    System.out.println("OdHoldBackQtyEOImpl: setWarehouseLocation exited");   
    
  }

  /**
   * 
   * Gets the attribute value for HoldQuantity, using the alias name HoldQuantity
   */
  public Number getHoldQuantity()
  {
    System.out.println("OdHoldBackQtyEOImpl: getHoldQuantity called");   
    System.out.println("OdHoldBackQtyEOImpl: getHoldQuantity exited");   
  
    return (Number)getAttributeInternal(HOLDQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for HoldQuantity
   */
  public void setHoldQuantity(Number value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setHoldQuantity called");   
  
    setAttributeInternal(HOLDQUANTITY, value);
    System.out.println("OdHoldBackQtyEOImpl: setHoldQuantity exited");   

  }

  /**
   * 
   * Gets the attribute value for StartDate, using the alias name StartDate
   */
  public Date getStartDate()
  {
    System.out.println("OdHoldBackQtyEOImpl: getStartDate called");   
    System.out.println("OdHoldBackQtyEOImpl: getStartDate exited");   
  
    return (Date)getAttributeInternal(STARTDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for StartDate
   */
  public void setStartDate(Date value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setStartDate called");   
  
    setAttributeInternal(STARTDATE, value);
    System.out.println("OdHoldBackQtyEOImpl: setStartDate exited");   

  }

  /**
   * 
   * Gets the attribute value for EndDate, using the alias name EndDate
   */
  public Date getEndDate()
  {
    System.out.println("OdHoldBackQtyEOImpl: getEndDate called");   
    System.out.println("OdHoldBackQtyEOImpl: getEndDate exited");   

    return (Date)getAttributeInternal(ENDDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EndDate
   */
  public void setEndDate(Date value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setEndDate called");   
  
    setAttributeInternal(ENDDATE, value);
    System.out.println("OdHoldBackQtyEOImpl: setEndDate exited");   

  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    System.out.println("OdHoldBackQtyEOImpl: getLastUpdateDate called");   
    System.out.println("OdHoldBackQtyEOImpl: getLastUpdateDate exited");   

    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setLastUpdateDate called");   
  
    setAttributeInternal(LASTUPDATEDATE, value);
    System.out.println("OdHoldBackQtyEOImpl: setLastUpdateDate exited");   

  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    System.out.println("OdHoldBackQtyEOImpl: getLastUpdatedBy called");   
    System.out.println("OdHoldBackQtyEOImpl: getLastUpdatedBy exited");   

    return (Number)getAttributeInternal(LASTUPDATEDBY);

  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setLastUpdatedBy called");   
  
    setAttributeInternal(LASTUPDATEDBY, value);
    System.out.println("OdHoldBackQtyEOImpl: setLastUpdatedBy exited");   

  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    System.out.println("OdHoldBackQtyEOImpl: getCreationDate called");   
    System.out.println("OdHoldBackQtyEOImpl: getCreationDate exited");   
  
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setCreationDate called");   

    setAttributeInternal(CREATIONDATE, value);
    System.out.println("OdHoldBackQtyEOImpl: setCreationDate exited");   
    
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    System.out.println("OdHoldBackQtyEOImpl: getCreatedBy called");   
    System.out.println("OdHoldBackQtyEOImpl: getCreatedBy exited");   
  
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setCreatedBy called");   

    setAttributeInternal(CREATEDBY, value);
    System.out.println("OdHoldBackQtyEOImpl: setCreatedBy exited");   

  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    System.out.println("OdHoldBackQtyEOImpl: getLastUpdateLogin called");   
    System.out.println("OdHoldBackQtyEOImpl: getLastUpdateLogin exited");   

    return (Number)getAttributeInternal(LASTUPDATELOGIN);

  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setLastUpdateLogin called");   
  
    setAttributeInternal(LASTUPDATELOGIN, value);
    System.out.println("OdHoldBackQtyEOImpl: setLastUpdateLogin exited");   

  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ITEM:
        return getItem();
      case WAREHOUSELOCATION:
        return getWarehouseLocation();
      case HOLDQUANTITY:
        return getHoldQuantity();
      case STARTDATE:
        return getStartDate();
      case ENDDATE:
        return getEndDate();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case EBSHOLDBACKQTYWHEO:
        return getEbsHoldBackQtyWhEO();
      case EBSHOLDBACKQTYHIEREO:
        return getEbsHoldBackQtyHierEO();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ITEM:
        setItem((String)value);
        return;
      case WAREHOUSELOCATION:
        setWarehouseLocation((String)value);
        return;
      case HOLDQUANTITY:
        setHoldQuantity((Number)value);
        return;
      case STARTDATE:
        setStartDate((Date)value);
        return;
      case ENDDATE:
        setEndDate((Date)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  
  }

  /**
   * 
   * Gets the associated entity EbsHoldBackQtyWhEOImpl
   */
  public EbsHoldBackQtyWhEOImpl getEbsHoldBackQtyWhEO()
  {
    System.out.println("OdHoldBackQtyEOImpl: getEbsHoldBackQtyWhEO called");   
    System.out.println("OdHoldBackQtyEOImpl: getEbsHoldBackQtyWhEO exited");   
  
    return (EbsHoldBackQtyWhEOImpl)getAttributeInternal(EBSHOLDBACKQTYWHEO);
  }

  /**
   * 
   * Sets <code>value</code> as the associated entity EbsHoldBackQtyWhEOImpl
   */
  public void setEbsHoldBackQtyWhEO(EbsHoldBackQtyWhEOImpl value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setEbsHoldBackQtyWhEO called");   
  
    setAttributeInternal(EBSHOLDBACKQTYWHEO, value);
    System.out.println("OdHoldBackQtyEOImpl: setEbsHoldBackQtyWhEO exited");   

  }

  /**
   * 
   * Gets the associated entity EbsHoldBackQtyHierEOImpl
   */
  public EbsHoldBackQtyHierEOImpl getEbsHoldBackQtyHierEO()
  {
    System.out.println("OdHoldBackQtyEOImpl: getEbsHoldBackQtyHierEO called");   
    System.out.println("OdHoldBackQtyEOImpl: getEbsHoldBackQtyHierEO exited");   

    return (EbsHoldBackQtyHierEOImpl)getAttributeInternal(EBSHOLDBACKQTYHIEREO);
  }

  /**
   * 
   * Sets <code>value</code> as the associated entity EbsHoldBackQtyHierEOImpl
   */
  public void setEbsHoldBackQtyHierEO(EbsHoldBackQtyHierEOImpl value)
  {
    System.out.println("OdHoldBackQtyEOImpl: setEbsHoldBackQtyHierEO called");   

    setAttributeInternal(EBSHOLDBACKQTYHIEREO, value);
    System.out.println("OdHoldBackQtyEOImpl: setEbsHoldBackQtyHierEO exited");   

  }


  /*
   * Convenience method returns the HBQItemEntityExpert
   */

  public static HBQItemEntityExpert getHBQItemEntityExpert (OADBTransaction txn)
  {
      System.out.println("OdHoldBackQtyEOImpl: getHBQItemEntityExpert called");   

      return (HBQItemEntityExpert)txn.getExpert(OdHoldBackQtyEOImpl.getDefinitionObject());
  }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String Item, String WarehouseLocation)
  {
    return new Key(new Object[] {Item, WarehouseLocation});
  }
}