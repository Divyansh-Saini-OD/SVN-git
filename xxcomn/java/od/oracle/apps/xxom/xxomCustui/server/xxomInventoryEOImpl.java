package od.oracle.apps.xxom.xxomCustui.server;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class xxomInventoryEOImpl extends OAEntityImpl 
{
  protected static final int INVENTORYITEMID = 0;
  protected static final int ORGANIZATIONID = 1;
  protected static final int LASTUPDATEDATE = 2;
  protected static final int LASTUPDATEDBY = 3;
  protected static final int CREATIONDATE = 4;
  protected static final int CREATEDBY = 5;
  protected static final int LASTUPDATELOGIN = 6;
  protected static final int SUMMARYFLAG = 7;
  protected static final int ENABLEDFLAG = 8;
  protected static final int STARTDATEACTIVE = 9;
  protected static final int ENDDATEACTIVE = 10;
  protected static final int DESCRIPTION = 11;
  protected static final int BUYERID = 12;
  protected static final int ACCOUNTINGRULEID = 13;
  protected static final int INVOICINGRULEID = 14;
  protected static final int SEGMENT1 = 15;
  protected static final int SEGMENT2 = 16;
  protected static final int SEGMENT3 = 17;
  protected static final int SEGMENT4 = 18;
  protected static final int SEGMENT5 = 19;
  protected static final int SEGMENT6 = 20;
  protected static final int SEGMENT7 = 21;
  protected static final int SEGMENT8 = 22;
  protected static final int SEGMENT9 = 23;
  protected static final int SEGMENT10 = 24;
  protected static final int SEGMENT11 = 25;
  protected static final int SEGMENT12 = 26;
  protected static final int SEGMENT13 = 27;
  protected static final int SEGMENT14 = 28;
  protected static final int SEGMENT15 = 29;
  protected static final int SEGMENT16 = 30;
  protected static final int SEGMENT17 = 31;
  protected static final int SEGMENT18 = 32;
  protected static final int SEGMENT19 = 33;
  protected static final int SEGMENT20 = 34;
  protected static final int ATTRIBUTECATEGORY = 35;
  protected static final int ATTRIBUTE1 = 36;
  protected static final int ATTRIBUTE2 = 37;
  protected static final int ATTRIBUTE3 = 38;
  protected static final int ATTRIBUTE4 = 39;
  protected static final int ATTRIBUTE5 = 40;
  protected static final int ATTRIBUTE6 = 41;
  protected static final int ATTRIBUTE7 = 42;
  protected static final int ATTRIBUTE8 = 43;
  protected static final int ATTRIBUTE9 = 44;
  protected static final int ATTRIBUTE10 = 45;
  protected static final int ATTRIBUTE11 = 46;
  protected static final int ATTRIBUTE12 = 47;
  protected static final int ATTRIBUTE13 = 48;
  protected static final int ATTRIBUTE14 = 49;
  protected static final int ATTRIBUTE15 = 50;
  protected static final int PURCHASINGITEMFLAG = 51;
  protected static final int SHIPPABLEITEMFLAG = 52;
  protected static final int CUSTOMERORDERFLAG = 53;
  protected static final int INTERNALORDERFLAG = 54;
  protected static final int SERVICEITEMFLAG = 55;
  protected static final int INVENTORYITEMFLAG = 56;
  protected static final int ENGITEMFLAG = 57;
  protected static final int INVENTORYASSETFLAG = 58;
  protected static final int PURCHASINGENABLEDFLAG = 59;
  protected static final int CUSTOMERORDERENABLEDFLAG = 60;
  protected static final int INTERNALORDERENABLEDFLAG = 61;
  protected static final int SOTRANSACTIONSFLAG = 62;
  protected static final int MTLTRANSACTIONSENABLEDFLAG = 63;
  protected static final int STOCKENABLEDFLAG = 64;
  protected static final int BOMENABLEDFLAG = 65;
  protected static final int BUILDINWIPFLAG = 66;
  protected static final int REVISIONQTYCONTROLCODE = 67;
  protected static final int ITEMCATALOGGROUPID = 68;
  protected static final int CATALOGSTATUSFLAG = 69;
  protected static final int RETURNABLEFLAG = 70;
  protected static final int DEFAULTSHIPPINGORG = 71;
  protected static final int COLLATERALFLAG = 72;
  protected static final int TAXABLEFLAG = 73;
  protected static final int QTYRCVEXCEPTIONCODE = 74;
  protected static final int ALLOWITEMDESCUPDATEFLAG = 75;
  protected static final int INSPECTIONREQUIREDFLAG = 76;
  protected static final int RECEIPTREQUIREDFLAG = 77;
  protected static final int MARKETPRICE = 78;
  protected static final int HAZARDCLASSID = 79;
  protected static final int RFQREQUIREDFLAG = 80;
  protected static final int QTYRCVTOLERANCE = 81;
  protected static final int LISTPRICEPERUNIT = 82;
  protected static final int UNNUMBERID = 83;
  protected static final int PRICETOLERANCEPERCENT = 84;
  protected static final int ASSETCATEGORYID = 85;
  protected static final int ROUNDINGFACTOR = 86;
  protected static final int UNITOFISSUE = 87;
  protected static final int ENFORCESHIPTOLOCATIONCODE = 88;
  protected static final int ALLOWSUBSTITUTERECEIPTSFLAG = 89;
  protected static final int ALLOWUNORDEREDRECEIPTSFLAG = 90;
  protected static final int ALLOWEXPRESSDELIVERYFLAG = 91;
  protected static final int DAYSEARLYRECEIPTALLOWED = 92;
  protected static final int DAYSLATERECEIPTALLOWED = 93;
  protected static final int RECEIPTDAYSEXCEPTIONCODE = 94;
  protected static final int RECEIVINGROUTINGID = 95;
  protected static final int INVOICECLOSETOLERANCE = 96;
  protected static final int RECEIVECLOSETOLERANCE = 97;
  protected static final int AUTOLOTALPHAPREFIX = 98;
  protected static final int STARTAUTOLOTNUMBER = 99;
  protected static final int LOTCONTROLCODE = 100;
  protected static final int SHELFLIFECODE = 101;
  protected static final int SHELFLIFEDAYS = 102;
  protected static final int SERIALNUMBERCONTROLCODE = 103;
  protected static final int STARTAUTOSERIALNUMBER = 104;
  protected static final int AUTOSERIALALPHAPREFIX = 105;
  protected static final int SOURCETYPE = 106;
  protected static final int SOURCEORGANIZATIONID = 107;
  protected static final int SOURCESUBINVENTORY = 108;
  protected static final int EXPENSEACCOUNT = 109;
  protected static final int ENCUMBRANCEACCOUNT = 110;
  protected static final int RESTRICTSUBINVENTORIESCODE = 111;
  protected static final int UNITWEIGHT = 112;
  protected static final int WEIGHTUOMCODE = 113;
  protected static final int VOLUMEUOMCODE = 114;
  protected static final int UNITVOLUME = 115;
  protected static final int RESTRICTLOCATORSCODE = 116;
  protected static final int LOCATIONCONTROLCODE = 117;
  protected static final int SHRINKAGERATE = 118;
  protected static final int ACCEPTABLEEARLYDAYS = 119;
  protected static final int PLANNINGTIMEFENCECODE = 120;
  protected static final int DEMANDTIMEFENCECODE = 121;
  protected static final int LEADTIMELOTSIZE = 122;
  protected static final int STDLOTSIZE = 123;
  protected static final int CUMMANUFACTURINGLEADTIME = 124;
  protected static final int OVERRUNPERCENTAGE = 125;
  protected static final int MRPCALCULATEATPFLAG = 126;
  protected static final int ACCEPTABLERATEINCREASE = 127;
  protected static final int ACCEPTABLERATEDECREASE = 128;
  protected static final int CUMULATIVETOTALLEADTIME = 129;
  protected static final int PLANNINGTIMEFENCEDAYS = 130;
  protected static final int DEMANDTIMEFENCEDAYS = 131;
  protected static final int ENDASSEMBLYPEGGINGFLAG = 132;
  protected static final int REPETITIVEPLANNINGFLAG = 133;
  protected static final int PLANNINGEXCEPTIONSET = 134;
  protected static final int BOMITEMTYPE = 135;
  protected static final int PICKCOMPONENTSFLAG = 136;
  protected static final int REPLENISHTOORDERFLAG = 137;
  protected static final int BASEITEMID = 138;
  protected static final int ATPCOMPONENTSFLAG = 139;
  protected static final int ATPFLAG = 140;
  protected static final int FIXEDLEADTIME = 141;
  protected static final int VARIABLELEADTIME = 142;
  protected static final int WIPSUPPLYLOCATORID = 143;
  protected static final int WIPSUPPLYTYPE = 144;
  protected static final int WIPSUPPLYSUBINVENTORY = 145;
  protected static final int PRIMARYUOMCODE = 146;
  protected static final int PRIMARYUNITOFMEASURE = 147;
  protected static final int ALLOWEDUNITSLOOKUPCODE = 148;
  protected static final int COSTOFSALESACCOUNT = 149;
  protected static final int SALESACCOUNT = 150;
  protected static final int DEFAULTINCLUDEINROLLUPFLAG = 151;
  protected static final int INVENTORYITEMSTATUSCODE = 152;
  protected static final int INVENTORYPLANNINGCODE = 153;
  protected static final int PLANNERCODE = 154;
  protected static final int PLANNINGMAKEBUYCODE = 155;
  protected static final int FIXEDLOTMULTIPLIER = 156;
  protected static final int ROUNDINGCONTROLTYPE = 157;
  protected static final int CARRYINGCOST = 158;
  protected static final int POSTPROCESSINGLEADTIME = 159;
  protected static final int PREPROCESSINGLEADTIME = 160;
  protected static final int FULLLEADTIME = 161;
  protected static final int ORDERCOST = 162;
  protected static final int MRPSAFETYSTOCKPERCENT = 163;
  protected static final int MRPSAFETYSTOCKCODE = 164;
  protected static final int MINMINMAXQUANTITY = 165;
  protected static final int MAXMINMAXQUANTITY = 166;
  protected static final int MINIMUMORDERQUANTITY = 167;
  protected static final int FIXEDORDERQUANTITY = 168;
  protected static final int FIXEDDAYSSUPPLY = 169;
  protected static final int MAXIMUMORDERQUANTITY = 170;
  protected static final int ATPRULEID = 171;
  protected static final int PICKINGRULEID = 172;
  protected static final int RESERVABLETYPE = 173;
  protected static final int POSITIVEMEASUREMENTERROR = 174;
  protected static final int NEGATIVEMEASUREMENTERROR = 175;
  protected static final int ENGINEERINGECNCODE = 176;
  protected static final int ENGINEERINGITEMID = 177;
  protected static final int ENGINEERINGDATE = 178;
  protected static final int SERVICESTARTINGDELAY = 179;
  protected static final int VENDORWARRANTYFLAG = 180;
  protected static final int SERVICEABLECOMPONENTFLAG = 181;
  protected static final int SERVICEABLEPRODUCTFLAG = 182;
  protected static final int BASEWARRANTYSERVICEID = 183;
  protected static final int PAYMENTTERMSID = 184;
  protected static final int PREVENTIVEMAINTENANCEFLAG = 185;
  protected static final int PRIMARYSPECIALISTID = 186;
  protected static final int SECONDARYSPECIALISTID = 187;
  protected static final int SERVICEABLEITEMCLASSID = 188;
  protected static final int TIMEBILLABLEFLAG = 189;
  protected static final int MATERIALBILLABLEFLAG = 190;
  protected static final int EXPENSEBILLABLEFLAG = 191;
  protected static final int PRORATESERVICEFLAG = 192;
  protected static final int COVERAGESCHEDULEID = 193;
  protected static final int SERVICEDURATIONPERIODCODE = 194;
  protected static final int SERVICEDURATION = 195;
  protected static final int WARRANTYVENDORID = 196;
  protected static final int MAXWARRANTYAMOUNT = 197;
  protected static final int RESPONSETIMEPERIODCODE = 198;
  protected static final int RESPONSETIMEVALUE = 199;
  protected static final int NEWREVISIONCODE = 200;
  protected static final int INVOICEABLEITEMFLAG = 201;
  protected static final int TAXCODE = 202;
  protected static final int INVOICEENABLEDFLAG = 203;
  protected static final int MUSTUSEAPPROVEDVENDORFLAG = 204;
  protected static final int REQUESTID = 205;
  protected static final int PROGRAMAPPLICATIONID = 206;
  protected static final int PROGRAMID = 207;
  protected static final int PROGRAMUPDATEDATE = 208;
  protected static final int OUTSIDEOPERATIONFLAG = 209;
  protected static final int OUTSIDEOPERATIONUOMTYPE = 210;
  protected static final int SAFETYSTOCKBUCKETDAYS = 211;
  protected static final int AUTOREDUCEMPS = 212;
  protected static final int COSTINGENABLEDFLAG = 213;
  protected static final int AUTOCREATEDCONFIGFLAG = 214;
  protected static final int CYCLECOUNTENABLEDFLAG = 215;
  protected static final int ITEMTYPE = 216;
  protected static final int MODELCONFIGCLAUSENAME = 217;
  protected static final int SHIPMODELCOMPLETEFLAG = 218;
  protected static final int MRPPLANNINGCODE = 219;
  protected static final int RETURNINSPECTIONREQUIREMENT = 220;
  protected static final int ATOFORECASTCONTROL = 221;
  protected static final int RELEASETIMEFENCECODE = 222;
  protected static final int RELEASETIMEFENCEDAYS = 223;
  protected static final int CONTAINERITEMFLAG = 224;
  protected static final int VEHICLEITEMFLAG = 225;
  protected static final int MAXIMUMLOADWEIGHT = 226;
  protected static final int MINIMUMFILLPERCENT = 227;
  protected static final int CONTAINERTYPECODE = 228;
  protected static final int INTERNALVOLUME = 229;
  protected static final int WHUPDATEDATE = 230;
  protected static final int PRODUCTFAMILYITEMID = 231;
  protected static final int GLOBALATTRIBUTECATEGORY = 232;
  protected static final int GLOBALATTRIBUTE1 = 233;
  protected static final int GLOBALATTRIBUTE2 = 234;
  protected static final int GLOBALATTRIBUTE3 = 235;
  protected static final int GLOBALATTRIBUTE4 = 236;
  protected static final int GLOBALATTRIBUTE5 = 237;
  protected static final int GLOBALATTRIBUTE6 = 238;
  protected static final int GLOBALATTRIBUTE7 = 239;
  protected static final int GLOBALATTRIBUTE8 = 240;
  protected static final int GLOBALATTRIBUTE9 = 241;
  protected static final int GLOBALATTRIBUTE10 = 242;
  protected static final int PURCHASINGTAXCODE = 243;
  protected static final int OVERCOMPLETIONTOLERANCETYPE = 244;
  protected static final int OVERCOMPLETIONTOLERANCEVALUE = 245;
  protected static final int EFFECTIVITYCONTROL = 246;
  protected static final int CHECKSHORTAGESFLAG = 247;
  protected static final int OVERSHIPMENTTOLERANCE = 248;
  protected static final int UNDERSHIPMENTTOLERANCE = 249;
  protected static final int OVERRETURNTOLERANCE = 250;
  protected static final int UNDERRETURNTOLERANCE = 251;
  protected static final int EQUIPMENTTYPE = 252;
  protected static final int RECOVEREDPARTDISPCODE = 253;
  protected static final int DEFECTTRACKINGONFLAG = 254;
  protected static final int USAGEITEMFLAG = 255;
  protected static final int EVENTFLAG = 256;
  protected static final int ELECTRONICFLAG = 257;
  protected static final int DOWNLOADABLEFLAG = 258;
  protected static final int VOLDISCOUNTEXEMPTFLAG = 259;
  protected static final int COUPONEXEMPTFLAG = 260;
  protected static final int COMMSNLTRACKABLEFLAG = 261;
  protected static final int ASSETCREATIONCODE = 262;
  protected static final int COMMSACTIVATIONREQDFLAG = 263;
  protected static final int ORDERABLEONWEBFLAG = 264;
  protected static final int BACKORDERABLEFLAG = 265;
  protected static final int WEBSTATUS = 266;
  protected static final int INDIVISIBLEFLAG = 267;
  protected static final int DIMENSIONUOMCODE = 268;
  protected static final int UNITLENGTH = 269;
  protected static final int UNITWIDTH = 270;
  protected static final int UNITHEIGHT = 271;
  protected static final int BULKPICKEDFLAG = 272;
  protected static final int LOTSTATUSENABLED = 273;
  protected static final int DEFAULTLOTSTATUSID = 274;
  protected static final int SERIALSTATUSENABLED = 275;
  protected static final int DEFAULTSERIALSTATUSID = 276;
  protected static final int LOTSPLITENABLED = 277;
  protected static final int LOTMERGEENABLED = 278;
  protected static final int INVENTORYCARRYPENALTY = 279;
  protected static final int OPERATIONSLACKPENALTY = 280;
  protected static final int FINANCINGALLOWEDFLAG = 281;
  protected static final int EAMITEMTYPE = 282;
  protected static final int EAMACTIVITYTYPECODE = 283;
  protected static final int EAMACTIVITYCAUSECODE = 284;
  protected static final int EAMACTNOTIFICATIONFLAG = 285;
  protected static final int EAMACTSHUTDOWNSTATUS = 286;
  protected static final int DUALUOMCONTROL = 287;
  protected static final int SECONDARYUOMCODE = 288;
  protected static final int DUALUOMDEVIATIONHIGH = 289;
  protected static final int DUALUOMDEVIATIONLOW = 290;
  protected static final int CONTRACTITEMTYPECODE = 291;
  protected static final int SUBSCRIPTIONDEPENDFLAG = 292;
  protected static final int SERVREQENABLEDCODE = 293;
  protected static final int SERVBILLINGENABLEDFLAG = 294;
  protected static final int SERVIMPORTANCELEVEL = 295;
  protected static final int PLANNEDINVPOINTFLAG = 296;
  protected static final int LOTTRANSLATEENABLED = 297;
  protected static final int DEFAULTSOSOURCETYPE = 298;
  protected static final int CREATESUPPLYFLAG = 299;
  protected static final int SUBSTITUTIONWINDOWCODE = 300;
  protected static final int SUBSTITUTIONWINDOWDAYS = 301;
  protected static final int IBITEMINSTANCECLASS = 302;
  protected static final int CONFIGMODELTYPE = 303;
  protected static final int LOTSUBSTITUTIONENABLED = 304;
  protected static final int MINIMUMLICENSEQUANTITY = 305;
  protected static final int EAMACTIVITYSOURCECODE = 306;
  protected static final int LIFECYCLEID = 307;
  protected static final int CURRENTPHASEID = 308;
  protected static final int OBJECTVERSIONNUMBER = 309;
  protected static final int TRACKINGQUANTITYIND = 310;
  protected static final int ONTPRICINGQTYSOURCE = 311;
  protected static final int SECONDARYDEFAULTIND = 312;
  protected static final int OPTIONSPECIFICSOURCED = 313;
  protected static final int APPROVALSTATUS = 314;
  protected static final int VMIMINIMUMUNITS = 315;
  protected static final int VMIMINIMUMDAYS = 316;
  protected static final int VMIMAXIMUMUNITS = 317;
  protected static final int VMIMAXIMUMDAYS = 318;
  protected static final int VMIFIXEDORDERQUANTITY = 319;
  protected static final int SOAUTHORIZATIONFLAG = 320;
  protected static final int CONSIGNEDFLAG = 321;
  protected static final int ASNAUTOEXPIREFLAG = 322;
  protected static final int VMIFORECASTTYPE = 323;
  protected static final int FORECASTHORIZON = 324;
  protected static final int EXCLUDEFROMBUDGETFLAG = 325;
  protected static final int DAYSTGTINVSUPPLY = 326;
  protected static final int DAYSTGTINVWINDOW = 327;
  protected static final int DAYSMAXINVSUPPLY = 328;
  protected static final int DAYSMAXINVWINDOW = 329;
  protected static final int DRPPLANNEDFLAG = 330;
  protected static final int CRITICALCOMPONENTFLAG = 331;
  protected static final int CONTINOUSTRANSFER = 332;
  protected static final int CONVERGENCE = 333;
  protected static final int DIVERGENCE = 334;
  protected static final int CONFIGORGS = 335;
  protected static final int CONFIGMATCH = 336;
  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public xxomInventoryEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxom.xxomCustui.server.xxomInventoryEO");
    }
    return mDefinitionObject;
  }

  /**
   * 
   * Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    super.create(attributeList);
  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**
   * 
   * Gets the attribute value for InventoryItemId, using the alias name InventoryItemId
   */
  public Number getInventoryItemId()
  {
    return (Number)getAttributeInternal(INVENTORYITEMID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InventoryItemId
   */
  public void setInventoryItemId(Number value)
  {
    setAttributeInternal(INVENTORYITEMID, value);
  }

  /**
   * 
   * Gets the attribute value for OrganizationId, using the alias name OrganizationId
   */
  public Number getOrganizationId()
  {
    return (Number)getAttributeInternal(ORGANIZATIONID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OrganizationId
   */
  public void setOrganizationId(Number value)
  {
    setAttributeInternal(ORGANIZATIONID, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for SummaryFlag, using the alias name SummaryFlag
   */
  public String getSummaryFlag()
  {
    return (String)getAttributeInternal(SUMMARYFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SummaryFlag
   */
  public void setSummaryFlag(String value)
  {
    setAttributeInternal(SUMMARYFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for EnabledFlag, using the alias name EnabledFlag
   */
  public String getEnabledFlag()
  {
    return (String)getAttributeInternal(ENABLEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EnabledFlag
   */
  public void setEnabledFlag(String value)
  {
    setAttributeInternal(ENABLEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for StartDateActive, using the alias name StartDateActive
   */
  public Date getStartDateActive()
  {
    return (Date)getAttributeInternal(STARTDATEACTIVE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for StartDateActive
   */
  public void setStartDateActive(Date value)
  {
    setAttributeInternal(STARTDATEACTIVE, value);
  }

  /**
   * 
   * Gets the attribute value for EndDateActive, using the alias name EndDateActive
   */
  public Date getEndDateActive()
  {
    return (Date)getAttributeInternal(ENDDATEACTIVE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EndDateActive
   */
  public void setEndDateActive(Date value)
  {
    setAttributeInternal(ENDDATEACTIVE, value);
  }

  /**
   * 
   * Gets the attribute value for Description, using the alias name Description
   */
  public String getDescription()
  {
    return (String)getAttributeInternal(DESCRIPTION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Description
   */
  public void setDescription(String value)
  {
    setAttributeInternal(DESCRIPTION, value);
  }

  /**
   * 
   * Gets the attribute value for BuyerId, using the alias name BuyerId
   */
  public Number getBuyerId()
  {
    return (Number)getAttributeInternal(BUYERID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BuyerId
   */
  public void setBuyerId(Number value)
  {
    setAttributeInternal(BUYERID, value);
  }

  /**
   * 
   * Gets the attribute value for AccountingRuleId, using the alias name AccountingRuleId
   */
  public Number getAccountingRuleId()
  {
    return (Number)getAttributeInternal(ACCOUNTINGRULEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AccountingRuleId
   */
  public void setAccountingRuleId(Number value)
  {
    setAttributeInternal(ACCOUNTINGRULEID, value);
  }

  /**
   * 
   * Gets the attribute value for InvoicingRuleId, using the alias name InvoicingRuleId
   */
  public Number getInvoicingRuleId()
  {
    return (Number)getAttributeInternal(INVOICINGRULEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InvoicingRuleId
   */
  public void setInvoicingRuleId(Number value)
  {
    setAttributeInternal(INVOICINGRULEID, value);
  }

  /**
   * 
   * Gets the attribute value for Segment1, using the alias name Segment1
   */
  public String getSegment1()
  {
    return (String)getAttributeInternal(SEGMENT1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment1
   */
  public void setSegment1(String value)
  {
    setAttributeInternal(SEGMENT1, value);
  }

  /**
   * 
   * Gets the attribute value for Segment2, using the alias name Segment2
   */
  public String getSegment2()
  {
    return (String)getAttributeInternal(SEGMENT2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment2
   */
  public void setSegment2(String value)
  {
    setAttributeInternal(SEGMENT2, value);
  }

  /**
   * 
   * Gets the attribute value for Segment3, using the alias name Segment3
   */
  public String getSegment3()
  {
    return (String)getAttributeInternal(SEGMENT3);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment3
   */
  public void setSegment3(String value)
  {
    setAttributeInternal(SEGMENT3, value);
  }

  /**
   * 
   * Gets the attribute value for Segment4, using the alias name Segment4
   */
  public String getSegment4()
  {
    return (String)getAttributeInternal(SEGMENT4);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment4
   */
  public void setSegment4(String value)
  {
    setAttributeInternal(SEGMENT4, value);
  }

  /**
   * 
   * Gets the attribute value for Segment5, using the alias name Segment5
   */
  public String getSegment5()
  {
    return (String)getAttributeInternal(SEGMENT5);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment5
   */
  public void setSegment5(String value)
  {
    setAttributeInternal(SEGMENT5, value);
  }

  /**
   * 
   * Gets the attribute value for Segment6, using the alias name Segment6
   */
  public String getSegment6()
  {
    return (String)getAttributeInternal(SEGMENT6);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment6
   */
  public void setSegment6(String value)
  {
    setAttributeInternal(SEGMENT6, value);
  }

  /**
   * 
   * Gets the attribute value for Segment7, using the alias name Segment7
   */
  public String getSegment7()
  {
    return (String)getAttributeInternal(SEGMENT7);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment7
   */
  public void setSegment7(String value)
  {
    setAttributeInternal(SEGMENT7, value);
  }

  /**
   * 
   * Gets the attribute value for Segment8, using the alias name Segment8
   */
  public String getSegment8()
  {
    return (String)getAttributeInternal(SEGMENT8);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment8
   */
  public void setSegment8(String value)
  {
    setAttributeInternal(SEGMENT8, value);
  }

  /**
   * 
   * Gets the attribute value for Segment9, using the alias name Segment9
   */
  public String getSegment9()
  {
    return (String)getAttributeInternal(SEGMENT9);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment9
   */
  public void setSegment9(String value)
  {
    setAttributeInternal(SEGMENT9, value);
  }

  /**
   * 
   * Gets the attribute value for Segment10, using the alias name Segment10
   */
  public String getSegment10()
  {
    return (String)getAttributeInternal(SEGMENT10);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment10
   */
  public void setSegment10(String value)
  {
    setAttributeInternal(SEGMENT10, value);
  }

  /**
   * 
   * Gets the attribute value for Segment11, using the alias name Segment11
   */
  public String getSegment11()
  {
    return (String)getAttributeInternal(SEGMENT11);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment11
   */
  public void setSegment11(String value)
  {
    setAttributeInternal(SEGMENT11, value);
  }

  /**
   * 
   * Gets the attribute value for Segment12, using the alias name Segment12
   */
  public String getSegment12()
  {
    return (String)getAttributeInternal(SEGMENT12);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment12
   */
  public void setSegment12(String value)
  {
    setAttributeInternal(SEGMENT12, value);
  }

  /**
   * 
   * Gets the attribute value for Segment13, using the alias name Segment13
   */
  public String getSegment13()
  {
    return (String)getAttributeInternal(SEGMENT13);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment13
   */
  public void setSegment13(String value)
  {
    setAttributeInternal(SEGMENT13, value);
  }

  /**
   * 
   * Gets the attribute value for Segment14, using the alias name Segment14
   */
  public String getSegment14()
  {
    return (String)getAttributeInternal(SEGMENT14);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment14
   */
  public void setSegment14(String value)
  {
    setAttributeInternal(SEGMENT14, value);
  }

  /**
   * 
   * Gets the attribute value for Segment15, using the alias name Segment15
   */
  public String getSegment15()
  {
    return (String)getAttributeInternal(SEGMENT15);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment15
   */
  public void setSegment15(String value)
  {
    setAttributeInternal(SEGMENT15, value);
  }

  /**
   * 
   * Gets the attribute value for Segment16, using the alias name Segment16
   */
  public String getSegment16()
  {
    return (String)getAttributeInternal(SEGMENT16);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment16
   */
  public void setSegment16(String value)
  {
    setAttributeInternal(SEGMENT16, value);
  }

  /**
   * 
   * Gets the attribute value for Segment17, using the alias name Segment17
   */
  public String getSegment17()
  {
    return (String)getAttributeInternal(SEGMENT17);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment17
   */
  public void setSegment17(String value)
  {
    setAttributeInternal(SEGMENT17, value);
  }

  /**
   * 
   * Gets the attribute value for Segment18, using the alias name Segment18
   */
  public String getSegment18()
  {
    return (String)getAttributeInternal(SEGMENT18);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment18
   */
  public void setSegment18(String value)
  {
    setAttributeInternal(SEGMENT18, value);
  }

  /**
   * 
   * Gets the attribute value for Segment19, using the alias name Segment19
   */
  public String getSegment19()
  {
    return (String)getAttributeInternal(SEGMENT19);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment19
   */
  public void setSegment19(String value)
  {
    setAttributeInternal(SEGMENT19, value);
  }

  /**
   * 
   * Gets the attribute value for Segment20, using the alias name Segment20
   */
  public String getSegment20()
  {
    return (String)getAttributeInternal(SEGMENT20);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Segment20
   */
  public void setSegment20(String value)
  {
    setAttributeInternal(SEGMENT20, value);
  }

  /**
   * 
   * Gets the attribute value for AttributeCategory, using the alias name AttributeCategory
   */
  public String getAttributeCategory()
  {
    return (String)getAttributeInternal(ATTRIBUTECATEGORY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AttributeCategory
   */
  public void setAttributeCategory(String value)
  {
    setAttributeInternal(ATTRIBUTECATEGORY, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute1, using the alias name Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute2, using the alias name Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute3, using the alias name Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute4, using the alias name Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute5, using the alias name Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute6, using the alias name Attribute6
   */
  public String getAttribute6()
  {
    return (String)getAttributeInternal(ATTRIBUTE6);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute6
   */
  public void setAttribute6(String value)
  {
    setAttributeInternal(ATTRIBUTE6, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute7, using the alias name Attribute7
   */
  public String getAttribute7()
  {
    return (String)getAttributeInternal(ATTRIBUTE7);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute7
   */
  public void setAttribute7(String value)
  {
    setAttributeInternal(ATTRIBUTE7, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute8, using the alias name Attribute8
   */
  public String getAttribute8()
  {
    return (String)getAttributeInternal(ATTRIBUTE8);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute8
   */
  public void setAttribute8(String value)
  {
    setAttributeInternal(ATTRIBUTE8, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute9, using the alias name Attribute9
   */
  public String getAttribute9()
  {
    return (String)getAttributeInternal(ATTRIBUTE9);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute9
   */
  public void setAttribute9(String value)
  {
    setAttributeInternal(ATTRIBUTE9, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute10, using the alias name Attribute10
   */
  public String getAttribute10()
  {
    return (String)getAttributeInternal(ATTRIBUTE10);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute10
   */
  public void setAttribute10(String value)
  {
    setAttributeInternal(ATTRIBUTE10, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute11, using the alias name Attribute11
   */
  public String getAttribute11()
  {
    return (String)getAttributeInternal(ATTRIBUTE11);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute11
   */
  public void setAttribute11(String value)
  {
    setAttributeInternal(ATTRIBUTE11, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute12, using the alias name Attribute12
   */
  public String getAttribute12()
  {
    return (String)getAttributeInternal(ATTRIBUTE12);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute12
   */
  public void setAttribute12(String value)
  {
    setAttributeInternal(ATTRIBUTE12, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute13, using the alias name Attribute13
   */
  public String getAttribute13()
  {
    return (String)getAttributeInternal(ATTRIBUTE13);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute13
   */
  public void setAttribute13(String value)
  {
    setAttributeInternal(ATTRIBUTE13, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute14, using the alias name Attribute14
   */
  public String getAttribute14()
  {
    return (String)getAttributeInternal(ATTRIBUTE14);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute14
   */
  public void setAttribute14(String value)
  {
    setAttributeInternal(ATTRIBUTE14, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute15, using the alias name Attribute15
   */
  public String getAttribute15()
  {
    return (String)getAttributeInternal(ATTRIBUTE15);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute15
   */
  public void setAttribute15(String value)
  {
    setAttributeInternal(ATTRIBUTE15, value);
  }

  /**
   * 
   * Gets the attribute value for PurchasingItemFlag, using the alias name PurchasingItemFlag
   */
  public String getPurchasingItemFlag()
  {
    return (String)getAttributeInternal(PURCHASINGITEMFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PurchasingItemFlag
   */
  public void setPurchasingItemFlag(String value)
  {
    setAttributeInternal(PURCHASINGITEMFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ShippableItemFlag, using the alias name ShippableItemFlag
   */
  public String getShippableItemFlag()
  {
    return (String)getAttributeInternal(SHIPPABLEITEMFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ShippableItemFlag
   */
  public void setShippableItemFlag(String value)
  {
    setAttributeInternal(SHIPPABLEITEMFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for CustomerOrderFlag, using the alias name CustomerOrderFlag
   */
  public String getCustomerOrderFlag()
  {
    return (String)getAttributeInternal(CUSTOMERORDERFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CustomerOrderFlag
   */
  public void setCustomerOrderFlag(String value)
  {
    setAttributeInternal(CUSTOMERORDERFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for InternalOrderFlag, using the alias name InternalOrderFlag
   */
  public String getInternalOrderFlag()
  {
    return (String)getAttributeInternal(INTERNALORDERFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InternalOrderFlag
   */
  public void setInternalOrderFlag(String value)
  {
    setAttributeInternal(INTERNALORDERFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ServiceItemFlag, using the alias name ServiceItemFlag
   */
  public String getServiceItemFlag()
  {
    return (String)getAttributeInternal(SERVICEITEMFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ServiceItemFlag
   */
  public void setServiceItemFlag(String value)
  {
    setAttributeInternal(SERVICEITEMFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for InventoryItemFlag, using the alias name InventoryItemFlag
   */
  public String getInventoryItemFlag()
  {
    return (String)getAttributeInternal(INVENTORYITEMFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InventoryItemFlag
   */
  public void setInventoryItemFlag(String value)
  {
    setAttributeInternal(INVENTORYITEMFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for EngItemFlag, using the alias name EngItemFlag
   */
  public String getEngItemFlag()
  {
    return (String)getAttributeInternal(ENGITEMFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EngItemFlag
   */
  public void setEngItemFlag(String value)
  {
    setAttributeInternal(ENGITEMFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for InventoryAssetFlag, using the alias name InventoryAssetFlag
   */
  public String getInventoryAssetFlag()
  {
    return (String)getAttributeInternal(INVENTORYASSETFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InventoryAssetFlag
   */
  public void setInventoryAssetFlag(String value)
  {
    setAttributeInternal(INVENTORYASSETFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for PurchasingEnabledFlag, using the alias name PurchasingEnabledFlag
   */
  public String getPurchasingEnabledFlag()
  {
    return (String)getAttributeInternal(PURCHASINGENABLEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PurchasingEnabledFlag
   */
  public void setPurchasingEnabledFlag(String value)
  {
    setAttributeInternal(PURCHASINGENABLEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for CustomerOrderEnabledFlag, using the alias name CustomerOrderEnabledFlag
   */
  public String getCustomerOrderEnabledFlag()
  {
    return (String)getAttributeInternal(CUSTOMERORDERENABLEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CustomerOrderEnabledFlag
   */
  public void setCustomerOrderEnabledFlag(String value)
  {
    setAttributeInternal(CUSTOMERORDERENABLEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for InternalOrderEnabledFlag, using the alias name InternalOrderEnabledFlag
   */
  public String getInternalOrderEnabledFlag()
  {
    return (String)getAttributeInternal(INTERNALORDERENABLEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InternalOrderEnabledFlag
   */
  public void setInternalOrderEnabledFlag(String value)
  {
    setAttributeInternal(INTERNALORDERENABLEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for SoTransactionsFlag, using the alias name SoTransactionsFlag
   */
  public String getSoTransactionsFlag()
  {
    return (String)getAttributeInternal(SOTRANSACTIONSFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SoTransactionsFlag
   */
  public void setSoTransactionsFlag(String value)
  {
    setAttributeInternal(SOTRANSACTIONSFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for MtlTransactionsEnabledFlag, using the alias name MtlTransactionsEnabledFlag
   */
  public String getMtlTransactionsEnabledFlag()
  {
    return (String)getAttributeInternal(MTLTRANSACTIONSENABLEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MtlTransactionsEnabledFlag
   */
  public void setMtlTransactionsEnabledFlag(String value)
  {
    setAttributeInternal(MTLTRANSACTIONSENABLEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for StockEnabledFlag, using the alias name StockEnabledFlag
   */
  public String getStockEnabledFlag()
  {
    return (String)getAttributeInternal(STOCKENABLEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for StockEnabledFlag
   */
  public void setStockEnabledFlag(String value)
  {
    setAttributeInternal(STOCKENABLEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for BomEnabledFlag, using the alias name BomEnabledFlag
   */
  public String getBomEnabledFlag()
  {
    return (String)getAttributeInternal(BOMENABLEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BomEnabledFlag
   */
  public void setBomEnabledFlag(String value)
  {
    setAttributeInternal(BOMENABLEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for BuildInWipFlag, using the alias name BuildInWipFlag
   */
  public String getBuildInWipFlag()
  {
    return (String)getAttributeInternal(BUILDINWIPFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BuildInWipFlag
   */
  public void setBuildInWipFlag(String value)
  {
    setAttributeInternal(BUILDINWIPFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for RevisionQtyControlCode, using the alias name RevisionQtyControlCode
   */
  public Number getRevisionQtyControlCode()
  {
    return (Number)getAttributeInternal(REVISIONQTYCONTROLCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RevisionQtyControlCode
   */
  public void setRevisionQtyControlCode(Number value)
  {
    setAttributeInternal(REVISIONQTYCONTROLCODE, value);
  }

  /**
   * 
   * Gets the attribute value for ItemCatalogGroupId, using the alias name ItemCatalogGroupId
   */
  public Number getItemCatalogGroupId()
  {
    return (Number)getAttributeInternal(ITEMCATALOGGROUPID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ItemCatalogGroupId
   */
  public void setItemCatalogGroupId(Number value)
  {
    setAttributeInternal(ITEMCATALOGGROUPID, value);
  }

  /**
   * 
   * Gets the attribute value for CatalogStatusFlag, using the alias name CatalogStatusFlag
   */
  public String getCatalogStatusFlag()
  {
    return (String)getAttributeInternal(CATALOGSTATUSFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CatalogStatusFlag
   */
  public void setCatalogStatusFlag(String value)
  {
    setAttributeInternal(CATALOGSTATUSFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ReturnableFlag, using the alias name ReturnableFlag
   */
  public String getReturnableFlag()
  {
    return (String)getAttributeInternal(RETURNABLEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReturnableFlag
   */
  public void setReturnableFlag(String value)
  {
    setAttributeInternal(RETURNABLEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for DefaultShippingOrg, using the alias name DefaultShippingOrg
   */
  public Number getDefaultShippingOrg()
  {
    return (Number)getAttributeInternal(DEFAULTSHIPPINGORG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DefaultShippingOrg
   */
  public void setDefaultShippingOrg(Number value)
  {
    setAttributeInternal(DEFAULTSHIPPINGORG, value);
  }

  /**
   * 
   * Gets the attribute value for CollateralFlag, using the alias name CollateralFlag
   */
  public String getCollateralFlag()
  {
    return (String)getAttributeInternal(COLLATERALFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CollateralFlag
   */
  public void setCollateralFlag(String value)
  {
    setAttributeInternal(COLLATERALFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for TaxableFlag, using the alias name TaxableFlag
   */
  public String getTaxableFlag()
  {
    return (String)getAttributeInternal(TAXABLEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaxableFlag
   */
  public void setTaxableFlag(String value)
  {
    setAttributeInternal(TAXABLEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for QtyRcvExceptionCode, using the alias name QtyRcvExceptionCode
   */
  public String getQtyRcvExceptionCode()
  {
    return (String)getAttributeInternal(QTYRCVEXCEPTIONCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for QtyRcvExceptionCode
   */
  public void setQtyRcvExceptionCode(String value)
  {
    setAttributeInternal(QTYRCVEXCEPTIONCODE, value);
  }

  /**
   * 
   * Gets the attribute value for AllowItemDescUpdateFlag, using the alias name AllowItemDescUpdateFlag
   */
  public String getAllowItemDescUpdateFlag()
  {
    return (String)getAttributeInternal(ALLOWITEMDESCUPDATEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AllowItemDescUpdateFlag
   */
  public void setAllowItemDescUpdateFlag(String value)
  {
    setAttributeInternal(ALLOWITEMDESCUPDATEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for InspectionRequiredFlag, using the alias name InspectionRequiredFlag
   */
  public String getInspectionRequiredFlag()
  {
    return (String)getAttributeInternal(INSPECTIONREQUIREDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InspectionRequiredFlag
   */
  public void setInspectionRequiredFlag(String value)
  {
    setAttributeInternal(INSPECTIONREQUIREDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ReceiptRequiredFlag, using the alias name ReceiptRequiredFlag
   */
  public String getReceiptRequiredFlag()
  {
    return (String)getAttributeInternal(RECEIPTREQUIREDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReceiptRequiredFlag
   */
  public void setReceiptRequiredFlag(String value)
  {
    setAttributeInternal(RECEIPTREQUIREDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for MarketPrice, using the alias name MarketPrice
   */
  public Number getMarketPrice()
  {
    return (Number)getAttributeInternal(MARKETPRICE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MarketPrice
   */
  public void setMarketPrice(Number value)
  {
    setAttributeInternal(MARKETPRICE, value);
  }

  /**
   * 
   * Gets the attribute value for HazardClassId, using the alias name HazardClassId
   */
  public Number getHazardClassId()
  {
    return (Number)getAttributeInternal(HAZARDCLASSID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for HazardClassId
   */
  public void setHazardClassId(Number value)
  {
    setAttributeInternal(HAZARDCLASSID, value);
  }

  /**
   * 
   * Gets the attribute value for RfqRequiredFlag, using the alias name RfqRequiredFlag
   */
  public String getRfqRequiredFlag()
  {
    return (String)getAttributeInternal(RFQREQUIREDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RfqRequiredFlag
   */
  public void setRfqRequiredFlag(String value)
  {
    setAttributeInternal(RFQREQUIREDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for QtyRcvTolerance, using the alias name QtyRcvTolerance
   */
  public Number getQtyRcvTolerance()
  {
    return (Number)getAttributeInternal(QTYRCVTOLERANCE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for QtyRcvTolerance
   */
  public void setQtyRcvTolerance(Number value)
  {
    setAttributeInternal(QTYRCVTOLERANCE, value);
  }

  /**
   * 
   * Gets the attribute value for ListPricePerUnit, using the alias name ListPricePerUnit
   */
  public Number getListPricePerUnit()
  {
    return (Number)getAttributeInternal(LISTPRICEPERUNIT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ListPricePerUnit
   */
  public void setListPricePerUnit(Number value)
  {
    setAttributeInternal(LISTPRICEPERUNIT, value);
  }

  /**
   * 
   * Gets the attribute value for UnNumberId, using the alias name UnNumberId
   */
  public Number getUnNumberId()
  {
    return (Number)getAttributeInternal(UNNUMBERID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UnNumberId
   */
  public void setUnNumberId(Number value)
  {
    setAttributeInternal(UNNUMBERID, value);
  }

  /**
   * 
   * Gets the attribute value for PriceTolerancePercent, using the alias name PriceTolerancePercent
   */
  public Number getPriceTolerancePercent()
  {
    return (Number)getAttributeInternal(PRICETOLERANCEPERCENT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PriceTolerancePercent
   */
  public void setPriceTolerancePercent(Number value)
  {
    setAttributeInternal(PRICETOLERANCEPERCENT, value);
  }

  /**
   * 
   * Gets the attribute value for AssetCategoryId, using the alias name AssetCategoryId
   */
  public Number getAssetCategoryId()
  {
    return (Number)getAttributeInternal(ASSETCATEGORYID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AssetCategoryId
   */
  public void setAssetCategoryId(Number value)
  {
    setAttributeInternal(ASSETCATEGORYID, value);
  }

  /**
   * 
   * Gets the attribute value for RoundingFactor, using the alias name RoundingFactor
   */
  public Number getRoundingFactor()
  {
    return (Number)getAttributeInternal(ROUNDINGFACTOR);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RoundingFactor
   */
  public void setRoundingFactor(Number value)
  {
    setAttributeInternal(ROUNDINGFACTOR, value);
  }

  /**
   * 
   * Gets the attribute value for UnitOfIssue, using the alias name UnitOfIssue
   */
  public String getUnitOfIssue()
  {
    return (String)getAttributeInternal(UNITOFISSUE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UnitOfIssue
   */
  public void setUnitOfIssue(String value)
  {
    setAttributeInternal(UNITOFISSUE, value);
  }

  /**
   * 
   * Gets the attribute value for EnforceShipToLocationCode, using the alias name EnforceShipToLocationCode
   */
  public String getEnforceShipToLocationCode()
  {
    return (String)getAttributeInternal(ENFORCESHIPTOLOCATIONCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EnforceShipToLocationCode
   */
  public void setEnforceShipToLocationCode(String value)
  {
    setAttributeInternal(ENFORCESHIPTOLOCATIONCODE, value);
  }

  /**
   * 
   * Gets the attribute value for AllowSubstituteReceiptsFlag, using the alias name AllowSubstituteReceiptsFlag
   */
  public String getAllowSubstituteReceiptsFlag()
  {
    return (String)getAttributeInternal(ALLOWSUBSTITUTERECEIPTSFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AllowSubstituteReceiptsFlag
   */
  public void setAllowSubstituteReceiptsFlag(String value)
  {
    setAttributeInternal(ALLOWSUBSTITUTERECEIPTSFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for AllowUnorderedReceiptsFlag, using the alias name AllowUnorderedReceiptsFlag
   */
  public String getAllowUnorderedReceiptsFlag()
  {
    return (String)getAttributeInternal(ALLOWUNORDEREDRECEIPTSFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AllowUnorderedReceiptsFlag
   */
  public void setAllowUnorderedReceiptsFlag(String value)
  {
    setAttributeInternal(ALLOWUNORDEREDRECEIPTSFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for AllowExpressDeliveryFlag, using the alias name AllowExpressDeliveryFlag
   */
  public String getAllowExpressDeliveryFlag()
  {
    return (String)getAttributeInternal(ALLOWEXPRESSDELIVERYFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AllowExpressDeliveryFlag
   */
  public void setAllowExpressDeliveryFlag(String value)
  {
    setAttributeInternal(ALLOWEXPRESSDELIVERYFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for DaysEarlyReceiptAllowed, using the alias name DaysEarlyReceiptAllowed
   */
  public Number getDaysEarlyReceiptAllowed()
  {
    return (Number)getAttributeInternal(DAYSEARLYRECEIPTALLOWED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DaysEarlyReceiptAllowed
   */
  public void setDaysEarlyReceiptAllowed(Number value)
  {
    setAttributeInternal(DAYSEARLYRECEIPTALLOWED, value);
  }

  /**
   * 
   * Gets the attribute value for DaysLateReceiptAllowed, using the alias name DaysLateReceiptAllowed
   */
  public Number getDaysLateReceiptAllowed()
  {
    return (Number)getAttributeInternal(DAYSLATERECEIPTALLOWED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DaysLateReceiptAllowed
   */
  public void setDaysLateReceiptAllowed(Number value)
  {
    setAttributeInternal(DAYSLATERECEIPTALLOWED, value);
  }

  /**
   * 
   * Gets the attribute value for ReceiptDaysExceptionCode, using the alias name ReceiptDaysExceptionCode
   */
  public String getReceiptDaysExceptionCode()
  {
    return (String)getAttributeInternal(RECEIPTDAYSEXCEPTIONCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReceiptDaysExceptionCode
   */
  public void setReceiptDaysExceptionCode(String value)
  {
    setAttributeInternal(RECEIPTDAYSEXCEPTIONCODE, value);
  }

  /**
   * 
   * Gets the attribute value for ReceivingRoutingId, using the alias name ReceivingRoutingId
   */
  public Number getReceivingRoutingId()
  {
    return (Number)getAttributeInternal(RECEIVINGROUTINGID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReceivingRoutingId
   */
  public void setReceivingRoutingId(Number value)
  {
    setAttributeInternal(RECEIVINGROUTINGID, value);
  }

  /**
   * 
   * Gets the attribute value for InvoiceCloseTolerance, using the alias name InvoiceCloseTolerance
   */
  public Number getInvoiceCloseTolerance()
  {
    return (Number)getAttributeInternal(INVOICECLOSETOLERANCE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InvoiceCloseTolerance
   */
  public void setInvoiceCloseTolerance(Number value)
  {
    setAttributeInternal(INVOICECLOSETOLERANCE, value);
  }

  /**
   * 
   * Gets the attribute value for ReceiveCloseTolerance, using the alias name ReceiveCloseTolerance
   */
  public Number getReceiveCloseTolerance()
  {
    return (Number)getAttributeInternal(RECEIVECLOSETOLERANCE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReceiveCloseTolerance
   */
  public void setReceiveCloseTolerance(Number value)
  {
    setAttributeInternal(RECEIVECLOSETOLERANCE, value);
  }

  /**
   * 
   * Gets the attribute value for AutoLotAlphaPrefix, using the alias name AutoLotAlphaPrefix
   */
  public String getAutoLotAlphaPrefix()
  {
    return (String)getAttributeInternal(AUTOLOTALPHAPREFIX);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AutoLotAlphaPrefix
   */
  public void setAutoLotAlphaPrefix(String value)
  {
    setAttributeInternal(AUTOLOTALPHAPREFIX, value);
  }

  /**
   * 
   * Gets the attribute value for StartAutoLotNumber, using the alias name StartAutoLotNumber
   */
  public String getStartAutoLotNumber()
  {
    return (String)getAttributeInternal(STARTAUTOLOTNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for StartAutoLotNumber
   */
  public void setStartAutoLotNumber(String value)
  {
    setAttributeInternal(STARTAUTOLOTNUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for LotControlCode, using the alias name LotControlCode
   */
  public Number getLotControlCode()
  {
    return (Number)getAttributeInternal(LOTCONTROLCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LotControlCode
   */
  public void setLotControlCode(Number value)
  {
    setAttributeInternal(LOTCONTROLCODE, value);
  }

  /**
   * 
   * Gets the attribute value for ShelfLifeCode, using the alias name ShelfLifeCode
   */
  public Number getShelfLifeCode()
  {
    return (Number)getAttributeInternal(SHELFLIFECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ShelfLifeCode
   */
  public void setShelfLifeCode(Number value)
  {
    setAttributeInternal(SHELFLIFECODE, value);
  }

  /**
   * 
   * Gets the attribute value for ShelfLifeDays, using the alias name ShelfLifeDays
   */
  public Number getShelfLifeDays()
  {
    return (Number)getAttributeInternal(SHELFLIFEDAYS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ShelfLifeDays
   */
  public void setShelfLifeDays(Number value)
  {
    setAttributeInternal(SHELFLIFEDAYS, value);
  }

  /**
   * 
   * Gets the attribute value for SerialNumberControlCode, using the alias name SerialNumberControlCode
   */
  public Number getSerialNumberControlCode()
  {
    return (Number)getAttributeInternal(SERIALNUMBERCONTROLCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SerialNumberControlCode
   */
  public void setSerialNumberControlCode(Number value)
  {
    setAttributeInternal(SERIALNUMBERCONTROLCODE, value);
  }

  /**
   * 
   * Gets the attribute value for StartAutoSerialNumber, using the alias name StartAutoSerialNumber
   */
  public String getStartAutoSerialNumber()
  {
    return (String)getAttributeInternal(STARTAUTOSERIALNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for StartAutoSerialNumber
   */
  public void setStartAutoSerialNumber(String value)
  {
    setAttributeInternal(STARTAUTOSERIALNUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for AutoSerialAlphaPrefix, using the alias name AutoSerialAlphaPrefix
   */
  public String getAutoSerialAlphaPrefix()
  {
    return (String)getAttributeInternal(AUTOSERIALALPHAPREFIX);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AutoSerialAlphaPrefix
   */
  public void setAutoSerialAlphaPrefix(String value)
  {
    setAttributeInternal(AUTOSERIALALPHAPREFIX, value);
  }

  /**
   * 
   * Gets the attribute value for SourceType, using the alias name SourceType
   */
  public Number getSourceType()
  {
    return (Number)getAttributeInternal(SOURCETYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SourceType
   */
  public void setSourceType(Number value)
  {
    setAttributeInternal(SOURCETYPE, value);
  }

  /**
   * 
   * Gets the attribute value for SourceOrganizationId, using the alias name SourceOrganizationId
   */
  public Number getSourceOrganizationId()
  {
    return (Number)getAttributeInternal(SOURCEORGANIZATIONID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SourceOrganizationId
   */
  public void setSourceOrganizationId(Number value)
  {
    setAttributeInternal(SOURCEORGANIZATIONID, value);
  }

  /**
   * 
   * Gets the attribute value for SourceSubinventory, using the alias name SourceSubinventory
   */
  public String getSourceSubinventory()
  {
    return (String)getAttributeInternal(SOURCESUBINVENTORY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SourceSubinventory
   */
  public void setSourceSubinventory(String value)
  {
    setAttributeInternal(SOURCESUBINVENTORY, value);
  }

  /**
   * 
   * Gets the attribute value for ExpenseAccount, using the alias name ExpenseAccount
   */
  public Number getExpenseAccount()
  {
    return (Number)getAttributeInternal(EXPENSEACCOUNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ExpenseAccount
   */
  public void setExpenseAccount(Number value)
  {
    setAttributeInternal(EXPENSEACCOUNT, value);
  }

  /**
   * 
   * Gets the attribute value for EncumbranceAccount, using the alias name EncumbranceAccount
   */
  public Number getEncumbranceAccount()
  {
    return (Number)getAttributeInternal(ENCUMBRANCEACCOUNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EncumbranceAccount
   */
  public void setEncumbranceAccount(Number value)
  {
    setAttributeInternal(ENCUMBRANCEACCOUNT, value);
  }

  /**
   * 
   * Gets the attribute value for RestrictSubinventoriesCode, using the alias name RestrictSubinventoriesCode
   */
  public Number getRestrictSubinventoriesCode()
  {
    return (Number)getAttributeInternal(RESTRICTSUBINVENTORIESCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RestrictSubinventoriesCode
   */
  public void setRestrictSubinventoriesCode(Number value)
  {
    setAttributeInternal(RESTRICTSUBINVENTORIESCODE, value);
  }

  /**
   * 
   * Gets the attribute value for UnitWeight, using the alias name UnitWeight
   */
  public Number getUnitWeight()
  {
    return (Number)getAttributeInternal(UNITWEIGHT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UnitWeight
   */
  public void setUnitWeight(Number value)
  {
    setAttributeInternal(UNITWEIGHT, value);
  }

  /**
   * 
   * Gets the attribute value for WeightUomCode, using the alias name WeightUomCode
   */
  public String getWeightUomCode()
  {
    return (String)getAttributeInternal(WEIGHTUOMCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WeightUomCode
   */
  public void setWeightUomCode(String value)
  {
    setAttributeInternal(WEIGHTUOMCODE, value);
  }

  /**
   * 
   * Gets the attribute value for VolumeUomCode, using the alias name VolumeUomCode
   */
  public String getVolumeUomCode()
  {
    return (String)getAttributeInternal(VOLUMEUOMCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VolumeUomCode
   */
  public void setVolumeUomCode(String value)
  {
    setAttributeInternal(VOLUMEUOMCODE, value);
  }

  /**
   * 
   * Gets the attribute value for UnitVolume, using the alias name UnitVolume
   */
  public Number getUnitVolume()
  {
    return (Number)getAttributeInternal(UNITVOLUME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UnitVolume
   */
  public void setUnitVolume(Number value)
  {
    setAttributeInternal(UNITVOLUME, value);
  }

  /**
   * 
   * Gets the attribute value for RestrictLocatorsCode, using the alias name RestrictLocatorsCode
   */
  public Number getRestrictLocatorsCode()
  {
    return (Number)getAttributeInternal(RESTRICTLOCATORSCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RestrictLocatorsCode
   */
  public void setRestrictLocatorsCode(Number value)
  {
    setAttributeInternal(RESTRICTLOCATORSCODE, value);
  }

  /**
   * 
   * Gets the attribute value for LocationControlCode, using the alias name LocationControlCode
   */
  public Number getLocationControlCode()
  {
    return (Number)getAttributeInternal(LOCATIONCONTROLCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LocationControlCode
   */
  public void setLocationControlCode(Number value)
  {
    setAttributeInternal(LOCATIONCONTROLCODE, value);
  }

  /**
   * 
   * Gets the attribute value for ShrinkageRate, using the alias name ShrinkageRate
   */
  public Number getShrinkageRate()
  {
    return (Number)getAttributeInternal(SHRINKAGERATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ShrinkageRate
   */
  public void setShrinkageRate(Number value)
  {
    setAttributeInternal(SHRINKAGERATE, value);
  }

  /**
   * 
   * Gets the attribute value for AcceptableEarlyDays, using the alias name AcceptableEarlyDays
   */
  public Number getAcceptableEarlyDays()
  {
    return (Number)getAttributeInternal(ACCEPTABLEEARLYDAYS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AcceptableEarlyDays
   */
  public void setAcceptableEarlyDays(Number value)
  {
    setAttributeInternal(ACCEPTABLEEARLYDAYS, value);
  }

  /**
   * 
   * Gets the attribute value for PlanningTimeFenceCode, using the alias name PlanningTimeFenceCode
   */
  public Number getPlanningTimeFenceCode()
  {
    return (Number)getAttributeInternal(PLANNINGTIMEFENCECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PlanningTimeFenceCode
   */
  public void setPlanningTimeFenceCode(Number value)
  {
    setAttributeInternal(PLANNINGTIMEFENCECODE, value);
  }

  /**
   * 
   * Gets the attribute value for DemandTimeFenceCode, using the alias name DemandTimeFenceCode
   */
  public Number getDemandTimeFenceCode()
  {
    return (Number)getAttributeInternal(DEMANDTIMEFENCECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DemandTimeFenceCode
   */
  public void setDemandTimeFenceCode(Number value)
  {
    setAttributeInternal(DEMANDTIMEFENCECODE, value);
  }

  /**
   * 
   * Gets the attribute value for LeadTimeLotSize, using the alias name LeadTimeLotSize
   */
  public Number getLeadTimeLotSize()
  {
    return (Number)getAttributeInternal(LEADTIMELOTSIZE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LeadTimeLotSize
   */
  public void setLeadTimeLotSize(Number value)
  {
    setAttributeInternal(LEADTIMELOTSIZE, value);
  }

  /**
   * 
   * Gets the attribute value for StdLotSize, using the alias name StdLotSize
   */
  public Number getStdLotSize()
  {
    return (Number)getAttributeInternal(STDLOTSIZE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for StdLotSize
   */
  public void setStdLotSize(Number value)
  {
    setAttributeInternal(STDLOTSIZE, value);
  }

  /**
   * 
   * Gets the attribute value for CumManufacturingLeadTime, using the alias name CumManufacturingLeadTime
   */
  public Number getCumManufacturingLeadTime()
  {
    return (Number)getAttributeInternal(CUMMANUFACTURINGLEADTIME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CumManufacturingLeadTime
   */
  public void setCumManufacturingLeadTime(Number value)
  {
    setAttributeInternal(CUMMANUFACTURINGLEADTIME, value);
  }

  /**
   * 
   * Gets the attribute value for OverrunPercentage, using the alias name OverrunPercentage
   */
  public Number getOverrunPercentage()
  {
    return (Number)getAttributeInternal(OVERRUNPERCENTAGE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OverrunPercentage
   */
  public void setOverrunPercentage(Number value)
  {
    setAttributeInternal(OVERRUNPERCENTAGE, value);
  }

  /**
   * 
   * Gets the attribute value for MrpCalculateAtpFlag, using the alias name MrpCalculateAtpFlag
   */
  public String getMrpCalculateAtpFlag()
  {
    return (String)getAttributeInternal(MRPCALCULATEATPFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MrpCalculateAtpFlag
   */
  public void setMrpCalculateAtpFlag(String value)
  {
    setAttributeInternal(MRPCALCULATEATPFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for AcceptableRateIncrease, using the alias name AcceptableRateIncrease
   */
  public Number getAcceptableRateIncrease()
  {
    return (Number)getAttributeInternal(ACCEPTABLERATEINCREASE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AcceptableRateIncrease
   */
  public void setAcceptableRateIncrease(Number value)
  {
    setAttributeInternal(ACCEPTABLERATEINCREASE, value);
  }

  /**
   * 
   * Gets the attribute value for AcceptableRateDecrease, using the alias name AcceptableRateDecrease
   */
  public Number getAcceptableRateDecrease()
  {
    return (Number)getAttributeInternal(ACCEPTABLERATEDECREASE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AcceptableRateDecrease
   */
  public void setAcceptableRateDecrease(Number value)
  {
    setAttributeInternal(ACCEPTABLERATEDECREASE, value);
  }

  /**
   * 
   * Gets the attribute value for CumulativeTotalLeadTime, using the alias name CumulativeTotalLeadTime
   */
  public Number getCumulativeTotalLeadTime()
  {
    return (Number)getAttributeInternal(CUMULATIVETOTALLEADTIME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CumulativeTotalLeadTime
   */
  public void setCumulativeTotalLeadTime(Number value)
  {
    setAttributeInternal(CUMULATIVETOTALLEADTIME, value);
  }

  /**
   * 
   * Gets the attribute value for PlanningTimeFenceDays, using the alias name PlanningTimeFenceDays
   */
  public Number getPlanningTimeFenceDays()
  {
    return (Number)getAttributeInternal(PLANNINGTIMEFENCEDAYS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PlanningTimeFenceDays
   */
  public void setPlanningTimeFenceDays(Number value)
  {
    setAttributeInternal(PLANNINGTIMEFENCEDAYS, value);
  }

  /**
   * 
   * Gets the attribute value for DemandTimeFenceDays, using the alias name DemandTimeFenceDays
   */
  public Number getDemandTimeFenceDays()
  {
    return (Number)getAttributeInternal(DEMANDTIMEFENCEDAYS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DemandTimeFenceDays
   */
  public void setDemandTimeFenceDays(Number value)
  {
    setAttributeInternal(DEMANDTIMEFENCEDAYS, value);
  }

  /**
   * 
   * Gets the attribute value for EndAssemblyPeggingFlag, using the alias name EndAssemblyPeggingFlag
   */
  public String getEndAssemblyPeggingFlag()
  {
    return (String)getAttributeInternal(ENDASSEMBLYPEGGINGFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EndAssemblyPeggingFlag
   */
  public void setEndAssemblyPeggingFlag(String value)
  {
    setAttributeInternal(ENDASSEMBLYPEGGINGFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for RepetitivePlanningFlag, using the alias name RepetitivePlanningFlag
   */
  public String getRepetitivePlanningFlag()
  {
    return (String)getAttributeInternal(REPETITIVEPLANNINGFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RepetitivePlanningFlag
   */
  public void setRepetitivePlanningFlag(String value)
  {
    setAttributeInternal(REPETITIVEPLANNINGFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for PlanningExceptionSet, using the alias name PlanningExceptionSet
   */
  public String getPlanningExceptionSet()
  {
    return (String)getAttributeInternal(PLANNINGEXCEPTIONSET);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PlanningExceptionSet
   */
  public void setPlanningExceptionSet(String value)
  {
    setAttributeInternal(PLANNINGEXCEPTIONSET, value);
  }

  /**
   * 
   * Gets the attribute value for BomItemType, using the alias name BomItemType
   */
  public Number getBomItemType()
  {
    return (Number)getAttributeInternal(BOMITEMTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BomItemType
   */
  public void setBomItemType(Number value)
  {
    setAttributeInternal(BOMITEMTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for PickComponentsFlag, using the alias name PickComponentsFlag
   */
  public String getPickComponentsFlag()
  {
    return (String)getAttributeInternal(PICKCOMPONENTSFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PickComponentsFlag
   */
  public void setPickComponentsFlag(String value)
  {
    setAttributeInternal(PICKCOMPONENTSFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ReplenishToOrderFlag, using the alias name ReplenishToOrderFlag
   */
  public String getReplenishToOrderFlag()
  {
    return (String)getAttributeInternal(REPLENISHTOORDERFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReplenishToOrderFlag
   */
  public void setReplenishToOrderFlag(String value)
  {
    setAttributeInternal(REPLENISHTOORDERFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for BaseItemId, using the alias name BaseItemId
   */
  public Number getBaseItemId()
  {
    return (Number)getAttributeInternal(BASEITEMID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BaseItemId
   */
  public void setBaseItemId(Number value)
  {
    setAttributeInternal(BASEITEMID, value);
  }

  /**
   * 
   * Gets the attribute value for AtpComponentsFlag, using the alias name AtpComponentsFlag
   */
  public String getAtpComponentsFlag()
  {
    return (String)getAttributeInternal(ATPCOMPONENTSFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AtpComponentsFlag
   */
  public void setAtpComponentsFlag(String value)
  {
    setAttributeInternal(ATPCOMPONENTSFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for AtpFlag, using the alias name AtpFlag
   */
  public String getAtpFlag()
  {
    return (String)getAttributeInternal(ATPFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AtpFlag
   */
  public void setAtpFlag(String value)
  {
    setAttributeInternal(ATPFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for FixedLeadTime, using the alias name FixedLeadTime
   */
  public Number getFixedLeadTime()
  {
    return (Number)getAttributeInternal(FIXEDLEADTIME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FixedLeadTime
   */
  public void setFixedLeadTime(Number value)
  {
    setAttributeInternal(FIXEDLEADTIME, value);
  }

  /**
   * 
   * Gets the attribute value for VariableLeadTime, using the alias name VariableLeadTime
   */
  public Number getVariableLeadTime()
  {
    return (Number)getAttributeInternal(VARIABLELEADTIME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VariableLeadTime
   */
  public void setVariableLeadTime(Number value)
  {
    setAttributeInternal(VARIABLELEADTIME, value);
  }

  /**
   * 
   * Gets the attribute value for WipSupplyLocatorId, using the alias name WipSupplyLocatorId
   */
  public Number getWipSupplyLocatorId()
  {
    return (Number)getAttributeInternal(WIPSUPPLYLOCATORID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WipSupplyLocatorId
   */
  public void setWipSupplyLocatorId(Number value)
  {
    setAttributeInternal(WIPSUPPLYLOCATORID, value);
  }

  /**
   * 
   * Gets the attribute value for WipSupplyType, using the alias name WipSupplyType
   */
  public Number getWipSupplyType()
  {
    return (Number)getAttributeInternal(WIPSUPPLYTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WipSupplyType
   */
  public void setWipSupplyType(Number value)
  {
    setAttributeInternal(WIPSUPPLYTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for WipSupplySubinventory, using the alias name WipSupplySubinventory
   */
  public String getWipSupplySubinventory()
  {
    return (String)getAttributeInternal(WIPSUPPLYSUBINVENTORY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WipSupplySubinventory
   */
  public void setWipSupplySubinventory(String value)
  {
    setAttributeInternal(WIPSUPPLYSUBINVENTORY, value);
  }

  /**
   * 
   * Gets the attribute value for PrimaryUomCode, using the alias name PrimaryUomCode
   */
  public String getPrimaryUomCode()
  {
    return (String)getAttributeInternal(PRIMARYUOMCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PrimaryUomCode
   */
  public void setPrimaryUomCode(String value)
  {
    setAttributeInternal(PRIMARYUOMCODE, value);
  }

  /**
   * 
   * Gets the attribute value for PrimaryUnitOfMeasure, using the alias name PrimaryUnitOfMeasure
   */
  public String getPrimaryUnitOfMeasure()
  {
    return (String)getAttributeInternal(PRIMARYUNITOFMEASURE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PrimaryUnitOfMeasure
   */
  public void setPrimaryUnitOfMeasure(String value)
  {
    setAttributeInternal(PRIMARYUNITOFMEASURE, value);
  }

  /**
   * 
   * Gets the attribute value for AllowedUnitsLookupCode, using the alias name AllowedUnitsLookupCode
   */
  public Number getAllowedUnitsLookupCode()
  {
    return (Number)getAttributeInternal(ALLOWEDUNITSLOOKUPCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AllowedUnitsLookupCode
   */
  public void setAllowedUnitsLookupCode(Number value)
  {
    setAttributeInternal(ALLOWEDUNITSLOOKUPCODE, value);
  }

  /**
   * 
   * Gets the attribute value for CostOfSalesAccount, using the alias name CostOfSalesAccount
   */
  public Number getCostOfSalesAccount()
  {
    return (Number)getAttributeInternal(COSTOFSALESACCOUNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CostOfSalesAccount
   */
  public void setCostOfSalesAccount(Number value)
  {
    setAttributeInternal(COSTOFSALESACCOUNT, value);
  }

  /**
   * 
   * Gets the attribute value for SalesAccount, using the alias name SalesAccount
   */
  public Number getSalesAccount()
  {
    return (Number)getAttributeInternal(SALESACCOUNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SalesAccount
   */
  public void setSalesAccount(Number value)
  {
    setAttributeInternal(SALESACCOUNT, value);
  }

  /**
   * 
   * Gets the attribute value for DefaultIncludeInRollupFlag, using the alias name DefaultIncludeInRollupFlag
   */
  public String getDefaultIncludeInRollupFlag()
  {
    return (String)getAttributeInternal(DEFAULTINCLUDEINROLLUPFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DefaultIncludeInRollupFlag
   */
  public void setDefaultIncludeInRollupFlag(String value)
  {
    setAttributeInternal(DEFAULTINCLUDEINROLLUPFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for InventoryItemStatusCode, using the alias name InventoryItemStatusCode
   */
  public String getInventoryItemStatusCode()
  {
    return (String)getAttributeInternal(INVENTORYITEMSTATUSCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InventoryItemStatusCode
   */
  public void setInventoryItemStatusCode(String value)
  {
    setAttributeInternal(INVENTORYITEMSTATUSCODE, value);
  }

  /**
   * 
   * Gets the attribute value for InventoryPlanningCode, using the alias name InventoryPlanningCode
   */
  public Number getInventoryPlanningCode()
  {
    return (Number)getAttributeInternal(INVENTORYPLANNINGCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InventoryPlanningCode
   */
  public void setInventoryPlanningCode(Number value)
  {
    setAttributeInternal(INVENTORYPLANNINGCODE, value);
  }

  /**
   * 
   * Gets the attribute value for PlannerCode, using the alias name PlannerCode
   */
  public String getPlannerCode()
  {
    return (String)getAttributeInternal(PLANNERCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PlannerCode
   */
  public void setPlannerCode(String value)
  {
    setAttributeInternal(PLANNERCODE, value);
  }

  /**
   * 
   * Gets the attribute value for PlanningMakeBuyCode, using the alias name PlanningMakeBuyCode
   */
  public Number getPlanningMakeBuyCode()
  {
    return (Number)getAttributeInternal(PLANNINGMAKEBUYCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PlanningMakeBuyCode
   */
  public void setPlanningMakeBuyCode(Number value)
  {
    setAttributeInternal(PLANNINGMAKEBUYCODE, value);
  }

  /**
   * 
   * Gets the attribute value for FixedLotMultiplier, using the alias name FixedLotMultiplier
   */
  public Number getFixedLotMultiplier()
  {
    return (Number)getAttributeInternal(FIXEDLOTMULTIPLIER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FixedLotMultiplier
   */
  public void setFixedLotMultiplier(Number value)
  {
    setAttributeInternal(FIXEDLOTMULTIPLIER, value);
  }

  /**
   * 
   * Gets the attribute value for RoundingControlType, using the alias name RoundingControlType
   */
  public Number getRoundingControlType()
  {
    return (Number)getAttributeInternal(ROUNDINGCONTROLTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RoundingControlType
   */
  public void setRoundingControlType(Number value)
  {
    setAttributeInternal(ROUNDINGCONTROLTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for CarryingCost, using the alias name CarryingCost
   */
  public Number getCarryingCost()
  {
    return (Number)getAttributeInternal(CARRYINGCOST);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CarryingCost
   */
  public void setCarryingCost(Number value)
  {
    setAttributeInternal(CARRYINGCOST, value);
  }

  /**
   * 
   * Gets the attribute value for PostprocessingLeadTime, using the alias name PostprocessingLeadTime
   */
  public Number getPostprocessingLeadTime()
  {
    return (Number)getAttributeInternal(POSTPROCESSINGLEADTIME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PostprocessingLeadTime
   */
  public void setPostprocessingLeadTime(Number value)
  {
    setAttributeInternal(POSTPROCESSINGLEADTIME, value);
  }

  /**
   * 
   * Gets the attribute value for PreprocessingLeadTime, using the alias name PreprocessingLeadTime
   */
  public Number getPreprocessingLeadTime()
  {
    return (Number)getAttributeInternal(PREPROCESSINGLEADTIME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PreprocessingLeadTime
   */
  public void setPreprocessingLeadTime(Number value)
  {
    setAttributeInternal(PREPROCESSINGLEADTIME, value);
  }

  /**
   * 
   * Gets the attribute value for FullLeadTime, using the alias name FullLeadTime
   */
  public Number getFullLeadTime()
  {
    return (Number)getAttributeInternal(FULLLEADTIME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FullLeadTime
   */
  public void setFullLeadTime(Number value)
  {
    setAttributeInternal(FULLLEADTIME, value);
  }

  /**
   * 
   * Gets the attribute value for OrderCost, using the alias name OrderCost
   */
  public Number getOrderCost()
  {
    return (Number)getAttributeInternal(ORDERCOST);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OrderCost
   */
  public void setOrderCost(Number value)
  {
    setAttributeInternal(ORDERCOST, value);
  }

  /**
   * 
   * Gets the attribute value for MrpSafetyStockPercent, using the alias name MrpSafetyStockPercent
   */
  public Number getMrpSafetyStockPercent()
  {
    return (Number)getAttributeInternal(MRPSAFETYSTOCKPERCENT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MrpSafetyStockPercent
   */
  public void setMrpSafetyStockPercent(Number value)
  {
    setAttributeInternal(MRPSAFETYSTOCKPERCENT, value);
  }

  /**
   * 
   * Gets the attribute value for MrpSafetyStockCode, using the alias name MrpSafetyStockCode
   */
  public Number getMrpSafetyStockCode()
  {
    return (Number)getAttributeInternal(MRPSAFETYSTOCKCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MrpSafetyStockCode
   */
  public void setMrpSafetyStockCode(Number value)
  {
    setAttributeInternal(MRPSAFETYSTOCKCODE, value);
  }

  /**
   * 
   * Gets the attribute value for MinMinmaxQuantity, using the alias name MinMinmaxQuantity
   */
  public Number getMinMinmaxQuantity()
  {
    return (Number)getAttributeInternal(MINMINMAXQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MinMinmaxQuantity
   */
  public void setMinMinmaxQuantity(Number value)
  {
    setAttributeInternal(MINMINMAXQUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for MaxMinmaxQuantity, using the alias name MaxMinmaxQuantity
   */
  public Number getMaxMinmaxQuantity()
  {
    return (Number)getAttributeInternal(MAXMINMAXQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MaxMinmaxQuantity
   */
  public void setMaxMinmaxQuantity(Number value)
  {
    setAttributeInternal(MAXMINMAXQUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for MinimumOrderQuantity, using the alias name MinimumOrderQuantity
   */
  public Number getMinimumOrderQuantity()
  {
    return (Number)getAttributeInternal(MINIMUMORDERQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MinimumOrderQuantity
   */
  public void setMinimumOrderQuantity(Number value)
  {
    setAttributeInternal(MINIMUMORDERQUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for FixedOrderQuantity, using the alias name FixedOrderQuantity
   */
  public Number getFixedOrderQuantity()
  {
    return (Number)getAttributeInternal(FIXEDORDERQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FixedOrderQuantity
   */
  public void setFixedOrderQuantity(Number value)
  {
    setAttributeInternal(FIXEDORDERQUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for FixedDaysSupply, using the alias name FixedDaysSupply
   */
  public Number getFixedDaysSupply()
  {
    return (Number)getAttributeInternal(FIXEDDAYSSUPPLY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FixedDaysSupply
   */
  public void setFixedDaysSupply(Number value)
  {
    setAttributeInternal(FIXEDDAYSSUPPLY, value);
  }

  /**
   * 
   * Gets the attribute value for MaximumOrderQuantity, using the alias name MaximumOrderQuantity
   */
  public Number getMaximumOrderQuantity()
  {
    return (Number)getAttributeInternal(MAXIMUMORDERQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MaximumOrderQuantity
   */
  public void setMaximumOrderQuantity(Number value)
  {
    setAttributeInternal(MAXIMUMORDERQUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for AtpRuleId, using the alias name AtpRuleId
   */
  public Number getAtpRuleId()
  {
    return (Number)getAttributeInternal(ATPRULEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AtpRuleId
   */
  public void setAtpRuleId(Number value)
  {
    setAttributeInternal(ATPRULEID, value);
  }

  /**
   * 
   * Gets the attribute value for PickingRuleId, using the alias name PickingRuleId
   */
  public Number getPickingRuleId()
  {
    return (Number)getAttributeInternal(PICKINGRULEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PickingRuleId
   */
  public void setPickingRuleId(Number value)
  {
    setAttributeInternal(PICKINGRULEID, value);
  }

  /**
   * 
   * Gets the attribute value for ReservableType, using the alias name ReservableType
   */
  public Number getReservableType()
  {
    return (Number)getAttributeInternal(RESERVABLETYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReservableType
   */
  public void setReservableType(Number value)
  {
    setAttributeInternal(RESERVABLETYPE, value);
  }

  /**
   * 
   * Gets the attribute value for PositiveMeasurementError, using the alias name PositiveMeasurementError
   */
  public Number getPositiveMeasurementError()
  {
    return (Number)getAttributeInternal(POSITIVEMEASUREMENTERROR);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PositiveMeasurementError
   */
  public void setPositiveMeasurementError(Number value)
  {
    setAttributeInternal(POSITIVEMEASUREMENTERROR, value);
  }

  /**
   * 
   * Gets the attribute value for NegativeMeasurementError, using the alias name NegativeMeasurementError
   */
  public Number getNegativeMeasurementError()
  {
    return (Number)getAttributeInternal(NEGATIVEMEASUREMENTERROR);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NegativeMeasurementError
   */
  public void setNegativeMeasurementError(Number value)
  {
    setAttributeInternal(NEGATIVEMEASUREMENTERROR, value);
  }

  /**
   * 
   * Gets the attribute value for EngineeringEcnCode, using the alias name EngineeringEcnCode
   */
  public String getEngineeringEcnCode()
  {
    return (String)getAttributeInternal(ENGINEERINGECNCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EngineeringEcnCode
   */
  public void setEngineeringEcnCode(String value)
  {
    setAttributeInternal(ENGINEERINGECNCODE, value);
  }

  /**
   * 
   * Gets the attribute value for EngineeringItemId, using the alias name EngineeringItemId
   */
  public Number getEngineeringItemId()
  {
    return (Number)getAttributeInternal(ENGINEERINGITEMID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EngineeringItemId
   */
  public void setEngineeringItemId(Number value)
  {
    setAttributeInternal(ENGINEERINGITEMID, value);
  }

  /**
   * 
   * Gets the attribute value for EngineeringDate, using the alias name EngineeringDate
   */
  public Date getEngineeringDate()
  {
    return (Date)getAttributeInternal(ENGINEERINGDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EngineeringDate
   */
  public void setEngineeringDate(Date value)
  {
    setAttributeInternal(ENGINEERINGDATE, value);
  }

  /**
   * 
   * Gets the attribute value for ServiceStartingDelay, using the alias name ServiceStartingDelay
   */
  public Number getServiceStartingDelay()
  {
    return (Number)getAttributeInternal(SERVICESTARTINGDELAY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ServiceStartingDelay
   */
  public void setServiceStartingDelay(Number value)
  {
    setAttributeInternal(SERVICESTARTINGDELAY, value);
  }

  /**
   * 
   * Gets the attribute value for VendorWarrantyFlag, using the alias name VendorWarrantyFlag
   */
  public String getVendorWarrantyFlag()
  {
    return (String)getAttributeInternal(VENDORWARRANTYFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VendorWarrantyFlag
   */
  public void setVendorWarrantyFlag(String value)
  {
    setAttributeInternal(VENDORWARRANTYFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ServiceableComponentFlag, using the alias name ServiceableComponentFlag
   */
  public String getServiceableComponentFlag()
  {
    return (String)getAttributeInternal(SERVICEABLECOMPONENTFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ServiceableComponentFlag
   */
  public void setServiceableComponentFlag(String value)
  {
    setAttributeInternal(SERVICEABLECOMPONENTFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ServiceableProductFlag, using the alias name ServiceableProductFlag
   */
  public String getServiceableProductFlag()
  {
    return (String)getAttributeInternal(SERVICEABLEPRODUCTFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ServiceableProductFlag
   */
  public void setServiceableProductFlag(String value)
  {
    setAttributeInternal(SERVICEABLEPRODUCTFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for BaseWarrantyServiceId, using the alias name BaseWarrantyServiceId
   */
  public Number getBaseWarrantyServiceId()
  {
    return (Number)getAttributeInternal(BASEWARRANTYSERVICEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BaseWarrantyServiceId
   */
  public void setBaseWarrantyServiceId(Number value)
  {
    setAttributeInternal(BASEWARRANTYSERVICEID, value);
  }

  /**
   * 
   * Gets the attribute value for PaymentTermsId, using the alias name PaymentTermsId
   */
  public Number getPaymentTermsId()
  {
    return (Number)getAttributeInternal(PAYMENTTERMSID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PaymentTermsId
   */
  public void setPaymentTermsId(Number value)
  {
    setAttributeInternal(PAYMENTTERMSID, value);
  }

  /**
   * 
   * Gets the attribute value for PreventiveMaintenanceFlag, using the alias name PreventiveMaintenanceFlag
   */
  public String getPreventiveMaintenanceFlag()
  {
    return (String)getAttributeInternal(PREVENTIVEMAINTENANCEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PreventiveMaintenanceFlag
   */
  public void setPreventiveMaintenanceFlag(String value)
  {
    setAttributeInternal(PREVENTIVEMAINTENANCEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for PrimarySpecialistId, using the alias name PrimarySpecialistId
   */
  public Number getPrimarySpecialistId()
  {
    return (Number)getAttributeInternal(PRIMARYSPECIALISTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PrimarySpecialistId
   */
  public void setPrimarySpecialistId(Number value)
  {
    setAttributeInternal(PRIMARYSPECIALISTID, value);
  }

  /**
   * 
   * Gets the attribute value for SecondarySpecialistId, using the alias name SecondarySpecialistId
   */
  public Number getSecondarySpecialistId()
  {
    return (Number)getAttributeInternal(SECONDARYSPECIALISTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SecondarySpecialistId
   */
  public void setSecondarySpecialistId(Number value)
  {
    setAttributeInternal(SECONDARYSPECIALISTID, value);
  }

  /**
   * 
   * Gets the attribute value for ServiceableItemClassId, using the alias name ServiceableItemClassId
   */
  public Number getServiceableItemClassId()
  {
    return (Number)getAttributeInternal(SERVICEABLEITEMCLASSID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ServiceableItemClassId
   */
  public void setServiceableItemClassId(Number value)
  {
    setAttributeInternal(SERVICEABLEITEMCLASSID, value);
  }

  /**
   * 
   * Gets the attribute value for TimeBillableFlag, using the alias name TimeBillableFlag
   */
  public String getTimeBillableFlag()
  {
    return (String)getAttributeInternal(TIMEBILLABLEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TimeBillableFlag
   */
  public void setTimeBillableFlag(String value)
  {
    setAttributeInternal(TIMEBILLABLEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for MaterialBillableFlag, using the alias name MaterialBillableFlag
   */
  public String getMaterialBillableFlag()
  {
    return (String)getAttributeInternal(MATERIALBILLABLEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MaterialBillableFlag
   */
  public void setMaterialBillableFlag(String value)
  {
    setAttributeInternal(MATERIALBILLABLEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ExpenseBillableFlag, using the alias name ExpenseBillableFlag
   */
  public String getExpenseBillableFlag()
  {
    return (String)getAttributeInternal(EXPENSEBILLABLEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ExpenseBillableFlag
   */
  public void setExpenseBillableFlag(String value)
  {
    setAttributeInternal(EXPENSEBILLABLEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ProrateServiceFlag, using the alias name ProrateServiceFlag
   */
  public String getProrateServiceFlag()
  {
    return (String)getAttributeInternal(PRORATESERVICEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProrateServiceFlag
   */
  public void setProrateServiceFlag(String value)
  {
    setAttributeInternal(PRORATESERVICEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for CoverageScheduleId, using the alias name CoverageScheduleId
   */
  public Number getCoverageScheduleId()
  {
    return (Number)getAttributeInternal(COVERAGESCHEDULEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CoverageScheduleId
   */
  public void setCoverageScheduleId(Number value)
  {
    setAttributeInternal(COVERAGESCHEDULEID, value);
  }

  /**
   * 
   * Gets the attribute value for ServiceDurationPeriodCode, using the alias name ServiceDurationPeriodCode
   */
  public String getServiceDurationPeriodCode()
  {
    return (String)getAttributeInternal(SERVICEDURATIONPERIODCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ServiceDurationPeriodCode
   */
  public void setServiceDurationPeriodCode(String value)
  {
    setAttributeInternal(SERVICEDURATIONPERIODCODE, value);
  }

  /**
   * 
   * Gets the attribute value for ServiceDuration, using the alias name ServiceDuration
   */
  public Number getServiceDuration()
  {
    return (Number)getAttributeInternal(SERVICEDURATION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ServiceDuration
   */
  public void setServiceDuration(Number value)
  {
    setAttributeInternal(SERVICEDURATION, value);
  }

  /**
   * 
   * Gets the attribute value for WarrantyVendorId, using the alias name WarrantyVendorId
   */
  public Number getWarrantyVendorId()
  {
    return (Number)getAttributeInternal(WARRANTYVENDORID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WarrantyVendorId
   */
  public void setWarrantyVendorId(Number value)
  {
    setAttributeInternal(WARRANTYVENDORID, value);
  }

  /**
   * 
   * Gets the attribute value for MaxWarrantyAmount, using the alias name MaxWarrantyAmount
   */
  public Number getMaxWarrantyAmount()
  {
    return (Number)getAttributeInternal(MAXWARRANTYAMOUNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MaxWarrantyAmount
   */
  public void setMaxWarrantyAmount(Number value)
  {
    setAttributeInternal(MAXWARRANTYAMOUNT, value);
  }

  /**
   * 
   * Gets the attribute value for ResponseTimePeriodCode, using the alias name ResponseTimePeriodCode
   */
  public String getResponseTimePeriodCode()
  {
    return (String)getAttributeInternal(RESPONSETIMEPERIODCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ResponseTimePeriodCode
   */
  public void setResponseTimePeriodCode(String value)
  {
    setAttributeInternal(RESPONSETIMEPERIODCODE, value);
  }

  /**
   * 
   * Gets the attribute value for ResponseTimeValue, using the alias name ResponseTimeValue
   */
  public Number getResponseTimeValue()
  {
    return (Number)getAttributeInternal(RESPONSETIMEVALUE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ResponseTimeValue
   */
  public void setResponseTimeValue(Number value)
  {
    setAttributeInternal(RESPONSETIMEVALUE, value);
  }

  /**
   * 
   * Gets the attribute value for NewRevisionCode, using the alias name NewRevisionCode
   */
  public String getNewRevisionCode()
  {
    return (String)getAttributeInternal(NEWREVISIONCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NewRevisionCode
   */
  public void setNewRevisionCode(String value)
  {
    setAttributeInternal(NEWREVISIONCODE, value);
  }

  /**
   * 
   * Gets the attribute value for InvoiceableItemFlag, using the alias name InvoiceableItemFlag
   */
  public String getInvoiceableItemFlag()
  {
    return (String)getAttributeInternal(INVOICEABLEITEMFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InvoiceableItemFlag
   */
  public void setInvoiceableItemFlag(String value)
  {
    setAttributeInternal(INVOICEABLEITEMFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for TaxCode, using the alias name TaxCode
   */
  public String getTaxCode()
  {
    return (String)getAttributeInternal(TAXCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaxCode
   */
  public void setTaxCode(String value)
  {
    setAttributeInternal(TAXCODE, value);
  }

  /**
   * 
   * Gets the attribute value for InvoiceEnabledFlag, using the alias name InvoiceEnabledFlag
   */
  public String getInvoiceEnabledFlag()
  {
    return (String)getAttributeInternal(INVOICEENABLEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InvoiceEnabledFlag
   */
  public void setInvoiceEnabledFlag(String value)
  {
    setAttributeInternal(INVOICEENABLEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for MustUseApprovedVendorFlag, using the alias name MustUseApprovedVendorFlag
   */
  public String getMustUseApprovedVendorFlag()
  {
    return (String)getAttributeInternal(MUSTUSEAPPROVEDVENDORFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MustUseApprovedVendorFlag
   */
  public void setMustUseApprovedVendorFlag(String value)
  {
    setAttributeInternal(MUSTUSEAPPROVEDVENDORFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for RequestId, using the alias name RequestId
   */
  public Number getRequestId()
  {
    return (Number)getAttributeInternal(REQUESTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RequestId
   */
  public void setRequestId(Number value)
  {
    setAttributeInternal(REQUESTID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramApplicationId, using the alias name ProgramApplicationId
   */
  public Number getProgramApplicationId()
  {
    return (Number)getAttributeInternal(PROGRAMAPPLICATIONID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramApplicationId
   */
  public void setProgramApplicationId(Number value)
  {
    setAttributeInternal(PROGRAMAPPLICATIONID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramId, using the alias name ProgramId
   */
  public Number getProgramId()
  {
    return (Number)getAttributeInternal(PROGRAMID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramId
   */
  public void setProgramId(Number value)
  {
    setAttributeInternal(PROGRAMID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramUpdateDate, using the alias name ProgramUpdateDate
   */
  public Date getProgramUpdateDate()
  {
    return (Date)getAttributeInternal(PROGRAMUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramUpdateDate
   */
  public void setProgramUpdateDate(Date value)
  {
    setAttributeInternal(PROGRAMUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for OutsideOperationFlag, using the alias name OutsideOperationFlag
   */
  public String getOutsideOperationFlag()
  {
    return (String)getAttributeInternal(OUTSIDEOPERATIONFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OutsideOperationFlag
   */
  public void setOutsideOperationFlag(String value)
  {
    setAttributeInternal(OUTSIDEOPERATIONFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for OutsideOperationUomType, using the alias name OutsideOperationUomType
   */
  public String getOutsideOperationUomType()
  {
    return (String)getAttributeInternal(OUTSIDEOPERATIONUOMTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OutsideOperationUomType
   */
  public void setOutsideOperationUomType(String value)
  {
    setAttributeInternal(OUTSIDEOPERATIONUOMTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for SafetyStockBucketDays, using the alias name SafetyStockBucketDays
   */
  public Number getSafetyStockBucketDays()
  {
    return (Number)getAttributeInternal(SAFETYSTOCKBUCKETDAYS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SafetyStockBucketDays
   */
  public void setSafetyStockBucketDays(Number value)
  {
    setAttributeInternal(SAFETYSTOCKBUCKETDAYS, value);
  }

  /**
   * 
   * Gets the attribute value for AutoReduceMps, using the alias name AutoReduceMps
   */
  public Number getAutoReduceMps()
  {
    return (Number)getAttributeInternal(AUTOREDUCEMPS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AutoReduceMps
   */
  public void setAutoReduceMps(Number value)
  {
    setAttributeInternal(AUTOREDUCEMPS, value);
  }

  /**
   * 
   * Gets the attribute value for CostingEnabledFlag, using the alias name CostingEnabledFlag
   */
  public String getCostingEnabledFlag()
  {
    return (String)getAttributeInternal(COSTINGENABLEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CostingEnabledFlag
   */
  public void setCostingEnabledFlag(String value)
  {
    setAttributeInternal(COSTINGENABLEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for AutoCreatedConfigFlag, using the alias name AutoCreatedConfigFlag
   */
  public String getAutoCreatedConfigFlag()
  {
    return (String)getAttributeInternal(AUTOCREATEDCONFIGFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AutoCreatedConfigFlag
   */
  public void setAutoCreatedConfigFlag(String value)
  {
    setAttributeInternal(AUTOCREATEDCONFIGFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for CycleCountEnabledFlag, using the alias name CycleCountEnabledFlag
   */
  public String getCycleCountEnabledFlag()
  {
    return (String)getAttributeInternal(CYCLECOUNTENABLEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CycleCountEnabledFlag
   */
  public void setCycleCountEnabledFlag(String value)
  {
    setAttributeInternal(CYCLECOUNTENABLEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ItemType, using the alias name ItemType
   */
  public String getItemType()
  {
    return (String)getAttributeInternal(ITEMTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ItemType
   */
  public void setItemType(String value)
  {
    setAttributeInternal(ITEMTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for ModelConfigClauseName, using the alias name ModelConfigClauseName
   */
  public String getModelConfigClauseName()
  {
    return (String)getAttributeInternal(MODELCONFIGCLAUSENAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ModelConfigClauseName
   */
  public void setModelConfigClauseName(String value)
  {
    setAttributeInternal(MODELCONFIGCLAUSENAME, value);
  }

  /**
   * 
   * Gets the attribute value for ShipModelCompleteFlag, using the alias name ShipModelCompleteFlag
   */
  public String getShipModelCompleteFlag()
  {
    return (String)getAttributeInternal(SHIPMODELCOMPLETEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ShipModelCompleteFlag
   */
  public void setShipModelCompleteFlag(String value)
  {
    setAttributeInternal(SHIPMODELCOMPLETEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for MrpPlanningCode, using the alias name MrpPlanningCode
   */
  public Number getMrpPlanningCode()
  {
    return (Number)getAttributeInternal(MRPPLANNINGCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MrpPlanningCode
   */
  public void setMrpPlanningCode(Number value)
  {
    setAttributeInternal(MRPPLANNINGCODE, value);
  }

  /**
   * 
   * Gets the attribute value for ReturnInspectionRequirement, using the alias name ReturnInspectionRequirement
   */
  public Number getReturnInspectionRequirement()
  {
    return (Number)getAttributeInternal(RETURNINSPECTIONREQUIREMENT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReturnInspectionRequirement
   */
  public void setReturnInspectionRequirement(Number value)
  {
    setAttributeInternal(RETURNINSPECTIONREQUIREMENT, value);
  }

  /**
   * 
   * Gets the attribute value for AtoForecastControl, using the alias name AtoForecastControl
   */
  public Number getAtoForecastControl()
  {
    return (Number)getAttributeInternal(ATOFORECASTCONTROL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AtoForecastControl
   */
  public void setAtoForecastControl(Number value)
  {
    setAttributeInternal(ATOFORECASTCONTROL, value);
  }

  /**
   * 
   * Gets the attribute value for ReleaseTimeFenceCode, using the alias name ReleaseTimeFenceCode
   */
  public Number getReleaseTimeFenceCode()
  {
    return (Number)getAttributeInternal(RELEASETIMEFENCECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReleaseTimeFenceCode
   */
  public void setReleaseTimeFenceCode(Number value)
  {
    setAttributeInternal(RELEASETIMEFENCECODE, value);
  }

  /**
   * 
   * Gets the attribute value for ReleaseTimeFenceDays, using the alias name ReleaseTimeFenceDays
   */
  public Number getReleaseTimeFenceDays()
  {
    return (Number)getAttributeInternal(RELEASETIMEFENCEDAYS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReleaseTimeFenceDays
   */
  public void setReleaseTimeFenceDays(Number value)
  {
    setAttributeInternal(RELEASETIMEFENCEDAYS, value);
  }

  /**
   * 
   * Gets the attribute value for ContainerItemFlag, using the alias name ContainerItemFlag
   */
  public String getContainerItemFlag()
  {
    return (String)getAttributeInternal(CONTAINERITEMFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ContainerItemFlag
   */
  public void setContainerItemFlag(String value)
  {
    setAttributeInternal(CONTAINERITEMFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for VehicleItemFlag, using the alias name VehicleItemFlag
   */
  public String getVehicleItemFlag()
  {
    return (String)getAttributeInternal(VEHICLEITEMFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VehicleItemFlag
   */
  public void setVehicleItemFlag(String value)
  {
    setAttributeInternal(VEHICLEITEMFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for MaximumLoadWeight, using the alias name MaximumLoadWeight
   */
  public Number getMaximumLoadWeight()
  {
    return (Number)getAttributeInternal(MAXIMUMLOADWEIGHT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MaximumLoadWeight
   */
  public void setMaximumLoadWeight(Number value)
  {
    setAttributeInternal(MAXIMUMLOADWEIGHT, value);
  }

  /**
   * 
   * Gets the attribute value for MinimumFillPercent, using the alias name MinimumFillPercent
   */
  public Number getMinimumFillPercent()
  {
    return (Number)getAttributeInternal(MINIMUMFILLPERCENT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MinimumFillPercent
   */
  public void setMinimumFillPercent(Number value)
  {
    setAttributeInternal(MINIMUMFILLPERCENT, value);
  }

  /**
   * 
   * Gets the attribute value for ContainerTypeCode, using the alias name ContainerTypeCode
   */
  public String getContainerTypeCode()
  {
    return (String)getAttributeInternal(CONTAINERTYPECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ContainerTypeCode
   */
  public void setContainerTypeCode(String value)
  {
    setAttributeInternal(CONTAINERTYPECODE, value);
  }

  /**
   * 
   * Gets the attribute value for InternalVolume, using the alias name InternalVolume
   */
  public Number getInternalVolume()
  {
    return (Number)getAttributeInternal(INTERNALVOLUME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InternalVolume
   */
  public void setInternalVolume(Number value)
  {
    setAttributeInternal(INTERNALVOLUME, value);
  }

  /**
   * 
   * Gets the attribute value for WhUpdateDate, using the alias name WhUpdateDate
   */
  public Date getWhUpdateDate()
  {
    return (Date)getAttributeInternal(WHUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WhUpdateDate
   */
  public void setWhUpdateDate(Date value)
  {
    setAttributeInternal(WHUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for ProductFamilyItemId, using the alias name ProductFamilyItemId
   */
  public Number getProductFamilyItemId()
  {
    return (Number)getAttributeInternal(PRODUCTFAMILYITEMID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProductFamilyItemId
   */
  public void setProductFamilyItemId(Number value)
  {
    setAttributeInternal(PRODUCTFAMILYITEMID, value);
  }

  /**
   * 
   * Gets the attribute value for GlobalAttributeCategory, using the alias name GlobalAttributeCategory
   */
  public String getGlobalAttributeCategory()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTECATEGORY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for GlobalAttributeCategory
   */
  public void setGlobalAttributeCategory(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTECATEGORY, value);
  }

  /**
   * 
   * Gets the attribute value for GlobalAttribute1, using the alias name GlobalAttribute1
   */
  public String getGlobalAttribute1()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for GlobalAttribute1
   */
  public void setGlobalAttribute1(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE1, value);
  }

  /**
   * 
   * Gets the attribute value for GlobalAttribute2, using the alias name GlobalAttribute2
   */
  public String getGlobalAttribute2()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for GlobalAttribute2
   */
  public void setGlobalAttribute2(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE2, value);
  }

  /**
   * 
   * Gets the attribute value for GlobalAttribute3, using the alias name GlobalAttribute3
   */
  public String getGlobalAttribute3()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE3);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for GlobalAttribute3
   */
  public void setGlobalAttribute3(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE3, value);
  }

  /**
   * 
   * Gets the attribute value for GlobalAttribute4, using the alias name GlobalAttribute4
   */
  public String getGlobalAttribute4()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE4);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for GlobalAttribute4
   */
  public void setGlobalAttribute4(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE4, value);
  }

  /**
   * 
   * Gets the attribute value for GlobalAttribute5, using the alias name GlobalAttribute5
   */
  public String getGlobalAttribute5()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE5);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for GlobalAttribute5
   */
  public void setGlobalAttribute5(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE5, value);
  }

  /**
   * 
   * Gets the attribute value for GlobalAttribute6, using the alias name GlobalAttribute6
   */
  public String getGlobalAttribute6()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE6);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for GlobalAttribute6
   */
  public void setGlobalAttribute6(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE6, value);
  }

  /**
   * 
   * Gets the attribute value for GlobalAttribute7, using the alias name GlobalAttribute7
   */
  public String getGlobalAttribute7()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE7);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for GlobalAttribute7
   */
  public void setGlobalAttribute7(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE7, value);
  }

  /**
   * 
   * Gets the attribute value for GlobalAttribute8, using the alias name GlobalAttribute8
   */
  public String getGlobalAttribute8()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE8);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for GlobalAttribute8
   */
  public void setGlobalAttribute8(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE8, value);
  }

  /**
   * 
   * Gets the attribute value for GlobalAttribute9, using the alias name GlobalAttribute9
   */
  public String getGlobalAttribute9()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE9);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for GlobalAttribute9
   */
  public void setGlobalAttribute9(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE9, value);
  }

  /**
   * 
   * Gets the attribute value for GlobalAttribute10, using the alias name GlobalAttribute10
   */
  public String getGlobalAttribute10()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE10);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for GlobalAttribute10
   */
  public void setGlobalAttribute10(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE10, value);
  }

  /**
   * 
   * Gets the attribute value for PurchasingTaxCode, using the alias name PurchasingTaxCode
   */
  public String getPurchasingTaxCode()
  {
    return (String)getAttributeInternal(PURCHASINGTAXCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PurchasingTaxCode
   */
  public void setPurchasingTaxCode(String value)
  {
    setAttributeInternal(PURCHASINGTAXCODE, value);
  }

  /**
   * 
   * Gets the attribute value for OvercompletionToleranceType, using the alias name OvercompletionToleranceType
   */
  public Number getOvercompletionToleranceType()
  {
    return (Number)getAttributeInternal(OVERCOMPLETIONTOLERANCETYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OvercompletionToleranceType
   */
  public void setOvercompletionToleranceType(Number value)
  {
    setAttributeInternal(OVERCOMPLETIONTOLERANCETYPE, value);
  }

  /**
   * 
   * Gets the attribute value for OvercompletionToleranceValue, using the alias name OvercompletionToleranceValue
   */
  public Number getOvercompletionToleranceValue()
  {
    return (Number)getAttributeInternal(OVERCOMPLETIONTOLERANCEVALUE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OvercompletionToleranceValue
   */
  public void setOvercompletionToleranceValue(Number value)
  {
    setAttributeInternal(OVERCOMPLETIONTOLERANCEVALUE, value);
  }

  /**
   * 
   * Gets the attribute value for EffectivityControl, using the alias name EffectivityControl
   */
  public Number getEffectivityControl()
  {
    return (Number)getAttributeInternal(EFFECTIVITYCONTROL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EffectivityControl
   */
  public void setEffectivityControl(Number value)
  {
    setAttributeInternal(EFFECTIVITYCONTROL, value);
  }

  /**
   * 
   * Gets the attribute value for CheckShortagesFlag, using the alias name CheckShortagesFlag
   */
  public String getCheckShortagesFlag()
  {
    return (String)getAttributeInternal(CHECKSHORTAGESFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CheckShortagesFlag
   */
  public void setCheckShortagesFlag(String value)
  {
    setAttributeInternal(CHECKSHORTAGESFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for OverShipmentTolerance, using the alias name OverShipmentTolerance
   */
  public Number getOverShipmentTolerance()
  {
    return (Number)getAttributeInternal(OVERSHIPMENTTOLERANCE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OverShipmentTolerance
   */
  public void setOverShipmentTolerance(Number value)
  {
    setAttributeInternal(OVERSHIPMENTTOLERANCE, value);
  }

  /**
   * 
   * Gets the attribute value for UnderShipmentTolerance, using the alias name UnderShipmentTolerance
   */
  public Number getUnderShipmentTolerance()
  {
    return (Number)getAttributeInternal(UNDERSHIPMENTTOLERANCE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UnderShipmentTolerance
   */
  public void setUnderShipmentTolerance(Number value)
  {
    setAttributeInternal(UNDERSHIPMENTTOLERANCE, value);
  }

  /**
   * 
   * Gets the attribute value for OverReturnTolerance, using the alias name OverReturnTolerance
   */
  public Number getOverReturnTolerance()
  {
    return (Number)getAttributeInternal(OVERRETURNTOLERANCE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OverReturnTolerance
   */
  public void setOverReturnTolerance(Number value)
  {
    setAttributeInternal(OVERRETURNTOLERANCE, value);
  }

  /**
   * 
   * Gets the attribute value for UnderReturnTolerance, using the alias name UnderReturnTolerance
   */
  public Number getUnderReturnTolerance()
  {
    return (Number)getAttributeInternal(UNDERRETURNTOLERANCE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UnderReturnTolerance
   */
  public void setUnderReturnTolerance(Number value)
  {
    setAttributeInternal(UNDERRETURNTOLERANCE, value);
  }

  /**
   * 
   * Gets the attribute value for EquipmentType, using the alias name EquipmentType
   */
  public Number getEquipmentType()
  {
    return (Number)getAttributeInternal(EQUIPMENTTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EquipmentType
   */
  public void setEquipmentType(Number value)
  {
    setAttributeInternal(EQUIPMENTTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for RecoveredPartDispCode, using the alias name RecoveredPartDispCode
   */
  public String getRecoveredPartDispCode()
  {
    return (String)getAttributeInternal(RECOVEREDPARTDISPCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RecoveredPartDispCode
   */
  public void setRecoveredPartDispCode(String value)
  {
    setAttributeInternal(RECOVEREDPARTDISPCODE, value);
  }

  /**
   * 
   * Gets the attribute value for DefectTrackingOnFlag, using the alias name DefectTrackingOnFlag
   */
  public String getDefectTrackingOnFlag()
  {
    return (String)getAttributeInternal(DEFECTTRACKINGONFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DefectTrackingOnFlag
   */
  public void setDefectTrackingOnFlag(String value)
  {
    setAttributeInternal(DEFECTTRACKINGONFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for UsageItemFlag, using the alias name UsageItemFlag
   */
  public String getUsageItemFlag()
  {
    return (String)getAttributeInternal(USAGEITEMFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UsageItemFlag
   */
  public void setUsageItemFlag(String value)
  {
    setAttributeInternal(USAGEITEMFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for EventFlag, using the alias name EventFlag
   */
  public String getEventFlag()
  {
    return (String)getAttributeInternal(EVENTFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EventFlag
   */
  public void setEventFlag(String value)
  {
    setAttributeInternal(EVENTFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ElectronicFlag, using the alias name ElectronicFlag
   */
  public String getElectronicFlag()
  {
    return (String)getAttributeInternal(ELECTRONICFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ElectronicFlag
   */
  public void setElectronicFlag(String value)
  {
    setAttributeInternal(ELECTRONICFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for DownloadableFlag, using the alias name DownloadableFlag
   */
  public String getDownloadableFlag()
  {
    return (String)getAttributeInternal(DOWNLOADABLEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DownloadableFlag
   */
  public void setDownloadableFlag(String value)
  {
    setAttributeInternal(DOWNLOADABLEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for VolDiscountExemptFlag, using the alias name VolDiscountExemptFlag
   */
  public String getVolDiscountExemptFlag()
  {
    return (String)getAttributeInternal(VOLDISCOUNTEXEMPTFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VolDiscountExemptFlag
   */
  public void setVolDiscountExemptFlag(String value)
  {
    setAttributeInternal(VOLDISCOUNTEXEMPTFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for CouponExemptFlag, using the alias name CouponExemptFlag
   */
  public String getCouponExemptFlag()
  {
    return (String)getAttributeInternal(COUPONEXEMPTFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CouponExemptFlag
   */
  public void setCouponExemptFlag(String value)
  {
    setAttributeInternal(COUPONEXEMPTFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for CommsNlTrackableFlag, using the alias name CommsNlTrackableFlag
   */
  public String getCommsNlTrackableFlag()
  {
    return (String)getAttributeInternal(COMMSNLTRACKABLEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CommsNlTrackableFlag
   */
  public void setCommsNlTrackableFlag(String value)
  {
    setAttributeInternal(COMMSNLTRACKABLEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for AssetCreationCode, using the alias name AssetCreationCode
   */
  public String getAssetCreationCode()
  {
    return (String)getAttributeInternal(ASSETCREATIONCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AssetCreationCode
   */
  public void setAssetCreationCode(String value)
  {
    setAttributeInternal(ASSETCREATIONCODE, value);
  }

  /**
   * 
   * Gets the attribute value for CommsActivationReqdFlag, using the alias name CommsActivationReqdFlag
   */
  public String getCommsActivationReqdFlag()
  {
    return (String)getAttributeInternal(COMMSACTIVATIONREQDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CommsActivationReqdFlag
   */
  public void setCommsActivationReqdFlag(String value)
  {
    setAttributeInternal(COMMSACTIVATIONREQDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for OrderableOnWebFlag, using the alias name OrderableOnWebFlag
   */
  public String getOrderableOnWebFlag()
  {
    return (String)getAttributeInternal(ORDERABLEONWEBFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OrderableOnWebFlag
   */
  public void setOrderableOnWebFlag(String value)
  {
    setAttributeInternal(ORDERABLEONWEBFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for BackOrderableFlag, using the alias name BackOrderableFlag
   */
  public String getBackOrderableFlag()
  {
    return (String)getAttributeInternal(BACKORDERABLEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BackOrderableFlag
   */
  public void setBackOrderableFlag(String value)
  {
    setAttributeInternal(BACKORDERABLEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for WebStatus, using the alias name WebStatus
   */
  public String getWebStatus()
  {
    return (String)getAttributeInternal(WEBSTATUS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WebStatus
   */
  public void setWebStatus(String value)
  {
    setAttributeInternal(WEBSTATUS, value);
  }

  /**
   * 
   * Gets the attribute value for IndivisibleFlag, using the alias name IndivisibleFlag
   */
  public String getIndivisibleFlag()
  {
    return (String)getAttributeInternal(INDIVISIBLEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for IndivisibleFlag
   */
  public void setIndivisibleFlag(String value)
  {
    setAttributeInternal(INDIVISIBLEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for DimensionUomCode, using the alias name DimensionUomCode
   */
  public String getDimensionUomCode()
  {
    return (String)getAttributeInternal(DIMENSIONUOMCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DimensionUomCode
   */
  public void setDimensionUomCode(String value)
  {
    setAttributeInternal(DIMENSIONUOMCODE, value);
  }

  /**
   * 
   * Gets the attribute value for UnitLength, using the alias name UnitLength
   */
  public Number getUnitLength()
  {
    return (Number)getAttributeInternal(UNITLENGTH);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UnitLength
   */
  public void setUnitLength(Number value)
  {
    setAttributeInternal(UNITLENGTH, value);
  }

  /**
   * 
   * Gets the attribute value for UnitWidth, using the alias name UnitWidth
   */
  public Number getUnitWidth()
  {
    return (Number)getAttributeInternal(UNITWIDTH);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UnitWidth
   */
  public void setUnitWidth(Number value)
  {
    setAttributeInternal(UNITWIDTH, value);
  }

  /**
   * 
   * Gets the attribute value for UnitHeight, using the alias name UnitHeight
   */
  public Number getUnitHeight()
  {
    return (Number)getAttributeInternal(UNITHEIGHT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UnitHeight
   */
  public void setUnitHeight(Number value)
  {
    setAttributeInternal(UNITHEIGHT, value);
  }

  /**
   * 
   * Gets the attribute value for BulkPickedFlag, using the alias name BulkPickedFlag
   */
  public String getBulkPickedFlag()
  {
    return (String)getAttributeInternal(BULKPICKEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BulkPickedFlag
   */
  public void setBulkPickedFlag(String value)
  {
    setAttributeInternal(BULKPICKEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for LotStatusEnabled, using the alias name LotStatusEnabled
   */
  public String getLotStatusEnabled()
  {
    return (String)getAttributeInternal(LOTSTATUSENABLED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LotStatusEnabled
   */
  public void setLotStatusEnabled(String value)
  {
    setAttributeInternal(LOTSTATUSENABLED, value);
  }

  /**
   * 
   * Gets the attribute value for DefaultLotStatusId, using the alias name DefaultLotStatusId
   */
  public Number getDefaultLotStatusId()
  {
    return (Number)getAttributeInternal(DEFAULTLOTSTATUSID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DefaultLotStatusId
   */
  public void setDefaultLotStatusId(Number value)
  {
    setAttributeInternal(DEFAULTLOTSTATUSID, value);
  }

  /**
   * 
   * Gets the attribute value for SerialStatusEnabled, using the alias name SerialStatusEnabled
   */
  public String getSerialStatusEnabled()
  {
    return (String)getAttributeInternal(SERIALSTATUSENABLED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SerialStatusEnabled
   */
  public void setSerialStatusEnabled(String value)
  {
    setAttributeInternal(SERIALSTATUSENABLED, value);
  }

  /**
   * 
   * Gets the attribute value for DefaultSerialStatusId, using the alias name DefaultSerialStatusId
   */
  public Number getDefaultSerialStatusId()
  {
    return (Number)getAttributeInternal(DEFAULTSERIALSTATUSID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DefaultSerialStatusId
   */
  public void setDefaultSerialStatusId(Number value)
  {
    setAttributeInternal(DEFAULTSERIALSTATUSID, value);
  }

  /**
   * 
   * Gets the attribute value for LotSplitEnabled, using the alias name LotSplitEnabled
   */
  public String getLotSplitEnabled()
  {
    return (String)getAttributeInternal(LOTSPLITENABLED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LotSplitEnabled
   */
  public void setLotSplitEnabled(String value)
  {
    setAttributeInternal(LOTSPLITENABLED, value);
  }

  /**
   * 
   * Gets the attribute value for LotMergeEnabled, using the alias name LotMergeEnabled
   */
  public String getLotMergeEnabled()
  {
    return (String)getAttributeInternal(LOTMERGEENABLED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LotMergeEnabled
   */
  public void setLotMergeEnabled(String value)
  {
    setAttributeInternal(LOTMERGEENABLED, value);
  }

  /**
   * 
   * Gets the attribute value for InventoryCarryPenalty, using the alias name InventoryCarryPenalty
   */
  public Number getInventoryCarryPenalty()
  {
    return (Number)getAttributeInternal(INVENTORYCARRYPENALTY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for InventoryCarryPenalty
   */
  public void setInventoryCarryPenalty(Number value)
  {
    setAttributeInternal(INVENTORYCARRYPENALTY, value);
  }

  /**
   * 
   * Gets the attribute value for OperationSlackPenalty, using the alias name OperationSlackPenalty
   */
  public Number getOperationSlackPenalty()
  {
    return (Number)getAttributeInternal(OPERATIONSLACKPENALTY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OperationSlackPenalty
   */
  public void setOperationSlackPenalty(Number value)
  {
    setAttributeInternal(OPERATIONSLACKPENALTY, value);
  }

  /**
   * 
   * Gets the attribute value for FinancingAllowedFlag, using the alias name FinancingAllowedFlag
   */
  public String getFinancingAllowedFlag()
  {
    return (String)getAttributeInternal(FINANCINGALLOWEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FinancingAllowedFlag
   */
  public void setFinancingAllowedFlag(String value)
  {
    setAttributeInternal(FINANCINGALLOWEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for EamItemType, using the alias name EamItemType
   */
  public Number getEamItemType()
  {
    return (Number)getAttributeInternal(EAMITEMTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EamItemType
   */
  public void setEamItemType(Number value)
  {
    setAttributeInternal(EAMITEMTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for EamActivityTypeCode, using the alias name EamActivityTypeCode
   */
  public String getEamActivityTypeCode()
  {
    return (String)getAttributeInternal(EAMACTIVITYTYPECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EamActivityTypeCode
   */
  public void setEamActivityTypeCode(String value)
  {
    setAttributeInternal(EAMACTIVITYTYPECODE, value);
  }

  /**
   * 
   * Gets the attribute value for EamActivityCauseCode, using the alias name EamActivityCauseCode
   */
  public String getEamActivityCauseCode()
  {
    return (String)getAttributeInternal(EAMACTIVITYCAUSECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EamActivityCauseCode
   */
  public void setEamActivityCauseCode(String value)
  {
    setAttributeInternal(EAMACTIVITYCAUSECODE, value);
  }

  /**
   * 
   * Gets the attribute value for EamActNotificationFlag, using the alias name EamActNotificationFlag
   */
  public String getEamActNotificationFlag()
  {
    return (String)getAttributeInternal(EAMACTNOTIFICATIONFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EamActNotificationFlag
   */
  public void setEamActNotificationFlag(String value)
  {
    setAttributeInternal(EAMACTNOTIFICATIONFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for EamActShutdownStatus, using the alias name EamActShutdownStatus
   */
  public String getEamActShutdownStatus()
  {
    return (String)getAttributeInternal(EAMACTSHUTDOWNSTATUS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EamActShutdownStatus
   */
  public void setEamActShutdownStatus(String value)
  {
    setAttributeInternal(EAMACTSHUTDOWNSTATUS, value);
  }

  /**
   * 
   * Gets the attribute value for DualUomControl, using the alias name DualUomControl
   */
  public Number getDualUomControl()
  {
    return (Number)getAttributeInternal(DUALUOMCONTROL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DualUomControl
   */
  public void setDualUomControl(Number value)
  {
    setAttributeInternal(DUALUOMCONTROL, value);
  }

  /**
   * 
   * Gets the attribute value for SecondaryUomCode, using the alias name SecondaryUomCode
   */
  public String getSecondaryUomCode()
  {
    return (String)getAttributeInternal(SECONDARYUOMCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SecondaryUomCode
   */
  public void setSecondaryUomCode(String value)
  {
    setAttributeInternal(SECONDARYUOMCODE, value);
  }

  /**
   * 
   * Gets the attribute value for DualUomDeviationHigh, using the alias name DualUomDeviationHigh
   */
  public Number getDualUomDeviationHigh()
  {
    return (Number)getAttributeInternal(DUALUOMDEVIATIONHIGH);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DualUomDeviationHigh
   */
  public void setDualUomDeviationHigh(Number value)
  {
    setAttributeInternal(DUALUOMDEVIATIONHIGH, value);
  }

  /**
   * 
   * Gets the attribute value for DualUomDeviationLow, using the alias name DualUomDeviationLow
   */
  public Number getDualUomDeviationLow()
  {
    return (Number)getAttributeInternal(DUALUOMDEVIATIONLOW);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DualUomDeviationLow
   */
  public void setDualUomDeviationLow(Number value)
  {
    setAttributeInternal(DUALUOMDEVIATIONLOW, value);
  }

  /**
   * 
   * Gets the attribute value for ContractItemTypeCode, using the alias name ContractItemTypeCode
   */
  public String getContractItemTypeCode()
  {
    return (String)getAttributeInternal(CONTRACTITEMTYPECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ContractItemTypeCode
   */
  public void setContractItemTypeCode(String value)
  {
    setAttributeInternal(CONTRACTITEMTYPECODE, value);
  }

  /**
   * 
   * Gets the attribute value for SubscriptionDependFlag, using the alias name SubscriptionDependFlag
   */
  public String getSubscriptionDependFlag()
  {
    return (String)getAttributeInternal(SUBSCRIPTIONDEPENDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SubscriptionDependFlag
   */
  public void setSubscriptionDependFlag(String value)
  {
    setAttributeInternal(SUBSCRIPTIONDEPENDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ServReqEnabledCode, using the alias name ServReqEnabledCode
   */
  public String getServReqEnabledCode()
  {
    return (String)getAttributeInternal(SERVREQENABLEDCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ServReqEnabledCode
   */
  public void setServReqEnabledCode(String value)
  {
    setAttributeInternal(SERVREQENABLEDCODE, value);
  }

  /**
   * 
   * Gets the attribute value for ServBillingEnabledFlag, using the alias name ServBillingEnabledFlag
   */
  public String getServBillingEnabledFlag()
  {
    return (String)getAttributeInternal(SERVBILLINGENABLEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ServBillingEnabledFlag
   */
  public void setServBillingEnabledFlag(String value)
  {
    setAttributeInternal(SERVBILLINGENABLEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ServImportanceLevel, using the alias name ServImportanceLevel
   */
  public Number getServImportanceLevel()
  {
    return (Number)getAttributeInternal(SERVIMPORTANCELEVEL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ServImportanceLevel
   */
  public void setServImportanceLevel(Number value)
  {
    setAttributeInternal(SERVIMPORTANCELEVEL, value);
  }

  /**
   * 
   * Gets the attribute value for PlannedInvPointFlag, using the alias name PlannedInvPointFlag
   */
  public String getPlannedInvPointFlag()
  {
    return (String)getAttributeInternal(PLANNEDINVPOINTFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PlannedInvPointFlag
   */
  public void setPlannedInvPointFlag(String value)
  {
    setAttributeInternal(PLANNEDINVPOINTFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for LotTranslateEnabled, using the alias name LotTranslateEnabled
   */
  public String getLotTranslateEnabled()
  {
    return (String)getAttributeInternal(LOTTRANSLATEENABLED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LotTranslateEnabled
   */
  public void setLotTranslateEnabled(String value)
  {
    setAttributeInternal(LOTTRANSLATEENABLED, value);
  }

  /**
   * 
   * Gets the attribute value for DefaultSoSourceType, using the alias name DefaultSoSourceType
   */
  public String getDefaultSoSourceType()
  {
    return (String)getAttributeInternal(DEFAULTSOSOURCETYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DefaultSoSourceType
   */
  public void setDefaultSoSourceType(String value)
  {
    setAttributeInternal(DEFAULTSOSOURCETYPE, value);
  }

  /**
   * 
   * Gets the attribute value for CreateSupplyFlag, using the alias name CreateSupplyFlag
   */
  public String getCreateSupplyFlag()
  {
    return (String)getAttributeInternal(CREATESUPPLYFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreateSupplyFlag
   */
  public void setCreateSupplyFlag(String value)
  {
    setAttributeInternal(CREATESUPPLYFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for SubstitutionWindowCode, using the alias name SubstitutionWindowCode
   */
  public Number getSubstitutionWindowCode()
  {
    return (Number)getAttributeInternal(SUBSTITUTIONWINDOWCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SubstitutionWindowCode
   */
  public void setSubstitutionWindowCode(Number value)
  {
    setAttributeInternal(SUBSTITUTIONWINDOWCODE, value);
  }

  /**
   * 
   * Gets the attribute value for SubstitutionWindowDays, using the alias name SubstitutionWindowDays
   */
  public Number getSubstitutionWindowDays()
  {
    return (Number)getAttributeInternal(SUBSTITUTIONWINDOWDAYS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SubstitutionWindowDays
   */
  public void setSubstitutionWindowDays(Number value)
  {
    setAttributeInternal(SUBSTITUTIONWINDOWDAYS, value);
  }

  /**
   * 
   * Gets the attribute value for IbItemInstanceClass, using the alias name IbItemInstanceClass
   */
  public String getIbItemInstanceClass()
  {
    return (String)getAttributeInternal(IBITEMINSTANCECLASS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for IbItemInstanceClass
   */
  public void setIbItemInstanceClass(String value)
  {
    setAttributeInternal(IBITEMINSTANCECLASS, value);
  }

  /**
   * 
   * Gets the attribute value for ConfigModelType, using the alias name ConfigModelType
   */
  public String getConfigModelType()
  {
    return (String)getAttributeInternal(CONFIGMODELTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ConfigModelType
   */
  public void setConfigModelType(String value)
  {
    setAttributeInternal(CONFIGMODELTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for LotSubstitutionEnabled, using the alias name LotSubstitutionEnabled
   */
  public String getLotSubstitutionEnabled()
  {
    return (String)getAttributeInternal(LOTSUBSTITUTIONENABLED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LotSubstitutionEnabled
   */
  public void setLotSubstitutionEnabled(String value)
  {
    setAttributeInternal(LOTSUBSTITUTIONENABLED, value);
  }

  /**
   * 
   * Gets the attribute value for MinimumLicenseQuantity, using the alias name MinimumLicenseQuantity
   */
  public Number getMinimumLicenseQuantity()
  {
    return (Number)getAttributeInternal(MINIMUMLICENSEQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MinimumLicenseQuantity
   */
  public void setMinimumLicenseQuantity(Number value)
  {
    setAttributeInternal(MINIMUMLICENSEQUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for EamActivitySourceCode, using the alias name EamActivitySourceCode
   */
  public String getEamActivitySourceCode()
  {
    return (String)getAttributeInternal(EAMACTIVITYSOURCECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EamActivitySourceCode
   */
  public void setEamActivitySourceCode(String value)
  {
    setAttributeInternal(EAMACTIVITYSOURCECODE, value);
  }

  /**
   * 
   * Gets the attribute value for LifecycleId, using the alias name LifecycleId
   */
  public Number getLifecycleId()
  {
    return (Number)getAttributeInternal(LIFECYCLEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LifecycleId
   */
  public void setLifecycleId(Number value)
  {
    setAttributeInternal(LIFECYCLEID, value);
  }

  /**
   * 
   * Gets the attribute value for CurrentPhaseId, using the alias name CurrentPhaseId
   */
  public Number getCurrentPhaseId()
  {
    return (Number)getAttributeInternal(CURRENTPHASEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CurrentPhaseId
   */
  public void setCurrentPhaseId(Number value)
  {
    setAttributeInternal(CURRENTPHASEID, value);
  }

  /**
   * 
   * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber
   */
  public Number getObjectVersionNumber()
  {
    return (Number)getAttributeInternal(OBJECTVERSIONNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ObjectVersionNumber
   */
  public void setObjectVersionNumber(Number value)
  {
    setAttributeInternal(OBJECTVERSIONNUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for TrackingQuantityInd, using the alias name TrackingQuantityInd
   */
  public String getTrackingQuantityInd()
  {
    return (String)getAttributeInternal(TRACKINGQUANTITYIND);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TrackingQuantityInd
   */
  public void setTrackingQuantityInd(String value)
  {
    setAttributeInternal(TRACKINGQUANTITYIND, value);
  }

  /**
   * 
   * Gets the attribute value for OntPricingQtySource, using the alias name OntPricingQtySource
   */
  public String getOntPricingQtySource()
  {
    return (String)getAttributeInternal(ONTPRICINGQTYSOURCE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OntPricingQtySource
   */
  public void setOntPricingQtySource(String value)
  {
    setAttributeInternal(ONTPRICINGQTYSOURCE, value);
  }

  /**
   * 
   * Gets the attribute value for SecondaryDefaultInd, using the alias name SecondaryDefaultInd
   */
  public String getSecondaryDefaultInd()
  {
    return (String)getAttributeInternal(SECONDARYDEFAULTIND);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SecondaryDefaultInd
   */
  public void setSecondaryDefaultInd(String value)
  {
    setAttributeInternal(SECONDARYDEFAULTIND, value);
  }

  /**
   * 
   * Gets the attribute value for OptionSpecificSourced, using the alias name OptionSpecificSourced
   */
  public Number getOptionSpecificSourced()
  {
    return (Number)getAttributeInternal(OPTIONSPECIFICSOURCED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OptionSpecificSourced
   */
  public void setOptionSpecificSourced(Number value)
  {
    setAttributeInternal(OPTIONSPECIFICSOURCED, value);
  }

  /**
   * 
   * Gets the attribute value for ApprovalStatus, using the alias name ApprovalStatus
   */
  public String getApprovalStatus()
  {
    return (String)getAttributeInternal(APPROVALSTATUS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ApprovalStatus
   */
  public void setApprovalStatus(String value)
  {
    setAttributeInternal(APPROVALSTATUS, value);
  }

  /**
   * 
   * Gets the attribute value for VmiMinimumUnits, using the alias name VmiMinimumUnits
   */
  public Number getVmiMinimumUnits()
  {
    return (Number)getAttributeInternal(VMIMINIMUMUNITS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VmiMinimumUnits
   */
  public void setVmiMinimumUnits(Number value)
  {
    setAttributeInternal(VMIMINIMUMUNITS, value);
  }

  /**
   * 
   * Gets the attribute value for VmiMinimumDays, using the alias name VmiMinimumDays
   */
  public Number getVmiMinimumDays()
  {
    return (Number)getAttributeInternal(VMIMINIMUMDAYS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VmiMinimumDays
   */
  public void setVmiMinimumDays(Number value)
  {
    setAttributeInternal(VMIMINIMUMDAYS, value);
  }

  /**
   * 
   * Gets the attribute value for VmiMaximumUnits, using the alias name VmiMaximumUnits
   */
  public Number getVmiMaximumUnits()
  {
    return (Number)getAttributeInternal(VMIMAXIMUMUNITS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VmiMaximumUnits
   */
  public void setVmiMaximumUnits(Number value)
  {
    setAttributeInternal(VMIMAXIMUMUNITS, value);
  }

  /**
   * 
   * Gets the attribute value for VmiMaximumDays, using the alias name VmiMaximumDays
   */
  public Number getVmiMaximumDays()
  {
    return (Number)getAttributeInternal(VMIMAXIMUMDAYS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VmiMaximumDays
   */
  public void setVmiMaximumDays(Number value)
  {
    setAttributeInternal(VMIMAXIMUMDAYS, value);
  }

  /**
   * 
   * Gets the attribute value for VmiFixedOrderQuantity, using the alias name VmiFixedOrderQuantity
   */
  public Number getVmiFixedOrderQuantity()
  {
    return (Number)getAttributeInternal(VMIFIXEDORDERQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VmiFixedOrderQuantity
   */
  public void setVmiFixedOrderQuantity(Number value)
  {
    setAttributeInternal(VMIFIXEDORDERQUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for SoAuthorizationFlag, using the alias name SoAuthorizationFlag
   */
  public Number getSoAuthorizationFlag()
  {
    return (Number)getAttributeInternal(SOAUTHORIZATIONFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SoAuthorizationFlag
   */
  public void setSoAuthorizationFlag(Number value)
  {
    setAttributeInternal(SOAUTHORIZATIONFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ConsignedFlag, using the alias name ConsignedFlag
   */
  public Number getConsignedFlag()
  {
    return (Number)getAttributeInternal(CONSIGNEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ConsignedFlag
   */
  public void setConsignedFlag(Number value)
  {
    setAttributeInternal(CONSIGNEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for AsnAutoexpireFlag, using the alias name AsnAutoexpireFlag
   */
  public Number getAsnAutoexpireFlag()
  {
    return (Number)getAttributeInternal(ASNAUTOEXPIREFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AsnAutoexpireFlag
   */
  public void setAsnAutoexpireFlag(Number value)
  {
    setAttributeInternal(ASNAUTOEXPIREFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for VmiForecastType, using the alias name VmiForecastType
   */
  public Number getVmiForecastType()
  {
    return (Number)getAttributeInternal(VMIFORECASTTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VmiForecastType
   */
  public void setVmiForecastType(Number value)
  {
    setAttributeInternal(VMIFORECASTTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for ForecastHorizon, using the alias name ForecastHorizon
   */
  public Number getForecastHorizon()
  {
    return (Number)getAttributeInternal(FORECASTHORIZON);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ForecastHorizon
   */
  public void setForecastHorizon(Number value)
  {
    setAttributeInternal(FORECASTHORIZON, value);
  }

  /**
   * 
   * Gets the attribute value for ExcludeFromBudgetFlag, using the alias name ExcludeFromBudgetFlag
   */
  public Number getExcludeFromBudgetFlag()
  {
    return (Number)getAttributeInternal(EXCLUDEFROMBUDGETFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ExcludeFromBudgetFlag
   */
  public void setExcludeFromBudgetFlag(Number value)
  {
    setAttributeInternal(EXCLUDEFROMBUDGETFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for DaysTgtInvSupply, using the alias name DaysTgtInvSupply
   */
  public Number getDaysTgtInvSupply()
  {
    return (Number)getAttributeInternal(DAYSTGTINVSUPPLY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DaysTgtInvSupply
   */
  public void setDaysTgtInvSupply(Number value)
  {
    setAttributeInternal(DAYSTGTINVSUPPLY, value);
  }

  /**
   * 
   * Gets the attribute value for DaysTgtInvWindow, using the alias name DaysTgtInvWindow
   */
  public Number getDaysTgtInvWindow()
  {
    return (Number)getAttributeInternal(DAYSTGTINVWINDOW);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DaysTgtInvWindow
   */
  public void setDaysTgtInvWindow(Number value)
  {
    setAttributeInternal(DAYSTGTINVWINDOW, value);
  }

  /**
   * 
   * Gets the attribute value for DaysMaxInvSupply, using the alias name DaysMaxInvSupply
   */
  public Number getDaysMaxInvSupply()
  {
    return (Number)getAttributeInternal(DAYSMAXINVSUPPLY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DaysMaxInvSupply
   */
  public void setDaysMaxInvSupply(Number value)
  {
    setAttributeInternal(DAYSMAXINVSUPPLY, value);
  }

  /**
   * 
   * Gets the attribute value for DaysMaxInvWindow, using the alias name DaysMaxInvWindow
   */
  public Number getDaysMaxInvWindow()
  {
    return (Number)getAttributeInternal(DAYSMAXINVWINDOW);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DaysMaxInvWindow
   */
  public void setDaysMaxInvWindow(Number value)
  {
    setAttributeInternal(DAYSMAXINVWINDOW, value);
  }

  /**
   * 
   * Gets the attribute value for DrpPlannedFlag, using the alias name DrpPlannedFlag
   */
  public Number getDrpPlannedFlag()
  {
    return (Number)getAttributeInternal(DRPPLANNEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DrpPlannedFlag
   */
  public void setDrpPlannedFlag(Number value)
  {
    setAttributeInternal(DRPPLANNEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for CriticalComponentFlag, using the alias name CriticalComponentFlag
   */
  public Number getCriticalComponentFlag()
  {
    return (Number)getAttributeInternal(CRITICALCOMPONENTFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CriticalComponentFlag
   */
  public void setCriticalComponentFlag(Number value)
  {
    setAttributeInternal(CRITICALCOMPONENTFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for ContinousTransfer, using the alias name ContinousTransfer
   */
  public Number getContinousTransfer()
  {
    return (Number)getAttributeInternal(CONTINOUSTRANSFER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ContinousTransfer
   */
  public void setContinousTransfer(Number value)
  {
    setAttributeInternal(CONTINOUSTRANSFER, value);
  }

  /**
   * 
   * Gets the attribute value for Convergence, using the alias name Convergence
   */
  public Number getConvergence()
  {
    return (Number)getAttributeInternal(CONVERGENCE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Convergence
   */
  public void setConvergence(Number value)
  {
    setAttributeInternal(CONVERGENCE, value);
  }

  /**
   * 
   * Gets the attribute value for Divergence, using the alias name Divergence
   */
  public Number getDivergence()
  {
    return (Number)getAttributeInternal(DIVERGENCE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Divergence
   */
  public void setDivergence(Number value)
  {
    setAttributeInternal(DIVERGENCE, value);
  }

  /**
   * 
   * Gets the attribute value for ConfigOrgs, using the alias name ConfigOrgs
   */
  public String getConfigOrgs()
  {
    return (String)getAttributeInternal(CONFIGORGS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ConfigOrgs
   */
  public void setConfigOrgs(String value)
  {
    setAttributeInternal(CONFIGORGS, value);
  }

  /**
   * 
   * Gets the attribute value for ConfigMatch, using the alias name ConfigMatch
   */
  public String getConfigMatch()
  {
    return (String)getAttributeInternal(CONFIGMATCH);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ConfigMatch
   */
  public void setConfigMatch(String value)
  {
    setAttributeInternal(CONFIGMATCH, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case INVENTORYITEMID:
        return getInventoryItemId();
      case ORGANIZATIONID:
        return getOrganizationId();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case SUMMARYFLAG:
        return getSummaryFlag();
      case ENABLEDFLAG:
        return getEnabledFlag();
      case STARTDATEACTIVE:
        return getStartDateActive();
      case ENDDATEACTIVE:
        return getEndDateActive();
      case DESCRIPTION:
        return getDescription();
      case BUYERID:
        return getBuyerId();
      case ACCOUNTINGRULEID:
        return getAccountingRuleId();
      case INVOICINGRULEID:
        return getInvoicingRuleId();
      case SEGMENT1:
        return getSegment1();
      case SEGMENT2:
        return getSegment2();
      case SEGMENT3:
        return getSegment3();
      case SEGMENT4:
        return getSegment4();
      case SEGMENT5:
        return getSegment5();
      case SEGMENT6:
        return getSegment6();
      case SEGMENT7:
        return getSegment7();
      case SEGMENT8:
        return getSegment8();
      case SEGMENT9:
        return getSegment9();
      case SEGMENT10:
        return getSegment10();
      case SEGMENT11:
        return getSegment11();
      case SEGMENT12:
        return getSegment12();
      case SEGMENT13:
        return getSegment13();
      case SEGMENT14:
        return getSegment14();
      case SEGMENT15:
        return getSegment15();
      case SEGMENT16:
        return getSegment16();
      case SEGMENT17:
        return getSegment17();
      case SEGMENT18:
        return getSegment18();
      case SEGMENT19:
        return getSegment19();
      case SEGMENT20:
        return getSegment20();
      case ATTRIBUTECATEGORY:
        return getAttributeCategory();
      case ATTRIBUTE1:
        return getAttribute1();
      case ATTRIBUTE2:
        return getAttribute2();
      case ATTRIBUTE3:
        return getAttribute3();
      case ATTRIBUTE4:
        return getAttribute4();
      case ATTRIBUTE5:
        return getAttribute5();
      case ATTRIBUTE6:
        return getAttribute6();
      case ATTRIBUTE7:
        return getAttribute7();
      case ATTRIBUTE8:
        return getAttribute8();
      case ATTRIBUTE9:
        return getAttribute9();
      case ATTRIBUTE10:
        return getAttribute10();
      case ATTRIBUTE11:
        return getAttribute11();
      case ATTRIBUTE12:
        return getAttribute12();
      case ATTRIBUTE13:
        return getAttribute13();
      case ATTRIBUTE14:
        return getAttribute14();
      case ATTRIBUTE15:
        return getAttribute15();
      case PURCHASINGITEMFLAG:
        return getPurchasingItemFlag();
      case SHIPPABLEITEMFLAG:
        return getShippableItemFlag();
      case CUSTOMERORDERFLAG:
        return getCustomerOrderFlag();
      case INTERNALORDERFLAG:
        return getInternalOrderFlag();
      case SERVICEITEMFLAG:
        return getServiceItemFlag();
      case INVENTORYITEMFLAG:
        return getInventoryItemFlag();
      case ENGITEMFLAG:
        return getEngItemFlag();
      case INVENTORYASSETFLAG:
        return getInventoryAssetFlag();
      case PURCHASINGENABLEDFLAG:
        return getPurchasingEnabledFlag();
      case CUSTOMERORDERENABLEDFLAG:
        return getCustomerOrderEnabledFlag();
      case INTERNALORDERENABLEDFLAG:
        return getInternalOrderEnabledFlag();
      case SOTRANSACTIONSFLAG:
        return getSoTransactionsFlag();
      case MTLTRANSACTIONSENABLEDFLAG:
        return getMtlTransactionsEnabledFlag();
      case STOCKENABLEDFLAG:
        return getStockEnabledFlag();
      case BOMENABLEDFLAG:
        return getBomEnabledFlag();
      case BUILDINWIPFLAG:
        return getBuildInWipFlag();
      case REVISIONQTYCONTROLCODE:
        return getRevisionQtyControlCode();
      case ITEMCATALOGGROUPID:
        return getItemCatalogGroupId();
      case CATALOGSTATUSFLAG:
        return getCatalogStatusFlag();
      case RETURNABLEFLAG:
        return getReturnableFlag();
      case DEFAULTSHIPPINGORG:
        return getDefaultShippingOrg();
      case COLLATERALFLAG:
        return getCollateralFlag();
      case TAXABLEFLAG:
        return getTaxableFlag();
      case QTYRCVEXCEPTIONCODE:
        return getQtyRcvExceptionCode();
      case ALLOWITEMDESCUPDATEFLAG:
        return getAllowItemDescUpdateFlag();
      case INSPECTIONREQUIREDFLAG:
        return getInspectionRequiredFlag();
      case RECEIPTREQUIREDFLAG:
        return getReceiptRequiredFlag();
      case MARKETPRICE:
        return getMarketPrice();
      case HAZARDCLASSID:
        return getHazardClassId();
      case RFQREQUIREDFLAG:
        return getRfqRequiredFlag();
      case QTYRCVTOLERANCE:
        return getQtyRcvTolerance();
      case LISTPRICEPERUNIT:
        return getListPricePerUnit();
      case UNNUMBERID:
        return getUnNumberId();
      case PRICETOLERANCEPERCENT:
        return getPriceTolerancePercent();
      case ASSETCATEGORYID:
        return getAssetCategoryId();
      case ROUNDINGFACTOR:
        return getRoundingFactor();
      case UNITOFISSUE:
        return getUnitOfIssue();
      case ENFORCESHIPTOLOCATIONCODE:
        return getEnforceShipToLocationCode();
      case ALLOWSUBSTITUTERECEIPTSFLAG:
        return getAllowSubstituteReceiptsFlag();
      case ALLOWUNORDEREDRECEIPTSFLAG:
        return getAllowUnorderedReceiptsFlag();
      case ALLOWEXPRESSDELIVERYFLAG:
        return getAllowExpressDeliveryFlag();
      case DAYSEARLYRECEIPTALLOWED:
        return getDaysEarlyReceiptAllowed();
      case DAYSLATERECEIPTALLOWED:
        return getDaysLateReceiptAllowed();
      case RECEIPTDAYSEXCEPTIONCODE:
        return getReceiptDaysExceptionCode();
      case RECEIVINGROUTINGID:
        return getReceivingRoutingId();
      case INVOICECLOSETOLERANCE:
        return getInvoiceCloseTolerance();
      case RECEIVECLOSETOLERANCE:
        return getReceiveCloseTolerance();
      case AUTOLOTALPHAPREFIX:
        return getAutoLotAlphaPrefix();
      case STARTAUTOLOTNUMBER:
        return getStartAutoLotNumber();
      case LOTCONTROLCODE:
        return getLotControlCode();
      case SHELFLIFECODE:
        return getShelfLifeCode();
      case SHELFLIFEDAYS:
        return getShelfLifeDays();
      case SERIALNUMBERCONTROLCODE:
        return getSerialNumberControlCode();
      case STARTAUTOSERIALNUMBER:
        return getStartAutoSerialNumber();
      case AUTOSERIALALPHAPREFIX:
        return getAutoSerialAlphaPrefix();
      case SOURCETYPE:
        return getSourceType();
      case SOURCEORGANIZATIONID:
        return getSourceOrganizationId();
      case SOURCESUBINVENTORY:
        return getSourceSubinventory();
      case EXPENSEACCOUNT:
        return getExpenseAccount();
      case ENCUMBRANCEACCOUNT:
        return getEncumbranceAccount();
      case RESTRICTSUBINVENTORIESCODE:
        return getRestrictSubinventoriesCode();
      case UNITWEIGHT:
        return getUnitWeight();
      case WEIGHTUOMCODE:
        return getWeightUomCode();
      case VOLUMEUOMCODE:
        return getVolumeUomCode();
      case UNITVOLUME:
        return getUnitVolume();
      case RESTRICTLOCATORSCODE:
        return getRestrictLocatorsCode();
      case LOCATIONCONTROLCODE:
        return getLocationControlCode();
      case SHRINKAGERATE:
        return getShrinkageRate();
      case ACCEPTABLEEARLYDAYS:
        return getAcceptableEarlyDays();
      case PLANNINGTIMEFENCECODE:
        return getPlanningTimeFenceCode();
      case DEMANDTIMEFENCECODE:
        return getDemandTimeFenceCode();
      case LEADTIMELOTSIZE:
        return getLeadTimeLotSize();
      case STDLOTSIZE:
        return getStdLotSize();
      case CUMMANUFACTURINGLEADTIME:
        return getCumManufacturingLeadTime();
      case OVERRUNPERCENTAGE:
        return getOverrunPercentage();
      case MRPCALCULATEATPFLAG:
        return getMrpCalculateAtpFlag();
      case ACCEPTABLERATEINCREASE:
        return getAcceptableRateIncrease();
      case ACCEPTABLERATEDECREASE:
        return getAcceptableRateDecrease();
      case CUMULATIVETOTALLEADTIME:
        return getCumulativeTotalLeadTime();
      case PLANNINGTIMEFENCEDAYS:
        return getPlanningTimeFenceDays();
      case DEMANDTIMEFENCEDAYS:
        return getDemandTimeFenceDays();
      case ENDASSEMBLYPEGGINGFLAG:
        return getEndAssemblyPeggingFlag();
      case REPETITIVEPLANNINGFLAG:
        return getRepetitivePlanningFlag();
      case PLANNINGEXCEPTIONSET:
        return getPlanningExceptionSet();
      case BOMITEMTYPE:
        return getBomItemType();
      case PICKCOMPONENTSFLAG:
        return getPickComponentsFlag();
      case REPLENISHTOORDERFLAG:
        return getReplenishToOrderFlag();
      case BASEITEMID:
        return getBaseItemId();
      case ATPCOMPONENTSFLAG:
        return getAtpComponentsFlag();
      case ATPFLAG:
        return getAtpFlag();
      case FIXEDLEADTIME:
        return getFixedLeadTime();
      case VARIABLELEADTIME:
        return getVariableLeadTime();
      case WIPSUPPLYLOCATORID:
        return getWipSupplyLocatorId();
      case WIPSUPPLYTYPE:
        return getWipSupplyType();
      case WIPSUPPLYSUBINVENTORY:
        return getWipSupplySubinventory();
      case PRIMARYUOMCODE:
        return getPrimaryUomCode();
      case PRIMARYUNITOFMEASURE:
        return getPrimaryUnitOfMeasure();
      case ALLOWEDUNITSLOOKUPCODE:
        return getAllowedUnitsLookupCode();
      case COSTOFSALESACCOUNT:
        return getCostOfSalesAccount();
      case SALESACCOUNT:
        return getSalesAccount();
      case DEFAULTINCLUDEINROLLUPFLAG:
        return getDefaultIncludeInRollupFlag();
      case INVENTORYITEMSTATUSCODE:
        return getInventoryItemStatusCode();
      case INVENTORYPLANNINGCODE:
        return getInventoryPlanningCode();
      case PLANNERCODE:
        return getPlannerCode();
      case PLANNINGMAKEBUYCODE:
        return getPlanningMakeBuyCode();
      case FIXEDLOTMULTIPLIER:
        return getFixedLotMultiplier();
      case ROUNDINGCONTROLTYPE:
        return getRoundingControlType();
      case CARRYINGCOST:
        return getCarryingCost();
      case POSTPROCESSINGLEADTIME:
        return getPostprocessingLeadTime();
      case PREPROCESSINGLEADTIME:
        return getPreprocessingLeadTime();
      case FULLLEADTIME:
        return getFullLeadTime();
      case ORDERCOST:
        return getOrderCost();
      case MRPSAFETYSTOCKPERCENT:
        return getMrpSafetyStockPercent();
      case MRPSAFETYSTOCKCODE:
        return getMrpSafetyStockCode();
      case MINMINMAXQUANTITY:
        return getMinMinmaxQuantity();
      case MAXMINMAXQUANTITY:
        return getMaxMinmaxQuantity();
      case MINIMUMORDERQUANTITY:
        return getMinimumOrderQuantity();
      case FIXEDORDERQUANTITY:
        return getFixedOrderQuantity();
      case FIXEDDAYSSUPPLY:
        return getFixedDaysSupply();
      case MAXIMUMORDERQUANTITY:
        return getMaximumOrderQuantity();
      case ATPRULEID:
        return getAtpRuleId();
      case PICKINGRULEID:
        return getPickingRuleId();
      case RESERVABLETYPE:
        return getReservableType();
      case POSITIVEMEASUREMENTERROR:
        return getPositiveMeasurementError();
      case NEGATIVEMEASUREMENTERROR:
        return getNegativeMeasurementError();
      case ENGINEERINGECNCODE:
        return getEngineeringEcnCode();
      case ENGINEERINGITEMID:
        return getEngineeringItemId();
      case ENGINEERINGDATE:
        return getEngineeringDate();
      case SERVICESTARTINGDELAY:
        return getServiceStartingDelay();
      case VENDORWARRANTYFLAG:
        return getVendorWarrantyFlag();
      case SERVICEABLECOMPONENTFLAG:
        return getServiceableComponentFlag();
      case SERVICEABLEPRODUCTFLAG:
        return getServiceableProductFlag();
      case BASEWARRANTYSERVICEID:
        return getBaseWarrantyServiceId();
      case PAYMENTTERMSID:
        return getPaymentTermsId();
      case PREVENTIVEMAINTENANCEFLAG:
        return getPreventiveMaintenanceFlag();
      case PRIMARYSPECIALISTID:
        return getPrimarySpecialistId();
      case SECONDARYSPECIALISTID:
        return getSecondarySpecialistId();
      case SERVICEABLEITEMCLASSID:
        return getServiceableItemClassId();
      case TIMEBILLABLEFLAG:
        return getTimeBillableFlag();
      case MATERIALBILLABLEFLAG:
        return getMaterialBillableFlag();
      case EXPENSEBILLABLEFLAG:
        return getExpenseBillableFlag();
      case PRORATESERVICEFLAG:
        return getProrateServiceFlag();
      case COVERAGESCHEDULEID:
        return getCoverageScheduleId();
      case SERVICEDURATIONPERIODCODE:
        return getServiceDurationPeriodCode();
      case SERVICEDURATION:
        return getServiceDuration();
      case WARRANTYVENDORID:
        return getWarrantyVendorId();
      case MAXWARRANTYAMOUNT:
        return getMaxWarrantyAmount();
      case RESPONSETIMEPERIODCODE:
        return getResponseTimePeriodCode();
      case RESPONSETIMEVALUE:
        return getResponseTimeValue();
      case NEWREVISIONCODE:
        return getNewRevisionCode();
      case INVOICEABLEITEMFLAG:
        return getInvoiceableItemFlag();
      case TAXCODE:
        return getTaxCode();
      case INVOICEENABLEDFLAG:
        return getInvoiceEnabledFlag();
      case MUSTUSEAPPROVEDVENDORFLAG:
        return getMustUseApprovedVendorFlag();
      case REQUESTID:
        return getRequestId();
      case PROGRAMAPPLICATIONID:
        return getProgramApplicationId();
      case PROGRAMID:
        return getProgramId();
      case PROGRAMUPDATEDATE:
        return getProgramUpdateDate();
      case OUTSIDEOPERATIONFLAG:
        return getOutsideOperationFlag();
      case OUTSIDEOPERATIONUOMTYPE:
        return getOutsideOperationUomType();
      case SAFETYSTOCKBUCKETDAYS:
        return getSafetyStockBucketDays();
      case AUTOREDUCEMPS:
        return getAutoReduceMps();
      case COSTINGENABLEDFLAG:
        return getCostingEnabledFlag();
      case AUTOCREATEDCONFIGFLAG:
        return getAutoCreatedConfigFlag();
      case CYCLECOUNTENABLEDFLAG:
        return getCycleCountEnabledFlag();
      case ITEMTYPE:
        return getItemType();
      case MODELCONFIGCLAUSENAME:
        return getModelConfigClauseName();
      case SHIPMODELCOMPLETEFLAG:
        return getShipModelCompleteFlag();
      case MRPPLANNINGCODE:
        return getMrpPlanningCode();
      case RETURNINSPECTIONREQUIREMENT:
        return getReturnInspectionRequirement();
      case ATOFORECASTCONTROL:
        return getAtoForecastControl();
      case RELEASETIMEFENCECODE:
        return getReleaseTimeFenceCode();
      case RELEASETIMEFENCEDAYS:
        return getReleaseTimeFenceDays();
      case CONTAINERITEMFLAG:
        return getContainerItemFlag();
      case VEHICLEITEMFLAG:
        return getVehicleItemFlag();
      case MAXIMUMLOADWEIGHT:
        return getMaximumLoadWeight();
      case MINIMUMFILLPERCENT:
        return getMinimumFillPercent();
      case CONTAINERTYPECODE:
        return getContainerTypeCode();
      case INTERNALVOLUME:
        return getInternalVolume();
      case WHUPDATEDATE:
        return getWhUpdateDate();
      case PRODUCTFAMILYITEMID:
        return getProductFamilyItemId();
      case GLOBALATTRIBUTECATEGORY:
        return getGlobalAttributeCategory();
      case GLOBALATTRIBUTE1:
        return getGlobalAttribute1();
      case GLOBALATTRIBUTE2:
        return getGlobalAttribute2();
      case GLOBALATTRIBUTE3:
        return getGlobalAttribute3();
      case GLOBALATTRIBUTE4:
        return getGlobalAttribute4();
      case GLOBALATTRIBUTE5:
        return getGlobalAttribute5();
      case GLOBALATTRIBUTE6:
        return getGlobalAttribute6();
      case GLOBALATTRIBUTE7:
        return getGlobalAttribute7();
      case GLOBALATTRIBUTE8:
        return getGlobalAttribute8();
      case GLOBALATTRIBUTE9:
        return getGlobalAttribute9();
      case GLOBALATTRIBUTE10:
        return getGlobalAttribute10();
      case PURCHASINGTAXCODE:
        return getPurchasingTaxCode();
      case OVERCOMPLETIONTOLERANCETYPE:
        return getOvercompletionToleranceType();
      case OVERCOMPLETIONTOLERANCEVALUE:
        return getOvercompletionToleranceValue();
      case EFFECTIVITYCONTROL:
        return getEffectivityControl();
      case CHECKSHORTAGESFLAG:
        return getCheckShortagesFlag();
      case OVERSHIPMENTTOLERANCE:
        return getOverShipmentTolerance();
      case UNDERSHIPMENTTOLERANCE:
        return getUnderShipmentTolerance();
      case OVERRETURNTOLERANCE:
        return getOverReturnTolerance();
      case UNDERRETURNTOLERANCE:
        return getUnderReturnTolerance();
      case EQUIPMENTTYPE:
        return getEquipmentType();
      case RECOVEREDPARTDISPCODE:
        return getRecoveredPartDispCode();
      case DEFECTTRACKINGONFLAG:
        return getDefectTrackingOnFlag();
      case USAGEITEMFLAG:
        return getUsageItemFlag();
      case EVENTFLAG:
        return getEventFlag();
      case ELECTRONICFLAG:
        return getElectronicFlag();
      case DOWNLOADABLEFLAG:
        return getDownloadableFlag();
      case VOLDISCOUNTEXEMPTFLAG:
        return getVolDiscountExemptFlag();
      case COUPONEXEMPTFLAG:
        return getCouponExemptFlag();
      case COMMSNLTRACKABLEFLAG:
        return getCommsNlTrackableFlag();
      case ASSETCREATIONCODE:
        return getAssetCreationCode();
      case COMMSACTIVATIONREQDFLAG:
        return getCommsActivationReqdFlag();
      case ORDERABLEONWEBFLAG:
        return getOrderableOnWebFlag();
      case BACKORDERABLEFLAG:
        return getBackOrderableFlag();
      case WEBSTATUS:
        return getWebStatus();
      case INDIVISIBLEFLAG:
        return getIndivisibleFlag();
      case DIMENSIONUOMCODE:
        return getDimensionUomCode();
      case UNITLENGTH:
        return getUnitLength();
      case UNITWIDTH:
        return getUnitWidth();
      case UNITHEIGHT:
        return getUnitHeight();
      case BULKPICKEDFLAG:
        return getBulkPickedFlag();
      case LOTSTATUSENABLED:
        return getLotStatusEnabled();
      case DEFAULTLOTSTATUSID:
        return getDefaultLotStatusId();
      case SERIALSTATUSENABLED:
        return getSerialStatusEnabled();
      case DEFAULTSERIALSTATUSID:
        return getDefaultSerialStatusId();
      case LOTSPLITENABLED:
        return getLotSplitEnabled();
      case LOTMERGEENABLED:
        return getLotMergeEnabled();
      case INVENTORYCARRYPENALTY:
        return getInventoryCarryPenalty();
      case OPERATIONSLACKPENALTY:
        return getOperationSlackPenalty();
      case FINANCINGALLOWEDFLAG:
        return getFinancingAllowedFlag();
      case EAMITEMTYPE:
        return getEamItemType();
      case EAMACTIVITYTYPECODE:
        return getEamActivityTypeCode();
      case EAMACTIVITYCAUSECODE:
        return getEamActivityCauseCode();
      case EAMACTNOTIFICATIONFLAG:
        return getEamActNotificationFlag();
      case EAMACTSHUTDOWNSTATUS:
        return getEamActShutdownStatus();
      case DUALUOMCONTROL:
        return getDualUomControl();
      case SECONDARYUOMCODE:
        return getSecondaryUomCode();
      case DUALUOMDEVIATIONHIGH:
        return getDualUomDeviationHigh();
      case DUALUOMDEVIATIONLOW:
        return getDualUomDeviationLow();
      case CONTRACTITEMTYPECODE:
        return getContractItemTypeCode();
      case SUBSCRIPTIONDEPENDFLAG:
        return getSubscriptionDependFlag();
      case SERVREQENABLEDCODE:
        return getServReqEnabledCode();
      case SERVBILLINGENABLEDFLAG:
        return getServBillingEnabledFlag();
      case SERVIMPORTANCELEVEL:
        return getServImportanceLevel();
      case PLANNEDINVPOINTFLAG:
        return getPlannedInvPointFlag();
      case LOTTRANSLATEENABLED:
        return getLotTranslateEnabled();
      case DEFAULTSOSOURCETYPE:
        return getDefaultSoSourceType();
      case CREATESUPPLYFLAG:
        return getCreateSupplyFlag();
      case SUBSTITUTIONWINDOWCODE:
        return getSubstitutionWindowCode();
      case SUBSTITUTIONWINDOWDAYS:
        return getSubstitutionWindowDays();
      case IBITEMINSTANCECLASS:
        return getIbItemInstanceClass();
      case CONFIGMODELTYPE:
        return getConfigModelType();
      case LOTSUBSTITUTIONENABLED:
        return getLotSubstitutionEnabled();
      case MINIMUMLICENSEQUANTITY:
        return getMinimumLicenseQuantity();
      case EAMACTIVITYSOURCECODE:
        return getEamActivitySourceCode();
      case LIFECYCLEID:
        return getLifecycleId();
      case CURRENTPHASEID:
        return getCurrentPhaseId();
      case OBJECTVERSIONNUMBER:
        return getObjectVersionNumber();
      case TRACKINGQUANTITYIND:
        return getTrackingQuantityInd();
      case ONTPRICINGQTYSOURCE:
        return getOntPricingQtySource();
      case SECONDARYDEFAULTIND:
        return getSecondaryDefaultInd();
      case OPTIONSPECIFICSOURCED:
        return getOptionSpecificSourced();
      case APPROVALSTATUS:
        return getApprovalStatus();
      case VMIMINIMUMUNITS:
        return getVmiMinimumUnits();
      case VMIMINIMUMDAYS:
        return getVmiMinimumDays();
      case VMIMAXIMUMUNITS:
        return getVmiMaximumUnits();
      case VMIMAXIMUMDAYS:
        return getVmiMaximumDays();
      case VMIFIXEDORDERQUANTITY:
        return getVmiFixedOrderQuantity();
      case SOAUTHORIZATIONFLAG:
        return getSoAuthorizationFlag();
      case CONSIGNEDFLAG:
        return getConsignedFlag();
      case ASNAUTOEXPIREFLAG:
        return getAsnAutoexpireFlag();
      case VMIFORECASTTYPE:
        return getVmiForecastType();
      case FORECASTHORIZON:
        return getForecastHorizon();
      case EXCLUDEFROMBUDGETFLAG:
        return getExcludeFromBudgetFlag();
      case DAYSTGTINVSUPPLY:
        return getDaysTgtInvSupply();
      case DAYSTGTINVWINDOW:
        return getDaysTgtInvWindow();
      case DAYSMAXINVSUPPLY:
        return getDaysMaxInvSupply();
      case DAYSMAXINVWINDOW:
        return getDaysMaxInvWindow();
      case DRPPLANNEDFLAG:
        return getDrpPlannedFlag();
      case CRITICALCOMPONENTFLAG:
        return getCriticalComponentFlag();
      case CONTINOUSTRANSFER:
        return getContinousTransfer();
      case CONVERGENCE:
        return getConvergence();
      case DIVERGENCE:
        return getDivergence();
      case CONFIGORGS:
        return getConfigOrgs();
      case CONFIGMATCH:
        return getConfigMatch();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case INVENTORYITEMID:
        setInventoryItemId((Number)value);
        return;
      case ORGANIZATIONID:
        setOrganizationId((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case SUMMARYFLAG:
        setSummaryFlag((String)value);
        return;
      case ENABLEDFLAG:
        setEnabledFlag((String)value);
        return;
      case STARTDATEACTIVE:
        setStartDateActive((Date)value);
        return;
      case ENDDATEACTIVE:
        setEndDateActive((Date)value);
        return;
      case DESCRIPTION:
        setDescription((String)value);
        return;
      case BUYERID:
        setBuyerId((Number)value);
        return;
      case ACCOUNTINGRULEID:
        setAccountingRuleId((Number)value);
        return;
      case INVOICINGRULEID:
        setInvoicingRuleId((Number)value);
        return;
      case SEGMENT1:
        setSegment1((String)value);
        return;
      case SEGMENT2:
        setSegment2((String)value);
        return;
      case SEGMENT3:
        setSegment3((String)value);
        return;
      case SEGMENT4:
        setSegment4((String)value);
        return;
      case SEGMENT5:
        setSegment5((String)value);
        return;
      case SEGMENT6:
        setSegment6((String)value);
        return;
      case SEGMENT7:
        setSegment7((String)value);
        return;
      case SEGMENT8:
        setSegment8((String)value);
        return;
      case SEGMENT9:
        setSegment9((String)value);
        return;
      case SEGMENT10:
        setSegment10((String)value);
        return;
      case SEGMENT11:
        setSegment11((String)value);
        return;
      case SEGMENT12:
        setSegment12((String)value);
        return;
      case SEGMENT13:
        setSegment13((String)value);
        return;
      case SEGMENT14:
        setSegment14((String)value);
        return;
      case SEGMENT15:
        setSegment15((String)value);
        return;
      case SEGMENT16:
        setSegment16((String)value);
        return;
      case SEGMENT17:
        setSegment17((String)value);
        return;
      case SEGMENT18:
        setSegment18((String)value);
        return;
      case SEGMENT19:
        setSegment19((String)value);
        return;
      case SEGMENT20:
        setSegment20((String)value);
        return;
      case ATTRIBUTECATEGORY:
        setAttributeCategory((String)value);
        return;
      case ATTRIBUTE1:
        setAttribute1((String)value);
        return;
      case ATTRIBUTE2:
        setAttribute2((String)value);
        return;
      case ATTRIBUTE3:
        setAttribute3((String)value);
        return;
      case ATTRIBUTE4:
        setAttribute4((String)value);
        return;
      case ATTRIBUTE5:
        setAttribute5((String)value);
        return;
      case ATTRIBUTE6:
        setAttribute6((String)value);
        return;
      case ATTRIBUTE7:
        setAttribute7((String)value);
        return;
      case ATTRIBUTE8:
        setAttribute8((String)value);
        return;
      case ATTRIBUTE9:
        setAttribute9((String)value);
        return;
      case ATTRIBUTE10:
        setAttribute10((String)value);
        return;
      case ATTRIBUTE11:
        setAttribute11((String)value);
        return;
      case ATTRIBUTE12:
        setAttribute12((String)value);
        return;
      case ATTRIBUTE13:
        setAttribute13((String)value);
        return;
      case ATTRIBUTE14:
        setAttribute14((String)value);
        return;
      case ATTRIBUTE15:
        setAttribute15((String)value);
        return;
      case PURCHASINGITEMFLAG:
        setPurchasingItemFlag((String)value);
        return;
      case SHIPPABLEITEMFLAG:
        setShippableItemFlag((String)value);
        return;
      case CUSTOMERORDERFLAG:
        setCustomerOrderFlag((String)value);
        return;
      case INTERNALORDERFLAG:
        setInternalOrderFlag((String)value);
        return;
      case SERVICEITEMFLAG:
        setServiceItemFlag((String)value);
        return;
      case INVENTORYITEMFLAG:
        setInventoryItemFlag((String)value);
        return;
      case ENGITEMFLAG:
        setEngItemFlag((String)value);
        return;
      case INVENTORYASSETFLAG:
        setInventoryAssetFlag((String)value);
        return;
      case PURCHASINGENABLEDFLAG:
        setPurchasingEnabledFlag((String)value);
        return;
      case CUSTOMERORDERENABLEDFLAG:
        setCustomerOrderEnabledFlag((String)value);
        return;
      case INTERNALORDERENABLEDFLAG:
        setInternalOrderEnabledFlag((String)value);
        return;
      case SOTRANSACTIONSFLAG:
        setSoTransactionsFlag((String)value);
        return;
      case MTLTRANSACTIONSENABLEDFLAG:
        setMtlTransactionsEnabledFlag((String)value);
        return;
      case STOCKENABLEDFLAG:
        setStockEnabledFlag((String)value);
        return;
      case BOMENABLEDFLAG:
        setBomEnabledFlag((String)value);
        return;
      case BUILDINWIPFLAG:
        setBuildInWipFlag((String)value);
        return;
      case REVISIONQTYCONTROLCODE:
        setRevisionQtyControlCode((Number)value);
        return;
      case ITEMCATALOGGROUPID:
        setItemCatalogGroupId((Number)value);
        return;
      case CATALOGSTATUSFLAG:
        setCatalogStatusFlag((String)value);
        return;
      case RETURNABLEFLAG:
        setReturnableFlag((String)value);
        return;
      case DEFAULTSHIPPINGORG:
        setDefaultShippingOrg((Number)value);
        return;
      case COLLATERALFLAG:
        setCollateralFlag((String)value);
        return;
      case TAXABLEFLAG:
        setTaxableFlag((String)value);
        return;
      case QTYRCVEXCEPTIONCODE:
        setQtyRcvExceptionCode((String)value);
        return;
      case ALLOWITEMDESCUPDATEFLAG:
        setAllowItemDescUpdateFlag((String)value);
        return;
      case INSPECTIONREQUIREDFLAG:
        setInspectionRequiredFlag((String)value);
        return;
      case RECEIPTREQUIREDFLAG:
        setReceiptRequiredFlag((String)value);
        return;
      case MARKETPRICE:
        setMarketPrice((Number)value);
        return;
      case HAZARDCLASSID:
        setHazardClassId((Number)value);
        return;
      case RFQREQUIREDFLAG:
        setRfqRequiredFlag((String)value);
        return;
      case QTYRCVTOLERANCE:
        setQtyRcvTolerance((Number)value);
        return;
      case LISTPRICEPERUNIT:
        setListPricePerUnit((Number)value);
        return;
      case UNNUMBERID:
        setUnNumberId((Number)value);
        return;
      case PRICETOLERANCEPERCENT:
        setPriceTolerancePercent((Number)value);
        return;
      case ASSETCATEGORYID:
        setAssetCategoryId((Number)value);
        return;
      case ROUNDINGFACTOR:
        setRoundingFactor((Number)value);
        return;
      case UNITOFISSUE:
        setUnitOfIssue((String)value);
        return;
      case ENFORCESHIPTOLOCATIONCODE:
        setEnforceShipToLocationCode((String)value);
        return;
      case ALLOWSUBSTITUTERECEIPTSFLAG:
        setAllowSubstituteReceiptsFlag((String)value);
        return;
      case ALLOWUNORDEREDRECEIPTSFLAG:
        setAllowUnorderedReceiptsFlag((String)value);
        return;
      case ALLOWEXPRESSDELIVERYFLAG:
        setAllowExpressDeliveryFlag((String)value);
        return;
      case DAYSEARLYRECEIPTALLOWED:
        setDaysEarlyReceiptAllowed((Number)value);
        return;
      case DAYSLATERECEIPTALLOWED:
        setDaysLateReceiptAllowed((Number)value);
        return;
      case RECEIPTDAYSEXCEPTIONCODE:
        setReceiptDaysExceptionCode((String)value);
        return;
      case RECEIVINGROUTINGID:
        setReceivingRoutingId((Number)value);
        return;
      case INVOICECLOSETOLERANCE:
        setInvoiceCloseTolerance((Number)value);
        return;
      case RECEIVECLOSETOLERANCE:
        setReceiveCloseTolerance((Number)value);
        return;
      case AUTOLOTALPHAPREFIX:
        setAutoLotAlphaPrefix((String)value);
        return;
      case STARTAUTOLOTNUMBER:
        setStartAutoLotNumber((String)value);
        return;
      case LOTCONTROLCODE:
        setLotControlCode((Number)value);
        return;
      case SHELFLIFECODE:
        setShelfLifeCode((Number)value);
        return;
      case SHELFLIFEDAYS:
        setShelfLifeDays((Number)value);
        return;
      case SERIALNUMBERCONTROLCODE:
        setSerialNumberControlCode((Number)value);
        return;
      case STARTAUTOSERIALNUMBER:
        setStartAutoSerialNumber((String)value);
        return;
      case AUTOSERIALALPHAPREFIX:
        setAutoSerialAlphaPrefix((String)value);
        return;
      case SOURCETYPE:
        setSourceType((Number)value);
        return;
      case SOURCEORGANIZATIONID:
        setSourceOrganizationId((Number)value);
        return;
      case SOURCESUBINVENTORY:
        setSourceSubinventory((String)value);
        return;
      case EXPENSEACCOUNT:
        setExpenseAccount((Number)value);
        return;
      case ENCUMBRANCEACCOUNT:
        setEncumbranceAccount((Number)value);
        return;
      case RESTRICTSUBINVENTORIESCODE:
        setRestrictSubinventoriesCode((Number)value);
        return;
      case UNITWEIGHT:
        setUnitWeight((Number)value);
        return;
      case WEIGHTUOMCODE:
        setWeightUomCode((String)value);
        return;
      case VOLUMEUOMCODE:
        setVolumeUomCode((String)value);
        return;
      case UNITVOLUME:
        setUnitVolume((Number)value);
        return;
      case RESTRICTLOCATORSCODE:
        setRestrictLocatorsCode((Number)value);
        return;
      case LOCATIONCONTROLCODE:
        setLocationControlCode((Number)value);
        return;
      case SHRINKAGERATE:
        setShrinkageRate((Number)value);
        return;
      case ACCEPTABLEEARLYDAYS:
        setAcceptableEarlyDays((Number)value);
        return;
      case PLANNINGTIMEFENCECODE:
        setPlanningTimeFenceCode((Number)value);
        return;
      case DEMANDTIMEFENCECODE:
        setDemandTimeFenceCode((Number)value);
        return;
      case LEADTIMELOTSIZE:
        setLeadTimeLotSize((Number)value);
        return;
      case STDLOTSIZE:
        setStdLotSize((Number)value);
        return;
      case CUMMANUFACTURINGLEADTIME:
        setCumManufacturingLeadTime((Number)value);
        return;
      case OVERRUNPERCENTAGE:
        setOverrunPercentage((Number)value);
        return;
      case MRPCALCULATEATPFLAG:
        setMrpCalculateAtpFlag((String)value);
        return;
      case ACCEPTABLERATEINCREASE:
        setAcceptableRateIncrease((Number)value);
        return;
      case ACCEPTABLERATEDECREASE:
        setAcceptableRateDecrease((Number)value);
        return;
      case CUMULATIVETOTALLEADTIME:
        setCumulativeTotalLeadTime((Number)value);
        return;
      case PLANNINGTIMEFENCEDAYS:
        setPlanningTimeFenceDays((Number)value);
        return;
      case DEMANDTIMEFENCEDAYS:
        setDemandTimeFenceDays((Number)value);
        return;
      case ENDASSEMBLYPEGGINGFLAG:
        setEndAssemblyPeggingFlag((String)value);
        return;
      case REPETITIVEPLANNINGFLAG:
        setRepetitivePlanningFlag((String)value);
        return;
      case PLANNINGEXCEPTIONSET:
        setPlanningExceptionSet((String)value);
        return;
      case BOMITEMTYPE:
        setBomItemType((Number)value);
        return;
      case PICKCOMPONENTSFLAG:
        setPickComponentsFlag((String)value);
        return;
      case REPLENISHTOORDERFLAG:
        setReplenishToOrderFlag((String)value);
        return;
      case BASEITEMID:
        setBaseItemId((Number)value);
        return;
      case ATPCOMPONENTSFLAG:
        setAtpComponentsFlag((String)value);
        return;
      case ATPFLAG:
        setAtpFlag((String)value);
        return;
      case FIXEDLEADTIME:
        setFixedLeadTime((Number)value);
        return;
      case VARIABLELEADTIME:
        setVariableLeadTime((Number)value);
        return;
      case WIPSUPPLYLOCATORID:
        setWipSupplyLocatorId((Number)value);
        return;
      case WIPSUPPLYTYPE:
        setWipSupplyType((Number)value);
        return;
      case WIPSUPPLYSUBINVENTORY:
        setWipSupplySubinventory((String)value);
        return;
      case PRIMARYUOMCODE:
        setPrimaryUomCode((String)value);
        return;
      case PRIMARYUNITOFMEASURE:
        setPrimaryUnitOfMeasure((String)value);
        return;
      case ALLOWEDUNITSLOOKUPCODE:
        setAllowedUnitsLookupCode((Number)value);
        return;
      case COSTOFSALESACCOUNT:
        setCostOfSalesAccount((Number)value);
        return;
      case SALESACCOUNT:
        setSalesAccount((Number)value);
        return;
      case DEFAULTINCLUDEINROLLUPFLAG:
        setDefaultIncludeInRollupFlag((String)value);
        return;
      case INVENTORYITEMSTATUSCODE:
        setInventoryItemStatusCode((String)value);
        return;
      case INVENTORYPLANNINGCODE:
        setInventoryPlanningCode((Number)value);
        return;
      case PLANNERCODE:
        setPlannerCode((String)value);
        return;
      case PLANNINGMAKEBUYCODE:
        setPlanningMakeBuyCode((Number)value);
        return;
      case FIXEDLOTMULTIPLIER:
        setFixedLotMultiplier((Number)value);
        return;
      case ROUNDINGCONTROLTYPE:
        setRoundingControlType((Number)value);
        return;
      case CARRYINGCOST:
        setCarryingCost((Number)value);
        return;
      case POSTPROCESSINGLEADTIME:
        setPostprocessingLeadTime((Number)value);
        return;
      case PREPROCESSINGLEADTIME:
        setPreprocessingLeadTime((Number)value);
        return;
      case FULLLEADTIME:
        setFullLeadTime((Number)value);
        return;
      case ORDERCOST:
        setOrderCost((Number)value);
        return;
      case MRPSAFETYSTOCKPERCENT:
        setMrpSafetyStockPercent((Number)value);
        return;
      case MRPSAFETYSTOCKCODE:
        setMrpSafetyStockCode((Number)value);
        return;
      case MINMINMAXQUANTITY:
        setMinMinmaxQuantity((Number)value);
        return;
      case MAXMINMAXQUANTITY:
        setMaxMinmaxQuantity((Number)value);
        return;
      case MINIMUMORDERQUANTITY:
        setMinimumOrderQuantity((Number)value);
        return;
      case FIXEDORDERQUANTITY:
        setFixedOrderQuantity((Number)value);
        return;
      case FIXEDDAYSSUPPLY:
        setFixedDaysSupply((Number)value);
        return;
      case MAXIMUMORDERQUANTITY:
        setMaximumOrderQuantity((Number)value);
        return;
      case ATPRULEID:
        setAtpRuleId((Number)value);
        return;
      case PICKINGRULEID:
        setPickingRuleId((Number)value);
        return;
      case RESERVABLETYPE:
        setReservableType((Number)value);
        return;
      case POSITIVEMEASUREMENTERROR:
        setPositiveMeasurementError((Number)value);
        return;
      case NEGATIVEMEASUREMENTERROR:
        setNegativeMeasurementError((Number)value);
        return;
      case ENGINEERINGECNCODE:
        setEngineeringEcnCode((String)value);
        return;
      case ENGINEERINGITEMID:
        setEngineeringItemId((Number)value);
        return;
      case ENGINEERINGDATE:
        setEngineeringDate((Date)value);
        return;
      case SERVICESTARTINGDELAY:
        setServiceStartingDelay((Number)value);
        return;
      case VENDORWARRANTYFLAG:
        setVendorWarrantyFlag((String)value);
        return;
      case SERVICEABLECOMPONENTFLAG:
        setServiceableComponentFlag((String)value);
        return;
      case SERVICEABLEPRODUCTFLAG:
        setServiceableProductFlag((String)value);
        return;
      case BASEWARRANTYSERVICEID:
        setBaseWarrantyServiceId((Number)value);
        return;
      case PAYMENTTERMSID:
        setPaymentTermsId((Number)value);
        return;
      case PREVENTIVEMAINTENANCEFLAG:
        setPreventiveMaintenanceFlag((String)value);
        return;
      case PRIMARYSPECIALISTID:
        setPrimarySpecialistId((Number)value);
        return;
      case SECONDARYSPECIALISTID:
        setSecondarySpecialistId((Number)value);
        return;
      case SERVICEABLEITEMCLASSID:
        setServiceableItemClassId((Number)value);
        return;
      case TIMEBILLABLEFLAG:
        setTimeBillableFlag((String)value);
        return;
      case MATERIALBILLABLEFLAG:
        setMaterialBillableFlag((String)value);
        return;
      case EXPENSEBILLABLEFLAG:
        setExpenseBillableFlag((String)value);
        return;
      case PRORATESERVICEFLAG:
        setProrateServiceFlag((String)value);
        return;
      case COVERAGESCHEDULEID:
        setCoverageScheduleId((Number)value);
        return;
      case SERVICEDURATIONPERIODCODE:
        setServiceDurationPeriodCode((String)value);
        return;
      case SERVICEDURATION:
        setServiceDuration((Number)value);
        return;
      case WARRANTYVENDORID:
        setWarrantyVendorId((Number)value);
        return;
      case MAXWARRANTYAMOUNT:
        setMaxWarrantyAmount((Number)value);
        return;
      case RESPONSETIMEPERIODCODE:
        setResponseTimePeriodCode((String)value);
        return;
      case RESPONSETIMEVALUE:
        setResponseTimeValue((Number)value);
        return;
      case NEWREVISIONCODE:
        setNewRevisionCode((String)value);
        return;
      case INVOICEABLEITEMFLAG:
        setInvoiceableItemFlag((String)value);
        return;
      case TAXCODE:
        setTaxCode((String)value);
        return;
      case INVOICEENABLEDFLAG:
        setInvoiceEnabledFlag((String)value);
        return;
      case MUSTUSEAPPROVEDVENDORFLAG:
        setMustUseApprovedVendorFlag((String)value);
        return;
      case REQUESTID:
        setRequestId((Number)value);
        return;
      case PROGRAMAPPLICATIONID:
        setProgramApplicationId((Number)value);
        return;
      case PROGRAMID:
        setProgramId((Number)value);
        return;
      case PROGRAMUPDATEDATE:
        setProgramUpdateDate((Date)value);
        return;
      case OUTSIDEOPERATIONFLAG:
        setOutsideOperationFlag((String)value);
        return;
      case OUTSIDEOPERATIONUOMTYPE:
        setOutsideOperationUomType((String)value);
        return;
      case SAFETYSTOCKBUCKETDAYS:
        setSafetyStockBucketDays((Number)value);
        return;
      case AUTOREDUCEMPS:
        setAutoReduceMps((Number)value);
        return;
      case COSTINGENABLEDFLAG:
        setCostingEnabledFlag((String)value);
        return;
      case AUTOCREATEDCONFIGFLAG:
        setAutoCreatedConfigFlag((String)value);
        return;
      case CYCLECOUNTENABLEDFLAG:
        setCycleCountEnabledFlag((String)value);
        return;
      case ITEMTYPE:
        setItemType((String)value);
        return;
      case MODELCONFIGCLAUSENAME:
        setModelConfigClauseName((String)value);
        return;
      case SHIPMODELCOMPLETEFLAG:
        setShipModelCompleteFlag((String)value);
        return;
      case MRPPLANNINGCODE:
        setMrpPlanningCode((Number)value);
        return;
      case RETURNINSPECTIONREQUIREMENT:
        setReturnInspectionRequirement((Number)value);
        return;
      case ATOFORECASTCONTROL:
        setAtoForecastControl((Number)value);
        return;
      case RELEASETIMEFENCECODE:
        setReleaseTimeFenceCode((Number)value);
        return;
      case RELEASETIMEFENCEDAYS:
        setReleaseTimeFenceDays((Number)value);
        return;
      case CONTAINERITEMFLAG:
        setContainerItemFlag((String)value);
        return;
      case VEHICLEITEMFLAG:
        setVehicleItemFlag((String)value);
        return;
      case MAXIMUMLOADWEIGHT:
        setMaximumLoadWeight((Number)value);
        return;
      case MINIMUMFILLPERCENT:
        setMinimumFillPercent((Number)value);
        return;
      case CONTAINERTYPECODE:
        setContainerTypeCode((String)value);
        return;
      case INTERNALVOLUME:
        setInternalVolume((Number)value);
        return;
      case WHUPDATEDATE:
        setWhUpdateDate((Date)value);
        return;
      case PRODUCTFAMILYITEMID:
        setProductFamilyItemId((Number)value);
        return;
      case GLOBALATTRIBUTECATEGORY:
        setGlobalAttributeCategory((String)value);
        return;
      case GLOBALATTRIBUTE1:
        setGlobalAttribute1((String)value);
        return;
      case GLOBALATTRIBUTE2:
        setGlobalAttribute2((String)value);
        return;
      case GLOBALATTRIBUTE3:
        setGlobalAttribute3((String)value);
        return;
      case GLOBALATTRIBUTE4:
        setGlobalAttribute4((String)value);
        return;
      case GLOBALATTRIBUTE5:
        setGlobalAttribute5((String)value);
        return;
      case GLOBALATTRIBUTE6:
        setGlobalAttribute6((String)value);
        return;
      case GLOBALATTRIBUTE7:
        setGlobalAttribute7((String)value);
        return;
      case GLOBALATTRIBUTE8:
        setGlobalAttribute8((String)value);
        return;
      case GLOBALATTRIBUTE9:
        setGlobalAttribute9((String)value);
        return;
      case GLOBALATTRIBUTE10:
        setGlobalAttribute10((String)value);
        return;
      case PURCHASINGTAXCODE:
        setPurchasingTaxCode((String)value);
        return;
      case OVERCOMPLETIONTOLERANCETYPE:
        setOvercompletionToleranceType((Number)value);
        return;
      case OVERCOMPLETIONTOLERANCEVALUE:
        setOvercompletionToleranceValue((Number)value);
        return;
      case EFFECTIVITYCONTROL:
        setEffectivityControl((Number)value);
        return;
      case CHECKSHORTAGESFLAG:
        setCheckShortagesFlag((String)value);
        return;
      case OVERSHIPMENTTOLERANCE:
        setOverShipmentTolerance((Number)value);
        return;
      case UNDERSHIPMENTTOLERANCE:
        setUnderShipmentTolerance((Number)value);
        return;
      case OVERRETURNTOLERANCE:
        setOverReturnTolerance((Number)value);
        return;
      case UNDERRETURNTOLERANCE:
        setUnderReturnTolerance((Number)value);
        return;
      case EQUIPMENTTYPE:
        setEquipmentType((Number)value);
        return;
      case RECOVEREDPARTDISPCODE:
        setRecoveredPartDispCode((String)value);
        return;
      case DEFECTTRACKINGONFLAG:
        setDefectTrackingOnFlag((String)value);
        return;
      case USAGEITEMFLAG:
        setUsageItemFlag((String)value);
        return;
      case EVENTFLAG:
        setEventFlag((String)value);
        return;
      case ELECTRONICFLAG:
        setElectronicFlag((String)value);
        return;
      case DOWNLOADABLEFLAG:
        setDownloadableFlag((String)value);
        return;
      case VOLDISCOUNTEXEMPTFLAG:
        setVolDiscountExemptFlag((String)value);
        return;
      case COUPONEXEMPTFLAG:
        setCouponExemptFlag((String)value);
        return;
      case COMMSNLTRACKABLEFLAG:
        setCommsNlTrackableFlag((String)value);
        return;
      case ASSETCREATIONCODE:
        setAssetCreationCode((String)value);
        return;
      case COMMSACTIVATIONREQDFLAG:
        setCommsActivationReqdFlag((String)value);
        return;
      case ORDERABLEONWEBFLAG:
        setOrderableOnWebFlag((String)value);
        return;
      case BACKORDERABLEFLAG:
        setBackOrderableFlag((String)value);
        return;
      case WEBSTATUS:
        setWebStatus((String)value);
        return;
      case INDIVISIBLEFLAG:
        setIndivisibleFlag((String)value);
        return;
      case DIMENSIONUOMCODE:
        setDimensionUomCode((String)value);
        return;
      case UNITLENGTH:
        setUnitLength((Number)value);
        return;
      case UNITWIDTH:
        setUnitWidth((Number)value);
        return;
      case UNITHEIGHT:
        setUnitHeight((Number)value);
        return;
      case BULKPICKEDFLAG:
        setBulkPickedFlag((String)value);
        return;
      case LOTSTATUSENABLED:
        setLotStatusEnabled((String)value);
        return;
      case DEFAULTLOTSTATUSID:
        setDefaultLotStatusId((Number)value);
        return;
      case SERIALSTATUSENABLED:
        setSerialStatusEnabled((String)value);
        return;
      case DEFAULTSERIALSTATUSID:
        setDefaultSerialStatusId((Number)value);
        return;
      case LOTSPLITENABLED:
        setLotSplitEnabled((String)value);
        return;
      case LOTMERGEENABLED:
        setLotMergeEnabled((String)value);
        return;
      case INVENTORYCARRYPENALTY:
        setInventoryCarryPenalty((Number)value);
        return;
      case OPERATIONSLACKPENALTY:
        setOperationSlackPenalty((Number)value);
        return;
      case FINANCINGALLOWEDFLAG:
        setFinancingAllowedFlag((String)value);
        return;
      case EAMITEMTYPE:
        setEamItemType((Number)value);
        return;
      case EAMACTIVITYTYPECODE:
        setEamActivityTypeCode((String)value);
        return;
      case EAMACTIVITYCAUSECODE:
        setEamActivityCauseCode((String)value);
        return;
      case EAMACTNOTIFICATIONFLAG:
        setEamActNotificationFlag((String)value);
        return;
      case EAMACTSHUTDOWNSTATUS:
        setEamActShutdownStatus((String)value);
        return;
      case DUALUOMCONTROL:
        setDualUomControl((Number)value);
        return;
      case SECONDARYUOMCODE:
        setSecondaryUomCode((String)value);
        return;
      case DUALUOMDEVIATIONHIGH:
        setDualUomDeviationHigh((Number)value);
        return;
      case DUALUOMDEVIATIONLOW:
        setDualUomDeviationLow((Number)value);
        return;
      case CONTRACTITEMTYPECODE:
        setContractItemTypeCode((String)value);
        return;
      case SUBSCRIPTIONDEPENDFLAG:
        setSubscriptionDependFlag((String)value);
        return;
      case SERVREQENABLEDCODE:
        setServReqEnabledCode((String)value);
        return;
      case SERVBILLINGENABLEDFLAG:
        setServBillingEnabledFlag((String)value);
        return;
      case SERVIMPORTANCELEVEL:
        setServImportanceLevel((Number)value);
        return;
      case PLANNEDINVPOINTFLAG:
        setPlannedInvPointFlag((String)value);
        return;
      case LOTTRANSLATEENABLED:
        setLotTranslateEnabled((String)value);
        return;
      case DEFAULTSOSOURCETYPE:
        setDefaultSoSourceType((String)value);
        return;
      case CREATESUPPLYFLAG:
        setCreateSupplyFlag((String)value);
        return;
      case SUBSTITUTIONWINDOWCODE:
        setSubstitutionWindowCode((Number)value);
        return;
      case SUBSTITUTIONWINDOWDAYS:
        setSubstitutionWindowDays((Number)value);
        return;
      case IBITEMINSTANCECLASS:
        setIbItemInstanceClass((String)value);
        return;
      case CONFIGMODELTYPE:
        setConfigModelType((String)value);
        return;
      case LOTSUBSTITUTIONENABLED:
        setLotSubstitutionEnabled((String)value);
        return;
      case MINIMUMLICENSEQUANTITY:
        setMinimumLicenseQuantity((Number)value);
        return;
      case EAMACTIVITYSOURCECODE:
        setEamActivitySourceCode((String)value);
        return;
      case LIFECYCLEID:
        setLifecycleId((Number)value);
        return;
      case CURRENTPHASEID:
        setCurrentPhaseId((Number)value);
        return;
      case OBJECTVERSIONNUMBER:
        setObjectVersionNumber((Number)value);
        return;
      case TRACKINGQUANTITYIND:
        setTrackingQuantityInd((String)value);
        return;
      case ONTPRICINGQTYSOURCE:
        setOntPricingQtySource((String)value);
        return;
      case SECONDARYDEFAULTIND:
        setSecondaryDefaultInd((String)value);
        return;
      case OPTIONSPECIFICSOURCED:
        setOptionSpecificSourced((Number)value);
        return;
      case APPROVALSTATUS:
        setApprovalStatus((String)value);
        return;
      case VMIMINIMUMUNITS:
        setVmiMinimumUnits((Number)value);
        return;
      case VMIMINIMUMDAYS:
        setVmiMinimumDays((Number)value);
        return;
      case VMIMAXIMUMUNITS:
        setVmiMaximumUnits((Number)value);
        return;
      case VMIMAXIMUMDAYS:
        setVmiMaximumDays((Number)value);
        return;
      case VMIFIXEDORDERQUANTITY:
        setVmiFixedOrderQuantity((Number)value);
        return;
      case SOAUTHORIZATIONFLAG:
        setSoAuthorizationFlag((Number)value);
        return;
      case CONSIGNEDFLAG:
        setConsignedFlag((Number)value);
        return;
      case ASNAUTOEXPIREFLAG:
        setAsnAutoexpireFlag((Number)value);
        return;
      case VMIFORECASTTYPE:
        setVmiForecastType((Number)value);
        return;
      case FORECASTHORIZON:
        setForecastHorizon((Number)value);
        return;
      case EXCLUDEFROMBUDGETFLAG:
        setExcludeFromBudgetFlag((Number)value);
        return;
      case DAYSTGTINVSUPPLY:
        setDaysTgtInvSupply((Number)value);
        return;
      case DAYSTGTINVWINDOW:
        setDaysTgtInvWindow((Number)value);
        return;
      case DAYSMAXINVSUPPLY:
        setDaysMaxInvSupply((Number)value);
        return;
      case DAYSMAXINVWINDOW:
        setDaysMaxInvWindow((Number)value);
        return;
      case DRPPLANNEDFLAG:
        setDrpPlannedFlag((Number)value);
        return;
      case CRITICALCOMPONENTFLAG:
        setCriticalComponentFlag((Number)value);
        return;
      case CONTINOUSTRANSFER:
        setContinousTransfer((Number)value);
        return;
      case CONVERGENCE:
        setConvergence((Number)value);
        return;
      case DIVERGENCE:
        setDivergence((Number)value);
        return;
      case CONFIGORGS:
        setConfigOrgs((String)value);
        return;
      case CONFIGMATCH:
        setConfigMatch((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number inventoryItemId)
  {
    return new Key(new Object[] {inventoryItemId});
  }
}