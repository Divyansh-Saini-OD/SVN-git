package od.oracle.apps.xxcrm.scs.fdk.server;

import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.Row;

import oracle.apps.fnd.framework.server.OAViewDefImpl;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;

import java.sql.*;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODSCSDshbdAMImpl extends OAApplicationModuleImpl {
    /**
     * 
     * This is the default constructor (do not remove)
     */
    public ODSCSDshbdAMImpl() {
    }


    public void apply() {
        getTransaction().commit();
    } // end apply()


    public void cancel() {
        getTransaction().rollback();
    }

    public void crtFdkRes(String fmNum, String FdkCode, String value, 
                          String FdkPickValue) {
        ODSCSFdbkLineDtlVOImpl vo = 
            (ODSCSFdbkLineDtlVOImpl)getODSCSFdbkLineDtlVO();


        if (!vo.isPreparedForExecution()) {
            vo.executeQuery();
        }

        Row hrow = vo.createRow();


        hrow.setAttribute("FdbkId", fmNum);
        hrow.setAttribute("FdkCode", FdkCode);
        hrow.setAttribute("FdkPickValue", FdkPickValue);
        if (FdkPickValue.equals("FDK_VALUE"))
            hrow.setAttribute("FdkValue", value);
        else if (FdkPickValue.equals("FDK_TXT"))
            hrow.setAttribute("FdkTxt", value);
        else if (FdkPickValue.equals("FDK_DATE")) {
            java.util.Date dt = new java.util.Date((value));
            java.sql.Date sqlDate = new java.sql.Date(dt.getTime());

            try {
                //  System.out.println(dt);
                hrow.setAttribute("FdkDate", 
                                  new oracle.jbo.domain.Date(sqlDate));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        vo.insertRow(hrow);


    }

    public void crtVO(String FdkCode, String eTyp) {
        oracle.apps.fnd.framework.OAViewObject oaviewobject2 = 
            (oracle.apps.fnd.framework.OAViewObject)this.findViewObject(FdkCode + 
                                                                        "VO");
        java.lang.StringBuffer stringbuffer2 = new StringBuffer(1000);
        stringbuffer2.append("  select FDK_VALUE  AS \"Code\",FDK_VALUE_DESC  AS \"Value\" from XXCRM.XXSCS_FDBK_RESP  ");
        stringbuffer2.append(" where FDK_CODE='" + FdkCode + "'");
        stringbuffer2.append(" and  (decode(OPPORTUNITY,'Y','OPPORTUNITY','NULL') = '" + 
                             eTyp + "' or decode(LEAD,'Y','LEAD','NULL')='" + 
                             eTyp + "')");
        stringbuffer2.append(" and (sysdate between EFFECTIVE_START_DT and nvl(EFFECTIVE_END_DT,sysdate+1)) ");
        stringbuffer2.append(" ORDER BY ORA_SEQ ");
        //            System.out.println(stringbuffer2);
        oracle.apps.fnd.framework.server.OAViewDefImpl oaviewdefimpl = 
            (oracle.apps.fnd.framework.server.OAViewDefImpl)this.getOADBTransaction().createViewDef();
        oaviewdefimpl.setSql(stringbuffer2.toString());
        oaviewdefimpl.setExpertMode(true);
        oaviewdefimpl.setFullName("od.oracle.apps.xxcrm.scs.fdk.server." + 
                                  FdkCode + "VO");
        oaviewdefimpl.addSqlDerivedAttrDef("Code", "FDK_CODE", 
                                           "java.lang.String", 12, false, 
                                           false, (byte)0, 200);
        oaviewdefimpl.addSqlDerivedAttrDef("Value", "FDK_VALUE", 
                                           "java.lang.String", 12, false, 
                                           false, (byte)0, 200);
        if (oaviewobject2 != null) {
            oaviewobject2.remove();
        }
        oaviewobject2 = 
                (oracle.apps.fnd.framework.OAViewObject)this.createViewObject(FdkCode + 
                                                                              "VO", 
                                                                              (oracle.apps.fnd.framework.server.OAViewDef)oaviewdefimpl);
        oaviewobject2.setPassivationEnabled(false);

        ((oracle.apps.fnd.framework.server.OAViewObjectImpl)oaviewobject2).setFetchSize((short)50);

        if (!oaviewobject2.isPreparedForExecution()) {
            oaviewobject2.executeQuery();
        }
    }


    public void crtCnctVO(String s) {


        oracle.apps.fnd.framework.OAViewObject oaviewobject2 = 
            (oracle.apps.fnd.framework.OAViewObject)this.findViewObject("ODSCSCnctsVO");
        java.lang.StringBuffer stringbuffer2 = new StringBuffer(1000);
        stringbuffer2.append(" select con.org_contact_id contact_id, substr(pcon.party_name,0,instr(pcon.party_name,'-')-1) Contact_Full_Name,   ");
        stringbuffer2.append(" substr(substr(pcon.party_name,0,instr(pcon.party_name,'-')-1),0,instr(substr(pcon.party_name,0,instr(pcon.party_name,'-')-1),' ')-1) first_name,  ");
        stringbuffer2.append(" substr(substr(pcon.party_name,0,instr(pcon.party_name,'-')-1),instr(substr(pcon.party_name,0,instr(pcon.party_name,'-')-1),' ')+1) last_name,  ");
        stringbuffer2.append(" pcon.primary_phone_country_code || '-' || pcon.primary_phone_area_code || '-' || pcon.primary_phone_number Phone,  ");
        stringbuffer2.append(" pcon.email_address  ");
        stringbuffer2.append(" from   ");
        stringbuffer2.append(" hz_parties porg,  ");
        stringbuffer2.append(" hz_relationships rel,  ");
        stringbuffer2.append(" hz_org_contacts con,  ");
        stringbuffer2.append(" hz_parties pcon  ");
        stringbuffer2.append(" where porg.party_id = rel.subject_id  ");
        stringbuffer2.append(" AND   con.party_relationship_id = rel.relationship_id  ");
        stringbuffer2.append(" AND  rel.relationship_code = 'CONTACT'  ");
        stringbuffer2.append(" AND  rel.direction_code = 'C'  ");
        stringbuffer2.append(" AND  subject_type = 'ORGANIZATION'  ");
        stringbuffer2.append(" AND pcon.party_id = rel.party_id  ");
        stringbuffer2.append(" and porg.party_id = " + s);

        //            System.out.println(stringbuffer2);
        oracle.apps.fnd.framework.server.OAViewDefImpl oaviewdefimpl = 
            (oracle.apps.fnd.framework.server.OAViewDefImpl)this.getOADBTransaction().createViewDef();
        oaviewdefimpl.setSql(stringbuffer2.toString());
        oaviewdefimpl.setExpertMode(true);
        oaviewdefimpl.setFullName("od.oracle.apps.xxcrm.scs.fdk.server.ODSCSCnctsVO");
             oaviewdefimpl.addSqlDerivedAttrDef("ContactId", "CONTACT_ID", 
                                           "oracle.jbo.domain.Number", 
                                           Types.NUMERIC, false, false, 
                                           (byte)0, 200);
        oaviewdefimpl.addSqlDerivedAttrDef("ContactFullName", 
                                           "CONTACT_FULL_NAME", 
                                           "java.lang.String", Types.VARCHAR, 
                                           false, false, (byte)0, 200);
        oaviewdefimpl.addSqlDerivedAttrDef("FirstName", "FIRST_NAME", 
                                           "java.lang.String", Types.VARCHAR, 
                                           false, false, (byte)0, 200);
        oaviewdefimpl.addSqlDerivedAttrDef("LastName", "LAST_NAME", 
                                           "java.lang.String", Types.VARCHAR, 
                                           false, false, (byte)0, 200);
        oaviewdefimpl.addSqlDerivedAttrDef("Phone", "PHONE", 
                                           "java.lang.String", Types.VARCHAR, 
                                           false, false, (byte)0, 200);
        oaviewdefimpl.addSqlDerivedAttrDef("EmailAddress", "EMAIL_ADDRESS", 
                                           "java.lang.String", Types.VARCHAR, 
                                           false, false, (byte)0, 200);
        if (oaviewobject2 != null) {
            oaviewobject2.remove();
        }
        oaviewobject2 = 
                (oracle.apps.fnd.framework.OAViewObject)this.createViewObject("ODSCSCnctsVO", 
                                                                              (oracle.apps.fnd.framework.server.OAViewDef)oaviewdefimpl);
        oaviewobject2.setPassivationEnabled(false);

        ((oracle.apps.fnd.framework.server.OAViewObjectImpl)oaviewobject2).setFetchSize((short)50);

//        if (!oaviewobject2.isPreparedForExecution()) {
//            oaviewobject2.executeQuery();
//        }


    }

    public String crtFdkFm(String val, String entyTyp, String uName) {
        ODSCSFdbkHdrVOImpl vo = (ODSCSFdbkHdrVOImpl)getODSCSFdbkHdrVO();

        OAViewObjectImpl asnviewobjectimpl = null;
        if (entyTyp != null) {
            if (entyTyp.equals("OPPORTUNITY")) {
                initQueryOppDtls(val);
                asnviewobjectimpl = 
                        (ODSCSOpportunityDtlsVOImpl)getODSCSOpportunityDtlsVO();
            } else {
                initQueryLeadDtls(val);
                asnviewobjectimpl = (ODSCSLeadDtlsVOImpl)getODSCSLeadDtlsVO();
            }


            //        if(asnviewobjectimpl == null)
            //        {
            //            oracle.apps.fnd.common.MessageToken amessagetoken[] = {
            //                new MessageToken("NAME", "ODSCSOpportunityDtlsVO")
            //            };
            //            throw new OAException("ASN", "ASN_CMMN_OBJ_MISS_ERR", amessagetoken);
            //        }
            // asnviewobjectimpl.reset();
            Object obj = null;
            oracle.jbo.domain.Number number = new Number(0);
            oracle.jbo.domain.Number number1 = new Number(0);
            oracle.jbo.domain.Number number2 = new Number(0);
            oracle.jbo.domain.Number number3 = new Number(0);
            oracle.jbo.domain.Number number4 = new Number(0);
            oracle.jbo.domain.Number number5 = new Number(0);
            java.lang.String s6 = "";
            java.lang.String s5 = "";
            java.lang.String s7 = "";
            int i = asnviewobjectimpl.getFetchedRowCount();
            for (int j = 0; j < i; j++) {
                oracle.jbo.Row row = asnviewobjectimpl.next();
                if (row == null)
                    continue;
                number = (oracle.jbo.domain.Number)row.getAttribute("LeadId");
                java.lang.String s2 = "";
                if (number != null)
                    s2 = number.toString();
                number1 = 
                        (oracle.jbo.domain.Number)row.getAttribute("AddressId");
                java.lang.String s3 = "";
                if (number1 != null)
                    s3 = number1.toString();
                number2 = 
                        (oracle.jbo.domain.Number)row.getAttribute("CustomerId");


                s5 = (java.lang.String)row.getAttribute("Customer");
                s6 = (java.lang.String)row.getAttribute("Sequence");
                number3 = 
                        (oracle.jbo.domain.Number)row.getAttribute("ResourceId");
                number4 = (oracle.jbo.domain.Number)row.getAttribute("RoleId");
                number5 = 
                        (oracle.jbo.domain.Number)row.getAttribute("GroupId");
                s7 = (java.lang.String)row.getAttribute("LegcyId");


                // Per the coding standards, this is the proper way to initialize a    // VO that is used for both inserts and queries.  See View Objects    // in Detail in the Developer's Guide for additional information.     

            }


            if (!vo.isPreparedForExecution()) {
                vo.executeQuery();
            }


            Row hrow = vo.createRow();
            Number num = null;
            try {
                num = new Number(val);
            } catch (Exception e) {
            }


            //    System.out.println(usrNm+" "+entyTyp+" "+number1+" "+number2+" "+number3+" "+number4+" "+number5+" "+s5+" "+s6 );
            hrow.setAttribute("EntityId", num);
            hrow.setAttribute("EntityType", (String)entyTyp);
            hrow.setAttribute("PartyId", number2);
            hrow.setAttribute("PartySiteId", number1);
            hrow.setAttribute("CustomerAccountId", s5);
            hrow.setAttribute("AddressId", s6);
            hrow.setAttribute("ResourceId", number3);
            hrow.setAttribute("RoleId", number4);
            hrow.setAttribute("GroupId", number5);
            hrow.setAttribute("SalesTerritoryId", s7);
            hrow.setAttribute("LastUpdatedEmp", uName);
            vo.insertRow(hrow);

            return number2 + "";
        }
        return null;
    } // end 


    public void initQueryLeadDtls(java.lang.String s) {
        java.lang.String s1 = 
            "od.oracle.apps.xxcrm.scs.fdk.server.ODCSDshbdAMimpl.initQuery";
        oracle.apps.fnd.framework.server.OADBTransaction oadbtransaction = 
            getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        java.lang.StringBuffer stringbuffer = new StringBuffer(100);
        if (flag)
            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
        ODSCSLeadDtlsVOImpl leadDtls = getODSCSLeadDtlsVO();
        if (leadDtls != null)
            leadDtls.initQuery(s);
        if (flag) {
            leadDtls.writeDiagnostics(s1, stringbuffer.toString(), 2);
            leadDtls.writeDiagnostics(s1, "End", 2);
        }
    }

    public void initQueryOppDtls(java.lang.String s) {
        java.lang.String s1 = 
            "od.oracle.apps.xxcrm.scs.fdk.server.ODCSDshbdAMimpl.initQuery";
        oracle.apps.fnd.framework.server.OADBTransaction oadbtransaction = 
            getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        java.lang.StringBuffer stringbuffer = new StringBuffer(100);
        if (flag)
            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
        ODSCSOpportunityDtlsVOImpl oppDtls = getODSCSOpportunityDtlsVO();
        if (oppDtls != null)
            oppDtls.initQuery(s);
        if (flag) {
            oppDtls.writeDiagnostics(s1, stringbuffer.toString(), 2);
            oppDtls.writeDiagnostics(s1, "End", 2);
        }
    }

    public void initQueryCnctDtls(java.lang.String s) {
        java.lang.String s1 = 
            "od.oracle.apps.xxcrm.scs.fdk.server.ODCSDshbdAMimpl.initQuery";
        oracle.apps.fnd.framework.server.OADBTransaction oadbtransaction = 
            getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        java.lang.StringBuffer stringbuffer = new StringBuffer(100);
        if (flag)
            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
        ODSCSContactsVOImpl cnctDtls = getODSCSContactsVO();
        System.out.println("s=" + s);
        if (cnctDtls != null) {
            System.out.println("s1=" + s);
            cnctDtls.initQuery(s);
        }
        if (flag) {
            cnctDtls.writeDiagnostics(s1, stringbuffer.toString(), 2);
            cnctDtls.writeDiagnostics(s1, "End", 2);
        }
    }

    public void initQueryFdkHstryDtls(java.lang.String s) {
        java.lang.String s1 = 
            "od.oracle.apps.xxcrm.scs.fdk.server.ODCSDshbdAMimpl.initQuery";
        oracle.apps.fnd.framework.server.OADBTransaction oadbtransaction = 
            getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        java.lang.StringBuffer stringbuffer = new StringBuffer(100);
        if (flag)
            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
        ODSCSFDKHstryVOImpl hstDtls = getODSCSFDKHstryVO();
        if (hstDtls != null)
            hstDtls.initQuery(s);
        if (flag) {
            hstDtls.writeDiagnostics(s1, stringbuffer.toString(), 2);
            hstDtls.writeDiagnostics(s1, "End", 2);
        }
    }

    public void initQueryFdkHdrDtls(java.lang.String s) {
        java.lang.String s1 = 
            "od.oracle.apps.xxcrm.scs.fdk.server.ODCSDshbdAMimpl.initQuery";
        oracle.apps.fnd.framework.server.OADBTransaction oadbtransaction = 
            getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        java.lang.StringBuffer stringbuffer = new StringBuffer(100);
        if (flag)
            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
        ODSCSFDKHdrDtlsVOImpl hdrDtls = getODSCSFDKHdrDtlsVO();
        if (hdrDtls != null)
            hdrDtls.initQuery(s);
        if (flag) {
            hdrDtls.writeDiagnostics(s1, stringbuffer.toString(), 2);
            hdrDtls.writeDiagnostics(s1, "End", 2);
        }
    }

    public void initQueryFdkDtls(java.lang.String s) {
        java.lang.String s1 = 
            "od.oracle.apps.xxcrm.scs.fdk.server.ODCSDshbdAMimpl.initQuery";
        oracle.apps.fnd.framework.server.OADBTransaction oadbtransaction = 
            getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        java.lang.StringBuffer stringbuffer = new StringBuffer(100);
        if (flag)
            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
        ODSCSFdkDtlsVOImpl dtls = getODSCSFdkDtlsVO();
        if (dtls != null)
            dtls.initQuery(s);
        if (flag) {
            dtls.writeDiagnostics(s1, stringbuffer.toString(), 2);
            dtls.writeDiagnostics(s1, "End", 2);
        }
    }


    /**
     * 
     * Container's getter for ODSCSOpportunityDtlsVO
     */
    public ODSCSOpportunityDtlsVOImpl getODSCSOpportunityDtlsVO() {
        return (ODSCSOpportunityDtlsVOImpl)findViewObject("ODSCSOpportunityDtlsVO");
    }

    /**
     * 
     * Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("od.oracle.apps.xxcrm.scs.fdk.server", 
                     "ODSCSDshbdAMLocal");
    }


    /**
     * 
     * Container's getter for ODSCSContactsVO
     */
    public ODSCSContactsVOImpl getODSCSContactsVO() {
        return (ODSCSContactsVOImpl)findViewObject("ODSCSContactsVO");
    }

    /**
     * 
     * Container's getter for ODSCSFDKHstryVO
     */
    public ODSCSFDKHstryVOImpl getODSCSFDKHstryVO() {
        return (ODSCSFDKHstryVOImpl)findViewObject("ODSCSFDKHstryVO");
    }


    /**
     * 
     * Container's getter for ODSCSFDKHdrDtlsVO
     */
    public ODSCSFDKHdrDtlsVOImpl getODSCSFDKHdrDtlsVO() {
        return (ODSCSFDKHdrDtlsVOImpl)findViewObject("ODSCSFDKHdrDtlsVO");
    }

    /**
     * 
     * Container's getter for ODSCSLeadDtlsVO
     */
    public ODSCSLeadDtlsVOImpl getODSCSLeadDtlsVO() {
        return (ODSCSLeadDtlsVOImpl)findViewObject("ODSCSLeadDtlsVO");
    }

    /**
     * 
     * Container's getter for ODSCSFdbkLineDtlVO
     */
    public ODSCSFdbkLineDtlVOImpl getODSCSFdbkLineDtlVO() {
        return (ODSCSFdbkLineDtlVOImpl)findViewObject("ODSCSFdbkLineDtlVO");
    }

    /**
     * 
     * Container's getter for ODSCSFdbkHdrVO
     */
    public ODSCSFdbkHdrVOImpl getODSCSFdbkHdrVO() {
        return (ODSCSFdbkHdrVOImpl)findViewObject("ODSCSFdbkHdrVO");
    }

    /**
     * 
     * Container's getter for ODSCSFdkDtlsVO
     */
    public ODSCSFdkDtlsVOImpl getODSCSFdkDtlsVO() {
        return (ODSCSFdkDtlsVOImpl)findViewObject("ODSCSFdkDtlsVO");
    }

    /**
     * 
     * Container's getter for ODSCSFdbkQstnVO
     */
    public ODSCSFdbkQstnVOImpl getODSCSFdbkQstnVO() {
        return (ODSCSFdbkQstnVOImpl)findViewObject("ODSCSFdbkQstnVO");
    }

    /**
     * 
     * Container's getter for ODSCSFdbkRespVO
     */
    public ODSCSFdbkRespVOImpl getODSCSFdbkRespVO() {
        return (ODSCSFdbkRespVOImpl)findViewObject("ODSCSFdbkRespVO");
    }



}
