package od.oracle.apps.xxcrm.scs.fdk.server;

import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;

import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.Row;

import oracle.apps.fnd.framework.OAViewObject;

import oracle.jbo.domain.Number;

import oracle.jbo.RowSetIterator;


//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODSCSAdminAMImpl extends OAApplicationModuleImpl {
    /**
     * 
     * This is the default constructor (do not remove)
     */
    public ODSCSAdminAMImpl() {
    }


    /**
     * 
     * Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("od.oracle.apps.xxcrm.scs.fdk.server", 
                     "ODSCSAdminAMLocal");
    }

    public void apply() {
        getTransaction().commit();
    } // end apply()


    public void cancel() {
        getTransaction().rollback();
    }

    /**
     * 
     * Container's getter for ODSCSFdbkQstnMstrVO
     */
    public ODSCSFdbkQstnMstrVOImpl getODSCSFdbkQstnMstrVO() {
        return (ODSCSFdbkQstnMstrVOImpl)findViewObject("ODSCSFdbkQstnMstrVO");
    }

    /**
     * 
     * Container's getter for ODSCSFdbkRespDtlVO
     */
    public ODSCSFdbkRespDtlVOImpl getODSCSFdbkRespDtlVO() {
        return (ODSCSFdbkRespDtlVOImpl)findViewObject("ODSCSFdbkRespDtlVO");
    }

    /**
     * 
     * Container's getter for ODSCSFdkQAVL1
     */
    public ViewLinkImpl getODSCSFdkQAVL1() {
        return (ViewLinkImpl)findViewLink("ODSCSFdkQAVL1");
    }

    public void createQstn() {
        OAViewObject vo = (OAViewObject)getODSCSFdbkQstnMstrVO();

        // Per the coding standards, this is the proper way to initialize a    // VO that is used for both inserts and queries.  See View Objects    // in Detail in the Developer's Guide for additional information.        
        if (!vo.isPreparedForExecution()) {
            vo.executeQuery();
        }

        Row row = vo.createRow();
        vo.insertRow(row); // Required per OA Framework Model Coding Standard M69
        row.setNewRowState(Row.STATUS_INITIALIZED);
    } // end createQstn()

    public void createResp(String Id, String val) {
        OAViewObject vo = (OAViewObject)getODSCSFdbkRespDtlVO();

        // Per the coding standards, this is the proper way to initialize a    // VO that is used for both inserts and queries.  See View Objects    // in Detail in the Developer's Guide for additional information.        
        if (!vo.isPreparedForExecution()) {
            vo.executeQuery();
        }

        Row row = vo.createRow();
        row.setAttribute("FdbkQstnId", Id);
        row.setAttribute("FdkCode", val);
        vo.insertRow(row); // Required per OA Framework Model Coding Standard M69
        row.setNewRowState(Row.STATUS_INITIALIZED);
    } // end createQstn()

    public void createAction() {
        OAViewObject vo = (OAViewObject)getODSCSActionsVO();

        // Per the coding standards, this is the proper way to initialize a    // VO that is used for both inserts and queries.  See View Objects    // in Detail in the Developer's Guide for additional information.        
        if (!vo.isPreparedForExecution()) {
            vo.executeQuery();
        }

        Row row = vo.createRow();
        vo.insertRow(row); // Required per OA Framework Model Coding Standard M69
        row.setNewRowState(Row.STATUS_INITIALIZED);
    } // end createQstn()


    public void initQueryQstnDtls(java.lang.String s) {
        System.out.println(s + "  Inside  initQueryQstnDtls ");
        java.lang.String s1 = 
            "od.oracle.apps.xxcrm.scs.fdk.server.ODCSAdminAMimpl.initQuery";
        oracle.apps.fnd.framework.server.OADBTransaction oadbtransaction = 
            getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        java.lang.StringBuffer stringbuffer = new StringBuffer(100);
        if (flag)
            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
        ODSCSFdbkQstnMstrVOImpl dtls = getODSCSFdbkQstnMstrVO1();
        if (dtls != null)
            dtls.initQuery(s);
        if (flag) {
            dtls.writeDiagnostics(s1, stringbuffer.toString(), 2);
            dtls.writeDiagnostics(s1, "End", 2);
        }
    }

    public void initQueryRespDtls(java.lang.String s) {
        java.lang.String s1 = 
            "od.oracle.apps.xxcrm.scs.fdk.server.ODCSAdminAMimpl.initQuery";
        oracle.apps.fnd.framework.server.OADBTransaction oadbtransaction = 
            getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        java.lang.StringBuffer stringbuffer = new StringBuffer(100);
        if (flag)
            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
        ODSCSFdbkRespDtlVOImpl dtls = getODSCSFdbkRespDtlVO1();
        if (dtls != null)
            dtls.initQuery(s);
        if (flag) {
            dtls.writeDiagnostics(s1, stringbuffer.toString(), 2);
            dtls.writeDiagnostics(s1, "End", 2);
        }
        System.out.println("S=" + s);
    }

    public void initQueryActionsDtls(java.lang.String s) {
        java.lang.String s1 = 
            "od.oracle.apps.xxcrm.scs.fdk.server.ODCSAdminAMimpl.initQuery";
        oracle.apps.fnd.framework.server.OADBTransaction oadbtransaction = 
            getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        java.lang.StringBuffer stringbuffer = new StringBuffer(100);
        if (flag)
            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
        ODSCSActionsVOImpl dtls = getODSCSActionsVO1();
        if (dtls != null)
            dtls.initQuery(s);
        if (flag) {
            dtls.writeDiagnostics(s1, stringbuffer.toString(), 2);
            dtls.writeDiagnostics(s1, "End", 2);
        }
    }

    public void deleteQstnDtls(String value) {
        int var = Integer.parseInt(value);

        OAViewObject vo = (OAViewObject)getODSCSFdbkQstnMstrVO();
        ODSCSFdbkQstnMstrVORowImpl row = null;


        // This tells us the number of rows that have been fetched in the
        // row set, and will not pull additional rows in like some of the
        // other "get count" methods.
        int fetchedRowCount = vo.getFetchedRowCount();

        // We use a separate iterator -- even though we could step through the
        // rows without it -- because we don't want to affect row currency.
        RowSetIterator deleteIter = vo.createRowSetIterator("deleteIter");
        if (fetchedRowCount > 0) {
            deleteIter.setRangeStart(0);
            deleteIter.setRangeSize(fetchedRowCount);
            for (int i = 0; i < fetchedRowCount; i++) {
                row = 
(ODSCSFdbkQstnMstrVORowImpl)deleteIter.getRowAtRangeIndex(i);
                // View Objects. When we need to obtain an attribute value,
                // we use the named accessors instead of a generic String lookup.

                //        Number primaryKey = row.getFdbkQstnId();
                Number primaryKey = (Number)row.getAttribute("FdbkQstnId");

                if (primaryKey.compareTo(var) == 0) {
                    // This performs the actual delete.
                    row.remove();
                    getTransaction().commit();
                    break; // only one possible selected row in this case
                }
            }
        }
        // Always close the iterator when you're done.
        deleteIter.closeRowSetIterator();
    } // end delete


    /**
     * 
     * Container's getter for ODSCSActionsVO
     */
    public ODSCSActionsVOImpl getODSCSActionsVO() {
        return (ODSCSActionsVOImpl)findViewObject("ODSCSActionsVO");
    }

    /**
     * 
     * Container's getter for ODSCSFdbkRespDtlVO1
     */
    public ODSCSFdbkRespDtlVOImpl getODSCSFdbkRespDtlVO1() {
        return (ODSCSFdbkRespDtlVOImpl)findViewObject("ODSCSFdbkRespDtlVO1");
    }

    /**
     * 
     * Container's getter for ODSCSFdbkQstnMstrVO1
     */
    public ODSCSFdbkQstnMstrVOImpl getODSCSFdbkQstnMstrVO1() {
        return (ODSCSFdbkQstnMstrVOImpl)findViewObject("ODSCSFdbkQstnMstrVO1");
    }

    /**
     * 
     * Container's getter for ODSCSActionsVO1
     */
    public ODSCSActionsVOImpl getODSCSActionsVO1() {
        return (ODSCSActionsVOImpl)findViewObject("ODSCSActionsVO1");
    }

}
