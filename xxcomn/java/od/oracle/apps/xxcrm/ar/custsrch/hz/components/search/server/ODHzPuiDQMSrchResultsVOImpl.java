/*===========================================================================+
 |   Copyright (c) 2001, 2005 Oracle Corporation, Redwood Shores, CA, USA    |
 |                         All rights reserved.                              |
 +===========================================================================+
 |  HISTORY                                                                  |
 +===========================================================================*/
/*===========================================================================+
 |      		       Office Depot - Project Simplify                       |
 |            Oracle NAIO/WIPRO/Office Depot/Consulting Organization         |
 +===========================================================================+
 |  FILENAME                                                                 |
 |             ODHzPuiDQMSrchResultsVOImpl.java                              |
 |                                                                           |
 |  DESCRIPTION                                                              |
 |             ViewObject Implementation file for the sales customer         |     
 |             search results table region .                                 |                                        
 |                                                                           |
 |                                                                           |
 |  NOTES                                                                    |
 |                                                                           |
 |                                                                           |
 |  DEPENDENCIES                                                             |
 |    This class file is called from ODCustSearchPG.xml and the AM file:     |
 |    ODHzPuiDQMSrchResultsAM                                                |
 |                                                                           |
 |  HISTORY                                                                  |
 |                                                                           |
 |    21/09/2007 Anirban Chaudhuri   Created                                 |
 |    07/03/2008 Anirban Chaudhuri   Fixed QC item# 4217                     |
 +===========================================================================*/

package od.oracle.apps.xxcrm.ar.custsrch.hz.components.search.server;

import oracle.apps.fnd.framework.server.OAViewObjectImpl;
import java.util.Vector;
import oracle.jbo.common.Diagnostic;
import oracle.apps.fnd.framework.server.*;
import oracle.apps.fnd.framework.OAFwkConstants;
import java.util.Enumeration;
import java.math.BigDecimal;
//import com.sun.java.util.collections.Iterator;

//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODHzPuiDQMSrchResultsVOImpl extends OAViewObjectImpl 
{
  /**
   * 
   * This is the default constructor (do not remove)
   */
    public ODHzPuiDQMSrchResultsVOImpl()
    {
    }

  /*public void initQuery(StringBuffer stringbuffer, StringBuffer stringbuffer1, Vector vector)
    {
        OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getApplicationModule().getTransaction();
        boolean isStatLogEnabled = oadbtransactionimpl.isLoggingEnabled(OAFwkConstants.STATEMENT);
        if(isStatLogEnabled)   
        {
          oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery", OAFwkConstants.STATEMENT);
         // oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery stringbuffer - "+stringbuffer.length(), OAFwkConstants.STATEMENT);
          oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery stringbuffer1 - "+stringbuffer1.length(), OAFwkConstants.STATEMENT);
        } 
        
       // setWhereClauseParams(null);
      /*  if(vector != null)
        {
            Diagnostic.println("ODVO: extraParams.size() > 0 - " + vector.size());
            oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery - vector.size() - "+vector.size(), OAFwkConstants.STATEMENT);
        } else
        {
            Diagnostic.println("ODVO: extraParams.size() > 0 - null");
            oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery - extraParams.size() > 0 - null", OAFwkConstants.STATEMENT);
        }
        if(stringbuffer == null && stringbuffer1 == null)
        {
            Diagnostic.println("ODVO: Resetting the SQL. newSql == null && extraClause == null");
            oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery - Resetting the SQL. newSql == null && extraClause == null", OAFwkConstants.STATEMENT);
            setWhereClause(null);
        }
        if(stringbuffer != null && stringbuffer.length() > 0)
        {
            oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery - stringbuffer.toString() - "+stringbuffer.toString(), OAFwkConstants.STATEMENT);
            setQuery(stringbuffer.toString());
        }
        if(stringbuffer1 != null && stringbuffer1.length() > 0)
        {
            Diagnostic.println("ODVO: Extra Clause is not null - " + stringbuffer1.toString());
            oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery - stringbuffer1.toString() - "+stringbuffer1.toString(), OAFwkConstants.STATEMENT);
            setWhereClause(stringbuffer1.toString());
            setOrderByClause("score desc");
        }*/
       /* if(vector != null && vector.size() > 0)
        {
            Diagnostic.println("ODVO: Inside extraParams.size() > 0 - " + vector.size());
            oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery last IF - vector.size() - "+vector.size(), OAFwkConstants.STATEMENT);
           
          int cnt = 1;
            Enumeration enumeration = vector.elements();
            while(enumeration.hasMoreElements()) 
            {
            
              String s3 = (String)enumeration.nextElement();
              if (!(s3.equals(null)) || !("null".equals(s3)))
              {
             // int iS3 = Integer.parseInt(s3);
              BigDecimal bVal = new BigDecimal(s3);
              oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery last IF - bVal - "+bVal, OAFwkConstants.STATEMENT);
              oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery last IF - cnt - "+cnt, OAFwkConstants.STATEMENT);
              setWhereClauseParam(cnt, bVal);
              }
              else
              {
                 setWhereClauseParam(cnt, s3);
              }
              cnt++;
             }*/
           /* Object aobj[] = new Object[vector.size()];
            vector.copyInto(aobj);
            setWhereClauseParams(aobj);
            oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery last calling query in IF ", OAFwkConstants.STATEMENT);
           executeQuery(); 
        }*/
       // executeQuery();
        
   // }

    public void initQuery(StringBuffer stringbuffer, StringBuffer stringbuffer1, Vector vector, String extraRestrictiveSQL)
    {
        OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getApplicationModule().getTransaction();
        boolean isStatLogEnabled = oadbtransactionimpl.isLoggingEnabled(OAFwkConstants.STATEMENT);
        if(isStatLogEnabled)   
        {
          oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery", OAFwkConstants.STATEMENT);
        }
        if(vector != null && vector.size() > 0)
        {
          Diagnostic.println("ODVO: Inside extraParams.size() > 0 - " + vector.size());
          oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery last IF - vector.size() - "+vector.size(), OAFwkConstants.STATEMENT);
          setWhereClauseParams(null);
		  setWhereClause(null);
          int cnt = 0;
          Enumeration enumeration = vector.elements();
          while(enumeration.hasMoreElements()) 
          {
            String s3 = (String)enumeration.nextElement();
            setWhereClauseParam(cnt, s3);
            oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery last IF - val set - s3 - "+s3, OAFwkConstants.STATEMENT);
            oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery last IF - cnt - "+cnt, OAFwkConstants.STATEMENT);
            cnt++;
            oadbtransactionimpl.writeDiagnostics(this,  "ODVO: In initQuery last IF - after cnt - "+cnt, OAFwkConstants.STATEMENT);
          }

		  if ((extraRestrictiveSQL!=null) && (!("".equals(extraRestrictiveSQL))))
		  {
           setWhereClause(extraRestrictiveSQL);
		   oadbtransactionimpl.writeDiagnostics(this,  "ODVO: ANIRBAN In initQuery VOImpl PRINTING THE extraRestrictiveSQL - "+extraRestrictiveSQL, OAFwkConstants.STATEMENT);
		  }
		  
		  String anirbanQuery = getQuery();
		  oadbtransactionimpl.writeDiagnostics(this,  "ODVO: ANIRBAN In initQuery PRINTING THE VO QUERY - "+anirbanQuery, OAFwkConstants.STATEMENT);
          executeQuery();
        }
		else
        {
         setWhereClauseParams(null);
		 setWhereClause(null);
		 setWhereClauseParam(0, "1");
		 setWhereClauseParam(1, "1");
		 setWhereClauseParam(2, "1");
		 String anirbanQuery = getQuery();
		 oadbtransactionimpl.writeDiagnostics(this,  "ODVO: ANIRBAN In initQuery PRINTING THE VO QUERY - "+anirbanQuery, OAFwkConstants.STATEMENT);
		 executeQuery();
		}
    }
    
    
}