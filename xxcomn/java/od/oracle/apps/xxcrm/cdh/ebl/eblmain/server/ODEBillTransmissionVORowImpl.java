package od.oracle.apps.xxcrm.cdh.ebl.eblmain.server;

/*
  -- +===========================================================================+
  -- |                  Office Depot - eBilling Project                          |
  -- |                         WIPRO/Office Depot                                |
  -- +===========================================================================+
  -- | Name        :  ODEBillTransmissionVORowImpl                               |
  -- | Description :                                                             |
  -- | This is the View Object Class for transmission Details.                   |
  -- |                                                                           |
  -- |                                                                           |
  -- |                                                                           |
  -- |Change Record:                                                             |
  -- |===============                                                            |
  -- |Version  Date        Author               Remarks                          |
  -- |======== =========== ================     ================================ |
  -- |DRAFT 1A 15-JAN-2010 Devi Viswanathan     Initial draft version            |
  -- |                                                                           |
  -- |                                                                           |
  -- |                                                                           |
  -- |===========================================================================|
  -- | Subversion Info:                                                          |
  -- | $HeadURL$                                                               |
  -- | $Rev$                                                                   |
  -- | $Date$                                                                  |
  -- |                                                                           |
  -- +===========================================================================+
*/



import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.apps.fnd.framework.OAApplicationModule;
import od.oracle.apps.xxcrm.cdh.ebl.server.ODUtil;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------


public class ODEBillTransmissionVORowImpl extends OAViewRowImpl 
{


  protected static final int CUSTDOCID = 0;
  protected static final int EMAILSUBJECT = 1;
  protected static final int EMAILSTDMESSAGE = 2;
  protected static final int EMAILCUSTOMMESSAGE = 3;
  protected static final int EMAILSTDDISCLAIMER = 4;
  protected static final int EMAILSIGNATURE = 5;
  protected static final int EMAILLOGOREQUIRED = 6;
  protected static final int EMAILLOGOFILENAME = 7;
  protected static final int FTPDIRECTION = 8;
  protected static final int FTPTRANSFERTYPE = 9;
  protected static final int FTPDESTINATIONSITE = 10;
  protected static final int FTPDESTINATIONFOLDER = 11;
  protected static final int FTPUSERNAME = 12;
  protected static final int FTPPASSWORD = 13;
  protected static final int FTPPICKUPSERVER = 14;
  protected static final int FTPPICKUPFOLDER = 15;
  protected static final int FTPCUSTCONTACTNAME = 16;
  protected static final int FTPCUSTCONTACTEMAIL = 17;
  protected static final int FTPCUSTCONTACTPHONE = 18;
  protected static final int FTPNOTIFYCUSTOMER = 19;
  protected static final int FTPCCEMAILS = 20;
  protected static final int FTPEMAILSUB = 21;
  protected static final int FTPEMAILCONTENT = 22;
  protected static final int FTPSENDZEROBYTEFILE = 23;
  protected static final int FTPZEROBYTEFILETEXT = 24;
  protected static final int FTPZEROBYTENOTIFICATIONTXT = 25;
  protected static final int CDFILELOCATION = 26;
  protected static final int CDSENDTOADDRESS = 27;
  protected static final int COMMENTS = 28;
  protected static final int ATTRIBUTE1 = 29;
  protected static final int ATTRIBUTE2 = 30;
  protected static final int ATTRIBUTE3 = 31;
  protected static final int ATTRIBUTE4 = 32;
  protected static final int ATTRIBUTE5 = 33;
  protected static final int ATTRIBUTE6 = 34;
  protected static final int ATTRIBUTE7 = 35;
  protected static final int ATTRIBUTE8 = 36;
  protected static final int ATTRIBUTE9 = 37;
  protected static final int ATTRIBUTE10 = 38;
  protected static final int ATTRIBUTE11 = 39;
  protected static final int ATTRIBUTE12 = 40;
  protected static final int ATTRIBUTE13 = 41;
  protected static final int ATTRIBUTE14 = 42;
  protected static final int ATTRIBUTE15 = 43;
  protected static final int ATTRIBUTE16 = 44;
  protected static final int ATTRIBUTE17 = 45;
  protected static final int ATTRIBUTE18 = 46;
  protected static final int ATTRIBUTE19 = 47;
  protected static final int ATTRIBUTE20 = 48;
  protected static final int EMAILSPLINSTRUCTION = 49;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODEBillTransmissionVORowImpl()
  {
  }

  /**
   * 
   * Gets ODEBillTransmissionEO entity object.
   */
  public od.oracle.apps.xxcrm.cdh.ebl.eblmain.schema.server.ODEBillTransmissionEOImpl getODEBillTransmissionEO()
  {
    return (od.oracle.apps.xxcrm.cdh.ebl.eblmain.schema.server.ODEBillTransmissionEOImpl)getEntity(0);
  }

  /**
   * 
   * Gets the attribute value for CUST_DOC_ID using the alias name CustDocId
   */
  public Number getCustDocId()
  {
    return (Number)getAttributeInternal(CUSTDOCID);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CUST_DOC_ID using the alias name CustDocId
   */
  public void setCustDocId(Number value)
  {
    setAttributeInternal(CUSTDOCID, value);
  }

  /**
   * 
   * Gets the attribute value for EMAIL_SUBJECT using the alias name EmailSubject
   */
  public String getEmailSubject()
  {
    return (String)getAttributeInternal(EMAILSUBJECT);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EMAIL_SUBJECT using the alias name EmailSubject
   */
  public void setEmailSubject(String value)
  {
    setAttributeInternal(EMAILSUBJECT, value);
  }

  /**
   * 
   * Gets the attribute value for EMAIL_STD_MESSAGE using the alias name EmailStdMessage
   */
  public String getEmailStdMessage()
  {
    return (String)getAttributeInternal(EMAILSTDMESSAGE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EMAIL_STD_MESSAGE using the alias name EmailStdMessage
   */
  public void setEmailStdMessage(String value)
  {
    setAttributeInternal(EMAILSTDMESSAGE, value);
  }

  /**
   * 
   * Gets the attribute value for EMAIL_CUSTOM_MESSAGE using the alias name EmailCustomMessage
   */
  public String getEmailCustomMessage()
  {
    return (String)getAttributeInternal(EMAILCUSTOMMESSAGE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EMAIL_CUSTOM_MESSAGE using the alias name EmailCustomMessage
   */
  public void setEmailCustomMessage(String value)
  {
    setAttributeInternal(EMAILCUSTOMMESSAGE, value);
  }

  /**
   * 
   * Gets the attribute value for EMAIL_STD_DISCLAIMER using the alias name EmailStdDisclaimer
   */
  public String getEmailStdDisclaimer()
  {
    return (String)getAttributeInternal(EMAILSTDDISCLAIMER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EMAIL_STD_DISCLAIMER using the alias name EmailStdDisclaimer
   */
  public void setEmailStdDisclaimer(String value)
  {
    setAttributeInternal(EMAILSTDDISCLAIMER, value);
  }

  /**
   * 
   * Gets the attribute value for EMAIL_SIGNATURE using the alias name EmailSignature
   */
  public String getEmailSignature()
  {
    return (String)getAttributeInternal(EMAILSIGNATURE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EMAIL_SIGNATURE using the alias name EmailSignature
   */
  public void setEmailSignature(String value)
  {
    setAttributeInternal(EMAILSIGNATURE, value);
  }

  /**
   * 
   * Gets the attribute value for EMAIL_LOGO_REQUIRED using the alias name EmailLogoRequired
   */
  public String getEmailLogoRequired()
  {
    return (String)getAttributeInternal(EMAILLOGOREQUIRED);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EMAIL_LOGO_REQUIRED using the alias name EmailLogoRequired
   */
  public void setEmailLogoRequired(String value)
  {
    setAttributeInternal(EMAILLOGOREQUIRED, value);
  }

  /**
   * 
   * Gets the attribute value for EMAIL_LOGO_FILE_NAME using the alias name EmailLogoFileName
   */
  public String getEmailLogoFileName()
  {
    return (String)getAttributeInternal(EMAILLOGOFILENAME);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EMAIL_LOGO_FILE_NAME using the alias name EmailLogoFileName
   */
  public void setEmailLogoFileName(String value)
  {
    setAttributeInternal(EMAILLOGOFILENAME, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_DIRECTION using the alias name FtpDirection
   */
  public String getFtpDirection()
  {
    return (String)getAttributeInternal(FTPDIRECTION);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_DIRECTION using the alias name FtpDirection
   */
  public void setFtpDirection(String value)
  {
    setAttributeInternal(FTPDIRECTION, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_TRANSFER_TYPE using the alias name FtpTransferType
   */
  public String getFtpTransferType()
  {
    return (String)getAttributeInternal(FTPTRANSFERTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_TRANSFER_TYPE using the alias name FtpTransferType
   */
  public void setFtpTransferType(String value)
  {
    setAttributeInternal(FTPTRANSFERTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_DESTINATION_SITE using the alias name FtpDestinationSite
   */
  public String getFtpDestinationSite()
  {
    return (String)getAttributeInternal(FTPDESTINATIONSITE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_DESTINATION_SITE using the alias name FtpDestinationSite
   */
  public void setFtpDestinationSite(String value)
  {
    setAttributeInternal(FTPDESTINATIONSITE, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_DESTINATION_FOLDER using the alias name FtpDestinationFolder
   */
  public String getFtpDestinationFolder()
  {
    return (String)getAttributeInternal(FTPDESTINATIONFOLDER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_DESTINATION_FOLDER using the alias name FtpDestinationFolder
   */
  public void setFtpDestinationFolder(String value)
  {
    setAttributeInternal(FTPDESTINATIONFOLDER, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_USER_NAME using the alias name FtpUserName
   */
  public String getFtpUserName()
  {
    return (String)getAttributeInternal(FTPUSERNAME);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_USER_NAME using the alias name FtpUserName
   */
  public void setFtpUserName(String value)
  {
    setAttributeInternal(FTPUSERNAME, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_PASSWORD using the alias name FtpPassword
   */
  public String getFtpPassword()
  {
    return (String)getAttributeInternal(FTPPASSWORD);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_PASSWORD using the alias name FtpPassword
   */
  public void setFtpPassword(String value)
  {
    setAttributeInternal(FTPPASSWORD, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_PICKUP_SERVER using the alias name FtpPickupServer
   */
  public String getFtpPickupServer()
  {
    return (String)getAttributeInternal(FTPPICKUPSERVER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_PICKUP_SERVER using the alias name FtpPickupServer
   */
  public void setFtpPickupServer(String value)
  {
    setAttributeInternal(FTPPICKUPSERVER, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_PICKUP_FOLDER using the alias name FtpPickupFolder
   */
  public String getFtpPickupFolder()
  {
    return (String)getAttributeInternal(FTPPICKUPFOLDER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_PICKUP_FOLDER using the alias name FtpPickupFolder
   */
  public void setFtpPickupFolder(String value)
  {
    setAttributeInternal(FTPPICKUPFOLDER, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_CUST_CONTACT_NAME using the alias name FtpCustContactName
   */
  public String getFtpCustContactName()
  {
    return (String)getAttributeInternal(FTPCUSTCONTACTNAME);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_CUST_CONTACT_NAME using the alias name FtpCustContactName
   */
  public void setFtpCustContactName(String value)
  {
    setAttributeInternal(FTPCUSTCONTACTNAME, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_CUST_CONTACT_EMAIL using the alias name FtpCustContactEmail
   */
  public String getFtpCustContactEmail()
  {
    return (String)getAttributeInternal(FTPCUSTCONTACTEMAIL);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_CUST_CONTACT_EMAIL using the alias name FtpCustContactEmail
   */
  public void setFtpCustContactEmail(String value)
  {    
    setAttributeInternal(FTPCUSTCONTACTEMAIL, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_CUST_CONTACT_PHONE using the alias name FtpCustContactPhone
   */
  public String getFtpCustContactPhone()
  {
    return (String)getAttributeInternal(FTPCUSTCONTACTPHONE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_CUST_CONTACT_PHONE using the alias name FtpCustContactPhone
   */
  public void setFtpCustContactPhone(String value)
  {
    setAttributeInternal(FTPCUSTCONTACTPHONE, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_NOTIFY_CUSTOMER using the alias name FtpNotifyCustomer
   */
  public String getFtpNotifyCustomer()
  {
    return (String)getAttributeInternal(FTPNOTIFYCUSTOMER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_NOTIFY_CUSTOMER using the alias name FtpNotifyCustomer
   */
  public void setFtpNotifyCustomer(String value)
  {
    setAttributeInternal(FTPNOTIFYCUSTOMER, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_CC_EMAILS using the alias name FtpCcEmails
   */
  public String getFtpCcEmails()
  {
    return (String)getAttributeInternal(FTPCCEMAILS);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_CC_EMAILS using the alias name FtpCcEmails
   */
  public void setFtpCcEmails(String value)
  {
    setAttributeInternal(FTPCCEMAILS, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_EMAIL_SUB using the alias name FtpEmailSub
   */
  public String getFtpEmailSub()
  {
    return (String)getAttributeInternal(FTPEMAILSUB);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_EMAIL_SUB using the alias name FtpEmailSub
   */
  public void setFtpEmailSub(String value)
  {
    setAttributeInternal(FTPEMAILSUB, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_EMAIL_CONTENT using the alias name FtpEmailContent
   */
  public String getFtpEmailContent()
  {
    return (String)getAttributeInternal(FTPEMAILCONTENT);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_EMAIL_CONTENT using the alias name FtpEmailContent
   */
  public void setFtpEmailContent(String value)
  {
    setAttributeInternal(FTPEMAILCONTENT, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_SEND_ZERO_BYTE_FILE using the alias name FtpSendZeroByteFile
   */
  public String getFtpSendZeroByteFile()
  {
    return (String)getAttributeInternal(FTPSENDZEROBYTEFILE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_SEND_ZERO_BYTE_FILE using the alias name FtpSendZeroByteFile
   */
  public void setFtpSendZeroByteFile(String value)
  {
    setAttributeInternal(FTPSENDZEROBYTEFILE, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_ZERO_BYTE_FILE_TEXT using the alias name FtpZeroByteFileText
   */
  public String getFtpZeroByteFileText()
  {
    return (String)getAttributeInternal(FTPZEROBYTEFILETEXT);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_ZERO_BYTE_FILE_TEXT using the alias name FtpZeroByteFileText
   */
  public void setFtpZeroByteFileText(String value)
  {
    setAttributeInternal(FTPZEROBYTEFILETEXT, value);
  }

  /**
   * 
   * Gets the attribute value for FTP_ZERO_BYTE_NOTIFICATION_TXT using the alias name FtpZeroByteNotificationTxt
   */
  public String getFtpZeroByteNotificationTxt()
  {
    return (String)getAttributeInternal(FTPZEROBYTENOTIFICATIONTXT);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FTP_ZERO_BYTE_NOTIFICATION_TXT using the alias name FtpZeroByteNotificationTxt
   */
  public void setFtpZeroByteNotificationTxt(String value)
  {
    setAttributeInternal(FTPZEROBYTENOTIFICATIONTXT, value);
  }

  /**
   * 
   * Gets the attribute value for CD_FILE_LOCATION using the alias name CdFileLocation
   */
  public String getCdFileLocation()
  {
    return (String)getAttributeInternal(CDFILELOCATION);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CD_FILE_LOCATION using the alias name CdFileLocation
   */
  public void setCdFileLocation(String value)
  {
    setAttributeInternal(CDFILELOCATION, value);
  }

  /**
   * 
   * Gets the attribute value for CD_SEND_TO_ADDRESS using the alias name CdSendToAddress
   */
  public String getCdSendToAddress()
  {
    return (String)getAttributeInternal(CDSENDTOADDRESS);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CD_SEND_TO_ADDRESS using the alias name CdSendToAddress
   */
  public void setCdSendToAddress(String value)
  {
    setAttributeInternal(CDSENDTOADDRESS, value);
  }

  /**
   * 
   * Gets the attribute value for COMMENTS using the alias name Comments
   */
  public String getComments()
  {
    return (String)getAttributeInternal(COMMENTS);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for COMMENTS using the alias name Comments
   */
  public void setComments(String value)
  {
    setAttributeInternal(COMMENTS, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE2 using the alias name Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE2 using the alias name Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE3 using the alias name Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE3 using the alias name Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE4 using the alias name Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE4 using the alias name Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE5 using the alias name Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE5 using the alias name Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE6 using the alias name Attribute6
   */
  public String getAttribute6()
  {
    return (String)getAttributeInternal(ATTRIBUTE6);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE6 using the alias name Attribute6
   */
  public void setAttribute6(String value)
  {
    setAttributeInternal(ATTRIBUTE6, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE7 using the alias name Attribute7
   */
  public String getAttribute7()
  {
    return (String)getAttributeInternal(ATTRIBUTE7);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE7 using the alias name Attribute7
   */
  public void setAttribute7(String value)
  {
    setAttributeInternal(ATTRIBUTE7, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE8 using the alias name Attribute8
   */
  public String getAttribute8()
  {
    return (String)getAttributeInternal(ATTRIBUTE8);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE8 using the alias name Attribute8
   */
  public void setAttribute8(String value)
  {
    setAttributeInternal(ATTRIBUTE8, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE9 using the alias name Attribute9
   */
  public String getAttribute9()
  {
    return (String)getAttributeInternal(ATTRIBUTE9);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE9 using the alias name Attribute9
   */
  public void setAttribute9(String value)
  {
    setAttributeInternal(ATTRIBUTE9, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE10 using the alias name Attribute10
   */
  public String getAttribute10()
  {
    return (String)getAttributeInternal(ATTRIBUTE10);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE10 using the alias name Attribute10
   */
  public void setAttribute10(String value)
  {
    setAttributeInternal(ATTRIBUTE10, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE11 using the alias name Attribute11
   */
  public String getAttribute11()
  {
    return (String)getAttributeInternal(ATTRIBUTE11);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE11 using the alias name Attribute11
   */
  public void setAttribute11(String value)
  {
    setAttributeInternal(ATTRIBUTE11, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE12 using the alias name Attribute12
   */
  public String getAttribute12()
  {
    return (String)getAttributeInternal(ATTRIBUTE12);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE12 using the alias name Attribute12
   */
  public void setAttribute12(String value)
  {
    setAttributeInternal(ATTRIBUTE12, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE13 using the alias name Attribute13
   */
  public String getAttribute13()
  {
    return (String)getAttributeInternal(ATTRIBUTE13);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE13 using the alias name Attribute13
   */
  public void setAttribute13(String value)
  {
    setAttributeInternal(ATTRIBUTE13, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE14 using the alias name Attribute14
   */
  public String getAttribute14()
  {
    return (String)getAttributeInternal(ATTRIBUTE14);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE14 using the alias name Attribute14
   */
  public void setAttribute14(String value)
  {
    setAttributeInternal(ATTRIBUTE14, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE15 using the alias name Attribute15
   */
  public String getAttribute15()
  {
    return (String)getAttributeInternal(ATTRIBUTE15);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE15 using the alias name Attribute15
   */
  public void setAttribute15(String value)
  {
    setAttributeInternal(ATTRIBUTE15, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE16 using the alias name Attribute16
   */
  public String getAttribute16()
  {
    return (String)getAttributeInternal(ATTRIBUTE16);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE16 using the alias name Attribute16
   */
  public void setAttribute16(String value)
  {
    setAttributeInternal(ATTRIBUTE16, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE17 using the alias name Attribute17
   */
  public String getAttribute17()
  {
    return (String)getAttributeInternal(ATTRIBUTE17);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE17 using the alias name Attribute17
   */
  public void setAttribute17(String value)
  {
    setAttributeInternal(ATTRIBUTE17, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE18 using the alias name Attribute18
   */
  public String getAttribute18()
  {
    return (String)getAttributeInternal(ATTRIBUTE18);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE18 using the alias name Attribute18
   */
  public void setAttribute18(String value)
  {
    setAttributeInternal(ATTRIBUTE18, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE19 using the alias name Attribute19
   */
  public String getAttribute19()
  {
    return (String)getAttributeInternal(ATTRIBUTE19);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE19 using the alias name Attribute19
   */
  public void setAttribute19(String value)
  {
    setAttributeInternal(ATTRIBUTE19, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE20 using the alias name Attribute20
   */
  public String getAttribute20()
  {
    return (String)getAttributeInternal(ATTRIBUTE20);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE20 using the alias name Attribute20
   */
  public void setAttribute20(String value)
  {
    setAttributeInternal(ATTRIBUTE20, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CUSTDOCID:
        return getCustDocId();
      case EMAILSUBJECT:
        return getEmailSubject();
      case EMAILSTDMESSAGE:
        return getEmailStdMessage();
      case EMAILCUSTOMMESSAGE:
        return getEmailCustomMessage();
      case EMAILSTDDISCLAIMER:
        return getEmailStdDisclaimer();
      case EMAILSIGNATURE:
        return getEmailSignature();
      case EMAILLOGOREQUIRED:
        return getEmailLogoRequired();
      case EMAILLOGOFILENAME:
        return getEmailLogoFileName();
      case FTPDIRECTION:
        return getFtpDirection();
      case FTPTRANSFERTYPE:
        return getFtpTransferType();
      case FTPDESTINATIONSITE:
        return getFtpDestinationSite();
      case FTPDESTINATIONFOLDER:
        return getFtpDestinationFolder();
      case FTPUSERNAME:
        return getFtpUserName();
      case FTPPASSWORD:
        return getFtpPassword();
      case FTPPICKUPSERVER:
        return getFtpPickupServer();
      case FTPPICKUPFOLDER:
        return getFtpPickupFolder();
      case FTPCUSTCONTACTNAME:
        return getFtpCustContactName();
      case FTPCUSTCONTACTEMAIL:
        return getFtpCustContactEmail();
      case FTPCUSTCONTACTPHONE:
        return getFtpCustContactPhone();
      case FTPNOTIFYCUSTOMER:
        return getFtpNotifyCustomer();
      case FTPCCEMAILS:
        return getFtpCcEmails();
      case FTPEMAILSUB:
        return getFtpEmailSub();
      case FTPEMAILCONTENT:
        return getFtpEmailContent();
      case FTPSENDZEROBYTEFILE:
        return getFtpSendZeroByteFile();
      case FTPZEROBYTEFILETEXT:
        return getFtpZeroByteFileText();
      case FTPZEROBYTENOTIFICATIONTXT:
        return getFtpZeroByteNotificationTxt();
      case CDFILELOCATION:
        return getCdFileLocation();
      case CDSENDTOADDRESS:
        return getCdSendToAddress();
      case COMMENTS:
        return getComments();
      case ATTRIBUTE1:
        return getAttribute1();
      case ATTRIBUTE2:
        return getAttribute2();
      case ATTRIBUTE3:
        return getAttribute3();
      case ATTRIBUTE4:
        return getAttribute4();
      case ATTRIBUTE5:
        return getAttribute5();
      case ATTRIBUTE6:
        return getAttribute6();
      case ATTRIBUTE7:
        return getAttribute7();
      case ATTRIBUTE8:
        return getAttribute8();
      case ATTRIBUTE9:
        return getAttribute9();
      case ATTRIBUTE10:
        return getAttribute10();
      case ATTRIBUTE11:
        return getAttribute11();
      case ATTRIBUTE12:
        return getAttribute12();
      case ATTRIBUTE13:
        return getAttribute13();
      case ATTRIBUTE14:
        return getAttribute14();
      case ATTRIBUTE15:
        return getAttribute15();
      case ATTRIBUTE16:
        return getAttribute16();
      case ATTRIBUTE17:
        return getAttribute17();
      case ATTRIBUTE18:
        return getAttribute18();
      case ATTRIBUTE19:
        return getAttribute19();
      case ATTRIBUTE20:
        return getAttribute20();
      case EMAILSPLINSTRUCTION:
        return getEmailSplInstruction();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CUSTDOCID:
        setCustDocId((Number)value);
        return;
      case EMAILSUBJECT:
        setEmailSubject((String)value);
        return;
      case EMAILSTDMESSAGE:
        setEmailStdMessage((String)value);
        return;
      case EMAILCUSTOMMESSAGE:
        setEmailCustomMessage((String)value);
        return;
      case EMAILSTDDISCLAIMER:
        setEmailStdDisclaimer((String)value);
        return;
      case EMAILSIGNATURE:
        setEmailSignature((String)value);
        return;
      case EMAILLOGOREQUIRED:
        setEmailLogoRequired((String)value);
        return;
      case EMAILLOGOFILENAME:
        setEmailLogoFileName((String)value);
        return;
      case FTPDIRECTION:
        setFtpDirection((String)value);
        return;
      case FTPTRANSFERTYPE:
        setFtpTransferType((String)value);
        return;
      case FTPDESTINATIONSITE:
        setFtpDestinationSite((String)value);
        return;
      case FTPDESTINATIONFOLDER:
        setFtpDestinationFolder((String)value);
        return;
      case FTPUSERNAME:
        setFtpUserName((String)value);
        return;
      case FTPPASSWORD:
        setFtpPassword((String)value);
        return;
      case FTPPICKUPSERVER:
        setFtpPickupServer((String)value);
        return;
      case FTPPICKUPFOLDER:
        setFtpPickupFolder((String)value);
        return;
      case FTPCUSTCONTACTNAME:
        setFtpCustContactName((String)value);
        return;
      case FTPCUSTCONTACTEMAIL:
        setFtpCustContactEmail((String)value);
        return;
      case FTPCUSTCONTACTPHONE:
        setFtpCustContactPhone((String)value);
        return;
      case FTPNOTIFYCUSTOMER:
        setFtpNotifyCustomer((String)value);
        return;
      case FTPCCEMAILS:
        setFtpCcEmails((String)value);
        return;
      case FTPEMAILSUB:
        setFtpEmailSub((String)value);
        return;
      case FTPEMAILCONTENT:
        setFtpEmailContent((String)value);
        return;
      case FTPSENDZEROBYTEFILE:
        setFtpSendZeroByteFile((String)value);
        return;
      case FTPZEROBYTEFILETEXT:
        setFtpZeroByteFileText((String)value);
        return;
      case FTPZEROBYTENOTIFICATIONTXT:
        setFtpZeroByteNotificationTxt((String)value);
        return;
      case CDFILELOCATION:
        setCdFileLocation((String)value);
        return;
      case CDSENDTOADDRESS:
        setCdSendToAddress((String)value);
        return;
      case COMMENTS:
        setComments((String)value);
        return;
      case ATTRIBUTE1:
        setAttribute1((String)value);
        return;
      case ATTRIBUTE2:
        setAttribute2((String)value);
        return;
      case ATTRIBUTE3:
        setAttribute3((String)value);
        return;
      case ATTRIBUTE4:
        setAttribute4((String)value);
        return;
      case ATTRIBUTE5:
        setAttribute5((String)value);
        return;
      case ATTRIBUTE6:
        setAttribute6((String)value);
        return;
      case ATTRIBUTE7:
        setAttribute7((String)value);
        return;
      case ATTRIBUTE8:
        setAttribute8((String)value);
        return;
      case ATTRIBUTE9:
        setAttribute9((String)value);
        return;
      case ATTRIBUTE10:
        setAttribute10((String)value);
        return;
      case ATTRIBUTE11:
        setAttribute11((String)value);
        return;
      case ATTRIBUTE12:
        setAttribute12((String)value);
        return;
      case ATTRIBUTE13:
        setAttribute13((String)value);
        return;
      case ATTRIBUTE14:
        setAttribute14((String)value);
        return;
      case ATTRIBUTE15:
        setAttribute15((String)value);
        return;
      case ATTRIBUTE16:
        setAttribute16((String)value);
        return;
      case ATTRIBUTE17:
        setAttribute17((String)value);
        return;
      case ATTRIBUTE18:
        setAttribute18((String)value);
        return;
      case ATTRIBUTE19:
        setAttribute19((String)value);
        return;
      case ATTRIBUTE20:
        setAttribute20((String)value);
        return;
      case EMAILSPLINSTRUCTION:
        setEmailSplInstruction((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute EmailSplInstruction
   */
  public String getEmailSplInstruction()
  {
    return (String)getAttributeInternal(EMAILSPLINSTRUCTION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute EmailSplInstruction
   */
  public void setEmailSplInstruction(String value)
  {
    setAttributeInternal(EMAILSPLINSTRUCTION, value);
  }
}