package od.oracle.apps.xxcrm.cdh.ebl.server;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class EbillingParamModifyVORowImpl extends OAViewRowImpl 
{


  protected static final int PARAMNAME = 0;
  protected static final int PARAMDESCRIPTION = 1;
  protected static final int DEACTIVEPARAMFLAG = 2;
  protected static final int READFLAG = 3;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public EbillingParamModifyVORowImpl()
  {
  }

  /**
   * 
   * Gets XXCdhEblParamMapEO entity object.
   */
  public od.oracle.apps.xxcrm.cdh.ebl.schema.server.XXCdhEblParamMapEOImpl getXXCdhEblParamMapEO()
  {
    return (od.oracle.apps.xxcrm.cdh.ebl.schema.server.XXCdhEblParamMapEOImpl)getEntity(0);
  }

  /**
   * 
   * Gets the attribute value for PARAM_NAME using the alias name ParamName
   */
  public String getParamName()
  {
    return (String)getAttributeInternal(PARAMNAME);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for PARAM_NAME using the alias name ParamName
   */
  public void setParamName(String value)
  {
    setAttributeInternal(PARAMNAME, value);
  }

  /**
   * 
   * Gets the attribute value for PARAM_DESCRIPTION using the alias name ParamDescription
   */
  public String getParamDescription()
  {
    return (String)getAttributeInternal(PARAMDESCRIPTION);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for PARAM_DESCRIPTION using the alias name ParamDescription
   */
  public void setParamDescription(String value)
  {
    setAttributeInternal(PARAMDESCRIPTION, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PARAMNAME:
        return getParamName();
      case PARAMDESCRIPTION:
        return getParamDescription();
      case DEACTIVEPARAMFLAG:
        return getDeactiveParamFlag();
      case READFLAG:
        return getReadFlag();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PARAMNAME:
        setParamName((String)value);
        return;
      case PARAMDESCRIPTION:
        setParamDescription((String)value);
        return;
      case DEACTIVEPARAMFLAG:
        setDeactiveParamFlag((String)value);
        return;
      case READFLAG:
        setReadFlag((Boolean)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ReadFlag
   */
  public Boolean getReadFlag()
  {
    if(this.getParamName()!=null)
      return new Boolean(true);
    else
      return new Boolean(false);
    //return (Boolean)getAttributeInternal(READFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ReadFlag
   */
  public void setReadFlag(Boolean value)
  {
    setAttributeInternal(READFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for DEACTIVE_PARAM_FLAG using the alias name DeactiveParamFlag
   */
  public String getDeactiveParamFlag()
  {
    return (String)getAttributeInternal(DEACTIVEPARAMFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DEACTIVE_PARAM_FLAG using the alias name DeactiveParamFlag
   */
  public void setDeactiveParamFlag(String value)
  {
    setAttributeInternal(DEACTIVEPARAMFLAG, value);
  }
}