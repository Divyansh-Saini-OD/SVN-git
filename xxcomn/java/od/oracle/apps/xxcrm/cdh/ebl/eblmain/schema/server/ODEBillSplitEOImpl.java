package od.oracle.apps.xxcrm.cdh.ebl.eblmain.schema.server;


/*
  -- +===========================================================================+
  -- |                  Office Depot - eBilling Project                          |
  -- +===========================================================================+
  -- | Name        :  ODEBillSplitEOImpl                                         |
  -- | Description :                                                             |
  -- | This is the Entity Object for eBill Split                                 |
  -- |                                                                           |
  -- |                                                                           |
  -- |                                                                           |
  -- |Change Record:                                                             |
  -- |===============                                                            |
  -- |Version  Date        Author               Remarks                          |
  -- |======== =========== ================     ================================ |
  -- |1.0      23-DEC-2015 Sridevi K            Initial MOD 4B R3                |
  -- |2.0      16-FEB-2017 Havish K             Closing the leaked connection/   |
  -- |                                          statement                        |
  -- |===========================================================================|
  -- | Subversion Info:                                                          |
  -- | $HeadURL: $                                                               |
  -- | $Rev: $                                                                   |
  -- | $Date: $                                                                  |
  -- |                                                                           |
  -- +===========================================================================+
*/

import java.sql.SQLException;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OADBTransactionImpl;
import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;

import oracle.jdbc.OracleCallableStatement;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ODEBillSplitEOImpl extends OAEntityImpl {
    public static final int ATTRIBUTE1 = 0;
    public static final int ATTRIBUTE10 = 1;
    public static final int ATTRIBUTE11 = 2;
    public static final int ATTRIBUTE12 = 3;
    public static final int ATTRIBUTE13 = 4;
    public static final int ATTRIBUTE14 = 5;
    public static final int ATTRIBUTE15 = 6;
    public static final int ATTRIBUTE16 = 7;
    public static final int ATTRIBUTE17 = 8;
    public static final int ATTRIBUTE18 = 9;
    public static final int ATTRIBUTE19 = 10;
    public static final int ATTRIBUTE2 = 11;
    public static final int ATTRIBUTE20 = 12;
    public static final int ATTRIBUTE3 = 13;
    public static final int ATTRIBUTE4 = 14;
    public static final int ATTRIBUTE5 = 15;
    public static final int ATTRIBUTE6 = 16;
    public static final int ATTRIBUTE7 = 17;
    public static final int ATTRIBUTE8 = 18;
    public static final int ATTRIBUTE9 = 19;
    public static final int CREATEDBY = 20;
    public static final int CREATIONDATE = 21;
    public static final int CUSTACCOUNTID = 22;
    public static final int CUSTDOCID = 23;
    public static final int SPLITTYPE = 24;
    public static final int DELIMITER = 25;
    public static final int FIXEDPOSITION = 26;
    public static final int LASTUPDATEDBY = 27;
    public static final int LASTUPDATEDATE = 28;
    public static final int LASTUPDATELOGIN = 29;
    public static final int PROGRAMAPPLICATIONID = 30;
    public static final int PROGRAMID = 31;
    public static final int PROGRAMUPDATEDATE = 32;
    public static final int REQUESTID = 33;
    public static final int ROWID = 34;
    public static final int SPLITBASEFIELDID = 35;
    public static final int SPLITFIELD1LABEL = 36;
    public static final int SPLITFIELD2LABEL = 37;
    public static final int SPLITFIELD3LABEL = 38;
    public static final int SPLITFIELD4LABEL = 39;
    public static final int SPLITFIELD5LABEL = 40;
    public static final int SPLITFIELD6LABEL = 41;
    public static final int SPLITFIELDID = 42;
    public static final int WHUPDATEDATE = 43;


    private static OAEntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public ODEBillSplitEOImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxcrm.cdh.ebl.eblmain.schema.server.ODEBillSplitEO");
        }
        return mDefinitionObject;
    }

    /**Add attribute defaulting logic in this method.
     */
    public void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**Add Entity validation code in this method.
     */
    protected void validateEntity() {
        super.validateEntity();
    }

    /**Add locking logic here.
     */
    public void lock() {
    //    super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }

    /**Gets the attribute value for Attribute1, using the alias name Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as the attribute value for Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for Attribute10, using the alias name Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**Sets <code>value</code> as the attribute value for Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**Gets the attribute value for Attribute11, using the alias name Attribute11
     */
    public String getAttribute11() {
        return (String)getAttributeInternal(ATTRIBUTE11);
    }

    /**Sets <code>value</code> as the attribute value for Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**Gets the attribute value for Attribute12, using the alias name Attribute12
     */
    public String getAttribute12() {
        return (String)getAttributeInternal(ATTRIBUTE12);
    }

    /**Sets <code>value</code> as the attribute value for Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**Gets the attribute value for Attribute13, using the alias name Attribute13
     */
    public String getAttribute13() {
        return (String)getAttributeInternal(ATTRIBUTE13);
    }

    /**Sets <code>value</code> as the attribute value for Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**Gets the attribute value for Attribute14, using the alias name Attribute14
     */
    public String getAttribute14() {
        return (String)getAttributeInternal(ATTRIBUTE14);
    }

    /**Sets <code>value</code> as the attribute value for Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**Gets the attribute value for Attribute15, using the alias name Attribute15
     */
    public String getAttribute15() {
        return (String)getAttributeInternal(ATTRIBUTE15);
    }

    /**Sets <code>value</code> as the attribute value for Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**Gets the attribute value for Attribute16, using the alias name Attribute16
     */
    public String getAttribute16() {
        return (String)getAttributeInternal(ATTRIBUTE16);
    }

    /**Sets <code>value</code> as the attribute value for Attribute16
     */
    public void setAttribute16(String value) {
        setAttributeInternal(ATTRIBUTE16, value);
    }

    /**Gets the attribute value for Attribute17, using the alias name Attribute17
     */
    public String getAttribute17() {
        return (String)getAttributeInternal(ATTRIBUTE17);
    }

    /**Sets <code>value</code> as the attribute value for Attribute17
     */
    public void setAttribute17(String value) {
        setAttributeInternal(ATTRIBUTE17, value);
    }

    /**Gets the attribute value for Attribute18, using the alias name Attribute18
     */
    public String getAttribute18() {
        return (String)getAttributeInternal(ATTRIBUTE18);
    }

    /**Sets <code>value</code> as the attribute value for Attribute18
     */
    public void setAttribute18(String value) {
        setAttributeInternal(ATTRIBUTE18, value);
    }

    /**Gets the attribute value for Attribute19, using the alias name Attribute19
     */
    public String getAttribute19() {
        return (String)getAttributeInternal(ATTRIBUTE19);
    }

    /**Sets <code>value</code> as the attribute value for Attribute19
     */
    public void setAttribute19(String value) {
        setAttributeInternal(ATTRIBUTE19, value);
    }

    /**Gets the attribute value for Attribute2, using the alias name Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as the attribute value for Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for Attribute20, using the alias name Attribute20
     */
    public String getAttribute20() {
        return (String)getAttributeInternal(ATTRIBUTE20);
    }

    /**Sets <code>value</code> as the attribute value for Attribute20
     */
    public void setAttribute20(String value) {
        setAttributeInternal(ATTRIBUTE20, value);
    }

    /**Gets the attribute value for Attribute3, using the alias name Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as the attribute value for Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for Attribute4, using the alias name Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as the attribute value for Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for Attribute5, using the alias name Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as the attribute value for Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**Gets the attribute value for Attribute6, using the alias name Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**Sets <code>value</code> as the attribute value for Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**Gets the attribute value for Attribute7, using the alias name Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**Sets <code>value</code> as the attribute value for Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**Gets the attribute value for Attribute8, using the alias name Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**Sets <code>value</code> as the attribute value for Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**Gets the attribute value for Attribute9, using the alias name Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**Sets <code>value</code> as the attribute value for Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**Gets the attribute value for CustAccountId, using the alias name CustAccountId
     */
    public Number getCustAccountId() {
        return (Number)getAttributeInternal(CUSTACCOUNTID);
    }

    /**Sets <code>value</code> as the attribute value for CustAccountId
     */
    public void setCustAccountId(Number value) {
        setAttributeInternal(CUSTACCOUNTID, value);
    }

    /**Gets the attribute value for CustDocId, using the alias name CustDocId
     */
    public Number getCustDocId() {
        return (Number)getAttributeInternal(CUSTDOCID);
    }

    /**Sets <code>value</code> as the attribute value for CustDocId
     */
    public void setCustDocId(Number value) {
        setAttributeInternal(CUSTDOCID, value);
    }


/**Gets the attribute value for Delimiter, using the alias name Delimiter
     */
    public String getSplitType() {
        return (String)getAttributeInternal(SPLITTYPE);
    }

    /**Sets <code>value</code> as the attribute value for Delimiter
     */
    public void setSplitType(String value) {
        setAttributeInternal(SPLITTYPE, value);
    }


    /**Gets the attribute value for Delimiter, using the alias name Delimiter
     */
    public String getDelimiter() {
        return (String)getAttributeInternal(DELIMITER);
    }

    /**Sets <code>value</code> as the attribute value for Delimiter
     */
    public void setDelimiter(String value) {
        setAttributeInternal(DELIMITER, value);
    }

    /**Gets the attribute value for FixedPosition, using the alias name FixedPosition
     */
    public String getFixedPosition() {
        return (String)getAttributeInternal(FIXEDPOSITION);
    }

    /**Sets <code>value</code> as the attribute value for FixedPosition
     */
    public void setFixedPosition(String value) {
        setAttributeInternal(FIXEDPOSITION, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**Gets the attribute value for ProgramApplicationId, using the alias name ProgramApplicationId
     */
    public Number getProgramApplicationId() {
        return (Number)getAttributeInternal(PROGRAMAPPLICATIONID);
    }

    /**Sets <code>value</code> as the attribute value for ProgramApplicationId
     */
    public void setProgramApplicationId(Number value) {
        setAttributeInternal(PROGRAMAPPLICATIONID, value);
    }

    /**Gets the attribute value for ProgramId, using the alias name ProgramId
     */
    public Number getProgramId() {
        return (Number)getAttributeInternal(PROGRAMID);
    }

    /**Sets <code>value</code> as the attribute value for ProgramId
     */
    public void setProgramId(Number value) {
        setAttributeInternal(PROGRAMID, value);
    }

    /**Gets the attribute value for ProgramUpdateDate, using the alias name ProgramUpdateDate
     */
    public Date getProgramUpdateDate() {
        return (Date)getAttributeInternal(PROGRAMUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for ProgramUpdateDate
     */
    public void setProgramUpdateDate(Date value) {
        setAttributeInternal(PROGRAMUPDATEDATE, value);
    }

    /**Gets the attribute value for RequestId, using the alias name RequestId
     */
    public Number getRequestId() {
        return (Number)getAttributeInternal(REQUESTID);
    }

    /**Sets <code>value</code> as the attribute value for RequestId
     */
    public void setRequestId(Number value) {
        setAttributeInternal(REQUESTID, value);
    }

    /**Gets the attribute value for RowID, using the alias name RowID
     */
    public RowID getRowID() {
        return (RowID)getAttributeInternal(ROWID);
    }

    /**Gets the attribute value for SplitBaseFieldId, using the alias name SplitBaseFieldId
     */
    public Number getSplitBaseFieldId() {
        return (Number)getAttributeInternal(SPLITBASEFIELDID);
    }

    /**Sets <code>value</code> as the attribute value for SplitBaseFieldId
     */
    public void setSplitBaseFieldId(Number value) {
        setAttributeInternal(SPLITBASEFIELDID, value);
    }

    /**Gets the attribute value for SplitField1Label, using the alias name SplitField1Label
     */
    public String getSplitField1Label() {
        return (String)getAttributeInternal(SPLITFIELD1LABEL);
    }

    /**Sets <code>value</code> as the attribute value for SplitField1Label
     */
    public void setSplitField1Label(String value) {
        setAttributeInternal(SPLITFIELD1LABEL, value);
    }

    /**Gets the attribute value for SplitField2Label, using the alias name SplitField2Label
     */
    public String getSplitField2Label() {
        return (String)getAttributeInternal(SPLITFIELD2LABEL);
    }

    /**Sets <code>value</code> as the attribute value for SplitField2Label
     */
    public void setSplitField2Label(String value) {
        setAttributeInternal(SPLITFIELD2LABEL, value);
    }

    /**Gets the attribute value for SplitField3Label, using the alias name SplitField3Label
     */
    public String getSplitField3Label() {
        return (String)getAttributeInternal(SPLITFIELD3LABEL);
    }

    /**Sets <code>value</code> as the attribute value for SplitField3Label
     */
    public void setSplitField3Label(String value) {
        setAttributeInternal(SPLITFIELD3LABEL, value);
    }

    /**Gets the attribute value for SplitField4Label, using the alias name SplitField4Label
     */
    public String getSplitField4Label() {
        return (String)getAttributeInternal(SPLITFIELD4LABEL);
    }

    /**Sets <code>value</code> as the attribute value for SplitField4Label
     */
    public void setSplitField4Label(String value) {
        setAttributeInternal(SPLITFIELD4LABEL, value);
    }

    /**Gets the attribute value for SplitField5Label, using the alias name SplitField5Label
     */
    public String getSplitField5Label() {
        return (String)getAttributeInternal(SPLITFIELD5LABEL);
    }

    /**Sets <code>value</code> as the attribute value for SplitField5Label
     */
    public void setSplitField5Label(String value) {
        setAttributeInternal(SPLITFIELD5LABEL, value);
    }

    /**Gets the attribute value for SplitField6Label, using the alias name SplitField6Label
     */
    public String getSplitField6Label() {
        return (String)getAttributeInternal(SPLITFIELD6LABEL);
    }

    /**Sets <code>value</code> as the attribute value for SplitField6Label
     */
    public void setSplitField6Label(String value) {
        setAttributeInternal(SPLITFIELD6LABEL, value);
    }

    /**Gets the attribute value for SplitFieldId, using the alias name SplitFieldId
     */
    public Number getSplitFieldId() {
        return (Number)getAttributeInternal(SPLITFIELDID);
    }

    /**Sets <code>value</code> as the attribute value for SplitFieldId
     */
    public void setSplitFieldId(Number value) {
        setAttributeInternal(SPLITFIELDID, value);
    }

    /**Gets the attribute value for WhUpdateDate, using the alias name WhUpdateDate
     */
    public Date getWhUpdateDate() {
        return (Date)getAttributeInternal(WHUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for WhUpdateDate
     */
    public void setWhUpdateDate(Date value) {
        setAttributeInternal(WHUPDATEDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE10:
            return getAttribute10();
        case ATTRIBUTE11:
            return getAttribute11();
        case ATTRIBUTE12:
            return getAttribute12();
        case ATTRIBUTE13:
            return getAttribute13();
        case ATTRIBUTE14:
            return getAttribute14();
        case ATTRIBUTE15:
            return getAttribute15();
        case ATTRIBUTE16:
            return getAttribute16();
        case ATTRIBUTE17:
            return getAttribute17();
        case ATTRIBUTE18:
            return getAttribute18();
        case ATTRIBUTE19:
            return getAttribute19();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE20:
            return getAttribute20();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        case ATTRIBUTE6:
            return getAttribute6();
        case ATTRIBUTE7:
            return getAttribute7();
        case ATTRIBUTE8:
            return getAttribute8();
        case ATTRIBUTE9:
            return getAttribute9();
        case CREATEDBY:
            return getCreatedBy();
        case CREATIONDATE:
            return getCreationDate();
        case CUSTACCOUNTID:
            return getCustAccountId();
        case CUSTDOCID:
            return getCustDocId();
        case SPLITTYPE:
            return getSplitType();
        case DELIMITER:
            return getDelimiter();
        case FIXEDPOSITION:
            return getFixedPosition();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        case PROGRAMAPPLICATIONID:
            return getProgramApplicationId();
        case PROGRAMID:
            return getProgramId();
        case PROGRAMUPDATEDATE:
            return getProgramUpdateDate();
        case REQUESTID:
            return getRequestId();
        case ROWID:
            return getRowID();
        case SPLITBASEFIELDID:
            return getSplitBaseFieldId();
        case SPLITFIELD1LABEL:
            return getSplitField1Label();
        case SPLITFIELD2LABEL:
            return getSplitField2Label();
        case SPLITFIELD3LABEL:
            return getSplitField3Label();
        case SPLITFIELD4LABEL:
            return getSplitField4Label();
        case SPLITFIELD5LABEL:
            return getSplitField5Label();
        case SPLITFIELD6LABEL:
            return getSplitField6Label();
        case SPLITFIELDID:
            return getSplitFieldId();
        case WHUPDATEDATE:
            return getWhUpdateDate();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE10:
            setAttribute10((String)value);
            return;
        case ATTRIBUTE11:
            setAttribute11((String)value);
            return;
        case ATTRIBUTE12:
            setAttribute12((String)value);
            return;
        case ATTRIBUTE13:
            setAttribute13((String)value);
            return;
        case ATTRIBUTE14:
            setAttribute14((String)value);
            return;
        case ATTRIBUTE15:
            setAttribute15((String)value);
            return;
        case ATTRIBUTE16:
            setAttribute16((String)value);
            return;
        case ATTRIBUTE17:
            setAttribute17((String)value);
            return;
        case ATTRIBUTE18:
            setAttribute18((String)value);
            return;
        case ATTRIBUTE19:
            setAttribute19((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE20:
            setAttribute20((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        case ATTRIBUTE6:
            setAttribute6((String)value);
            return;
        case ATTRIBUTE7:
            setAttribute7((String)value);
            return;
        case ATTRIBUTE8:
            setAttribute8((String)value);
            return;
        case ATTRIBUTE9:
            setAttribute9((String)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case CUSTACCOUNTID:
            setCustAccountId((Number)value);
            return;
        case CUSTDOCID:
            setCustDocId((Number)value);
            return;
        case SPLITTYPE:
            setSplitType((String)value);
            return;
        case DELIMITER:
            setDelimiter((String)value);
            return;
        case FIXEDPOSITION:
            setFixedPosition((String)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        case PROGRAMAPPLICATIONID:
            setProgramApplicationId((Number)value);
            return;
        case PROGRAMID:
            setProgramId((Number)value);
            return;
        case PROGRAMUPDATEDATE:
            setProgramUpdateDate((Date)value);
            return;
        case REQUESTID:
            setRequestId((Number)value);
            return;
        case SPLITBASEFIELDID:
            setSplitBaseFieldId((Number)value);
            return;
        case SPLITFIELD1LABEL:
            setSplitField1Label((String)value);
            return;
        case SPLITFIELD2LABEL:
            setSplitField2Label((String)value);
            return;
        case SPLITFIELD3LABEL:
            setSplitField3Label((String)value);
            return;
        case SPLITFIELD4LABEL:
            setSplitField4Label((String)value);
            return;
        case SPLITFIELD5LABEL:
            setSplitField5Label((String)value);
            return;
        case SPLITFIELD6LABEL:
            setSplitField6Label((String)value);
            return;
        case SPLITFIELDID:
            setSplitFieldId((Number)value);
            return;
        case WHUPDATEDATE:
            setWhUpdateDate((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
    
    
    //Overridden method to call custom PLSQL API

    public void insertRow() {
		OracleCallableStatement oraclecallablestatement = null;
        try {
            OADBTransactionImpl oadbtransactionimpl = 
                (OADBTransactionImpl)getDBTransaction();
            String s = 
                "BEGIN" + " xx_cdh_ebl_split_pkg.insert_row(" + 
                  "  p_split_field_id           => :1 " + 
                  " ,p_split_base_field_id      => :2 " + 
                  " ,p_fixed_position           => :3 " + 
                  " ,p_delimiter                => :4 " + 
                  " ,p_split_field1_label       => :5 " + 
                  " ,p_split_field2_label       => :6 " + 
                  " ,p_split_field3_label       => :7 " + 
                  " ,p_split_field4_label       => :8 " + 
                  " ,p_split_field5_label       => :9 " + 
                  " ,p_split_field6_label       => :10 " + 
                  " ,p_cust_account_id          => :11 " + 
                  " ,p_cust_doc_id             => :12 " + 
                " ,p_attribute1          => :13 " + 
                " ,p_attribute2          => :14 " + 
                " ,p_attribute3          => :15 " + 
                " ,p_attribute4          => :16 " + 
                " ,p_attribute5          => :17 " + 
                " ,p_attribute6          => :18 " + 
                " ,p_attribute7          => :19 " + 
                " ,p_attribute8          => :20 " + 
                " ,p_attribute9          => :21 " + 
                " ,p_attribute10         => :22 " + 
                " ,p_attribute11         => :23 " + 
                " ,p_attribute12         => :24 " + 
                " ,p_attribute13         => :25 " + 
                " ,p_attribute14         => :26 " + 
                " ,p_attribute15         => :27 " + 
                " ,p_attribute16         => :28 " + 
                " ,p_attribute17         => :29 " + 
                " ,p_attribute18        => :30 " + 
                " ,p_attribute19         => :31 " + 
                " ,p_attribute20         => :32 " +
            " ,p_split_type         => :33); " 
            + " END;";
            
            OADBTransaction oadbtransaction = getOADBTransaction();
            
            oraclecallablestatement = 
                (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, 
                                                                                     -1);
            oraclecallablestatement.setNUMBER(1, this.getSplitFieldId());
            oraclecallablestatement.setNUMBER(2, this.getSplitBaseFieldId());
            oraclecallablestatement.setString(3, this.getFixedPosition());
            
            oraclecallablestatement.setString(4, this.getDelimiter());
            oraclecallablestatement.setString(5, this.getSplitField1Label());
            oraclecallablestatement.setString(6, this.getSplitField2Label());
            oraclecallablestatement.setString(7, this.getSplitField3Label());
            oraclecallablestatement.setString(8, this.getSplitField4Label());
            oraclecallablestatement.setString(9, this.getSplitField5Label());
            oraclecallablestatement.setString(10, this.getSplitField6Label());
            
            oraclecallablestatement.setNUMBER(11, this.getCustAccountId());
            oraclecallablestatement.setNUMBER(12, this.getCustDocId());
            
            oraclecallablestatement.setString(13, this.getAttribute1());
            oraclecallablestatement.setString(14, this.getAttribute2());
            oraclecallablestatement.setString(15, this.getAttribute3());
            oraclecallablestatement.setString(16, this.getAttribute4());
            oraclecallablestatement.setString(17, this.getAttribute5());
            oraclecallablestatement.setString(18, this.getAttribute6());
            oraclecallablestatement.setString(19, this.getAttribute7());
            oraclecallablestatement.setString(20, this.getAttribute8());
            oraclecallablestatement.setString(21, this.getAttribute9());
            oraclecallablestatement.setString(22, this.getAttribute10());
            oraclecallablestatement.setString(23, this.getAttribute11());
            oraclecallablestatement.setString(24, this.getAttribute12());
            oraclecallablestatement.setString(25, this.getAttribute13());
            oraclecallablestatement.setString(26, this.getAttribute14());
            oraclecallablestatement.setString(27, this.getAttribute15());
            oraclecallablestatement.setString(28, this.getAttribute16());
            oraclecallablestatement.setString(29, this.getAttribute17());
            oraclecallablestatement.setString(30, this.getAttribute18());
            oraclecallablestatement.setString(31, this.getAttribute19());
            oraclecallablestatement.setString(32, this.getAttribute20());
            oraclecallablestatement.setString(33, this.getSplitType() );


            oraclecallablestatement.execute();
        } catch (SQLException sqlexception) {
            throw OAException.wrapperException(sqlexception);
        } catch (Exception exception) {
            throw OAException.wrapperException(exception);
        }
		finally
        {
           try{
                if(oraclecallablestatement != null)
                   oraclecallablestatement.close();
              }
		   catch(Exception e){}
        }
    } //Insert Row
    
    
    
     public void updateRow()
        {
			OracleCallableStatement oraclecallablestatement = null;
            try
            {
                OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getDBTransaction();
                
                String s = 
                    "BEGIN" + " xx_cdh_ebl_split_pkg.update_row(" + 
                    "  p_split_field_id           => :1 " + 
                    " ,p_split_base_field_id      => :2 " + 
                    " ,p_fixed_position           => :3 " + 
                    " ,p_delimiter                => :4 " + 
                    " ,p_split_field1_label       => :5 " + 
                    " ,p_split_field2_label       => :6 " + 
                    " ,p_split_field3_label       => :7 " + 
                    " ,p_split_field4_label       => :8 " + 
                    " ,p_split_field5_label       => :9 " + 
                    " ,p_split_field6_label       => :10 " + 
                    " ,p_cust_account_id          => :11 " + 
                    " ,p_cust_doc_id             => :12 " + 
                    " ,p_attribute1          => :13 " + 
                    " ,p_attribute2          => :14 " + 
                    " ,p_attribute3          => :15 " + 
                    " ,p_attribute4          => :16 " + 
                    " ,p_attribute5          => :17 " + 
                    " ,p_attribute6          => :18 " + 
                    " ,p_attribute7          => :19" + 
                    " ,p_attribute8          => :20" + 
                    " ,p_attribute9          => :21" + 
                    " ,p_attribute10         => :22" + 
                    " ,p_attribute11         => :23" + 
                    " ,p_attribute12         => :24" + 
                    " ,p_attribute13         => :25 " + 
                    " ,p_attribute14         => :26 " + 
                    " ,p_attribute15         => :27 " + 
                    " ,p_attribute16         => :28 " + 
                    " ,p_attribute17         => :29 " + 
                    " ,p_attribute18        => :30 " + 
                    " ,p_attribute19         => :31 " + 
                    " ,p_attribute20         => :32 " +
                    " ,p_split_type         => :33); " 
                + " END;";
                
                OADBTransaction oadbtransaction = getOADBTransaction();
                
               oraclecallablestatement = 
                    (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, 
                                                                                         -1);
                    oraclecallablestatement.setNUMBER(1, this.getSplitFieldId());
                    oraclecallablestatement.setNUMBER(2, this.getSplitBaseFieldId());
                    oraclecallablestatement.setString(3, this.getFixedPosition());
                    
                    oraclecallablestatement.setString(4, this.getDelimiter());
                    oraclecallablestatement.setString(5, this.getSplitField1Label());
                    oraclecallablestatement.setString(6, this.getSplitField2Label());
                    oraclecallablestatement.setString(7, this.getSplitField3Label());
                    oraclecallablestatement.setString(8, this.getSplitField4Label());
                    oraclecallablestatement.setString(9, this.getSplitField5Label());
                    oraclecallablestatement.setString(10, this.getSplitField6Label());
                    
                    oraclecallablestatement.setNUMBER(11, this.getCustAccountId());
                    oraclecallablestatement.setNUMBER(12, this.getCustDocId());
                    
                    oraclecallablestatement.setString(13, this.getAttribute1());
                    oraclecallablestatement.setString(14, this.getAttribute2());
                    oraclecallablestatement.setString(15, this.getAttribute3());
                    oraclecallablestatement.setString(16, this.getAttribute4());
                    oraclecallablestatement.setString(17, this.getAttribute5());
                    oraclecallablestatement.setString(18, this.getAttribute6());
                    oraclecallablestatement.setString(19, this.getAttribute7());
                    oraclecallablestatement.setString(20, this.getAttribute8());
                    oraclecallablestatement.setString(21, this.getAttribute9());
                    oraclecallablestatement.setString(22, this.getAttribute10());
                    oraclecallablestatement.setString(23, this.getAttribute11());
                    oraclecallablestatement.setString(24, this.getAttribute12());
                    oraclecallablestatement.setString(25, this.getAttribute13());
                    oraclecallablestatement.setString(26, this.getAttribute14());
                    oraclecallablestatement.setString(27, this.getAttribute15());
                    oraclecallablestatement.setString(28, this.getAttribute16());
                    oraclecallablestatement.setString(29, this.getAttribute17());
                    oraclecallablestatement.setString(30, this.getAttribute18());
                    oraclecallablestatement.setString(31, this.getAttribute19());
                    oraclecallablestatement.setString(32, this.getAttribute20());
                    oraclecallablestatement.setString(33, this.getSplitType());


                oraclecallablestatement.execute();
                } catch (SQLException sqlexception) {
                throw OAException.wrapperException(sqlexception);
                } catch (Exception exception) {
                throw OAException.wrapperException(exception);
                }
				finally
				{
				   try{
						if(oraclecallablestatement != null)
						   oraclecallablestatement.close();
					  }
				   catch(Exception e){}
				}
        }//Update Row  
        
       //Delete Row
       public void deleteRow()
       {
		  OracleCallableStatement oraclecallablestatement = null;
          try
          {
              OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getDBTransaction();
                
              String s= "BEGIN"
                          +" xx_cdh_ebl_split_pkg.delete_row(p_split_field_id    =>   :1 "
                          +" ,p_cust_doc_id                        =>:2);"
                          +" END;" ;
              oraclecallablestatement = (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, -1);
              oraclecallablestatement.setNUMBER(1,this.getSplitFieldId());
              oraclecallablestatement.setNUMBER(2,this.getCustDocId());
              oraclecallablestatement.execute();
          }
          catch(SQLException sqlexception)
          {
              throw OAException.wrapperException(sqlexception);
          }
          catch(Exception exception)
          {
              throw OAException.wrapperException(exception);
          }
		  finally
        {
           try{
                if(oraclecallablestatement != null)
                   oraclecallablestatement.close();
              }
		   catch(Exception e){}
        }

      }//Delete Row  
    
    
    
}
