package od.oracle.apps.xxcrm.cdh.ebl.eblmain.schema.server;

/*
  -- +===========================================================================+
  -- |                  Office Depot - eBilling Project                          |
  -- |                         WIPRO/Office Depot                                |
  -- +===========================================================================+
  -- | Name        :  ODEBillFileNameEOImpl                                      |
  -- | Description :                                                             |
  -- | This is the Entity Object for eBill File Name Parameter Details           |
  -- |                                                                           |
  -- |                                                                           |
  -- |                                                                           |
  -- |Change Record:                                                             |
  -- |===============                                                            |
  -- |Version  Date        Author               Remarks                          |
  -- |======== =========== ================     ================================ |
  -- |DRAFT 1A 15-JAN-2010 Devi Viswanathan     Initial draft version            |
  -- |1.1      12-Aug-2013 Darshini             I2186 - Modified for R12 Upgrade |
  -- |                                          Retrofit                         |
  -- |1.2      16-FEB-2017 Havish Kasina        Closing the leaked connection/   |
  -- |                                          statement                        | 
  -- |                                                                           |
  -- |===========================================================================|
  -- | Subversion Info:                                                          |
  -- | $HeadURL$                                                               |
  -- | $Rev$                                                                   |
  -- | $Date$                                                                  |
  -- |                                                                           |
  -- +===========================================================================+
*/

import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------
//Added by Mangala
import oracle.apps.fnd.framework.server.OAPlsqlEntityImpl;
import od.oracle.apps.xxcrm.cdh.ebl.server.ODUtil;
import java.sql.SQLException;
/*Commented and added by Darshini for R12 Upgrade Retrofit
import oracle.jdbc.driver.OracleCallableStatement;*/
import oracle.jdbc.OracleCallableStatement;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.OAAttrValException;
import oracle.apps.fnd.framework.OARowValException;
import oracle.apps.fnd.framework.server.OADBTransactionImpl;

import oracle.apps.fnd.framework.server.OADBTransaction;
/*Commented and added by Darshini for R12 Upgrade Retrofit
import oracle.jdbc.driver.OraclePreparedStatement;*/
import oracle.jdbc.OraclePreparedStatement;

import oracle.jdbc.OracleResultSet;
import od.oracle.apps.xxcrm.cdh.ebl.server.ODUtil;
import java.sql.Types;
import com.sun.java.util.collections.ArrayList;
import java.sql.ResultSet;
import oracle.jbo.Key;


public class ODEBillFileNameEOImpl extends OAPlsqlEntityImpl
{
  protected static final int EBLFILENAMEID = 0;
  protected static final int CUSTDOCID = 1;
  protected static final int FILENAMEORDERSEQ = 2;
  protected static final int FIELDID = 3;
  protected static final int CONSTANTVALUE = 4;
  protected static final int DEFAULTIFNULL = 5;
  protected static final int COMMENTS = 6;
  protected static final int ATTRIBUTE1 = 7;
  protected static final int ATTRIBUTE2 = 8;
  protected static final int ATTRIBUTE3 = 9;
  protected static final int ATTRIBUTE4 = 10;
  protected static final int ATTRIBUTE5 = 11;
  protected static final int ATTRIBUTE6 = 12;
  protected static final int ATTRIBUTE7 = 13;
  protected static final int ATTRIBUTE8 = 14;
  protected static final int ATTRIBUTE9 = 15;
  protected static final int ATTRIBUTE10 = 16;
  protected static final int ATTRIBUTE11 = 17;
  protected static final int ATTRIBUTE12 = 18;
  protected static final int ATTRIBUTE13 = 19;
  protected static final int ATTRIBUTE14 = 20;
  protected static final int ATTRIBUTE15 = 21;
  protected static final int ATTRIBUTE16 = 22;
  protected static final int ATTRIBUTE17 = 23;
  protected static final int ATTRIBUTE18 = 24;
  protected static final int ATTRIBUTE19 = 25;
  protected static final int ATTRIBUTE20 = 26;
  protected static final int LASTUPDATEDATE = 27;
  protected static final int LASTUPDATEDBY = 28;
  protected static final int CREATIONDATE = 29;
  protected static final int CREATEDBY = 30;
  protected static final int LASTUPDATELOGIN = 31;
  protected static final int REQUESTID = 32;
  protected static final int PROGRAMAPPLICATIONID = 33;
  protected static final int PROGRAMID = 34;
  protected static final int PROGRAMUPDATEDATE = 35;
  protected static final int WHUPDATEDATE = 36;







  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODEBillFileNameEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxcrm.cdh.ebl.eblmain.schema.server.ODEBillFileNameEO");
    }
    return mDefinitionObject;
  }








  /**
   * 
   * Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    super.create(attributeList);

  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  } //End of validation Package

  /**
   * 
   * Add locking logic here.
   */
  public void lock()
  {
  //  super.lock();
  }

  /**
   * 
   * Custom DML update/insert/delete logic here.
   */
  /* Commented by Devi
  protected void doDML(int operation, TransactionEvent e)
  {
    super.doDML(operation, e);
  }
  */
  /**
   * 
   * Gets the attribute value for EblFileNameId, using the alias name EblFileNameId
   */
  public Number getEblFileNameId()
  {
    return (Number)getAttributeInternal(EBLFILENAMEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EblFileNameId
   */
  public void setEblFileNameId(Number value)
  {
    setAttributeInternal(EBLFILENAMEID, value);
  }

  /**
   * 
   * Gets the attribute value for CustDocId, using the alias name CustDocId
   */
  public Number getCustDocId()
  {
    return (Number)getAttributeInternal(CUSTDOCID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CustDocId
   */
  public void setCustDocId(Number value)
  {
    setAttributeInternal(CUSTDOCID, value);
  }

  /**
   * 
   * Gets the attribute value for FileNameOrderSeq, using the alias name FileNameOrderSeq
   */
  public Number getFileNameOrderSeq()
  {
    return (Number)getAttributeInternal(FILENAMEORDERSEQ);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FileNameOrderSeq
   */
  public void setFileNameOrderSeq(Number value)
  {
    setAttributeInternal(FILENAMEORDERSEQ, value);
  }

  /**
   * 
   * Gets the attribute value for FieldId, using the alias name FieldId
   */
  public Number getFieldId()
  {
    return (Number)getAttributeInternal(FIELDID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FieldId
   */
  public void setFieldId(Number value)
  {
    setAttributeInternal(FIELDID, value);
  }

  /**
   * 
   * Gets the attribute value for ConstantValue, using the alias name ConstantValue
   */
  public String getConstantValue()
  {
    return (String)getAttributeInternal(CONSTANTVALUE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ConstantValue
   */
  public void setConstantValue(String value)
  {
    setAttributeInternal(CONSTANTVALUE, value);
  }

  /**
   * 
   * Gets the attribute value for DefaultIfNull, using the alias name DefaultIfNull
   */
  public String getDefaultIfNull()
  {
    return (String)getAttributeInternal(DEFAULTIFNULL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DefaultIfNull
   */
  public void setDefaultIfNull(String value)
  {
    setAttributeInternal(DEFAULTIFNULL, value);
  }

  /**
   * 
   * Gets the attribute value for Comments, using the alias name Comments
   */
  public String getComments()
  {
    return (String)getAttributeInternal(COMMENTS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Comments
   */
  public void setComments(String value)
  {
    setAttributeInternal(COMMENTS, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute1, using the alias name Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute2, using the alias name Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute3, using the alias name Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute4, using the alias name Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute5, using the alias name Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute6, using the alias name Attribute6
   */
  public String getAttribute6()
  {
    return (String)getAttributeInternal(ATTRIBUTE6);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute6
   */
  public void setAttribute6(String value)
  {
    setAttributeInternal(ATTRIBUTE6, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute7, using the alias name Attribute7
   */
  public String getAttribute7()
  {
    return (String)getAttributeInternal(ATTRIBUTE7);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute7
   */
  public void setAttribute7(String value)
  {
    setAttributeInternal(ATTRIBUTE7, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute8, using the alias name Attribute8
   */
  public String getAttribute8()
  {
    return (String)getAttributeInternal(ATTRIBUTE8);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute8
   */
  public void setAttribute8(String value)
  {
    setAttributeInternal(ATTRIBUTE8, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute9, using the alias name Attribute9
   */
  public String getAttribute9()
  {
    return (String)getAttributeInternal(ATTRIBUTE9);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute9
   */
  public void setAttribute9(String value)
  {
    setAttributeInternal(ATTRIBUTE9, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute10, using the alias name Attribute10
   */
  public String getAttribute10()
  {
    return (String)getAttributeInternal(ATTRIBUTE10);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute10
   */
  public void setAttribute10(String value)
  {
    setAttributeInternal(ATTRIBUTE10, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute11, using the alias name Attribute11
   */
  public String getAttribute11()
  {
    return (String)getAttributeInternal(ATTRIBUTE11);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute11
   */
  public void setAttribute11(String value)
  {
    setAttributeInternal(ATTRIBUTE11, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute12, using the alias name Attribute12
   */
  public String getAttribute12()
  {
    return (String)getAttributeInternal(ATTRIBUTE12);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute12
   */
  public void setAttribute12(String value)
  {
    setAttributeInternal(ATTRIBUTE12, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute13, using the alias name Attribute13
   */
  public String getAttribute13()
  {
    return (String)getAttributeInternal(ATTRIBUTE13);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute13
   */
  public void setAttribute13(String value)
  {
    setAttributeInternal(ATTRIBUTE13, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute14, using the alias name Attribute14
   */
  public String getAttribute14()
  {
    return (String)getAttributeInternal(ATTRIBUTE14);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute14
   */
  public void setAttribute14(String value)
  {
    setAttributeInternal(ATTRIBUTE14, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute15, using the alias name Attribute15
   */
  public String getAttribute15()
  {
    return (String)getAttributeInternal(ATTRIBUTE15);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute15
   */
  public void setAttribute15(String value)
  {
    setAttributeInternal(ATTRIBUTE15, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute16, using the alias name Attribute16
   */
  public String getAttribute16()
  {
    return (String)getAttributeInternal(ATTRIBUTE16);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute16
   */
  public void setAttribute16(String value)
  {
    setAttributeInternal(ATTRIBUTE16, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute17, using the alias name Attribute17
   */
  public String getAttribute17()
  {
    return (String)getAttributeInternal(ATTRIBUTE17);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute17
   */
  public void setAttribute17(String value)
  {
    setAttributeInternal(ATTRIBUTE17, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute18, using the alias name Attribute18
   */
  public String getAttribute18()
  {
    return (String)getAttributeInternal(ATTRIBUTE18);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute18
   */
  public void setAttribute18(String value)
  {
    setAttributeInternal(ATTRIBUTE18, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute19, using the alias name Attribute19
   */
  public String getAttribute19()
  {
    return (String)getAttributeInternal(ATTRIBUTE19);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute19
   */
  public void setAttribute19(String value)
  {
    setAttributeInternal(ATTRIBUTE19, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute20, using the alias name Attribute20
   */
  public String getAttribute20()
  {
    return (String)getAttributeInternal(ATTRIBUTE20);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute20
   */
  public void setAttribute20(String value)
  {
    setAttributeInternal(ATTRIBUTE20, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for RequestId, using the alias name RequestId
   */
  public Number getRequestId()
  {
    return (Number)getAttributeInternal(REQUESTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RequestId
   */
  public void setRequestId(Number value)
  {
    setAttributeInternal(REQUESTID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramApplicationId, using the alias name ProgramApplicationId
   */
  public Number getProgramApplicationId()
  {
    return (Number)getAttributeInternal(PROGRAMAPPLICATIONID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramApplicationId
   */
  public void setProgramApplicationId(Number value)
  {
    setAttributeInternal(PROGRAMAPPLICATIONID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramId, using the alias name ProgramId
   */
  public Number getProgramId()
  {
    return (Number)getAttributeInternal(PROGRAMID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramId
   */
  public void setProgramId(Number value)
  {
    setAttributeInternal(PROGRAMID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramUpdateDate, using the alias name ProgramUpdateDate
   */
  public Date getProgramUpdateDate()
  {
    return (Date)getAttributeInternal(PROGRAMUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramUpdateDate
   */
  public void setProgramUpdateDate(Date value)
  {
    setAttributeInternal(PROGRAMUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for WhUpdateDate, using the alias name WhUpdateDate
   */
  public Date getWhUpdateDate()
  {
    return (Date)getAttributeInternal(WHUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WhUpdateDate
   */
  public void setWhUpdateDate(Date value)
  {
    setAttributeInternal(WHUPDATEDATE, value);
  }

  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case EBLFILENAMEID:
        return getEblFileNameId();
      case CUSTDOCID:
        return getCustDocId();
      case FILENAMEORDERSEQ:
        return getFileNameOrderSeq();
      case FIELDID:
        return getFieldId();
      case CONSTANTVALUE:
        return getConstantValue();
      case DEFAULTIFNULL:
        return getDefaultIfNull();
      case COMMENTS:
        return getComments();
      case ATTRIBUTE1:
        return getAttribute1();
      case ATTRIBUTE2:
        return getAttribute2();
      case ATTRIBUTE3:
        return getAttribute3();
      case ATTRIBUTE4:
        return getAttribute4();
      case ATTRIBUTE5:
        return getAttribute5();
      case ATTRIBUTE6:
        return getAttribute6();
      case ATTRIBUTE7:
        return getAttribute7();
      case ATTRIBUTE8:
        return getAttribute8();
      case ATTRIBUTE9:
        return getAttribute9();
      case ATTRIBUTE10:
        return getAttribute10();
      case ATTRIBUTE11:
        return getAttribute11();
      case ATTRIBUTE12:
        return getAttribute12();
      case ATTRIBUTE13:
        return getAttribute13();
      case ATTRIBUTE14:
        return getAttribute14();
      case ATTRIBUTE15:
        return getAttribute15();
      case ATTRIBUTE16:
        return getAttribute16();
      case ATTRIBUTE17:
        return getAttribute17();
      case ATTRIBUTE18:
        return getAttribute18();
      case ATTRIBUTE19:
        return getAttribute19();
      case ATTRIBUTE20:
        return getAttribute20();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case REQUESTID:
        return getRequestId();
      case PROGRAMAPPLICATIONID:
        return getProgramApplicationId();
      case PROGRAMID:
        return getProgramId();
      case PROGRAMUPDATEDATE:
        return getProgramUpdateDate();
      case WHUPDATEDATE:
        return getWhUpdateDate();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case EBLFILENAMEID:
        setEblFileNameId((Number)value);
        return;
      case CUSTDOCID:
        setCustDocId((Number)value);
        return;
      case FILENAMEORDERSEQ:
        setFileNameOrderSeq((Number)value);
        return;
      case FIELDID:
        setFieldId((Number)value);
        return;
      case CONSTANTVALUE:
        setConstantValue((String)value);
        return;
      case DEFAULTIFNULL:
        setDefaultIfNull((String)value);
        return;
      case COMMENTS:
        setComments((String)value);
        return;
      case ATTRIBUTE1:
        setAttribute1((String)value);
        return;
      case ATTRIBUTE2:
        setAttribute2((String)value);
        return;
      case ATTRIBUTE3:
        setAttribute3((String)value);
        return;
      case ATTRIBUTE4:
        setAttribute4((String)value);
        return;
      case ATTRIBUTE5:
        setAttribute5((String)value);
        return;
      case ATTRIBUTE6:
        setAttribute6((String)value);
        return;
      case ATTRIBUTE7:
        setAttribute7((String)value);
        return;
      case ATTRIBUTE8:
        setAttribute8((String)value);
        return;
      case ATTRIBUTE9:
        setAttribute9((String)value);
        return;
      case ATTRIBUTE10:
        setAttribute10((String)value);
        return;
      case ATTRIBUTE11:
        setAttribute11((String)value);
        return;
      case ATTRIBUTE12:
        setAttribute12((String)value);
        return;
      case ATTRIBUTE13:
        setAttribute13((String)value);
        return;
      case ATTRIBUTE14:
        setAttribute14((String)value);
        return;
      case ATTRIBUTE15:
        setAttribute15((String)value);
        return;
      case ATTRIBUTE16:
        setAttribute16((String)value);
        return;
      case ATTRIBUTE17:
        setAttribute17((String)value);
        return;
      case ATTRIBUTE18:
        setAttribute18((String)value);
        return;
      case ATTRIBUTE19:
        setAttribute19((String)value);
        return;
      case ATTRIBUTE20:
        setAttribute20((String)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case REQUESTID:
        setRequestId((Number)value);
        return;
      case PROGRAMAPPLICATIONID:
        setProgramApplicationId((Number)value);
        return;
      case PROGRAMID:
        setProgramId((Number)value);
        return;
      case PROGRAMUPDATEDATE:
        setProgramUpdateDate((Date)value);
        return;
      case WHUPDATEDATE:
        setWhUpdateDate((Date)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }
   //Overridden method to call custom PLSQL API
   public void insertRow()
    {
	OracleCallableStatement oraclecallablestatement = null;
        try
        {
            OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getDBTransaction();
                
            
             String s= "BEGIN"
                      +" XX_CDH_EBL_FILE_NAME_DTL_PKG.insert_row(p_ebl_file_name_id    => :1 "
                      +" , p_cust_doc_id              => :2 "
                      +" , p_file_name_order_seq      => :3 "
                      +" , p_field_id                 => :4 "
                      +" , p_constant_value           => :5 "
                      +" , p_default_if_null          => :6 "
                      +" , p_comments                 => :7 "
                      +" , p_attribute1               => :8 "
                      +" , p_attribute2               => :9 "
                      +" , p_attribute3               => :10 "
                      +" , p_attribute4               => :11 "
                      +" , p_attribute5               => :12 "
                      +" , p_attribute6               => :13 "
                      +" , p_attribute7               => :14 "
                      +" , p_attribute8               => :15 "
                      +" , p_attribute9               => :16 "
                      +" , p_attribute10              => :17 "
                      +" , p_attribute11              => :18 "
                      +" , p_attribute12              => :19 "
                      +" , p_attribute13              => :20 "
                      +" , p_attribute14              => :21 "
                      +" , p_attribute15              => :22 "
                      +" , p_attribute16              => :23 "
                      +" , p_attribute17              => :24 "
                      +" , p_attribute18              => :25 "
                      +" , p_attribute19              => :26 "
                      +" , p_attribute20              => :27);"
                      +"     END; ";
                      
                      
            oraclecallablestatement = (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, -1);
            oraclecallablestatement.setNUMBER(1, this.getEblFileNameId());
            oraclecallablestatement.setNUMBER(2, this.getCustDocId());
            oraclecallablestatement.setNUMBER(3, this.getFileNameOrderSeq());
            oraclecallablestatement.setNUMBER(4, this.getFieldId());
            oraclecallablestatement.setString(5, this.getConstantValue());
            oraclecallablestatement.setString(6, this.getDefaultIfNull()); 
            oraclecallablestatement.setString(7, this.getComments()); 
            oraclecallablestatement.setString(8,this.getAttribute1());
            oraclecallablestatement.setString(9,this.getAttribute2());
            oraclecallablestatement.setString(10,this.getAttribute3());
            oraclecallablestatement.setString(11,this.getAttribute4());
            oraclecallablestatement.setString(12,this.getAttribute5());
            oraclecallablestatement.setString(13,this.getAttribute6());
            oraclecallablestatement.setString(14,this.getAttribute7());
            oraclecallablestatement.setString(15,this.getAttribute8());
            oraclecallablestatement.setString(16,this.getAttribute9());
            oraclecallablestatement.setString(17,this.getAttribute10());
            oraclecallablestatement.setString(18,this.getAttribute11());
            oraclecallablestatement.setString(19,this.getAttribute12());
            oraclecallablestatement.setString(20,this.getAttribute13());
            oraclecallablestatement.setString(21,this.getAttribute14());
            oraclecallablestatement.setString(22,this.getAttribute15());
            oraclecallablestatement.setString(23,this.getAttribute16());
            oraclecallablestatement.setString(24,this.getAttribute17());
            oraclecallablestatement.setString(25,this.getAttribute18());
            oraclecallablestatement.setString(26,this.getAttribute19());
            oraclecallablestatement.setString(27,this.getAttribute20());
            oraclecallablestatement.execute();
        }
        catch(SQLException sqlexception)
        {
            throw OAException.wrapperException(sqlexception);
        }
        catch(Exception exception)
        {
            throw OAException.wrapperException(exception);
        }
		finally
        {
           try{
                if(oraclecallablestatement != null)
                   oraclecallablestatement.close();
              }
		   catch(Exception e){}
        }
    }//Insert Row

    public void updateRow()
    {
	   OracleCallableStatement oraclecallablestatement = null;
        try
        {
            OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getDBTransaction();
           
            String s= "BEGIN"
                      +" XX_CDH_EBL_FILE_NAME_DTL_PKG.update_row(p_ebl_file_name_id    => :1 "
                      +" , p_cust_doc_id              => :2 "
                      +" , p_file_name_order_seq      => :3 "
                      +" , p_field_id                 => :4 "
                      +" , p_constant_value           => :5 "
                      +" , p_default_if_null          => :6 "
                      +" , p_comments                 => :7 "
                      +" , p_attribute1               => :8 "
                      +" , p_attribute2               => :9 "
                      +" , p_attribute3               => :10 "
                      +" , p_attribute4               => :11 "
                      +" , p_attribute5               => :12 "
                      +" , p_attribute6               => :13 "
                      +" , p_attribute7               => :14 "
                      +" , p_attribute8               => :15 "
                      +" , p_attribute9               => :16 "
                      +" , p_attribute10              => :17 "
                      +" , p_attribute11              => :18 "
                      +" , p_attribute12              => :19 "
                      +" , p_attribute13              => :20 "
                      +" , p_attribute14              => :21 "
                      +" , p_attribute15              => :22 "
                      +" , p_attribute16              => :23 "
                      +" , p_attribute17              => :24 "
                      +" , p_attribute18              => :25 "
                      +" , p_attribute19              => :26 "
                      +" , p_attribute20              => :27);"
                      +" END; ";
            oraclecallablestatement = (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, -1);
            oraclecallablestatement.setNUMBER(1, this.getEblFileNameId());            
            oraclecallablestatement.setNUMBER(2, this.getCustDocId());
            oraclecallablestatement.setNUMBER(3, this.getFileNameOrderSeq());
            oraclecallablestatement.setNUMBER(4, this.getFieldId());
            oraclecallablestatement.setString(5, this.getConstantValue());
            oraclecallablestatement.setString(6, this.getDefaultIfNull()); 
            oraclecallablestatement.setString(7, this.getComments());   
            oraclecallablestatement.setString(8,this.getAttribute1());
            oraclecallablestatement.setString(9,this.getAttribute2());
            oraclecallablestatement.setString(10,this.getAttribute3());
            oraclecallablestatement.setString(11,this.getAttribute4());
            oraclecallablestatement.setString(12,this.getAttribute5());
            oraclecallablestatement.setString(13,this.getAttribute6());
            oraclecallablestatement.setString(14,this.getAttribute7());
            oraclecallablestatement.setString(15,this.getAttribute8());
            oraclecallablestatement.setString(16,this.getAttribute9());
            oraclecallablestatement.setString(17,this.getAttribute10());
            oraclecallablestatement.setString(18,this.getAttribute11());
            oraclecallablestatement.setString(19,this.getAttribute12());
            oraclecallablestatement.setString(20,this.getAttribute13());
            oraclecallablestatement.setString(21,this.getAttribute14());
            oraclecallablestatement.setString(22,this.getAttribute15());
            oraclecallablestatement.setString(23,this.getAttribute16());
            oraclecallablestatement.setString(24,this.getAttribute17());
            oraclecallablestatement.setString(25,this.getAttribute18());
            oraclecallablestatement.setString(26,this.getAttribute19());
            oraclecallablestatement.setString(27,this.getAttribute20());
            oraclecallablestatement.execute();
        }
        catch(SQLException sqlexception)
        {
            throw OAException.wrapperException(sqlexception);
        }
        catch(Exception exception)
        {
            throw OAException.wrapperException(exception);
        }
		finally
        {
           try{
                if(oraclecallablestatement != null)
                   oraclecallablestatement.close();
              }
		   catch(Exception e){}
        }
    }//Update Row



  //Delete Row
  public void deleteRow()
  {
	  OracleCallableStatement oraclecallablestatement = null;
      try
      {
          OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getDBTransaction();
            
          String s= "BEGIN"
                      +" XX_CDH_EBL_FILE_NAME_DTL_PKG.delete_row(p_ebl_file_name_id    =>   :1 "
                      +" ,p_cust_doc_id                        =>:2);"
                      +" END;" ;
          oraclecallablestatement = (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, -1);
          oraclecallablestatement.setNUMBER(1,this.getEblFileNameId());
          oraclecallablestatement.setNUMBER(2,this.getCustDocId());
          oraclecallablestatement.execute();
      }
      catch(SQLException sqlexception)
      {
          throw OAException.wrapperException(sqlexception);
      }
      catch(Exception exception)
      {
          throw OAException.wrapperException(exception);
      }
	  finally
        {
           try{
                if(oraclecallablestatement != null)
                   oraclecallablestatement.close();
              }
		   catch(Exception e){}
        }

  }//Delete Row  

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number eblFileNameId)
  {
    return new Key(new Object[] {eblFileNameId});
  }



    
}