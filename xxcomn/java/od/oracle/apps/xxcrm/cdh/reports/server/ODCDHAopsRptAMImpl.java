package od.oracle.apps.xxcrm.cdh.reports.server;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import od.oracle.apps.xxcrm.cdh.reports.server.ODCDHAopsCustRptVOImpl;
//import oracle.apps.fnd.framework.OAViewObject;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.common.MessageToken;

//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODCDHAopsRptAMImpl extends OAApplicationModuleImpl 
{
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODCDHAopsRptAMImpl()
  {
  }

  /**
   * 
   * Container's getter for ODCDHAopsCustRptVO1
   */
  public ODCDHAopsCustRptVOImpl getODCDHAopsCustRptVO1()
  {
    return (ODCDHAopsCustRptVOImpl)findViewObject("ODCDHAopsCustRptVO1");
  }

   public void exeVO(String strBatchID)
  {
    
    String s1 = "od.oracle.apps.xxcrm.cdh.reports.server.ODCDHAopsRepAMImpl.getResult";
        OADBTransaction oadbtransaction = getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        if(flag)
        {
            oadbtransaction.writeDiagnostics(s1, "In exeVO", 2);
            oadbtransaction.writeDiagnostics(s1, "In exeVO strBatchID : "+strBatchID, 2);
        }
   /* if (!vo.isPreparedForExecution())    
    { 
       if(flag)
        {
            oadbtransaction.writeDiagnostics(s1, "In exeVO-start execution", 2);
        }
       vo.executeQuery();  
    } */
    
    ODCDHAopsCustRptVOImpl custvo = getODCDHAopsCustRptVO1();
    ODCDHAopsCustCntRptVOImpl custcntvo = getODCDHAopsCustCntRptVO1();
    ODCDHAopsCustSiteRptVOImpl custsitevo = getODCDHAopsCustSiteRptVO1();
    
 
     if (custcntvo == null)
    {
      MessageToken [] tokens =  {new MessageToken("OBJECT_NAME",
                   "getODCDHAopsCustCntRptVO1")};
      throw new OAException("IMC", "XXOD_IMC_SACT_OBJECT_NOT_FOUND", tokens,
                    OAException.ERROR, null );
    }
    else
    {
     // custcntvo.setMaxFetchSize(1001);
       custcntvo.initQueryCustCnt(strBatchID);
      /*  int iFetchRowCnt = custcntvo.getFetchedRowCount();
        int iMaxFetchSizeCnt =custcntvo.getMaxFetchSize();
        int iSavedRowCountInternalCnt =custcntvo.getSavedRowCountInternal();
         if(flag)
        {
            oadbtransaction.writeDiagnostics(s1, "iFetchRowCnt : "+iFetchRowCnt, 2);
            oadbtransaction.writeDiagnostics(s1, "iMaxFetchSizeCnt : "+iMaxFetchSizeCnt, 2);
            oadbtransaction.writeDiagnostics(s1, "iSavedRowCountInternalCnt : "+iSavedRowCountInternalCnt, 2);
        }*/
    }
    if (custvo == null)
    {
      MessageToken [] tokens =  {new MessageToken("OBJECT_NAME",
                   "getODCDHAopsCustRptVO1")};
      throw new OAException("IMC", "XXOD_IMC_SACT_OBJECT_NOT_FOUND", tokens,
                    OAException.ERROR, null );
    }
    else
     {
     // custcntvo.setMaxFetchSize(1001);
       custvo.initQueryCust(strBatchID);
        int iFetchRowCnt = custvo.getFetchedRowCount();
        int iMaxFetchSizeCnt =custvo.getMaxFetchSize();
       // int iSavedRowCountInternalCnt =custvo.getSavedRowCountInternal();
         if(flag)
        {
            oadbtransaction.writeDiagnostics(s1, "iFetchRowCnt : "+iFetchRowCnt, 2);
            oadbtransaction.writeDiagnostics(s1, "iMaxFetchSizeCnt : "+iMaxFetchSizeCnt, 2);
        //    oadbtransaction.writeDiagnostics(s1, "iSavedRowCountInternalCnt : "+iSavedRowCountInternalCnt, 2);
        }
    }

   if (custsitevo == null)
    {
      MessageToken [] tokens =  {new MessageToken("OBJECT_NAME",
                   "getODCDHAopsCustSiteRptVO1")};
      throw new OAException("IMC", "XXOD_IMC_SACT_OBJECT_NOT_FOUND", tokens,
                    OAException.ERROR, null );
    }
    else
    {
      // custsitevo.setMaxFetchSize(1001);
       custsitevo.initQueryCustSite(strBatchID);
        int isiteFetchRowCnt =custsitevo.getFetchedRowCount();
       int isiteMaxFetchSizeCnt =custsitevo.getMaxFetchSize();
         if(flag)
        {
            oadbtransaction.writeDiagnostics(s1, "isiteFetchRowCnt : "+isiteFetchRowCnt, 2);
            oadbtransaction.writeDiagnostics(s1, "isiteMaxFetchSizeCnt : "+isiteMaxFetchSizeCnt, 2);
        }
    }
  }

    

  /**
   * 
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxcmr.cdh.reports.server", "ODCDHAopsRptAMLocal");
  }

  /**
   * 
   * Container's getter for ODCDHAopsCustCntRptVO1
   */
  public ODCDHAopsCustCntRptVOImpl getODCDHAopsCustCntRptVO1()
  {
    return (ODCDHAopsCustCntRptVOImpl)findViewObject("ODCDHAopsCustCntRptVO1");
  }

  /**
   * 
   * Container's getter for ODCDHAopsCustSiteRptVO1
   */
  public ODCDHAopsCustSiteRptVOImpl getODCDHAopsCustSiteRptVO1()
  {
    return (ODCDHAopsCustSiteRptVOImpl)findViewObject("ODCDHAopsCustSiteRptVO1");
  }
}