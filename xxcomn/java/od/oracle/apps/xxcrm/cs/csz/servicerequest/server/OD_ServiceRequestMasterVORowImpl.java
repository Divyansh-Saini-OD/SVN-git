package od.oracle.apps.xxcrm.cs.csz.servicerequest.server;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class OD_ServiceRequestMasterVORowImpl extends OAViewRowImpl 
{


  protected static final int REQUESTNUMBER = 0;
  protected static final int STOREID = 1;
  protected static final int LINENUMBER = 2;
  protected static final int ITEMNUMBER = 3;
  protected static final int ITEMDESCRIPTION = 4;
  protected static final int RMSSKU = 5;
  protected static final int QUANTITY = 6;
  protected static final int ITEMCATEGORY = 7;
  protected static final int PURCHASEPRICE = 8;
  protected static final int SELLINGPRICE = 9;
  protected static final int EXCHANGEPRICE = 10;
  protected static final int COREFLAG = 11;
  protected static final int UOM = 12;
  protected static final int SCHEDULEDATE = 13;
  protected static final int CREATIONDATE = 14;
  protected static final int CREATEDBY = 15;
  protected static final int LASTUDATEDATE = 16;
  protected static final int LASTUPDATEDBY = 17;
  protected static final int ATTRIBUTE1 = 18;
  protected static final int ATTRIBUTE2 = 19;
  protected static final int ATTRIBUTE3 = 20;
  protected static final int ATTRIBUTE4 = 21;
  protected static final int ATTRIBUTE5 = 22;
  protected static final int SALESFLAG = 23;
  protected static final int MANUFACTURER = 24;
  protected static final int MODEL = 25;
  protected static final int SERIALNUMBER = 26;
  protected static final int PROBLEMDESCR = 27;
  protected static final int SPECIALINSTR = 28;
  protected static final int INVENTORYITEMID = 29;
  protected static final int STORENUMBER = 30;
  protected static final int QUOTENUMBER = 31;
  protected static final int EXPIREDATE = 32;
  protected static final int EXCESSQUANTITY = 33;
  protected static final int EXCESSFLAG = 34;
  protected static final int RECEIVEDQUANTITY = 35;
  protected static final int RECEIVEDSHIPMENTFLAG = 36;
  protected static final int COMPLETIONDATE = 37;
  protected static final int ROWID = 38;
  protected static final int NOTUSED = 39;
  protected static final int RECEIVEDSHIPMENT = 40;
  protected static final int COMPLETE = 41;
  protected static final int SETFLAG = 42;
  protected static final int CORE_FLAG = 43;
  protected static final int NOTUSEDQTY = 44;
  protected static final int RECEIVE_QUANTITY = 45;
  protected static final int TRACKING_NUMBER = 46;
  protected static final int RECEIVEDSHIPMENTRENDER = 47;
  protected static final int FREIGHTCARRIER = 48;
  protected static final int TOTRECEIVEDQTY = 49;
  protected static final int RECPTFLAG = 50;
  protected static final int OD_SERVICEREQUESTDETAILSVO = 51;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public OD_ServiceRequestMasterVORowImpl()
  {
  }

  /**
   * 
   * Gets OD_ServiceRequestMasterEO entity object.
   */
  public od.oracle.apps.xxcrm.cs.csz.servicerequest.schema.server.OD_ServiceRequestMasterEOImpl getOD_ServiceRequestMasterEO()
  {
    return (od.oracle.apps.xxcrm.cs.csz.servicerequest.schema.server.OD_ServiceRequestMasterEOImpl)getEntity(0);
  }

  /**
   * 
   * Gets the attribute value for REQUEST_NUMBER using the alias name RequestNumber
   */
  public String getRequestNumber()
  {
    return (String)getAttributeInternal(REQUESTNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for REQUEST_NUMBER using the alias name RequestNumber
   */
  public void setRequestNumber(String value)
  {
    setAttributeInternal(REQUESTNUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for STORE_ID using the alias name StoreId
   */
  public Number getStoreId()
  {
    return (Number)getAttributeInternal(STOREID);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for STORE_ID using the alias name StoreId
   */
  public void setStoreId(Number value)
  {
    setAttributeInternal(STOREID, value);
  }

  /**
   * 
   * Gets the attribute value for LINE_NUMBER using the alias name LineNumber
   */
  public Number getLineNumber()
  {
    return (Number)getAttributeInternal(LINENUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for LINE_NUMBER using the alias name LineNumber
   */
  public void setLineNumber(Number value)
  {
    setAttributeInternal(LINENUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for ITEM_NUMBER using the alias name ItemNumber
   */
  public String getItemNumber()
  {
    return (String)getAttributeInternal(ITEMNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ITEM_NUMBER using the alias name ItemNumber
   */
  public void setItemNumber(String value)
  {
    setAttributeInternal(ITEMNUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for ITEM_DESCRIPTION using the alias name ItemDescription
   */
  public String getItemDescription()
  {
    return (String)getAttributeInternal(ITEMDESCRIPTION);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ITEM_DESCRIPTION using the alias name ItemDescription
   */
  public void setItemDescription(String value)
  {
    setAttributeInternal(ITEMDESCRIPTION, value);
  }

  /**
   * 
   * Gets the attribute value for RMS_SKU using the alias name RmsSku
   */
  public String getRmsSku()
  {
    return (String)getAttributeInternal(RMSSKU);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for RMS_SKU using the alias name RmsSku
   */
  public void setRmsSku(String value)
  {
    setAttributeInternal(RMSSKU, value);
  }

  /**
   * 
   * Gets the attribute value for QUANTITY using the alias name Quantity
   */
  public Number getQuantity()
  {
    return (Number)getAttributeInternal(QUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for QUANTITY using the alias name Quantity
   */
  public void setQuantity(Number value)
  {
    setAttributeInternal(QUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for ITEM_CATEGORY using the alias name ItemCategory
   */
  public String getItemCategory()
  {
    return (String)getAttributeInternal(ITEMCATEGORY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ITEM_CATEGORY using the alias name ItemCategory
   */
  public void setItemCategory(String value)
  {
    setAttributeInternal(ITEMCATEGORY, value);
  }

  /**
   * 
   * Gets the attribute value for PURCHASE_PRICE using the alias name PurchasePrice
   */
  public Number getPurchasePrice()
  {
    return (Number)getAttributeInternal(PURCHASEPRICE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for PURCHASE_PRICE using the alias name PurchasePrice
   */
  public void setPurchasePrice(Number value)
  {
    setAttributeInternal(PURCHASEPRICE, value);
  }

  /**
   * 
   * Gets the attribute value for SELLING_PRICE using the alias name SellingPrice
   */
  public Number getSellingPrice()
  {
    return (Number)getAttributeInternal(SELLINGPRICE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for SELLING_PRICE using the alias name SellingPrice
   */
  public void setSellingPrice(Number value)
  {
    setAttributeInternal(SELLINGPRICE, value);
  }

  /**
   * 
   * Gets the attribute value for EXCHANGE_PRICE using the alias name ExchangePrice
   */
  public Number getExchangePrice()
  {
    return (Number)getAttributeInternal(EXCHANGEPRICE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EXCHANGE_PRICE using the alias name ExchangePrice
   */
  public void setExchangePrice(Number value)
  {
    setAttributeInternal(EXCHANGEPRICE, value);
  }

  /**
   * 
   * Gets the attribute value for CORE_FLAG using the alias name CoreFlag
   */
  public String getCoreFlag()
  {
    return (String)getAttributeInternal(COREFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CORE_FLAG using the alias name CoreFlag
   */
  public void setCoreFlag(String value)
  {
    setAttributeInternal(COREFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for UOM using the alias name Uom
   */
  public String getUom()
  {
    return (String)getAttributeInternal(UOM);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for UOM using the alias name Uom
   */
  public void setUom(String value)
  {
    setAttributeInternal(UOM, value);
  }

  /**
   * 
   * Gets the attribute value for SCHEDULE_DATE using the alias name ScheduleDate
   */
  public Date getScheduleDate()
  {
    return (Date)getAttributeInternal(SCHEDULEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for SCHEDULE_DATE using the alias name ScheduleDate
   */
  public void setScheduleDate(Date value)
  {
    setAttributeInternal(SCHEDULEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CREATION_DATE using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CREATED_BY using the alias name CreatedBy
   */
  public String getCreatedBy()
  {
    return (String)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy
   */
  public void setCreatedBy(String value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LAST_UDATE_DATE using the alias name LastUdateDate
   */
  public Date getLastUdateDate()
  {
    return (Date)getAttributeInternal(LASTUDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for LAST_UDATE_DATE using the alias name LastUdateDate
   */
  public void setLastUdateDate(Date value)
  {
    setAttributeInternal(LASTUDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
   */
  public String getLastUpdatedBy()
  {
    return (String)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
   */
  public void setLastUpdatedBy(String value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE2 using the alias name Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE2 using the alias name Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE3 using the alias name Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE3 using the alias name Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE4 using the alias name Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE4 using the alias name Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**
   * 
   * Gets the attribute value for ATTRIBUTE5 using the alias name Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ATTRIBUTE5 using the alias name Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**
   * 
   * Gets the attribute value for SALES_FLAG using the alias name SalesFlag
   */
  public String getSalesFlag()
  {
    return (String)getAttributeInternal(SALESFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for SALES_FLAG using the alias name SalesFlag
   */
  public void setSalesFlag(String value)
  {
    setAttributeInternal(SALESFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for MANUFACTURER using the alias name Manufacturer
   */
  public String getManufacturer()
  {
    return (String)getAttributeInternal(MANUFACTURER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for MANUFACTURER using the alias name Manufacturer
   */
  public void setManufacturer(String value)
  {
    setAttributeInternal(MANUFACTURER, value);
  }

  /**
   * 
   * Gets the attribute value for MODEL using the alias name Model
   */
  public String getModel()
  {
    return (String)getAttributeInternal(MODEL);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for MODEL using the alias name Model
   */
  public void setModel(String value)
  {
    setAttributeInternal(MODEL, value);
  }

  /**
   * 
   * Gets the attribute value for SERIAL_NUMBER using the alias name SerialNumber
   */
  public String getSerialNumber()
  {
    return (String)getAttributeInternal(SERIALNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for SERIAL_NUMBER using the alias name SerialNumber
   */
  public void setSerialNumber(String value)
  {
    setAttributeInternal(SERIALNUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for PROBLEM_DESCR using the alias name ProblemDescr
   */
  public String getProblemDescr()
  {
    return (String)getAttributeInternal(PROBLEMDESCR);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for PROBLEM_DESCR using the alias name ProblemDescr
   */
  public void setProblemDescr(String value)
  {
    setAttributeInternal(PROBLEMDESCR, value);
  }

  /**
   * 
   * Gets the attribute value for SPECIAL_INSTR using the alias name SpecialInstr
   */
  public String getSpecialInstr()
  {
    return (String)getAttributeInternal(SPECIALINSTR);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for SPECIAL_INSTR using the alias name SpecialInstr
   */
  public void setSpecialInstr(String value)
  {
    setAttributeInternal(SPECIALINSTR, value);
  }

  /**
   * 
   * Gets the attribute value for INVENTORY_ITEM_ID using the alias name InventoryItemId
   */
  public Number getInventoryItemId()
  {
    return (Number)getAttributeInternal(INVENTORYITEMID);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for INVENTORY_ITEM_ID using the alias name InventoryItemId
   */
  public void setInventoryItemId(Number value)
  {
    setAttributeInternal(INVENTORYITEMID, value);
  }

  /**
   * 
   * Gets the attribute value for STORE_NUMBER using the alias name StoreNumber
   */
  public Number getStoreNumber()
  {
    return (Number)getAttributeInternal(STORENUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for STORE_NUMBER using the alias name StoreNumber
   */
  public void setStoreNumber(Number value)
  {
    setAttributeInternal(STORENUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for QUOTE_NUMBER using the alias name QuoteNumber
   */
  public String getQuoteNumber()
  {
    return (String)getAttributeInternal(QUOTENUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for QUOTE_NUMBER using the alias name QuoteNumber
   */
  public void setQuoteNumber(String value)
  {
    setAttributeInternal(QUOTENUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for EXPIRE_DATE using the alias name ExpireDate
   */
  public Date getExpireDate()
  {
    return (Date)getAttributeInternal(EXPIREDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EXPIRE_DATE using the alias name ExpireDate
   */
  public void setExpireDate(Date value)
  {
    setAttributeInternal(EXPIREDATE, value);
  }

  /**
   * 
   * Gets the attribute value for EXCESS_QUANTITY using the alias name ExcessQuantity
   */
  public Number getExcessQuantity()
  {
    return (Number)getAttributeInternal(EXCESSQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EXCESS_QUANTITY using the alias name ExcessQuantity
   */
  public void setExcessQuantity(Number value)
  {
    setAttributeInternal(EXCESSQUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for EXCESS_FLAG using the alias name ExcessFlag
   */
  public String getExcessFlag()
  {
    return (String)getAttributeInternal(EXCESSFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EXCESS_FLAG using the alias name ExcessFlag
   */
  public void setExcessFlag(String value)
  {
    setAttributeInternal(EXCESSFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for RECEIVED_QUANTITY using the alias name ReceivedQuantity
   */
  public Number getReceivedQuantity()
  {
    return (Number)getAttributeInternal(RECEIVEDQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for RECEIVED_QUANTITY using the alias name ReceivedQuantity
   */
  public void setReceivedQuantity(Number value)
  {
    setAttributeInternal(RECEIVEDQUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for RECEIVED_SHIPMENT_FLAG using the alias name ReceivedShipmentFlag
   */
  public String getReceivedShipmentFlag()
  {
    return (String)getAttributeInternal(RECEIVEDSHIPMENTFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for RECEIVED_SHIPMENT_FLAG using the alias name ReceivedShipmentFlag
   */
  public void setReceivedShipmentFlag(String value)
  {
    setAttributeInternal(RECEIVEDSHIPMENTFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for COMPLETION_DATE using the alias name CompletionDate
   */
  public Date getCompletionDate()
  {
    return (Date)getAttributeInternal(COMPLETIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for COMPLETION_DATE using the alias name CompletionDate
   */
  public void setCompletionDate(Date value)
  {
    setAttributeInternal(COMPLETIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for ROWID using the alias name RowID
   */
  public RowID getRowID()
  {
    return (RowID)getAttributeInternal(ROWID);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case REQUESTNUMBER:
        return getRequestNumber();
      case STOREID:
        return getStoreId();
      case LINENUMBER:
        return getLineNumber();
      case ITEMNUMBER:
        return getItemNumber();
      case ITEMDESCRIPTION:
        return getItemDescription();
      case RMSSKU:
        return getRmsSku();
      case QUANTITY:
        return getQuantity();
      case ITEMCATEGORY:
        return getItemCategory();
      case PURCHASEPRICE:
        return getPurchasePrice();
      case SELLINGPRICE:
        return getSellingPrice();
      case EXCHANGEPRICE:
        return getExchangePrice();
      case COREFLAG:
        return getCoreFlag();
      case UOM:
        return getUom();
      case SCHEDULEDATE:
        return getScheduleDate();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUDATEDATE:
        return getLastUdateDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case ATTRIBUTE1:
        return getAttribute1();
      case ATTRIBUTE2:
        return getAttribute2();
      case ATTRIBUTE3:
        return getAttribute3();
      case ATTRIBUTE4:
        return getAttribute4();
      case ATTRIBUTE5:
        return getAttribute5();
      case SALESFLAG:
        return getSalesFlag();
      case MANUFACTURER:
        return getManufacturer();
      case MODEL:
        return getModel();
      case SERIALNUMBER:
        return getSerialNumber();
      case PROBLEMDESCR:
        return getProblemDescr();
      case SPECIALINSTR:
        return getSpecialInstr();
      case INVENTORYITEMID:
        return getInventoryItemId();
      case STORENUMBER:
        return getStoreNumber();
      case QUOTENUMBER:
        return getQuoteNumber();
      case EXPIREDATE:
        return getExpireDate();
      case EXCESSQUANTITY:
        return getExcessQuantity();
      case EXCESSFLAG:
        return getExcessFlag();
      case RECEIVEDQUANTITY:
        return getReceivedQuantity();
      case RECEIVEDSHIPMENTFLAG:
        return getReceivedShipmentFlag();
      case COMPLETIONDATE:
        return getCompletionDate();
      case ROWID:
        return getRowID();
      case NOTUSED:
        return getNotUsed();
      case RECEIVEDSHIPMENT:
        return getReceivedShipment();
      case COMPLETE:
        return getComplete();
      case SETFLAG:
        return getsetFlag();
      case CORE_FLAG:
        return getCore_Flag();
      case NOTUSEDQTY:
        return getNotUsedQty();
      case RECEIVE_QUANTITY:
        return getReceive_Quantity();
      case TRACKING_NUMBER:
        return getTracking_Number();
      case RECEIVEDSHIPMENTRENDER:
        return getReceivedShipmentRender();
      case FREIGHTCARRIER:
        return getFreightCarrier();
      case TOTRECEIVEDQTY:
        return getTotReceivedQty();
      case RECPTFLAG:
        return getRecptFlag();
      case OD_SERVICEREQUESTDETAILSVO:
        return getOD_ServiceRequestDetailsVO();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case REQUESTNUMBER:
        setRequestNumber((String)value);
        return;
      case STOREID:
        setStoreId((Number)value);
        return;
      case LINENUMBER:
        setLineNumber((Number)value);
        return;
      case ITEMNUMBER:
        setItemNumber((String)value);
        return;
      case ITEMDESCRIPTION:
        setItemDescription((String)value);
        return;
      case RMSSKU:
        setRmsSku((String)value);
        return;
      case QUANTITY:
        setQuantity((Number)value);
        return;
      case ITEMCATEGORY:
        setItemCategory((String)value);
        return;
      case PURCHASEPRICE:
        setPurchasePrice((Number)value);
        return;
      case SELLINGPRICE:
        setSellingPrice((Number)value);
        return;
      case EXCHANGEPRICE:
        setExchangePrice((Number)value);
        return;
      case COREFLAG:
        setCoreFlag((String)value);
        return;
      case UOM:
        setUom((String)value);
        return;
      case SCHEDULEDATE:
        setScheduleDate((Date)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((String)value);
        return;
      case LASTUDATEDATE:
        setLastUdateDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((String)value);
        return;
      case ATTRIBUTE1:
        setAttribute1((String)value);
        return;
      case ATTRIBUTE2:
        setAttribute2((String)value);
        return;
      case ATTRIBUTE3:
        setAttribute3((String)value);
        return;
      case ATTRIBUTE4:
        setAttribute4((String)value);
        return;
      case ATTRIBUTE5:
        setAttribute5((String)value);
        return;
      case SALESFLAG:
        setSalesFlag((String)value);
        return;
      case MANUFACTURER:
        setManufacturer((String)value);
        return;
      case MODEL:
        setModel((String)value);
        return;
      case SERIALNUMBER:
        setSerialNumber((String)value);
        return;
      case PROBLEMDESCR:
        setProblemDescr((String)value);
        return;
      case SPECIALINSTR:
        setSpecialInstr((String)value);
        return;
      case INVENTORYITEMID:
        setInventoryItemId((Number)value);
        return;
      case STORENUMBER:
        setStoreNumber((Number)value);
        return;
      case QUOTENUMBER:
        setQuoteNumber((String)value);
        return;
      case EXPIREDATE:
        setExpireDate((Date)value);
        return;
      case EXCESSQUANTITY:
        setExcessQuantity((Number)value);
        return;
      case EXCESSFLAG:
        setExcessFlag((String)value);
        return;
      case RECEIVEDQUANTITY:
        setReceivedQuantity((Number)value);
        return;
      case RECEIVEDSHIPMENTFLAG:
        setReceivedShipmentFlag((String)value);
        return;
      case COMPLETIONDATE:
        setCompletionDate((Date)value);
        return;
      case NOTUSED:
        setNotUsed((Boolean)value);
        return;
      case RECEIVEDSHIPMENT:
        setReceivedShipment((Boolean)value);
        return;
      case COMPLETE:
        setComplete((Boolean)value);
        return;
      case SETFLAG:
        setsetFlag((Boolean)value);
        return;
      case CORE_FLAG:
        setCore_Flag((Boolean)value);
        return;
      case NOTUSEDQTY:
        setNotUsedQty((Boolean)value);
        return;
      case RECEIVE_QUANTITY:
        setReceive_Quantity((Boolean)value);
        return;
      case TRACKING_NUMBER:
        setTracking_Number((Boolean)value);
        return;
      case RECEIVEDSHIPMENTRENDER:
        setReceivedShipmentRender((Boolean)value);
        return;
      case FREIGHTCARRIER:
        setFreightCarrier((Boolean)value);
        return;
      case TOTRECEIVEDQTY:
        setTotReceivedQty((Number)value);
        return;
      case RECPTFLAG:
        setRecptFlag((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets the associated <code>RowIterator</code> using master-detail link OD_ServiceRequestDetailsVO
   */
  public oracle.jbo.RowIterator getOD_ServiceRequestDetailsVO()
  {
    return (oracle.jbo.RowIterator)getAttributeInternal(OD_SERVICEREQUESTDETAILSVO);
  }



  /**
   * 
   * Gets the attribute value for the calculated attribute NotUsed
   */
  public Boolean getNotUsed()
  {
    return (Boolean)getAttributeInternal(NOTUSED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute NotUsed
   */
  public void setNotUsed(Boolean value)
  {
    setAttributeInternal(NOTUSED, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ReceivedShipment
   */
  public Boolean getReceivedShipment()
  {
    return (Boolean)getAttributeInternal(RECEIVEDSHIPMENT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ReceivedShipment
   */
  public void setReceivedShipment(Boolean value)
  {
    setAttributeInternal(RECEIVEDSHIPMENT, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Complete
   */
  public Boolean getComplete()
  {
    return (Boolean)getAttributeInternal(COMPLETE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Complete
   */
  public void setComplete(Boolean value)
  {
    setAttributeInternal(COMPLETE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute setFlag
   */
  public Boolean getsetFlag()
  {
    return (Boolean)getAttributeInternal(SETFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute setFlag
   */
  public void setsetFlag(Boolean value)
  {
    setAttributeInternal(SETFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Core_Flag
   */
  public Boolean getCore_Flag()
  {
    return (Boolean)getAttributeInternal(CORE_FLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Core_Flag
   */
  public void setCore_Flag(Boolean value)
  {
    setAttributeInternal(CORE_FLAG, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute NotUsedQty
   */
  public Boolean getNotUsedQty()
  {
    return (Boolean)getAttributeInternal(NOTUSEDQTY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute NotUsedQty
   */
  public void setNotUsedQty(Boolean value)
  {
    setAttributeInternal(NOTUSEDQTY, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Receive_Quantity
   */
  public Boolean getReceive_Quantity()
  {
    return (Boolean)getAttributeInternal(RECEIVE_QUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Receive_Quantity
   */
  public void setReceive_Quantity(Boolean value)
  {
    setAttributeInternal(RECEIVE_QUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Tracking_Number
   */
  public Boolean getTracking_Number()
  {
    return (Boolean)getAttributeInternal(TRACKING_NUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Tracking_Number
   */
  public void setTracking_Number(Boolean value)
  {
    setAttributeInternal(TRACKING_NUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ReceivedShipmentRender
   */
  public Boolean getReceivedShipmentRender()
  {
    return (Boolean)getAttributeInternal(RECEIVEDSHIPMENTRENDER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ReceivedShipmentRender
   */
  public void setReceivedShipmentRender(Boolean value)
  {
    setAttributeInternal(RECEIVEDSHIPMENTRENDER, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute FreightCarrier
   */
  public Boolean getFreightCarrier()
  {
    return (Boolean)getAttributeInternal(FREIGHTCARRIER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute FreightCarrier
   */
  public void setFreightCarrier(Boolean value)
  {
    setAttributeInternal(FREIGHTCARRIER, value);
  }

  /**
   * 
   * Gets the attribute value for TOT_RECEIVED_QTY using the alias name TotReceivedQty
   */
  public Number getTotReceivedQty()
  {
    return (Number)getAttributeInternal(TOTRECEIVEDQTY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for TOT_RECEIVED_QTY using the alias name TotReceivedQty
   */
  public void setTotReceivedQty(Number value)
  {
    setAttributeInternal(TOTRECEIVEDQTY, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute RecptFlag
   */
  public String getRecptFlag()
  {
    return (String)getAttributeInternal(RECPTFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute RecptFlag
   */
  public void setRecptFlag(String value)
  {
    setAttributeInternal(RECPTFLAG, value);
  }
}