package od.oracle.apps.xxcrm.cs.csz.servicerequest.server;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class OD_ServiceRequestRcvQtyVORowImpl extends OAViewRowImpl 
{


  protected static final int RECEIVEDQUANTITY = 0;
  protected static final int QUANTITY = 1;
  protected static final int QUANTITYRECEIVED = 2;
  protected static final int SEGMENT1 = 3;
  protected static final int ATTRIBUTE2 = 4;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public OD_ServiceRequestRcvQtyVORowImpl()
  {
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ReceivedQuantity
   */
  public Number getReceivedQuantity()
  {
    return (Number)getAttributeInternal(RECEIVEDQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ReceivedQuantity
   */
  public void setReceivedQuantity(Number value)
  {
    setAttributeInternal(RECEIVEDQUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Quantity
   */
  public Number getQuantity()
  {
    return (Number)getAttributeInternal(QUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Quantity
   */
  public void setQuantity(Number value)
  {
    setAttributeInternal(QUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute QuantityReceived
   */
  public Number getQuantityReceived()
  {
    return (Number)getAttributeInternal(QUANTITYRECEIVED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute QuantityReceived
   */
  public void setQuantityReceived(Number value)
  {
    setAttributeInternal(QUANTITYRECEIVED, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Segment1
   */
  public String getSegment1()
  {
    return (String)getAttributeInternal(SEGMENT1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Segment1
   */
  public void setSegment1(String value)
  {
    setAttributeInternal(SEGMENT1, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case RECEIVEDQUANTITY:
        return getReceivedQuantity();
      case QUANTITY:
        return getQuantity();
      case QUANTITYRECEIVED:
        return getQuantityReceived();
      case SEGMENT1:
        return getSegment1();
      case ATTRIBUTE2:
        return getAttribute2();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case RECEIVEDQUANTITY:
        setReceivedQuantity((Number)value);
        return;
      case QUANTITY:
        setQuantity((Number)value);
        return;
      case QUANTITYRECEIVED:
        setQuantityReceived((Number)value);
        return;
      case SEGMENT1:
        setSegment1((String)value);
        return;
      case ATTRIBUTE2:
        setAttribute2((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }
}