package od.oracle.apps.xxcrm.bis.custom.schema.server;

import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
import oracle.apps.fnd.framework.server.OADBTransaction;
import com.sun.java.util.collections.Iterator;
import oracle.apps.fnd.framework.OAException;
import oracle.jbo.server.EntityImpl;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODDashboardQuickLinksEOImpl extends OAEntityImpl {
  protected static final int LABEL = 0;
  protected static final int DESCRIPTION = 1;
  protected static final int ORDEROFDISPLAY = 2;
  protected static final int RESPONSIBILITYKEY = 3;
  protected static final int CREATIONDATE = 4;
  protected static final int CREATEDBY = 5;
  protected static final int LASTUPDATEDATE = 6;
  protected static final int LASTUPDATEDBY = 7;
  protected static final int LASTUPDATELOGIN = 8;
  protected static final int QUICKLINKID = 9;
  protected static final int PATH = 10;
  protected static final int FULLPATH = 11;
  protected static final int CATEGORYID = 12;



  private static OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODDashboardQuickLinksEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxcrm.bis.custom.schema.server.ODDashboardQuickLinksEO");
    }
    return mDefinitionObject;
  }



    /**
     * 
     * Add attribute defaulting logic in this method.
     */
    public void create(AttributeList attributeList)
  {
    super.create(attributeList);    
    OADBTransaction transaction = getOADBTransaction();
    Number quicklinkId = transaction.getSequenceValue("XXBI_QUICK_LINKS_S");
    setQuicklinkId(quicklinkId);

  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
    Number orderOfDisp = getOrderOfDisplay();
    int i = 0;
    Iterator iterator = ODDashboardQuickLinksEOImpl.getDefinitionObject().getAllEntityInstancesIterator(getDBTransaction());
    while (iterator.hasNext())
      {
      ODDashboardQuickLinksEOImpl cachedRow = (ODDashboardQuickLinksEOImpl)iterator.next();
      if(cachedRow.getAttribute("OrderOfDisplay").equals(orderOfDisp))
           i = i+1;     
      }
            if (i>1)
      {
      throw new OAException("Enter a unique Order of Display", OAException.ERROR);
      }
    
  }

  /**
   * 
   * Add locking logic here.
   */
  public void lock()
  {
    super.lock();
  }

  /**
   * 
   * Custom DML update/insert/delete logic here.
   */
  protected void doDML(int operation, TransactionEvent e)
  {
    super.doDML(operation, e);
  }

  /**
   * 
   * Gets the attribute value for Label, using the alias name Label
   */
  public String getLabel()
  {
    return (String)getAttributeInternal(LABEL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Label
   */
  public void setLabel(String value)
  {
    setAttributeInternal(LABEL, value);
  }

  /**
   * 
   * Gets the attribute value for Description, using the alias name Description
   */
  public String getDescription()
  {
    return (String)getAttributeInternal(DESCRIPTION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Description
   */
  public void setDescription(String value)
  {
    setAttributeInternal(DESCRIPTION, value);
  }

  /**
   * 
   * Gets the attribute value for OrderOfDisplay, using the alias name OrderOfDisplay
   */
  public Number getOrderOfDisplay()
  {
    return (Number)getAttributeInternal(ORDEROFDISPLAY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OrderOfDisplay
   */
  public void setOrderOfDisplay(Number value)
  {
    setAttributeInternal(ORDEROFDISPLAY, value);
  }





  /**
   * 
   * Gets the attribute value for ResponsibilityKey, using the alias name ResponsibilityKey
   */
  public String getResponsibilityKey()
  {
    return (String)getAttributeInternal(RESPONSIBILITYKEY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ResponsibilityKey
   */
  public void setResponsibilityKey(String value)
  {
    setAttributeInternal(RESPONSIBILITYKEY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }
  //  Generated method. Do not modify.

  //  Generated method. Do not modify.




  /**
   * 
   * Gets the attribute value for QuicklinkId, using the alias name QuicklinkId
   */
  public Number getQuicklinkId()
  {
    return (Number)getAttributeInternal(QUICKLINKID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for QuicklinkId
   */
  public void setQuicklinkId(Number value)
  {
    setAttributeInternal(QUICKLINKID, value);
  }

  /**
   * 
   * Gets the attribute value for Path, using the alias name Path
   */
  public String getPath()
  {
    return (String)getAttributeInternal(PATH);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Path
   */
  public void setPath(String value)
  {
    setAttributeInternal(PATH, value);
  }

  /**
   * 
   * Gets the attribute value for FullPath, using the alias name FullPath
   */
  public String getFullPath()
  {
    return (String)getAttributeInternal(FULLPATH);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FullPath
   */
  public void setFullPath(String value)
  {
    setAttributeInternal(FULLPATH, value);
  }


    /**Gets the attribute value for CategoryId, using the alias name CategoryId
     */
    public String getCategoryId() {
        return (String)getAttributeInternal(CATEGORYID);
    }

    /**Sets <code>value</code> as the attribute value for CategoryId
     */
    public void setCategoryId(String value) {
        setAttributeInternal(CATEGORYID, value);
    }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number quicklinkId)
  {
    return new Key(new Object[] {quicklinkId});
  }


}
