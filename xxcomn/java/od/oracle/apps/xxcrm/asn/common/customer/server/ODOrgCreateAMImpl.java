/*===========================================================================+
 |                       Office Depot - Project Simplify                     |
 |            Oracle NAIO/WIPRO/Office Depot/Consulting Organization         |
 +===========================================================================+
 |  FILENAME                                                                 |
 |             ODOrgCreateAMImpl.java                                        |
 |                                                                           |
 |  DESCRIPTION                                                              |
 |    Application Module for the Create Organization Page and Organization   |
 |    Warning Pages                                                          |
 |                                                                           |
 |                                                                           |
 |  NOTES                                                                    |
 |         Used for the displaying the Site Extensible Attributes            |
 |                                                                           |
 |  DEPENDENCIES                                                             |
 |    No dependencies.                                                       |
 |                                                                           |
 |  HISTORY                                                                  |
 |                                                                           |
 |   30-Nov-2007 Jasmine Sujithra   Created                                  |
 +===========================================================================*/
package od.oracle.apps.xxcrm.asn.common.customer.server;
import od.oracle.apps.xxcrm.asn.common.fwk.server.ODASNApplicationModuleImpl;
import oracle.apps.asn.common.server.PartyVOImpl;
import od.oracle.apps.xxcrm.asn.common.customer.server.ODCustomerAccessesVOImpl;
import oracle.apps.asn.common.schema.server.ASNUtil;
import oracle.apps.asn.common.server.PartyVORowImpl;
import oracle.apps.fnd.common.MessageToken;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.OAFwkConstants;
import oracle.apps.fnd.framework.OAViewObject;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;

import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.domain.Number;

//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODOrgCreateAMImpl extends ODASNApplicationModuleImpl
{
  /**
   *
   * This is the default constructor (do not remove)
   */
  public ODOrgCreateAMImpl()
  {
  }

  public void commitTransaction(String s)
            {
/*  47*/        String s1 = "od.oracle.apps.xxcrm.asn.common.customer.server.ODOrgCreateAMImpl.commitTransaction";
/*  48*/        OADBTransaction oadbtransaction = getOADBTransaction();
/*  49*/        boolean flag = oadbtransaction.isLoggingEnabled(2);
/*  50*/        if(flag)
                {
/*  51*/            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
/*  52*/            StringBuffer stringbuffer = new StringBuffer();
/*  53*/            stringbuffer.append("Input Parameters: partyId = ");
/*  54*/            stringbuffer.append(s);
/*  55*/            oadbtransaction.writeDiagnostics(s1, stringbuffer.toString(), 2);
                }
/*  57*/        getTransaction().postChanges();
/*  58*/        addLoginUserToSalesTeam(s);
/*  59*/        removeDupCustSalesTeamMembers();
/*  60*/        super.doCommit();
/*  62*/        if(flag)
/*  63*/            oadbtransaction.writeDiagnostics(s1, "End", 2);
            }

            public void removeDupCustSalesTeamMembers()
            {
/*  73*/        String s = "od.oracle.apps.xxcrm.asn.common.customer.server.ODOrgCreateAMImpl.removeDupCustSalesTeamMembers";
/*  74*/        OADBTransaction oadbtransaction = getOADBTransaction();
/*  75*/        boolean flag = oadbtransaction.isLoggingEnabled(2);
/*  76*/        if(flag)
/*  77*/            oadbtransaction.writeDiagnostics(s, "Begin", 2);
/*  80*/        ODCustomerAccessesVOImpl customeraccessesvoimpl = getCustomerAccessesVO();
/*  81*/        if(customeraccessesvoimpl == null)
                {
/*  83*/            MessageToken amessagetoken[] = {
/*  83*/                new MessageToken("OBJECT_NAME", "CustomerAccessesVO")
                    };
/*  84*/            throw new OAException("ASN", "ASN_CMMN_OBJ_MISS_ERR", amessagetoken);
                }
/*  87*/        customeraccessesvoimpl.removeDuplicateAccesses();
/*  89*/        if(flag)
/*  90*/            oadbtransaction.writeDiagnostics(s, "End", 2);
            }

            public void addLoginUserToSalesTeam(String s)
            {
/* 101*/        String s1 = "od.oracle.apps.xxcrm.asn.common.customer.server.ODOrgCreateAMImpl.addLoginUserToSalesTeam";
/* 102*/        OADBTransaction oadbtransaction = getOADBTransaction();
/* 103*/        boolean flag = oadbtransaction.isLoggingEnabled(2);
/* 104*/        if(flag)
                {
/* 105*/            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
/* 106*/            StringBuffer stringbuffer = new StringBuffer();
/* 107*/            stringbuffer.append("Input Parameters: partyId = ");
/* 108*/            stringbuffer.append(s);
/* 109*/            oadbtransaction.writeDiagnostics(s1, stringbuffer.toString(), 2);
                }
/* 112*/        ODCustomerAccessesVOImpl customeraccessesvoimpl = getCustomerAccessesVO();
/* 113*/        if(customeraccessesvoimpl == null)
                {
/* 115*/            MessageToken amessagetoken[] = {
/* 115*/                new MessageToken("OBJECT_NAME", "CustomerAccessesVO")
                    };
/* 116*/            throw new OAException("ASN", "ASN_CMMN_OBJ_MISS_ERR", amessagetoken);
                }
/* 118*/        MessageToken amessagetoken1[] = {
/* 118*/            new MessageToken("OBJECT_NAME", s)
                };
/* 119*/        oracle.jbo.domain.Number number = ASNUtil.stringToJboNumber(s, "ASN_CMMN_STR_TO_JBONUM_ERR", amessagetoken1);
/* 120*/        customeraccessesvoimpl.addLoginUser(number);
/* 122*/        if(flag)
/* 123*/            oadbtransaction.writeDiagnostics(s1, "End", 2);
            }

            public String getPartyNameFromId(String s)
            {
/* 134*/        String s1 = "od.oracle.apps.xxcrm.asn.common.customer.server.ODOrgCreateAMImpl.getPartyNameFromId";
/* 135*/        OADBTransaction oadbtransaction = getOADBTransaction();
/* 136*/        boolean flag = oadbtransaction.isLoggingEnabled(2);
/* 137*/        if(flag)
                {
/* 138*/            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
/* 139*/            StringBuffer stringbuffer = new StringBuffer();
/* 140*/            stringbuffer.append("Input Parameters: partyId = ");
/* 141*/            stringbuffer.append(s);
/* 142*/            oadbtransaction.writeDiagnostics(s1, stringbuffer.toString(), 2);
                }
/* 144*/        PartyVOImpl partyvoimpl = getPartyVO();
/* 145*/        if(partyvoimpl == null)
                {
/* 147*/            MessageToken amessagetoken[] = {
/* 147*/                new MessageToken("NAME", "PartyVO")
                    };
/* 148*/            throw new OAException("ASN", "ASN_CMMN_OBJ_MISS_ERR", amessagetoken);
                }
/* 150*/        partyvoimpl.initQuery(s);
/* 152*/        String s2 = null;
/* 154*/        if(partyvoimpl != null && partyvoimpl.isExecuted())
                {
/* 156*/            PartyVORowImpl partyvorowimpl = (PartyVORowImpl)partyvoimpl.first();
/* 157*/            s2 = partyvorowimpl.getAttribute("PartyName").toString();
                }
/* 160*/        if(flag)
                {
/* 161*/            StringBuffer stringbuffer1 = new StringBuffer();
/* 162*/            stringbuffer1.append("Output Parameters: partyName = ");
/* 163*/            stringbuffer1.append(s2);
/* 164*/            oadbtransaction.writeDiagnostics(s1, stringbuffer1.toString(), 2);
/* 165*/            oadbtransaction.writeDiagnostics(s1, "End", 2);
                }
/* 168*/        return s2;
            }



  /**
   *
   * Container's getter for PartyVO
   */
  public PartyVOImpl getPartyVO()
  {
    return (PartyVOImpl)findViewObject("PartyVO");
  }

  /**
   *
   * Container's getter for CustomerAccessesVO
   */
  public ODCustomerAccessesVOImpl getCustomerAccessesVO()
  {
    return (ODCustomerAccessesVOImpl)findViewObject("CustomerAccessesVO");
  }

  /**
   *
   * Container's getter for ODHzPartySitesExtVLVO
   */
  public ODHzPartySitesExtVLVOImpl getODHzPartySitesExtVLVO()
  {
    return (ODHzPartySitesExtVLVOImpl)findViewObject("ODHzPartySitesExtVLVO");
  }

  /**
   *
   * Container's getter for ODTerrRulesPVO
   */
  public ODTerrRulesPVOImpl getODTerrRulesPVO()
  {
    return (ODTerrRulesPVOImpl)findViewObject("ODTerrRulesPVO");
  }

  /**
   *
   * Container's getter for HzPuiAddressAM
   */
  public ApplicationModuleImpl getHzPuiAddressAM()
  {
    return (ApplicationModuleImpl)findApplicationModule("HzPuiAddressAM");
  }

  /**
   *
   * Container's getter for HzPuiQuickCreatePersonAM
   */
  public ApplicationModuleImpl getHzPuiQuickCreatePersonAM()
  {
    return (ApplicationModuleImpl)findApplicationModule("HzPuiQuickCreatePersonAM");
  }

  /**
   *
   * Container's getter for ODCtctCreateAM
   */
  public ApplicationModuleImpl getODCtctCreateAM()
  {
    return (ApplicationModuleImpl)findApplicationModule("ODCtctCreateAM");
  }

  /**
   *
   * Container's getter for ASNNotesAM
   */
  public ApplicationModuleImpl getASNNotesAM()
  {
    return (ApplicationModuleImpl)findApplicationModule("ASNNotesAM");
  }

  /**
   *
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxcrm.asn.common.customer.server", "ODOrgCreateAMLocal");
  }

    public void insertRecords(String partySiteId,String relationshipId,String wcw,String sicCode,String noSiteAssoc)
      {
        final String METHOD_NAME = "od.oracle.apps.xxcrm.asn.common.customer.server.ODOrgCreateAMImpl.insertRecords";
        OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();
        boolean isProcLogEnabled = dbTrx.isLoggingEnabled(OAFwkConstants.PROCEDURE);
        if (isProcLogEnabled)  {
          dbTrx.writeDiagnostics(METHOD_NAME, "Begin", OAFwkConstants.PROCEDURE);
          StringBuffer buf = new StringBuffer();
          buf.append("  ,Party Site ID = ");
          buf.append(partySiteId);
          dbTrx.writeDiagnostics(METHOD_NAME,buf.toString(), OAFwkConstants.PROCEDURE);
        }

        String viewUsageName = "ODHzPartySitesExtVLVO";
        OAViewObject vo = getODHzPartySitesExtVLVO();

        if(vo == null)
        {
          MessageToken[] tokens = { new MessageToken("OBJECT_NAME", viewUsageName) };
          throw new OAException("ASN", "ASN_CMMN_OBJ_MISS_ERR", tokens);
        }


        vo.reset();
        vo.setRowValidation(false);

        Row newrow = vo.createRow();
        newrow.setAttribute("AttrGroupId",new Number(161));
        newrow.setAttribute("PartySiteId", partySiteId);
        if(wcw!=null && (!"".equals(wcw)))
		     newrow.setAttribute("NExtAttr8",new Number(Integer.parseInt(wcw)));
        newrow.setAttribute("CExtAttr10",sicCode);
        vo.insertRow(newrow);
        newrow.setNewRowState(Row.STATUS_NEW);
        //dbTrx.writeDiagnostics(METHOD_NAME, "SMJ Party Site EXT:SIC Code:"+newrow.getAttribute("CExtAttr10").toString()+" WCW: "+newrow.getAttribute("NExtAttr8").toString(), OAFwkConstants.STATEMENT);

        String attrSql = " select attr_group_id from ego_attr_groups_v egoag where  egoag.attr_group_type = 'HZ_PARTY_SITES_GROUP' AND egoag.attr_group_name = 'SITE_CONTACTS'";
        oracle.jbo.ViewObject attrgrpidvo = createViewObjectFromQueryStmt("AttrGrpIdVO", attrSql);
        attrgrpidvo.executeQuery();
        attrgrpidvo.first();
        String attrGroupId = attrgrpidvo.getCurrentRow().getAttribute(0).toString();
        attrgrpidvo.remove();

        String relId = relationshipId;

        if(!"on".equals(noSiteAssoc)){
			if(relId !=null && (!"".equals(relId))){

			newrow = vo.createRow();

			newrow.setAttribute("AttrGroupId",attrGroupId);
			newrow.setAttribute("PartySiteId", partySiteId);
			newrow.setAttribute("NExtAttr1", relId);

			vo.insertRow(newrow);
			newrow.setNewRowState(Row.STATUS_NEW);
			}
	    }
        dbTrx.commit();

        if (isProcLogEnabled) {
          dbTrx.writeDiagnostics(METHOD_NAME, "End", OAFwkConstants.PROCEDURE);
        }
      }
}
