package od.oracle.apps.xxcrm.asn.common.customer.server;

import java.util.Vector;
import java.io.Serializable;
import java.lang.StringBuffer;

import com.sun.java.util.collections.HashMap;

import oracle.jdbc.driver.OracleConnection;

import oracle.jbo.Row;
import oracle.jbo.common.Diagnostic;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewLinkImpl;

import oracle.apps.fnd.framework.OAViewObject;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAExceptionUtils;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;

import oracle.apps.ar.hz.components.search.server.*;

//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODHzPuiDQMSrchResultsAMImpl extends OAApplicationModuleImpl
{
  public static final String RCS_ID="$Header: ODHzPuiDQMSrchResultsAMImpl.java 115.7 2005/02/08 02:09:36 jhuang noship $";

  public String callDQMSearch( HashMap paramHash, String matchRuleID,
                               String matchType, String partyType, String searchMerged,
                               String restrictSql,
                               StringBuffer extraWhereClause )
  {
      OracleConnection conn = null;
      OADBTransaction trx = null;

      try
      {
        trx = getOADBTransaction();
        conn = (OracleConnection) trx.getJdbcConnection();
      }
      catch(Exception e2)
      {
        e2.printStackTrace();
        return null;
      }

      String srchContextId = HzPuiDqmSrchUtil.execDqmSearch(paramHash, matchRuleID, matchType,
                                            searchMerged, restrictSql,
                                            conn);
      Diagnostic.println("srchContextId = " + srchContextId);
      if (srchContextId == null || "".equals(srchContextId))
          OAExceptionUtils.checkErrors(trx);

      return srchContextId;
  }


  public String callDQMAPIdynamic( HashMap paramHash, String matchRuleID,
                                   String matchType, String partyType, String searchMerged,
                                   String restrictSql,
                                   StringBuffer extraWhereClause )
  {
      OracleConnection conn = null;
      OADBTransaction trx = null;

      try
      {
        trx = getOADBTransaction();
        conn = (OracleConnection) trx.getJdbcConnection();
      }
      catch(Exception e2)
      {
        e2.printStackTrace();
        return null;
      }

      String srchContextId = HzPuiDqmSrchUtil.execDqmAPIDynamic(paramHash, matchRuleID, matchType,
                                                                searchMerged, restrictSql,
                                                                "FIND_PERSONS",
                                                                conn);
      Diagnostic.println("srchContextId = " + srchContextId);
      if (srchContextId == null || "".equals(srchContextId))
          OAExceptionUtils.checkErrors(trx);

      return srchContextId;
  }

  public void executeQuery(   StringBuffer newSql,
                              StringBuffer extraWhereClause,
                              Vector extraParams)
  {
    try
    {
      // join hz_parties table to get search result
      Serializable[] params = { newSql, extraWhereClause, extraParams};
      Class[] classes  =  {  Class.forName("java.lang.StringBuffer"),
                             Class.forName("java.lang.StringBuffer"),
                             Class.forName("java.util.Vector")};
      getODHzPuiDQMSrchResultsVO().invokeMethod("initQuery", params, classes);
    }
    catch(ClassNotFoundException ce)
    {
      // prompt user for input
      Diagnostic.println("Error executing the Search");
      ce.printStackTrace();
    }

    markSelectedRows("NON-CONTACT");
  }

  public void executeContactQuery(   StringBuffer newSql,
                                     StringBuffer extraWhereClause,
                                     Vector extraParams)
  {
    try
    {
      // join hz_parties table to get search result
      Serializable[] params = { newSql, extraWhereClause, extraParams};
      Class[] classes  =  {  Class.forName("java.lang.StringBuffer"),
                             Class.forName("java.lang.StringBuffer"),
                             Class.forName("java.util.Vector")};
      getHzPuiDQMContactsLovVO().invokeMethod("initQuery", params, classes);
    }
    catch(ClassNotFoundException ce)
    {
      // prompt user for input
      Diagnostic.println("Error executing the Search");
      ce.printStackTrace();
    }

    markSelectedRows("CONTACT");
  }

  /**
   * Set first row as selected
   */
   public void markSelectedRows(String searchType)
   {
     Diagnostic.println("Calling ODHzPuiDQMSrchResultsAMImpl.markSelectedRows");

     OAViewObject vo = null;

     if ("CONTACT".equals(searchType))
     {
       vo = (OAViewObject)findViewObject("HzPuiDQMContactsLovVO");
     }
     else
     {
       vo = (OAViewObject)findViewObject("ODHzPuiDQMSrchResultsVO");
     }
     Row row = vo.first();

     if (row != null)
     {
       row.setAttribute("SelectFlag", "Y");

       // reset vo state for save model
       row.setNewRowState(EntityImpl.STATUS_INITIALIZED);
     }
   }

  /**
   *
   * This is the default constructor (do not remove)
   */
  public ODHzPuiDQMSrchResultsAMImpl()
  {
  }

  /**
   *
   * Sample exportable method added for corba test
   */
  public void sampleODHzPuiDQMSrchResultsAMImplExportable()
  {
  }

  /**
   *
   * Sample exportable method added for corba test
   */
  public void sampleODHzPuiDQMSrchResultsAMImplExportable2(String testParam1)
  {
  }

  /**
   *
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxcrm.asn.common.customer.server", "ODHzPuiDQMSrchResultsAMLocal");
  }

  /**
   *
   * Container's getter for HzPuiPersnSrchDtlVO
   */
  public OAViewObjectImpl getHzPuiPersnSrchDtlVO()
  {
    return (OAViewObjectImpl)findViewObject("HzPuiPersnSrchDtlVO");
  }


  /**
   *
   * Container's getter for HzPuiPerznSrchDtlVL1
   */
  public ViewLinkImpl getHzPuiPerznSrchDtlVL1()
  {
    return (ViewLinkImpl)findViewLink("HzPuiPerznSrchDtlVL1");
  }

  /**
   *
   * Container's getter for HzPuiPersnSrchlVL
   */
  public OAViewObjectImpl getHzPuiPersnSrchlVL()
  {
    return (OAViewObjectImpl)findViewObject("HzPuiPersnSrchlVL");
  }

  /**
   *
   * Container's getter for HzPuiDQMContactsLovVO
   */
  public HzPuiDQMContactsLovVOImpl getHzPuiDQMContactsLovVO()
  {
    return (HzPuiDQMContactsLovVOImpl)findViewObject("HzPuiDQMContactsLovVO");
  }

  /**
   *
   * Container's getter for ODHzPuiDQMSrchResultsVO
   */
  public ODHzPuiDQMSrchResultsVOImpl getODHzPuiDQMSrchResultsVO()
  {
    return (ODHzPuiDQMSrchResultsVOImpl)findViewObject("ODHzPuiDQMSrchResultsVO");
  }





}
