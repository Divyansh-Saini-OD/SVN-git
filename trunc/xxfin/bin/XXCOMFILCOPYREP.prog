# +===================================================================+
# |                  Office Depot - Project Simplify                  |
# |      			WIPRO 				                                  |
# +===================================================================+
# | Name  : 	   XXCOMFLCOPYREP	                                     |
# | Description:   This program does two functions:                   |
# |             1) Redirect the output from the "Source file"-source  |
# |                to the path defined by the "Destination file"-dest |
# |                                                                   |
# |             2) Optionally, replace "Source string"-sourcestr with |
# |                "Destination string"-deststr.                      |
# |             3) wait for the particular request ID which is been   |
# |                passed is added as per the defect 6527              |
# |Change Record:                                                     |
# |===============                                                    |
# |Version   Date        Author           Remarks                     |
# |=======   ==========  =============    ============================|
# |DRAFT 1A  02-MAY-2008  Ganesan JV       Initial draft version      |
# |                                        Added fuser to check       |
# |                                        whether the file is in use |
# |                                        or not                     |
# | 2.0      09-SEP-2016    Praveen Vanga          Defect 39261     |
# +===================================================================+


# Displaying program arguments
   
 echo "1 st argument = username/password"
 echo "2 nd argument = $2"
 echo "3 rd argument = $3"
 echo "4 th argument = $4"
 echo "5 th argument = $5"
 echo "6 th argument = $6"
 echo "7 th argument = $7"
 echo "8 th argument = $8"
 echo "9 th argument = $9"
 echo "10 th argument = ${10}"
 echo "11 th argument = ${11}"

 

 # Evaluating request_id,source and destination filenames.

 eval source=$5
 eval dest=$6
 eval delflag=$9
 eval archive_path=${10}
 eval request_id=${11}

 # initialising the phase and status code variables
 phase_code="X"
 status_code="X"

 echo "Source file           = $source"
 echo "Destination file      = $dest"
 echo "Archival path         = $archive_path"
 echo "parent request id     = $request_id"

 # Fetching source and destination strings

 sourcestr=$7
 deststr=$8
 echo "Source string         =$sourcestr"
 echo "Destination string    =$deststr"

 export SQLPATH=$APPL_TOP
 
 
# waiting for the passed request
stat_code=`sqlplus -s /nolog <<EOF
set pagesize 0
set linesize 255
set sqlprompt " "
set serveroutput on 
set verify off
DECLARE
   lb_req_status        BOOLEAN;
   lc_phase             VARCHAR2(50);
   lc_status            VARCHAR2(50);
   lc_devphase          VARCHAR2(50);
   lc_devstatus         VARCHAR2(50);
   lc_message           VARCHAR2(50);
BEGIN
lb_req_status := fnd_concurrent.wait_for_request (
                                              '$request_id'
                                             ,'10'
                                             ,''
                                             ,lc_phase
                                             ,lc_status
                                             ,lc_devphase
                                             ,lc_devstatus
                                             ,lc_message );
dbms_output.put_line(lc_phase||'$'||lc_status||'$');
END;
/
SET FEEDBACK OFF
EOF`
phase_code=`echo $stat_code|cut -d$ -f1`
status_code=`echo $stat_code|cut -d$ -f2`
echo "phase_code="$phase_code
echo "status_code="$status_code

#intialising usage_code variable
usage_code=`fuser $source`
echo $usage_code

# Checking the program to be Completed and Normal
 if [ "${phase_code}" == "Completed" ] && [ "${status_code}" == "Normal" ]
 then 
    # Added for checking the usage of the file by another process
	 while [ "${usage_code}" != "" ]
	 do
      echo "Process not yet finished"
		echo $usage_code
		usage_code=`fuser $source`
	 done
	 echo "inside $phase_code"
	 # Copying source file to destination. 
	 # Optionally changing source string to destination string.

	 touch $dest 

	# $dest1= `echo $dest | awk '{print $1}'`
	# echo "dest1 = $dest1"
	# perl -pe 's/'$7'/'$8'/g' $source > $dest 
	cp $source  $dest
	#chmod 777 $dest*


	DAT=`date '+_%y%m%d%H%M%S_%N'`
	file_name=${source##*/}

	echo "file Name "$file_name

	#file_name_1=`echo $file_name |cut -f1 -d.`

	#archival_file=$archive_path"/"$file_name_1$DAT"."${source##*.}
	archival_file=$archive_path"/"$file_name$DAT
	

	 if [ "${archive_path}" != "" ]
	 then 
		 echo "File is being Archived" 
		 echo "The Archival File Name "${archival_file}
		  cp $source ${archival_file}
	 fi

	# Deleting the file, if Delete Flag is Y

	 if [ "$delflag" = "Y" ]
	 then 
			echo "Deleting the file"
			 rm $source
	 fi
fi
