# +===================================================================+
# |                 Office Depot - Project FIT                        |
# |         Capgemini/Office Depot/Consulting Organization            |
# +===================================================================+
# | Name       :   XXCOMMULFILCOPY	                              |
# | Description:   This program does two functions:                   |
# |             1) Redirect the output from the "Source file"-source  |
# |                to the path defined by the "Destination file"-dest |
# |                                                                   |
# |             2) Optionally, replace "Source string"-sourcestr with |
# |                "Destination string"-deststr.                      |
# |                                                                   |
# |             3) Calls cuncurrent program to insert file name into  |
# |                log table XX_CRMAR_INT_LOG.                        |
# |                                                                   |
# |Change Record:                                                     |
# |===============                                                    |
# |Version   Date        Author           Remarks                     |
# |=======   ==========  =============    ============================|
# | 1.0     19-NOV-2011  Akhilesh Agrawal   Initial version           |
# +===================================================================+


# Displaying program arguments
## we are hardcoding value.. argument is failing if we pass $ parameter
   
export source_path=$XXCRM_DATA/ftp/in/webcollect
export file_name_string='XX_CDH_INBOUND'
export archieve_path=$XXCRM_DATA/archive/inbound/webcollect
export destination_path=$XXCRM_DATA/inbound
export delete_flag='Y'


 export filestr=`ls ${source_path} | grep ${file_name_string}`
 
 if [[ -z "${filestr}" ]]; then
   echo ""
   echo "There is no file in ${source_path} with matching pattern ${file_name_string}"
   echo ""
   exit 1
 fi

 for sourcefile in $filestr
 do
   source=`echo ${source_path}"/"${sourcefile}`
 
 # Fetching source and destination strings

 if [[ ! -e ${source} ]]; then
   echo "Source file is not existing or Source directory does not have sufficient privileges"     
   exit 1
 fi

 if [[ ! -r ${source} ]]; then
   echo "Source file is not readable"     
   exit 1
 fi

 # Copying source file to destination. 
 # Optionally changing source string to destination string.



 destfile=`echo ${destination_path}"/"${sourcefile}`
 
cp ${source} ${destfile}

 if [ $? -ne 0 ]; then
   echo "Failure in copying the file"  
   exit 1
 else  
   echo "File has been Copied"  
 
 lc_submit_req=`CONCSUB "$1" "XXCNV" "OD (US) Customer Conversion" "$3" WAIT=N CONCURRENT XXCRM "XX_CRM_INS_INT_LOG" ${sourcefile} "N" "N"`

 echo $lc_submit_req

 fi



echo "  "
echo " ls -ltr command executed for the existence of file in Destination location  "
echo "  "
ls -ltr $destfile
echo "  "

DAT=`date '+_%y%m%d%H%M%S_%N'`
file_name=${source##*/}

archival_file=archieve_path"/"${sourcefile}$DAT

# Archiving the file, if Delete Flag is Y
 if [ "${archive_path}" != "" ]
 then 
    echo "File is being Archived" 
    echo "The Archival File Name "${archival_file}
    cp $source ${archival_file}

    if [ $? -ne 0 ]; then
      echo "Failure in Archiving the Source file"  
    fi
 
 fi

# Deleting the file, if Delete Flag is Y
echo "delete flag : ${delete_flag}"
 if [ "$delete_flag" = "Y" ]
 then
      echo "File is being deleted"  
      rm $source
     
      if [ $? -ne 0 ]; then
        echo "Failure in Deleting the Source file"  
	  else
	    echo "The File " ${sourcefile} "has been deleted."
      fi
	  

 fi
done
