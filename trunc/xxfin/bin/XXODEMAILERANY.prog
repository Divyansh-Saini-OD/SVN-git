#!/bin/ksh
# ---------------------------------------------------------------------------------------- +
# Filename:   XXODEMAILERANY                                                               |
# Purpose:    This Program is used to send the Concurrent Program Request Output as an     |
#             Email to the user based on the Attachment Flag.If the Flag is selected as    |
#             N (No),then the output is sent as the Email body.If the Flag is selected as  |
#	           Y (Yes),then the output file is sent as an Attachment with the Email.        |
#             The user has to enter the Program Name,Email Address(es),Email Subject,      |
#             Email Body ,the value for the Attachment Flag and the extension of file.     |
# ---------------------------------------------------------------------------------------- +

#  Concurrent Program Definitions Parameters

#  var1  is --> Job name 
#  var2  is --> Concurrent Program Request ID.
#  var3  is --> Login Credentials

#  User defined Parameters

#  var9  is --> Concurrent Program Short Name
#  var10 is --> Email Address(es)
#  var11 is --> Email Subject
#  var12 is --> Email Body Text
#  var13 is --> Email Attachment Flag
#  var14 is --> Request ID
#  var15 is --> Extension of File

# VERSION       AUTHOR                   COMMENTS           DATE          |
# ------------------------------------------------------------------------|
# 1.0           Navin Agarwal            Initial Version    12-OCT-2010   |
#                                                                         |
#-------------------------------------------------------------------------|


var2=$4
var9=${5}
var10=${6}
var11=${7}
var12=${8}
var13=${9}
var14=${10}
var15=${11}

echo "Current Request Id            : "${var2}
echo
echo "Concurrent Program Short Name :"${var9}
echo "Email Address(es)             :"${var10}
echo "Email Subject                 :"${var11}
echo "Email Body Text               :"${var12}
echo "Email Attachment Flag         :"${var13}
echo "Request ID                    :"${var14}
echo "Extension of File             :"${var15}


# Assigning Required Parameters to the Shell variables.

program_short_name=${var9}
to_email_address=${var10}
email_sub=`echo $var11 | sed 's/ /_/g'`
email_body=${var12}
email_attachment=${var13}
request_id=${var14}

if [ ! "${var15}" ]
then
   extension="*"
else
   extension=${var15}
fi

# Defining Constants.

filepath=$APPLCSF/$APPLOUT/
cust_path=$XXFIN_DATA/inbound/


# Constructing the names of the request output and email attachment files.

filename=o${request_id}.out
ext_filename=${program_short_name}"_"${request_id}"_1."${extension}
file=$filepath$filename
extfile=$filepath$ext_filename

echo
echo "Output File Name         : "$filename
echo "File Name                : "$ext_filename
echo "File Path                : "$filepath
echo ""

if [ ! -f $extfile ]
then
   echo "No Request Output file found.   Email not sent."
else
   attachment=XX_${email_sub}_${p_req_id}.txt
   ext_attachment=$ext_filename

   if [ "${email_attachment}" = "Y" ]
   then

      # Send an email the user with the attachment.

      `mailx -s ${email_sub}_${request_id} -a $extfile ${to_email_address} <<EOF
      ${email_body}
      ---------------------------------------------------
      This is a system generated mail.Please do not reply.
      ----------------------------------------------------
      `
      echo "Email Sent with Request Output as Attachment."

   else 
   cat $file|mailx -s ${email_sub}_${request_id} ${to_email_address}
   fi

fi

# Exiting from the shell program.
exit 0   # Success.
