ffice Depot - Project Simplify                  |
# +===================================================================+
# | Name  : 	   XXCOMIRECFILCOPY	                                  |
# | Description:   This program does two functions:                   |
# |             1) Redirect the output from the "Source file"-source  |
# |                to the path defined by the "Destination file"-dest |
# |                                                                   |
# |             2) Optionally, replace "Source string"-sourcestr with |
# |                "Destination string"-deststr.                      |
# |Change Record:                                                     |
# |===============                                                    |
# |Version   Date        Author           Remarks                     |
# |=======   ==========  =============    ============================|
# |DRAFT 1A  4-APR-2017  Havish Kasina    Initial Version             |
# +===================================================================+


# Displaying program arguments
   
 echo "1 st argument = username/password"
 echo "2 nd argument = $2"
 echo "3 rd argument = $3"
 echo "4 th argument = $4"
 echo "5 th argument = $5"
 echo "6 th argument = $6"
 echo "7 th argument = $7"
 echo "8 th argument = $8"
 echo "9 th argument = $9"
 echo "10 th argument = ${10}"

 

 # Evaluating source and destination filenames.

 eval source=$5
 eval dest=$6
 eval delflag=$9
 eval archive_path=${10}

 echo "Source file           = $source"
 echo "Destination file      = $dest"
 echo "Archival path         = $archive_path"
 echo "Del flag              = $delflag"
 # Fetching source and destination strings

 sourcestr=$7
 deststr=$8
 echo "Source string         =$sourcestr"
 echo "Destination string    =$deststr"

 if [[ ! -e ${source} ]]; then
   echo "Source file is not existing or Source directory does not have sufficient privileges"     
   exit 1
 fi

 if [[ ! -r ${source} ]]; then
   echo "Source file is not readable"     
   exit 1
 fi

 # Copying source file to destination. 
 # Optionally changing source string to destination string.

 touch $dest 

 if [ $? -ne 0 ]; then
   echo "Cannot create Destination file"  
   exit 1
 fi

# $dest1= `echo $dest | awk '{print $1}'`
# echo "dest1 = $dest1"
 perl -pe 's/'$7'/'$8'/g' $source> $dest 

 if [ $? -ne 0 ]; then
   echo "Failure in copying the file"  
   exit 1
 else  
   echo "File has been Copied"  
 fi

 # added for defect 10873 by mohan

echo "  "
echo " ls -ltr command executed for the existence of file in Destination location  "
echo "  "
ls -ltr $dest
echo "  "

#cp $source > $dest
#chmod 777 $dest*


DAT=`date '+_%y%m%d%H%M%S_%N'`
file_name=${source##*/}

echo "File Name: "$file_name


file_name_1=`echo $file_name |cut -f1 -d.`
echo "File Name 1: "$file_name_1

file_name_2=`echo $file_name_1 |cut -c2-9`
echo "File Name 2: "$file_name_2

FILE_DIR="$APPLCSF/$APPLOUT"
OUT_FILE="XXARINVIND_"$file_name_2"_1.PDF"
PDF_FILE=$FILE_DIR/$OUT_FILE

#archival_file=$archive_path"/"$file_name_1$DAT"."${source##*.}
#Commented the Above Codes for Defect 6286 by Subbu

archival_file=$archive_path"/"$file_name$DAT
# Added the Above Code by Subbu for the Defect 6286


#Archiving  the file  Defect 6286
echo "Archive Path"$archive_path
 if [ ${archive_path} != "" ]
 then 
    echo "File is being Archived" 
    echo "The Archival File Name "${archival_file}
    cp $source ${archival_file}

    if [ $? -ne 0 ]; then
      echo "Failure in Archiving the Source file"  
      exit 1
    fi
 
 fi

# Deleting the file, if Delete Flag is Y
echo "Del flag"$delflag
 if [ $delflag = "Y" ]
 then
      echo "File is being deleted"  
      rm $source
      rm $PDF_FILE
      echo "Below files are deleting from the source directory"
      echo $source
      echo $PDF_FILE
      if [ $? -ne 0 ]; then
        echo "Failure in Deleting the Source file"  
        exit 1
	  else
	    echo "The File " ${file_name} "has been deleted."
      fi
	  

 fi


