#!/usr/bin/ksh
# +===================================================================+
# |                  Office Depot - Project Simplify                  |
# |                       WIPRO Technologies                          |
# +===================================================================+
# | Name :      PO Auto Requisition Load (Shell Script)               |
# | Description : To Load the Requisitions from the file in           |
# | XXFIN_DATA/uploadpath to the staging table XX_PO_REQUISITIONS_STG |
# |                                                                   |
# |                                                                   |
# |Change Record:                                                     |
# |===============                                                    |
# |Version   Date          Author              Remarks                |
# |=======   ==========   =============        =======================|
# |1.0       21-MAR-2007  Gowri Shankar        Initial version        |
# |1.1       22-OCT-2007  Samitha U M          Variable changed       |
# |                                            for the soft link      |
# |                                            (Defect 2482)          |
# |1.2       14-NOV-2007  Arul Justin Raj      Modifed based on the   |
# |                                            template CR # 267      |
# |1.3       25-JUL-2008  Radhika Raman        Fixed defect 9178      |  
# |                                                                   |
# |1.4       02-Aug-2010  Priyanka Nagesh      Replaced '~' with $HOME|
# |                                            for Defect 7204        | 
# | 1.5      09-SEP-2016    Praveen Vanga          Defect 39261     |
# +===================================================================+

#Commented for defect 2482 
#var1=`echo $1 | awk '{print $1}'` 
#var2=`echo $1 | awk '{print $2}'`
#var3=`echo $1 | awk '{print $3}'`
#var4=`echo $1 | awk '{print $4}'`
#var5=`echo $1 | awk '{print $5}'`
#var6=`echo $1 | awk '{print $6}'`
#var7=`echo $1 | awk '{print $7}'`
#var8=`echo $1 | awk '{print $8}'`
#var9=`echo $1 | awk '{print $9}' | tr -d '"'`
#var10=`echo $1 | awk '{print $10}' | tr -d '"'`
#var11=`echo $1 | awk '{print $11}' | tr -d '"'`


#Added for defect 2482
var2=$4
var9=$5
var10=$6

echo "Request ID  = " $var2
echo "File Name   = " $var9
echo "Batch ID    = " $var10
echo 

# -------------
# Set variables
# -------------

#Commented for defect 2482 
#USER_PASS=`echo ${var3#FCP_LOGIN=} | tr -d '"'`


FILE_NAME=${var9}
BATCH_ID=${var10}

FILE_DIR="$XXFIN_DATA/upload"
#REQ_ID=`echo $var2 | cut -c11-20`
REQ_ID=${var2}
MGR_LOG="l"${REQ_ID}".req"

echo "FILE_DIR     = $FILE_DIR"

echo ' '
echo "REQ_ID       = $REQ_ID"
echo "MGR_LOG      = $MGR_LOG"
echo ' '

# ==========================================================================
# Remove the temporary files if they exist
# ==========================================================================

if [ -s ${FILE_DIR}/XXPOAUTOCREREQ.log ]; then
     rm -f ${FILE_DIR}/XXPOAUTOCREREQ.log; fi;

if [ -s ${FILE_DIR}/XXPOAUTOCREREQ.bad ]; then
     rm -f ${FILE_DIR}/XXPOAUTOCREREQ.bad; fi;

if [ -s ${FILE_DIR}/XXPOAUTOCREREQ.dis ]; then
     rm -f ${FILE_DIR}/XXPOAUTOCREREQ.dis; fi;

# ==========================================================================
# Define Directories
# ==========================================================================

APPSPW=$USER_PASS

SQL_DIR="$XXFIN_TOP/admin/sql"
CTL_DIR="$XXFIN_TOP/bin"
CTL_FILE="XXPOAUTOCREREQ.ctl"

DEST_FILE_NAME=${FILE_DIR}/${FILE_NAME}
echo "Destination File Name = ${DEST_FILE_NAME}"

# ==========================================================================
# Check to see if DATA file exists
# ==========================================================================

if [[ ! -s ${DEST_FILE_NAME} ]]; then
   echo "Destination File Name = ${DEST_FILE_NAME}"                                       
   echo "Error in locating input Invoice file. File not uploaded correctly " 
   echo "OR the file does not exist."              
   exit 1
fi

# ==========================================================================
# Check to see if Control file exists
# ==========================================================================

if [[ ! -s ${CTL_DIR}/${CTL_FILE}  ]]; then
   echo "Destination File Name = ${CTL_DIR}/${CTL_FILE}"                                       
   echo "Error in locating Control file. File not uploaded correctly " 
   echo "OR the file does not exist."              
   exit 1
fi


LOG_FILE="${FILE_DIR}/XXPOAUTOCREREQ.log"
BAD_FILE="${FILE_DIR}/XXPOAUTOCREREQ.bad"
DIS_FILE="${FILE_DIR}/XXPOAUTOCREREQ.dis"

# added sed commands for defect 9178 - Radhika Raman
# changing the constant 1234 in ctl file to request id

sed s/"1234"/$REQ_ID/ $CTL_DIR/$CTL_FILE>$CTL_DIR/autoreq.ctl
mv $CTL_DIR/autoreq.ctl $CTL_DIR/$CTL_FILE
chmod 777 $CTL_DIR/$CTL_FILE

# completion of changes for defect 9178

#sqlldr_cmd="sqlldr parfile=~/parfile.apps"           -- Commented for Defect 7204
 sqlldr_cmd="sqlldr parfile=$HOME/parfile.apps"       #  Added     for Defect 7204

which sqlldr
echo ""
echo "SQL*Loading the Requisitions..."                    
echo ""

#echo "Log File $LOG_FILE"
echo ${sqlldr_cmd} control=${CTL_DIR}/${CTL_FILE} data=${DEST_FILE_NAME} log=${LOG_FILE} bad=${BAD_FILE} skip=4 errors=0
#change for CR# 267 
#Modified as Skip=4 

#sqlldr parfile=~/parfile.apps control=$CTL_DIR/$CTL_FILE data=$DEST_FILE_NAME log=$LOG_FILE bad=$BAD_FILE skip=4 errors=0       -- Commented for Defect 7204
 sqlldr parfile=$HOME/parfile.apps control=$CTL_DIR/$CTL_FILE data=$DEST_FILE_NAME log=$LOG_FILE bad=$BAD_FILE skip=4 errors=0   #  Added     for Defect 7204



# ==========================================================================
# VERIFY TRANSFER PRICING RECORDS
# ==========================================================================

# ---------------------------------------------------------------------
# Check for rejected SQLLOAD records for Requisitions
#   if bad file exists then get count of rejected records from log file
# ---------------------------------------------------------------------

if [ -s ${BAD_FILE} ]; then
   bad_errs=`grep -c 'Total logical records rejected:         0' \
                 ${LOG_FILE}`

   echo "Rejected record found"                            
   
   if [ "$bad_errs" -ne 1 ]; then
      echo ""                                                  
      echo "Rejected records..."                        
      echo ""                                                  
      echo "Please correct these Requisitions."                    
      echo "----------------------------------------------"   
      cat ${BAD_FILE}
      echo ""                                                  
      echo ""                                                  
      echo "SQLLOAD Log..."                                                  
      echo ""                                                  
      cat ${LOG_FILE}
       
      # -------------------
      # Remove the BAD file
      # -------------------

      #rm -f ${BAD_FILE}

   fi

# --------------------------------------------
# Continue processing with NO rejected records
#    (bad file was not found)
# --------------------------------------------

else
   echo "-- No rejected Requisitions were found" 
fi

# -----------------------------------
# Check for discarded SQLLOAD records
# -----------------------------------

echo ""                                         
echo "Checking for discarded records..." 
echo ""                                         

if [ -s ${DIS_FILE} ]; then
   dis_errs=`grep -c 'Total logical records discarded:        0' \
                  ${LOG_FILE}`

   echo "discard records found: "$dis_errs

   dis_commas=`grep -c ',' $DIS_FILE`

   if [ "$dis_errs" -ne 1 -a "$dis_commas" -ne 0 ]
   then
      echo ""                                                   
      echo "Discarded records..."                        
      echo ""                                                   
      echo "Please correct these invoices."                     
      echo "----------------------------------------------"
      cat ${DIS_FILE}
      echo ""                                                  
      echo ""                                                  
      echo "SQLLOAD Log..."                                                  
      echo ""                                                  
      cat ${LOG_FILE}
      
      # -----------------------
      # Remove the DISCARD file
      # -----------------------

      #rm -f ${DIS_FILE}
   fi

# ---------------------------------------------
# Continue processing with NO DISCARDED records
# ---------------------------------------------

else
   echo "-- No discarded Requisition records were found" 
fi  

echo "Completion of Requisition Loading..."

#changing back request id to 1234, chnages for defect 9178 - Radhika Raman

sed s/$REQ_ID/"1234"/ $CTL_DIR/$CTL_FILE>$CTL_DIR/autoreq.ctl
mv $CTL_DIR/autoreq.ctl $CTL_DIR/$CTL_FILE
chmod 777 $CTL_DIR/$CTL_FILE

#changes completed for defect 9178

##############

#Commented for defect 2482 
#connect=$APPSPW@$TWO_TASK

export SQLPATH=$APPL_TOP
 

# Connecting to ORACLE and determining the request id of the output file.

connect_id=`sqlplus -s /nolog <<EOF
SET HEADING OFF
SET PAGESIZE 0
SET LINESIZE 255
SET SQLPROMPT ""
SET ECHO OFF
SET FEEDBACK OFF
SET VERIFY OFF
SET SERVEROUTPUT ON 
BEGIN
   UPDATE xx_po_requisitions_stg SET batch_id = '${BATCH_ID}', FILE_NAME = '${FILE_NAME}' WHERE request_id = '${REQ_ID}';
   COMMIT;
END;
/
EOF`

exit 0   # Success
