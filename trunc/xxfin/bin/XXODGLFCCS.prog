
# +===================================================================+
# |                  Office Depot - Project Simplify                  |
# |      			 				      |
# +===================================================================+
# | Name  : 	   XXODGLFCCS.prog   	                              |
# | RICE ID    :   
# | Description:   This calls the FCCS program                    |
# |                                            |
# |                                                                   |
# |                .                                       |
# |                                                                   |
# |                                                                   |
# |                                                                   |
# |Change Record:                                                     |
# |===============                                                    |
# |Version   Date        Author           Remarks                     |
# |=======   =========  =============    ============================|
# |DRAFT 1A 22-JUL-2019 Priyam P       Initial draft version       |
# +===================================================================+
# APPS Defined Concurrent Program Parameters, Do Not change the below parameters.

echo "1 st argument = username/password"
echo "2 nd argument = $2"
echo "3 rd argument = $3"
echo "4 th argument = $4"

 #
# User Defined Concurrent Program Parameters
#
eval p_sob_name=$5
eval p_company=$6
eval p_year=$7
eval p_period_name=$8
# User Defined Concurrent Program Parameters PRINT
echo "p_sob_name = $p_sob_name"
echo "p_company = $p_company"
echo "p_year = $p_year"
echo "p_period_name = $p_period_name"

export SQLPATH=$APPL_TOP

V_RESULT2=`sqlplus -s /nolog <<EOF
     set pagesize 0
     set linesize 255
     set sqlprompt " "
     set serveroutput on 
     set verify off

EXECUTE xx_gl_legacy_extract_pkg.gl_ytd_wrapper('$5','$6','$7','$8');
     COMMIT;

     exit
EOF`

echo "$V_RESULT2"

echo " "



V_RESULT2=`sqlplus -s /nolog <<EOF
     set pagesize 0
     set linesize 255
     set sqlprompt " "
     set serveroutput on 
     set verify off


select directory_path a from dba_directories WHERE directory_name ='XXFIN_OUTBOUND_GLEXTRACT'; 
 

     COMMIT;

     exit
EOF`


echo "V_RESULT2=$V_RESULT2"


eval FILE_IN_FOLDER=$V_RESULT2
#Remove Hardcoded path 

#eval FILE_IN_FOLDER=/app/ebs/ctgsidev02/xxfin/outbound/glextract
echo "FILE_IN_FOLDER=$FILE_IN_FOLDER"

#Remove this hardcoding


 V_RESULT2=`sqlplus -s /nolog <<EOF
     set pagesize 0
     set linesize 255
     set sqlprompt " "
     set serveroutput on 
     set verify off


select 'GL_LegacyODP_' || TO_CHAR (to_date ('$8', 'MON-YY'), 'Mon') || '_' || TO_CHAR (to_date ('$8', 'MON-YY'), 'Mon')|| '_' || TO_CHAR (to_date ('$8', 'MON-YY'), 'YY') from dual; 
 

     COMMIT;

     exit
EOF`


echo "V_RESULT2=$V_RESULT2"

#Assign lc_zip_file_name to v_result2

eval lc_zip_file_name=$V_RESULT2

echo "lc_zip_file_name= $lc_zip_file_name"

#Getting FTP out path

V_RESULT2=`sqlplus -s /nolog <<EOF
     set pagesize 0
     set linesize 255
     set sqlprompt " "
     set serveroutput on 
     set verify off


select directory_path||'/'||'hyperion' a from dba_directories WHERE directory_name ='XXFIN_OUT'; 
 

     COMMIT;

     exit
EOF`

eval FILE_OUT_FOLDER=$V_RESULT2

echo "FILE_OUT_FOLDER=$FILE_OUT_FOLDER"



cd ${FILE_IN_FOLDER}


echo "lc_zip_file_name= $lc_zip_file_name"


if [ ! -d ${FILE_IN_FOLDER} ]
then
  echo "File :"$FILE_IN_FOLDER " not found..."
  exit 1
fi
if [ ! -s ${FILE_IN_FOLDER} ]
then
  echo "File :"$FILE_IN_FOLDER " size is zero..."
  exit 1
fi

lc_file=LegacyODP_ODPEBS
echo "lc_file=$lc_file"

#
# Create a zip file
# ${FILE_OUT_FOLDER}


  zip   -r  $lc_zip_file_name.zip $lc_file*.*
  
if [ $? -gt 0 ]
then
echo
echo "Failed to create the zip file "
else
echo
echo ${FILE_IN_FOLDER} "has been successfully zipped "
chmod 755 ${lc_zip_file_name}.zip
touch ${lc_zip_file_name}.zip
fi

mv $lc_zip_file_name.zip  ${FILE_OUT_FOLDER}
rm -f $lc_file*.*
if [ $? -ne 0 ]; then
echo "Failure in Deleting the Source file"  
else
echo "The Files in "${FILE_IN_FOLDER} "have been deleted."
fi

        #  zip -rj ${FILE_OUT_FOLDER} ${FILE_IN_FOLDER}
            #if [ $? -gt 0 ]
            #then
              #echo
              #echo "Failed to create the zip file "
            #else
              #echo
              #echo ${FILE_IN_FOLDER} "has been successfully zipped "

              # Added chmod and touch command for Defect 11011
              #chmod 755 ${FILE_OUT_FOLDER}.zip
              #touch ${FILE_OUT_FOLDER}.zip
            #fi            
         #rm ${FILE_IN_FOLDER}/*.*
           #if [ $? -ne 0 ]; then
             #echo "Failure in Deleting the Source file"  
            # else
                      #echo "The Files in "${FILE_IN_FOLDER} "have been deleted."
           #fi