
# +===================================================================+
# |                  Office Depot - Project Simplify                  |
# |      			 				      |
# +===================================================================+
# | Name  : 	   XXCEMPLINVK.prog   	                              |
# | RICE ID    :   I3091
# | Description:   This program does the following                    |
# |             1) Calls the program to get settlement file from      |
# |                amazon marketplace                                 |
# |                                                                   |
# |                All the required values are fetched from translati-|
# |                tables. The translation definition is OD_SETTLEMEN-|
# |                T_PROCESSES.                                       |
# |                                                                   |
# |                                                                   |
# |                                                                   |
# |Change Record:                                                     |
# |===============                                                    |
# |Version   Date        Author           Remarks                     |
# |=======   ==========  =============    ============================|
# |DRAFT 1A 05-SEP-2014  Avinash Baddam   Initial draft version       |
# | 2.0     09-SEP-2016  Praveen Vanga          Defect 39261          |
# | 2.1     06-Nov-2017  Digamber S             Defect 43545          |
# +===================================================================+

# Displaying program arguments
export CLASSPATH=$CLASSPATH:$XXCOMN_TOP/java/commons-codec-1.3.jar:$XXCOMN_TOP/java/httpclient-4.2.jar:$XXCOMN_TOP/java/httpcore-4.2.jar:$XXCOMN_TOP/java/MaWSJavaClientLibrary-1.1.jar
TMPFILE=$XXFIN_DATA/AMZ_MWS_TMP.$$   #Changed $HOME to $XXFIN_DATA for the Defect 12210
>$TMPFILE;chmod 777 $TMPFILE

EXIT=0

 echo "1 st argument = username/password"
 echo "2 nd argument = $2"
 echo "3 rd argument = $3"
 echo "4 th argument = $4"
 echo "5 th argument = $5"
 echo "6 th argument ReportId = $6"
 
# Fetching Process Name and filename.

export SQLPATH=$APPL_TOP
 

reportid=$6
translationsource=$5 
  
V_RESULT=`sqlplus -s /nolog <<EOF
set pagesize 0
set linesize 255
set sqlprompt " "
set serveroutput on 
set verify off
      select 
            xftv.Target_Value1 
            || '|' || xx_encrypt_decryption_toolkit.decrypt(xftv.Target_Value2)
            || '|' || xx_encrypt_decryption_toolkit.decrypt(xftv.Target_Value3)
            || '|' || xftv.Target_Value4
            || '|' || xftv.Target_Value5
            || '|' || xftv.Target_Value6
            || '|' || xftv.Target_Value7
            || '|' || xftv.Target_value8
            || '|' || xftv.Target_value9
            || '|' || xftv.Target_value10
			|| '|' || xftv.Target_value11
      from  
            xx_fin_translatedefinition xftd,
            xx_fin_translatevalues     xftv
      where 
            xftd.translation_name   ='OD_SETTLEMENT_PROCESSES'
            and xftv.source_value1  ='$translationsource' 
            and xftd.translate_id   =xftv.translate_id;
exit
EOF`

url=`echo $V_RESULT | awk '{ split($0,MODULE,"|"); print MODULE[1] }'`
accesskeyid=`echo $V_RESULT | awk '{ split($0,MODULE,"|"); print MODULE[2] }'`
secretaccesskey=`echo $V_RESULT | awk '{ split($0,MODULE,"|"); print MODULE[3] }'`
appname=`echo $V_RESULT | awk '{ split($0,MODULE,"|"); print MODULE[4] }'`
appversion=`echo $V_RESULT | awk '{ split($0,MODULE,"|"); print MODULE[5] }'`
merchantid=`echo $V_RESULT | awk '{ split($0,MODULE,"|"); print MODULE[6] }'`
reporttype=`echo $V_RESULT | awk '{ split($0,MODULE,"|"); print MODULE[7] }'`
inbounddirectory1=`echo $V_RESULT | awk '{ split($0,MODULE,"|"); print MODULE[8] }'`
filename=`echo $V_RESULT | awk '{ split($0,MODULE,"|"); print MODULE[9] }'`
archivedirectory=`echo $V_RESULT | awk '{ split($0,MODULE,"|"); print MODULE[10] }'`
fileposition=`echo $V_RESULT | awk '{ split($0,MODULE,"|"); print MODULE[11] }'`

eval inbounddirectory=$inbounddirectory1/$filename

echo " "
echo " "
echo "Translationsource                      = $translationsource"
echo "URL                                    = $url "
echo "ReportType                             = $reporttype"
echo "Inbounddirectory                       = $inbounddirectory"
echo "Archivedirectory                       = $archivedirectory"
echo "fileposition                           = $fileposition"

java od.oracle.apps.xxfin.ar.mws.GetSettlementReport $url $accesskeyid $secretaccesskey $appname $appversion $merchantid $reporttype $inbounddirectory $fileposition $reportid > $TMPFILE

Exception=`grep 'Exception' $TMPFILE`
Success=`grep 'Program Completed Successfully'  $TMPFILE`

if [ "$Success" != "" ]
then 
    echo " "
    cat $TMPFILE
    echo "SUCCESS: Successful transmission"
    rm $TMPFILE
    
    DAT=`date '+_%y%m%d%H%M%S_%N'`
    settlementid=$(awk -F '\t' 'NR==2{print $1}' $inbounddirectory)
    echo $settlementid
    
    # absolute path
    eval archival_file=$archivedirectory/$filename$settlementid$DAT 

    echo "File is being Archived" 
    echo "The Archival File Name "${archival_file}
    cp $inbounddirectory ${archival_file}
    if [ $? -ne 0 ]; then
	echo "Failure in Archiving the Source file"  
	exit 1
    fi
    
    exit 0
fi

echo "ERROR: Please refer below for error details"
cat $TMPFILE
rm $TMPFILE
exit 1
