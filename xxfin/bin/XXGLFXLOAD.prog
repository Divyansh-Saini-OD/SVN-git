#! /usr/bin/ksh
# ----------------------------------------------------------------------------------------
# Filename :   XXGLRATELOAD
# Purpose  :   To create a reqeust file and move it to app/ebs/ctgsidev02/xxfin/ftp/out 
# RICE id  :   CM: I2122 - Automate Exchange Rates Direct Feed to EPM.  Defect 11638
# ----------------------------------------------------------------------------------------
# VERSION  AUTHOR                        COMMENTS                  DATE     
# ----------------------------------------------------------------------------------------
# 1.0      Ritch Hartman                 Initial Version           04-MAY-2011 
# 1.1      Paddy Sanjeevi                R12.2.5 Retrofit          06-SEP-2016
# ----------------------------------------------------------------------------------------
# Parsing System Defined Parameters.

# Added for Defect 2482
lc_run_date=${5}

#  User defined Parameters

#  var6  is --> OD Rate Type
#  var7  is --> Period Year
var6=${6}
var7=${7}

rc="0"
echo "Rate Run Date : " ${lc_run_date}

MON=`echo ${lc_run_date} |cut -f1 -d '-'`
DAY=`echo ${lc_run_date} |cut -f2 -d '-'`
YEAR=`echo ${lc_run_date} |cut -f3 -d '-'|cut -b3-`
var7=`echo $7 | cut -b3-`
DAT="$6_$var7.txt"
DAT1="$6_$DAY$MON$YEAR.txt"
lc_file_name=$DAT
echo "File Name     : " ${lc_file_name}
RATE_TYPE="$6"
echo "Rate Type: " ${RATE_TYPE}

#Decrypting the file
lc_custom_top="$XXFIN_DATA"

decrypt_lc_file_name=$DAT1

source_path="$lc_custom_top/ftp/in/exchangerates/"
archive_path="$lc_custom_top/archive/inbound/"
echo "Archived Path : " ${archive_path}
echo "Source Path : " ${source_path}

$XXFIN_TOP/bloomberg/bin/des -D -u -k "f+c:HE^," $source_path$lc_file_name $source_path$decrypt_lc_file_name
echo "Bloomberg:" $XXFIN_TOP/bloomberg/bin/des -D -u -k "f+c:HE^," $source_path$lc_file_name $source_path$decrypt_lc_file_name

 rc="$?"
 if [ "rc" -ne "0" ]; then
  echo "decrypt failed! - return code = " ${rc}
  exit 1
 fi

chmod 755 $source_path$decrypt_lc_file_name
 rc="$?"
 if [ "rc" -ne "0" ]; then
  echo "chmod failed! - return code = " ${rc}
  exit 1
 fi

#archive the file in the folder specified.

#Moving the File
cp $source_path$decrypt_lc_file_name $archive_path$lc_file_name
 rc="$?"
 if [ "rc" -ne "0" ]; then
  echo "cp failed! - return code = " ${rc}
  exit 1
 fi
 
TMP_DECR_FILE=$source_path${decrypt_lc_file_name}x
#CONVERSION_DATE=`grep MHIS_CLOSE_ON_PX $source_path$decrypt_lc_file_name | cut -f2 -d ':'`
#NEW_CONVERSION_DATE=$CONVERSION_DATE | awk '{ print substr( $0, length($0) - 4, length($0) ) }'
#FINAL_CONVERSION_DATE="$7"
FINAL_CONVERSION_DATE="$5"

echo "Final Conversion Date : " $FINAL_CONVERSION_DATE
echo "Rate Type : " $var6

#cat $source_path$decrypt_lc_file_name | sed -e 's/CCN/CNY/g' -e 's/BCN/BRL/g' -e 's/IRN/INR/g' -e s/'Curncy|'/'Curncy|'$var5'|'$var6'|'/  > $TMP_DECR_FILE
cat $source_path$decrypt_lc_file_name | sed -e 's/CCN/CNY/g' -e 's/BCN/BRL/g' -e 's/IRN/INR/g' -e s/'Curncy|'/'Curncy|'$FINAL_CONVERSION_DATE'|'$var6'|'/  > $TMP_DECR_FILE
#cat $source_path$decrypt_lc_file_name | sed s/'Curncy|'/'Curncy|'$FINAL_CONVERSION_DATE'|'$var6'|'/ > $TMP_DECR_FILE
#cat $source_path$decrypt_lc_file_name | sed s/'Curncy|'/'Curncy|'$var6'|'/ > $TMP_DECR_FILE

echo "Delete Forecast Rates"
#Delete Forecast Rate types prior to loading new ones.  Including the Avg.

export SQLPATH=$APPL_TOP

# Connecting to ORACLE .
#req_id=`sqlplus -s ${connect} <<EOF
req_id=`sqlplus -s /nolog <<EOF
set pagesize 0
set linesize 255
set sqlprompt ""
set serveroutput on 
set verify off

delete from gl_daily_rates c
   where exists (select *
   from GL_DAILY_CONVERSION_TYPES a
   where a.conversion_type = c.conversion_type
   and a.user_conversion_type in  ( replace('$RATE_TYPE','_',' '), replace('$RATE_TYPE','_',' ')||' Avg'));
   commit;

delete from gl_daily_rates_interface;
commit;
    exit
EOF`


#File Path
#echo "Oracle login : " $lc_connect
#call the SQLLOADER program 
echo "Starting Sql Loader Program"


ls -lrt $HOME/parfile.apps        
 
sqlldr parfile=$HOME/parfile.apps control=$XXFIN_TOP/bin/XXGLFXRATES.ctl log=XXGLFXRATES.log ERRORS=999 data=$TMP_DECR_FILE SKIP=16

rc="$?"
 if [ "rc" -ne "0" ] && [ "rc" -ne "2" ]; then
  echo "sqlldr failed! - return code = " ${rc}
  exit 1
 fi

#appspw=`echo $var3|awk -F= '{print $2}'`
#lc_connect=$appspw@$TWO_TASK


# Commented for Defect 2482

#lc_user_id=`echo $1 | cut -f4 -d' ' | cut -f2 -d '='`
#lc_user_name=`echo $1 | cut -f5 -d' ' | cut -f2 -d'"' | cut -f2 -d '='`
#lc_appl_name=`echo $1 | cut -f9 -d' ' | cut -f2 -d'"'`
#lc_resp_name1=`echo $1 | cut -f10 -d' '`
#lc_resp_name2=`echo $1 |cut -f11 -d ' '`
#lc_resp_name3=`echo $1 |cut -f12 -d ' '`
#lc_resp_name=`echo $lc_resp_name1 $lc_resp_name2 $lc_resp_name3 | cut -f2 -d '"'`
#lc_run_date=${var9}


#echo "Run date  : " $lc_run_date
#echo "User ID   : " $lc_user_id
#echo "User Name : " $lc_user_name
#echo "Appl Name : " $lc_appl_name
#echo "Resp Name : " $lc_resp_name

lc_run_date=`sqlplus -s /nolog <<EOF
set pagesize 0
set linesize 255
set sqlprompt " "
set serveroutput on
set verify off
select to_date($lc_run_date, 'dd-mm-yyyy') FROM DUAL;
exit
EOF`

#echo "Submiting Concurrent Program"
#lc_submit_req=`CONCSUB $lc_connect $lc_appl_name "\"$lc_resp_name\"" $lc_user_name WAIT=Y CONCURRENT xxfin XXGLDAILYRATES ${lc_run_date9}`

#echo $lc_submit_req

#lc_req_id=`echo $lc_submit_req | cut -f3 -d' '`
#echo lc_submit_req=$lc_submit_req
#echo '\n\n Request Id: ' $lc_req_id

#Remove the rates file from XXFIN_DATA/inbound
rm $source_path$decrypt_lc_file_name
rc="$?"
 if [ "rc" -ne "0" ]; then
  echo "rm of decrypt file failed! - return code = " ${rc}
  exit 1
 fi

rm $source_path$lc_file_name
rc="$?"
 if [ "rc" -ne "0" ]; then
  echo "rm failed! - return code = " ${rc}
  exit 1
 fi
 
rm $TMP_DECR_FILE
rc="$?"
 if [ "rc" -ne "0" ]; then
  echo "rm failed for TMP_DECR_FILE! - return code = " ${rc}
  exit 1
 fi

# Exiting from the shell program.
exit 0   