<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Jul 09 13:30:52 GMT 2007
  Author:  ravankat
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="StoreMailCheck"
         targetNamespace="http://xmlns.oracle.com/StoreMailCheck"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/opaque/"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns16="http://xmlns.oracle.com/TransactionData"
         xmlns:ns5="http://TargetNamespace.com/ServiceName"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ns9="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ns17="http://xmlns.oracle.com/pcbpel/adapter/ftp/"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/file/MailCK_Input/"
         xmlns:ns2="http://TargetNamespace.com/MailCK_Input"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns15="http://xmlns.oracle.com/ODTransactionLogger"
         xmlns:ns10="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns20="http://xmlns.oracle.com/pcbpel/adapter/ftp/SynchFileRead/"
         xmlns:ns13="http://xmlns.oracle.com/pcbpel/adapter/db/MailCK_DB_Out/"
         xmlns:ns7="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns12="http://xmlns.oracle.com/pcbpel/adapter/ftp/MailCK_FTP_In/"
         xmlns:ns18="http://xmlns.oracle.com/BPELInvokeESP"
         xmlns:client="http://xmlns.oracle.com/StoreMailCheck"
         xmlns:ns6="http://TargetNamespace.com/InboundService"
         xmlns:ns11="ODError"
         xmlns:ns19="http://schemas.oracle.com/service/bpel/common"
         xmlns:ns14="http://xmlns.oracle.com/pcbpel/adapter/db/top/MailCKDBOut"
         xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/file/Mail_CK_Output/"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns21="http://xmlns.oracle.com/pcbpel/adapter/ftp/SynchZeroByteRead/"
         xmlns:ns8="http://xmlns.oracle.com/bpel/workflow/xpath">
  <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <!--partnerLink myRole="Read_role" name="MailCK_Input"
                     partnerLinkType="ns1:Read_plt"/-->
    <partnerLink name="ODErrorLogger" partnerRole="ODErrorLoggerProvider"
                 partnerLinkType="ns7:ODErrorLogger"/>
    <partnerLink myRole="Get_role" name="MailCK_FTP_In"
                 partnerLinkType="ns12:Get_plt"/>
    <partnerLink name="ServiceInsertInterfaceTable"
                 partnerRole="MailCK_DB_Out_role"
                 partnerLinkType="ns13:MailCK_DB_Out_plt"/>
    <partnerLink myRole="ODTransactionLoggerRequester"
                 name="ODTransactionLogger"
                 partnerRole="ODTransactionLoggerProvider"
                 partnerLinkType="ns15:ODTransactionLogger"/>
    <partnerLink myRole="BPELInvokeESPRequester" name="BPELInvokeESP"
                 partnerRole="BPELInvokeESPProvider"
                 partnerLinkType="ns18:BPELInvokeESP"/>
    <partnerLink name="SynchFileRead" partnerRole="SynchRead_role"
                 partnerLinkType="ns20:SynchRead_plt"/>
    <partnerLink name="SynchZeroByteRead" partnerRole="SynchRead_role"
                 partnerLinkType="ns21:SynchRead_plt"/>
  </partnerLinks>
  <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <!-- Reference to the message that will be sent back to the requester during callback -->
    <variable name="RecieveFileRead" messageType="ns12:Root-Element_msg"/>
    <variable name="MailCKInsertDBVar"
              messageType="ns13:XxArMailCheckHoldsCollection_msg"/>
    <variable name="invkCatchAll_initiate"
              messageType="ns7:ODErrorLoggerRequestMessage"/>
    <variable name="ErrorMessageText" type="xsd:string"/>
    <variable name="logTransactionInput"
              messageType="ns15:ODTransactionLoggerRequestMessage"/>
    <variable name="FileName_In" messageType="ns17:InboundHeader_msg"/>
    <variable name="InvokeProcessESP"
              messageType="ns18:BPELInvokeESPRequestMessage"/>
    <variable name="XSLT_PARAM" element="ns19:parameters"/>
    <variable name="FileSize" type="xsd:integer"/>
    <variable name="InvokeSynchFileReadIn" messageType="ns20:Empty_msg"/>
    <variable name="InvokeSynchFileReadOut"
              messageType="ns20:Root-Element_msg"/>
    <variable name="SynchFileName" messageType="ns17:OutboundHeader_msg"/>
    <variable name="InvokeZeroByteReadIn" messageType="ns21:Empty_msg"/>
    <variable name="InvokeZeroByteReadOut" messageType="ns21:SynchRead_msg"/>
    <variable name="xmlFragment" type="xsd:string"/>
    <variable name="RecordCount" type="xsd:string"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence_4">
        <assign name="asnCatchAll">
          <copy>
            <from expression="'Error encountered in Process StoreMailCheck'"/>
            <to variable="ErrorMessageText"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:SystemName"/>
          </copy>
          <copy>
            <from expression="xp20:current-dateTime()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'Catch All on the Main Sequence'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessStep"/>
          </copy>
          <copy>
            <from expression="ora:getFaultName()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorCode"/>
          </copy>
          <copy>
            <from variable="ErrorMessageText"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorDescription"/>
          </copy>
          <copy>
            <from expression="ora:getFaultAsString()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorText"/>
          </copy>
          <copy>
            <from expression="'system'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorType"/>
          </copy>
          <copy>
            <from expression="'fatal'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns11:ErrorData/ns11:Notification/ns11:sendNotification"/>
          </copy>
        </assign>
        <assign name="copyTransactionData">
          <copy>
            <from expression="'Error'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:ProcessInfo/ns16:ProcessStatus"/>
          </copy>
        </assign>
        <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                portType="ns15:ODTransactionLogger" operation="initiate"
                inputVariable="logTransactionInput"/>
        <invoke name="invkCatchAll" partnerLink="ODErrorLogger"
                portType="ns7:ODErrorLogger" operation="initiate"
                inputVariable="invkCatchAll_initiate"/>
        <terminate name="Terminate"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in StoreMailCheck.wsdl) -->
    <receive name="RecieveMainFrameFile" partnerLink="MailCK_FTP_In"
             portType="ns12:Get_ptt" operation="Get" variable="RecieveFileRead"
             createInstance="yes" bpelx:headerVariable="FileName_In"/>
    <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
    <assign name="AssignFileData">
      <copy>
        <from expression="'StoreMailFileName'"/>
        <to variable="XSLT_PARAM" query="/ns19:parameters/ns19:item/ns19:name"/>
      </copy>
      <copy>
        <from variable="FileName_In" part="inboundHeader"
              query="/ns17:InboundFTPHeaderType/ns17:fileName"/>
        <to variable="XSLT_PARAM"
            query="/ns19:parameters/ns19:item/ns19:value"/>
      </copy>
      <copy>
        <from variable="FileName_In" part="inboundHeader"
              query="/ns17:InboundFTPHeaderType/ns17:size"/>
        <to variable="FileSize"/>
      </copy>
    </assign>
    <scope name="logTransactionStart">
      <sequence name="Sequence_5">
        <assign name="copyTransactionData">
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:ProcessInfo/ns16:Domain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:ProcessInfo/ns16:ProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:ProcessInfo/ns16:InstanceId"/>
          </copy>
          <copy>
            <from expression="'Start'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:ProcessInfo/ns16:ProcessStatus"/>
          </copy>
          <copy>
            <from expression="'XX_AR_MAIL_CHECK_HOLDS - Table Insert'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:MessageDetails/ns16:MessageOperation"/>
          </copy>
          <copy>
            <from expression="'Store Mail Check'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:MessageDetails/ns16:MessageSourceSystem"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:MessageDetails/ns16:MessageDateTime"/>
          </copy>
          <copy>
            <from expression="'Payload'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:MessageDetails/ns16:MessageType"/>
          </copy>
          <copy>
            <from variable="FileName_In" part="inboundHeader"
                  query="/ns17:InboundFTPHeaderType/ns17:fileName"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:EntiltyList/ns16:EntityID"/>
          </copy>
          <copy>
            <from>
              <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                <EntityID EntityType="SourceFileName"/>
                <EntityID EntityType="FileSize"/>
                <EntityID EntityType="TableName"/>
              </EntiltyList>
            </from>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:EntiltyList"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>', bpws:getVariableData('FileName_In','inboundHeader','/ns17:InboundFTPHeaderType/ns17:fileName'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:EntiltyList/ns16:EntityID[1]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;FileSize&quot;>', bpws:getVariableData('FileName_In','inboundHeader','/ns17:InboundFTPHeaderType/ns17:size'),'bytes', '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:EntiltyList/ns16:EntityID[2]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;TableName&quot;>', 'XX_AR_MAIL_CHECK_HOLDS', '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:EntiltyList/ns16:EntityID[3]"/>
          </copy>
          <copy>
            <from expression="'I1380_Store_Mail_Check'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:ProcessInfo/ns16:SystemName"/>
          </copy>
        </assign>
        <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                portType="ns15:ODTransactionLogger" operation="initiate"
                inputVariable="logTransactionInput"/>
      </sequence>
    </scope>
    <switch name="SwitchFileSize">
      <case condition="bpws:getVariableData('FileSize') > 0">
        <sequence name="SeqFileSize">
          <assign name="AssignFileName">
            <copy>
              <from variable="FileName_In" part="inboundHeader"
                    query="/ns17:InboundFTPHeaderType/ns17:fileName"/>
              <to variable="SynchFileName" part="outboundHeader"
                  query="/ns17:OutboundFTPHeaderType/ns17:fileName"/>
            </copy>
          </assign>
          <invoke name="InvokeSynchFileRead" partnerLink="SynchFileRead"
                  portType="ns20:SynchRead_ptt" operation="SynchRead"
                  inputVariable="InvokeSynchFileReadIn"
                  outputVariable="InvokeSynchFileReadOut"
                  bpelx:inputHeaderVariable="SynchFileName"/>
          <assign name="TransformMainframeToEBS">
            <bpelx:annotation>
              <bpelx:pattern>transformation</bpelx:pattern>
            </bpelx:annotation>
            <copy>
              <from expression="ora:processXSLT('Transformation_MailCK.xsl',bpws:getVariableData('InvokeSynchFileReadOut','Root-Element'))"/>
              <to variable="MailCKInsertDBVar"
                  part="XxArMailCheckHoldsCollection"/>
            </copy>
          </assign>
          <assign name="GetRecordCount">
            <copy>
              <from expression="ora:countNodes('MailCKInsertDBVar','XxArMailCheckHoldsCollection','/ns14:XxArMailCheckHoldsCollection/ns14:XxArMailCheckHolds')"/>
              <to variable="RecordCount"/>
            </copy>
          </assign>
          <invoke name="InvokeDBCall" partnerLink="ServiceInsertInterfaceTable"
                  portType="ns13:MailCK_DB_Out_ptt"
                  inputVariable="MailCKInsertDBVar" operation="insert"/>
        </sequence>
      </case>
      <otherwise>
        <sequence name="SeqZeroByte">
          <assign name="AssignFileName">
            <copy>
              <from variable="FileName_In" part="inboundHeader"
                    query="/ns17:InboundFTPHeaderType/ns17:fileName"/>
              <to variable="SynchFileName" part="outboundHeader"
                  query="/ns17:OutboundFTPHeaderType/ns17:fileName"/>
            </copy>
          </assign>
          <invoke name="InvokeZeroByteRead" partnerLink="SynchZeroByteRead"
                  portType="ns21:SynchRead_ptt" operation="SynchRead"
                  inputVariable="InvokeZeroByteReadIn"
                  outputVariable="InvokeZeroByteReadOut"
                  bpelx:inputHeaderVariable="SynchFileName"/>
        </sequence>
      </otherwise>
    </switch>
    <assign name="assignESPData">
      <copy>
        <from expression="ora:getDomainId()"/>
        <to variable="InvokeProcessESP" part="payload"
            query="/ns18:BPELInvokeESPProcessRequest/ns18:processDomain"/>
      </copy>
      <copy>
        <from expression="ora:getProcessId()"/>
        <to variable="InvokeProcessESP" part="payload"
            query="/ns18:BPELInvokeESPProcessRequest/ns18:processName"/>
      </copy>
      <copy>
        <from expression="'MAILCHECK'"/>
        <to variable="InvokeProcessESP" part="payload"
            query="/ns18:BPELInvokeESPProcessRequest/ns18:filePattern"/>
      </copy>
    </assign>
    <invoke name="InvokeProcessESP" partnerLink="BPELInvokeESP"
            portType="ns18:BPELInvokeESP" operation="initiate"
            inputVariable="InvokeProcessESP"/>
    <scope name="logTransactionEnd">
      <sequence name="Sequence_6">
        <assign name="logTransactionInput">
          <copy>
            <from expression="'Success'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:ProcessInfo/ns16:ProcessStatus"/>
          </copy>
          <copy>
            <from>
              <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                <EntityID EntityType="SourceFileName"/>
                <EntityID EntityType="FileSize"/>
                <EntityID EntityType="TableName"/>
                <EntityID EntityType="NumberOfRecordsInserted"/>
                <EntityID EntityType="ReleaseESPJob"/>
              </EntiltyList>
            </from>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:EntiltyList"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>',bpws:getVariableData('FileName_In','inboundHeader','/ns17:InboundFTPHeaderType/ns17:fileName'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:EntiltyList/ns16:EntityID[1]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;FileSize&quot;>', bpws:getVariableData('FileName_In','inboundHeader','/ns17:InboundFTPHeaderType/ns17:size'), ' bytes', '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:EntiltyList/ns16:EntityID[2]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;TableName&quot;>', 'XX_AR_MAIL_CHECK_HOLDS', '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:EntiltyList/ns16:EntityID[3]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;NumberOfRecordsInserted&quot;>', bpws:getVariableData('RecordCount'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:EntiltyList/ns16:EntityID[4]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;ReleaseESPJob&quot;>', 'YES', '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns16:TransactionData/ns16:EntiltyList/ns16:EntityID[5]"/>
          </copy>
        </assign>
        <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                portType="ns15:ODTransactionLogger" operation="initiate"
                inputVariable="logTransactionInput"/>
      </sequence>
    </scope>
  </sequence>
</process>