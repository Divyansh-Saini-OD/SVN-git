<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Jan 21 16:37:00 EST 2008
  Author:  Cecilia-Macean
  Purpose: Empty BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="PostJournalEntryGLSI"
         targetNamespace="http://xmlns.oracle.com/PostJournalEntryGLSI"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns4="http://schemas.oracle.com/service/bpel/common"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns16="ODError"
         xmlns:ns5="http://TargetNamespace.com/FTPGLJournalInvoice"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ns9="http://xmlns.oracle.com/pcbpel/adapter/db/GLStagingTableInsert/"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/file/ReadFileNoPayload/"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/file/"
         xmlns:ns15="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns10="http://xmlns.oracle.com/PostGLSIStgTableInsert"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns7="http://www.openapplications.org/oagis/9"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:client="http://xmlns.oracle.com/PostJournalEntryGLSI"
         xmlns:ns6="http://xmlns.oracle.com/pcbpel/adapter/ftp/Dummy_OAGIS/"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ns11="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/file/ChunkReadGLSIJournal/"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns8="http://www.openapplications.org/oagis/9/officedepot/1">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <partnerLinks>
    <partnerLink myRole="Read_role" name="ReadFileNoPayload"
                 partnerLinkType="ns1:Read_plt"/>
    <partnerLink name="ChunkReadGLSIJournal" partnerRole="SynchChunkedRead_role"
                 partnerLinkType="ns3:SynchChunkedRead_plt"/>
    <partnerLink myRole="Get_role" name="Dummy_OAGIS"
                 partnerLinkType="ns6:Get_plt"/>
    <partnerLink myRole="ODErrorLoggerRequester" name="ODErrorLogger"
                 partnerRole="ODErrorLoggerProvider"
                 partnerLinkType="ns11:ODErrorLogger"/>
    <partnerLink myRole="PostGLSIStgTableInsertRequester"
                 name="PostGLSIStgTableInsert"
                 partnerRole="PostGLSIStgTableInsertProvider"
                 partnerLinkType="ns10:PostGLSIStgTableInsert"/>
  </partnerLinks>
  <variables>
    <variable name="emptyPayload" messageType="ns1:Read_msg"/>
    <variable name="InputFileHeader" messageType="ns2:InboundHeader_msg"/>
    <variable name="ReadGLSIJournalDataInput" messageType="ns3:Empty_msg"/>
    <variable name="SyncChunkReadInboundHeader"
              messageType="ns2:OutboundHeader_msg"/>
    <variable name="SyncChunkReadOutboundHeader"
              messageType="ns2:OutboundHeader_msg"/>
    <variable name="OutputFileHeader" messageType="ns2:OutboundHeader_msg"/>
    <variable name="XSLT_Param" element="ns4:parameters"/>
    <variable name="GLJournalInvoiceBuffer" element="ns5:GLJournalInvoice"/>
    <variable name="TestVariable" messageType="ns3:GLJournalInvoice_msg"/>
    <variable name="lastHeaderFound" element="ns5:Header"/>
    <variable name="Oagis" messageType="ns6:PostJournalEntry_msg"/>
    <variable name="ReadGLSIJournalDataOutput"
              messageType="ns3:GLJournalInvoice_msg"/>
    <variable name="Invoke_1_initiate_InputVariable"
              messageType="ns10:PostGLSIStgTableInsertRequestMessage"/>
    <variable name="Exception" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="invkSelectionFailure_initiate"
              messageType="ns15:ODErrorLoggerRequestMessage"/>
    <variable name="invkRemoteFault_initiate"
              messageType="ns15:ODErrorLoggerRequestMessage"/>
    <variable name="invkCatchAll_initiate"
              messageType="ns15:ODErrorLoggerRequestMessage"/>
    <variable name="invkBindingFault_initiate"
              messageType="ns15:ODErrorLoggerRequestMessage"/>
  </variables>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <faultHandlers>
    <catch faultName="bpws:selectionFailure" faultVariable="Exception">
      <sequence name="Sequence_3">
        <assign name="asnSelectionFailure">
          <copy>
            <from expression="concat(ora:getProcessId(), ora:getProcessVersion())"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:SystemName"/>
          </copy>
          <copy>
            <from expression="xp20:current-dateTime()"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'PostJournalEntryGLSI'"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessStep"/>
          </copy>
          <copy>
            <from variable="Exception" part="code"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorCode"/>
          </copy>
          <copy>
            <from variable="Exception" part="summary"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="Exception" part="detail"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorText"/>
          </copy>
        </assign>
        <invoke name="invkSelectionFailure" partnerLink="ODErrorLogger"
                portType="ns15:ODErrorLogger" operation="initiate"
                inputVariable="invkSelectionFailure_initiate"/>
      </sequence>
    </catch>
    <catch faultName="bpelx:bindingFault" faultVariable="Exception">
      <sequence name="Sequence_2">
        <assign name="asnBindingFault">
          <copy>
            <from expression="concat(ora:getProcessId(), ora:getProcessVersion())"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:SystemName"/>
          </copy>
          <copy>
            <from expression="xp20:current-dateTime()"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'PostJournalEntryGLSI'"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessStep"/>
          </copy>
          <copy>
            <from variable="Exception" part="code"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorCode"/>
          </copy>
          <copy>
            <from variable="Exception" part="summary"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="Exception" part="detail"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorText"/>
          </copy>
        </assign>
        <invoke name="invkBindingFault" partnerLink="ODErrorLogger"
                portType="ns15:ODErrorLogger" operation="initiate"
                inputVariable="invkBindingFault_initiate"/>
      </sequence>
    </catch>
    <catch faultName="bpelx:remoteFault" faultVariable="Exception">
      <sequence name="Sequence_5">
        <assign name="asnRemoteFault">
          <copy>
            <from expression="concat(ora:getProcessId(), ora:getProcessVersion())"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:SystemName"/>
          </copy>
          <copy>
            <from expression="xp20:current-dateTime()"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'PostJournalEntryGLSI'"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessStep"/>
          </copy>
          <copy>
            <from variable="Exception" part="code"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorCode"/>
          </copy>
          <copy>
            <from variable="Exception" part="summary"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="Exception" part="detail"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorText"/>
          </copy>
        </assign>
        <invoke name="invkRemoteFault" partnerLink="ODErrorLogger"
                portType="ns15:ODErrorLogger" operation="initiate"
                inputVariable="invkRemoteFault_initiate"/>
      </sequence>
    </catch>
    <catchAll>
      <sequence name="Sequence_4">
        <assign name="asnCatchAll">
          <copy>
            <from expression="concat(ora:getProcessId(), ora:getProcessVersion())"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:SystemName"/>
          </copy>
          <copy>
            <from expression="xp20:current-dateTime()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'PostJournalEntryGLSI'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ProcessInfo/ns16:BusinessProcessStep"/>
          </copy>
          <copy>
            <from variable="Exception" part="code"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorCode"/>
          </copy>
          <copy>
            <from variable="Exception" part="summary"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="Exception" part="detail"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns16:ErrorData/ns16:ErrorDetails/ns16:ErrorText"/>
          </copy>
        </assign>
        <invoke name="invkCatchAll" partnerLink="ODErrorLogger"
                portType="ns15:ODErrorLogger" operation="initiate"
                inputVariable="invkCatchAll_initiate"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <sequence name="main">
    <receive name="ReceiveFileHeader" partnerLink="ReadFileNoPayload"
             portType="ns1:Read_ptt" operation="Read" variable="emptyPayload"
             createInstance="yes" bpelx:headerVariable="InputFileHeader"/>
    <assign name="initializeChunkReadHeaders">
      <copy>
        <from variable="InputFileHeader" part="inboundHeader"
              query="/ns2:InboundFileHeaderType/ns2:fileName"/>
        <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
            query="/ns2:OutboundFileHeaderType/ns2:fileName"/>
      </copy>
      <copy>
        <from variable="InputFileHeader" part="inboundHeader"
              query="/ns2:InboundFileHeaderType/ns2:directory"/>
        <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
            query="/ns2:OutboundFileHeaderType/ns2:directory"/>
      </copy>
      <copy>
        <from expression="''"/>
        <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
            query="/ns2:OutboundFileHeaderType/ns2:lineNumber"/>
      </copy>
      <copy>
        <from expression="''"/>
        <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
            query="/ns2:OutboundFileHeaderType/ns2:columnNumber"/>
      </copy>
      <copy>
        <from expression="''"/>
        <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
            query="/ns2:OutboundFileHeaderType/ns2:recordNumber"/>
      </copy>
      <copy>
        <from variable="InputFileHeader" part="inboundHeader"
              query="/ns2:InboundFileHeaderType/ns2:fileName"/>
        <to variable="OutputFileHeader" part="outboundHeader"
            query="/ns2:OutboundFileHeaderType/ns2:fileName"/>
      </copy>
      <copy>
        <from expression="'GLFileName'"/>
        <to variable="XSLT_Param" query="/ns4:parameters/ns4:item/ns4:name"/>
      </copy>
      <copy>
        <from variable="InputFileHeader" part="inboundHeader"
              query="/ns2:InboundFileHeaderType/ns2:fileName"/>
        <to variable="XSLT_Param" query="/ns4:parameters/ns4:item/ns4:value"/>
      </copy>
      <copy>
        <from expression="'false'"/>
        <to variable="SyncChunkReadOutboundHeader" part="outboundHeader"
            query="/ns2:OutboundFileHeaderType/ns2:isEOF"/>
      </copy>
    </assign>
    <assign name="AssignGLFileName">
      <copy>
        <from expression="'GLFileName'"/>
        <to variable="XSLT_Param" query="/ns4:parameters/ns4:item/ns4:name"/>
      </copy>
      <copy>
        <from variable="InputFileHeader" part="inboundHeader"
              query="/ns2:InboundFileHeaderType/ns2:fileName"/>
        <to variable="XSLT_Param" query="/ns4:parameters/ns4:item/ns4:value"/>
      </copy>
    </assign>
    <assign name="TransformParameters">
      <bpelx:annotation>
        <bpelx:pattern>transformation</bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from expression="ora:processXSLT('TransformationParameters.xsl',bpws:getVariableData('XSLT_Param'),bpws:getVariableData('XSLT_Param'))"/>
        <to variable="XSLT_Param"/>
      </copy>
    </assign>
    <while name="While_1"
           condition="bpws:getVariableData('SyncChunkReadOutboundHeader','outboundHeader','/ns2:OutboundFileHeaderType/ns2:isEOF') != 'true'">
      <sequence name="Sequence_1">
        <invoke name="ReadGLJournalInvoice" partnerLink="ChunkReadGLSIJournal"
                portType="ns3:SynchChunkedRead_ptt" operation="SynchChunkedRead"
                inputVariable="ReadGLSIJournalDataInput"
                outputVariable="ReadGLSIJournalDataOutput"
                bpelx:outputHeaderVariable="SyncChunkReadOutboundHeader"
                bpelx:inputHeaderVariable="SyncChunkReadInboundHeader"/>
        <assign name="setChunkReadHeader">
          <copy>
            <from variable="SyncChunkReadOutboundHeader"/>
            <to variable="SyncChunkReadInboundHeader"/>
          </copy>
        </assign>
        <switch name="IsMessageRejected">
          <case condition="bpws:getVariableData('SyncChunkReadOutboundHeader','outboundHeader','/ns2:OutboundFileHeaderType/ns2:isMessageRejected')!='true'">
            <bpelx:annotation>
              <bpelx:pattern>ValidMessage</bpelx:pattern>
            </bpelx:annotation>
            <sequence name="Sequence_4">
              <switch name="MessageDataExists">
                <case condition="bpws:getVariableData('SyncChunkReadOutboundHeader','outboundHeader','/ns2:OutboundFileHeaderType/ns2:NoDataFound')!='true'">
                  <bpelx:annotation>
                    <bpelx:pattern>DataFound</bpelx:pattern>
                  </bpelx:annotation>
                  <sequence name="Sequence_2">
                    <switch name="Switch_1">
                      <case condition="starts-with(local-name(ora:getNodes( 'ReadGLSIJournalDataOutput' ,'GLJournalInvoice',' /ns5:GLJournalInvoice/child::*[position()=1]')),'Detail')">
                        <bpelx:annotation>
                          <bpelx:pattern>is First Element Detail</bpelx:pattern>
                        </bpelx:annotation>
                        <sequence name="Sequence_3">
                          <switch name="Switch_2">
                            <case condition="ora:countNodes('lastHeaderFound','/ns5:Header','/ns5:JournalID') > 0">
                              <bpelx:annotation>
                                <bpelx:pattern>hasLastHeader</bpelx:pattern>
                              </bpelx:annotation>
                              <assign name="AppendBeforeHeaderToChunk">
                                <bpelx:insertBefore>
                                  <bpelx:from variable="lastHeaderFound"
                                              query="/ns5:Header"/>
                                  <bpelx:to variable="ReadGLSIJournalDataOutput"
                                            part="GLJournalInvoice"
                                            query="/ns5:GLJournalInvoice/ns5:Detail[1]"/>
                                </bpelx:insertBefore>
                              </assign>
                            </case>
                            <otherwise>
                              <empty name="Empty_2"/>
                            </otherwise>
                          </switch>
                        </sequence>
                      </case>
                      <otherwise>
                        <empty name="Empty_1"/>
                      </otherwise>
                    </switch>
                    <switch name="Switch_3">
                      <case condition="ora:countNodes('ReadGLSIJournalDataOutput','GLJournalInvoice','/ns5:GLJournalInvoice/ns5:Header') > 0">
                        <bpelx:annotation>
                          <bpelx:pattern>hasHeadersInChunk</bpelx:pattern>
                        </bpelx:annotation>
                        <assign name="InitializeLastHeader">
                          <copy>
                            <from expression="bpws:getVariableData('ReadGLSIJournalDataOutput','GLJournalInvoice','/ns5:GLJournalInvoice/ns5:Header[last()]') "/>
                            <to variable="lastHeaderFound"/>
                          </copy>
                        </assign>
                      </case>
                      <otherwise>
                        <empty name="Empty_3"/>
                      </otherwise>
                    </switch>
                  </sequence>
                </case>
                <otherwise/>
              </switch>
              <assign name="TransformFileOAGIS">
                <bpelx:annotation>
                  <bpelx:pattern>transformation</bpelx:pattern>
                </bpelx:annotation>
                <copy>
                  <from expression="ora:processXSLT('TransformationFileOAGIS.xsl',bpws:getVariableData('ReadGLSIJournalDataOutput','GLJournalInvoice'),bpws:getVariableData('XSLT_Param'))"/>
                  <to variable="Oagis" part="PostJournalEntry"/>
                </copy>
              </assign>
              <assign name="Assign_1">
                <copy>
                  <from variable="Oagis" part="PostJournalEntry"/>
                  <to variable="Invoke_1_initiate_InputVariable" part="payload"
                      query="/ns7:PostJournalEntry"/>
                </copy>
              </assign>
              <invoke name="Invoke_1" partnerLink="PostGLSIStgTableInsert"
                      portType="ns10:PostGLSIStgTableInsert"
                      operation="initiate"
                      inputVariable="Invoke_1_initiate_InputVariable"/>
            </sequence>
          </case>
          <otherwise/>
        </switch>
      </sequence>
    </while>
  </sequence>
</process>