<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="GL_INTERFACE_NA_STG.xsd"/>
      <rootElement name="GLJournalInvoice" namespace="http://TargetNamespace.com/FTPGLJournalInvoice"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="http://chilsoa01d.na.odcorp.net:7778/orabpel/xmllib/eaixml/oagis/v91/message/bod/PostJournalEntry.xsd"/>
      <rootElement name="PostJournalEntry" namespace="http://www.openapplications.org/oagis/9"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.1.0(build 061009.0802) AT [TUE AUG 07 20:58:18 EDT 2007]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns5="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:ns8="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:ns4="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:ns1="http://www.openapplications.org/oagis/9/officedepot/1/codelists"
                xmlns:ns2="http://www.openapplications.org/oagis/9/IANAMIMEMediaTypes:2003"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ns3="http://www.openapplications.org/oagis/9/codelists"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bt="http://www.oracle.com/XSL/Transform/java/oracle.bt.CustomExtensionFunctions"
                xmlns:ns7="http://www.openapplications.org/oagis/9/officedepot/1"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:tns="http://TargetNamespace.com/FTPGLJournalInvoice"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:ns0="http://www.openapplications.org/oagis/9"
                xmlns:ns6="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:ns9="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                exclude-result-prefixes="xsl xsd nxsd tns ns5 ns8 ns4 ns1 ns2 ns3 ns7 ns0 ns6 ns9 bpws ehdr hwf xp20 bt ora ids orcl">
  <xsl:param name="GLFileName"/>
  <xsl:template match="/">
    <ns0:PostJournalEntry>
      <ns0:DataArea>
        <xsl:for-each select="/tns:GLJournalInvoice/tns:Header">
          <ns0:JournalEntry>
            <ns0:JournalEntryHeader>
              <ns0:Name>
                <xsl:value-of select="normalize-space(tns:JournalID)"/>
              </ns0:Name>
              <ns0:AccountingDate>
                <ns0:PostDateTime>
                  <xsl:call-template name="formatDate">
                    <xsl:with-param name="date"
                                    select="normalize-space(tns:JournalHeaderDate)"/>
                  </xsl:call-template>
                </ns0:PostDateTime>
              </ns0:AccountingDate>
              <ns0:SourceDocumentReference>
                <ns0:Description>
                  <xsl:value-of select="normalize-space(tns:JournalHeaderReference)"/>
                </ns0:Description>
              </ns0:SourceDocumentReference>
               <ns0:SourceDocumentReference>
                 <ns0:DocumentID>
                  <ns0:ID>
                    <xsl:if test='substring($GLFileName,1,21) = "GL_Journals_NA_GLSI_R"'>
                       <xsl:text disable-output-escaping="no">OD AP Integral</xsl:text>
                     </xsl:if>
                      <xsl:if test='substring($GLFileName,1,21) = "GL_Journals_NA_GLSI_I"'>
                       <xsl:text disable-output-escaping="no">OD Inventory (SIV)</xsl:text>
                     </xsl:if>
                </ns0:ID>
               </ns0:DocumentID>
              </ns0:SourceDocumentReference>
               <ns0:ExchangeRate>
                <ns0:SourceCurrencyCode>
                  <xsl:value-of select="normalize-space(tns:CurrencyCode)"/>
                </ns0:SourceCurrencyCode>
              </ns0:ExchangeRate>
              <ns0:Description>
                <xsl:value-of select="normalize-space(tns:JournalHeaderDescription)"/>
              </ns0:Description>
              <ns0:CategoryCodes>
                <ns0:Code>
                  <xsl:value-of select="tns:SourceCode"/>
                </ns0:Code>
              </ns0:CategoryCodes>
              <ns7:Batch>
                <ns0:Name>
                  <xsl:value-of select="normalize-space(tns:JournalID)"/>
                </ns0:Name>
                <ns0:Description>
                  <xsl:value-of select="normalize-space(tns:JournalHeaderDescription)"/>
                </ns0:Description>
                <ns0:FileName>
                  <xsl:value-of select="$GLFileName"/>
                </ns0:FileName>
              </ns7:Batch>
            </ns0:JournalEntryHeader>
            <xsl:for-each select="tns:Details/tns:Detail">
              <ns0:JournalEntryLine>
                <ns0:GLAccount>
                  <xsl:attribute name="chartOfAccountsID">
                    <xsl:text disable-output-escaping="no">Legacy</xsl:text>
                  </xsl:attribute>
                  <ns0:GLElement>
                    <ns0:Element>
                      <xsl:attribute name="sequence">
                        <xsl:text disable-output-escaping="no">1</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="sequenceName">
                        <xsl:text disable-output-escaping="no">Company</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="normalize-space(tns:PSBusinessUnit)"/>
                    </ns0:Element>
                    <ns0:Element>
                      <xsl:attribute name="sequence">
                        <xsl:text disable-output-escaping="no">2</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="sequenceName">
                        <xsl:text disable-output-escaping="no">CostCenter</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="normalize-space(tns:PSDepartment)"/>
                    </ns0:Element>
                    <ns0:Element>
                      <xsl:attribute name="sequence">
                        <xsl:text disable-output-escaping="no">3</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="sequenceName">
                        <xsl:text disable-output-escaping="no">Account</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="normalize-space(tns:PSAccount)"/>
                    </ns0:Element>                    
                    <ns0:Element>
                      <xsl:attribute name="sequence">
                        <xsl:text disable-output-escaping="no">4</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="sequenceName">
                        <xsl:text disable-output-escaping="no">Location</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="normalize-space(tns:PSOperatingUnit)"/>
                    </ns0:Element>
                    <ns0:Element>
                      <xsl:attribute name="sequence">
                        <xsl:text disable-output-escaping="no">6</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="sequenceName">
                        <xsl:text disable-output-escaping="no">LineOfBusiness</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="normalize-space(tns:PSSalesChannel)"/>
                    </ns0:Element>
                  </ns0:GLElement>
                </ns0:GLAccount>
                <ns0:Item>
                  <ns0:Description>
                    <xsl:value-of select="normalize-space(tns:LineDescription)"/>
                  </ns0:Description>
                </ns0:Item>
                <xsl:choose>
                      <xsl:when test='orcl:right-trim(tns:TransactionAmountSign) = "0"'>
                         <ns0:Amount>
                                <xsl:value-of select="tns:TransactionAmount"/>
                         </ns0:Amount>
                         <ns0:DebitCreditCode>
                         <xsl:text disable-output-escaping="no">D</xsl:text>
                         </ns0:DebitCreditCode>
                    </xsl:when>   
                  </xsl:choose>
                  <xsl:choose>
                      <xsl:when test='orcl:right-trim(tns:TransactionAmountSign) = "-"'>
                         <ns0:Amount>
                                <xsl:value-of select="tns:TransactionAmount"/>
                         </ns0:Amount>
                         <ns0:DebitCreditCode>
                         <xsl:text disable-output-escaping="no">C</xsl:text>
                         </ns0:DebitCreditCode>
                    </xsl:when>   
                  </xsl:choose>
              </ns0:JournalEntryLine>
            </xsl:for-each>
          </ns0:JournalEntry>
        </xsl:for-each>
      </ns0:DataArea>
    </ns0:PostJournalEntry>
  </xsl:template>
   
  <!--  User Defined Templates  -->
   
  <xsl:template name="formatDate">
    <xsl:param name="date"/>
    <xsl:if test="normalize-space($date) > '0'">
      <xsl:variable name="mm" select="substring($date, 1, 2)"/>
      <xsl:variable name="dd" select="substring($date, 3, 2)"/>
      <xsl:variable name="yyyy" select="substring($date, 5, 4)"/>
      <xsl:variable name="newDate" select="concat($yyyy,'-', $mm, '-', $dd)"/>
      <xsl:value-of select="$newDate"/>
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>
