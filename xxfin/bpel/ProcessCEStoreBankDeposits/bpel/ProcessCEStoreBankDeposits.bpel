<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Feb 19 11:14:35 IST 2009
  Author:  hemagsnm
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ProcessCEStoreBankDeposits"
         targetNamespace="http://xmlns.oracle.com/ProcessCEStoreBankDeposits"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns4="http://schemas.oracle.com/service/bpel/common"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns16="http://xmlns.oracle.com/pcbpel/adapter/file/SyncZeroByte/"
         xmlns:ns5="http://xmlns.oracle.com/pcbpel/adapter/db/InsertXX_CE_STORE_BANK_DEPOSITS/"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ns9="http://xmlns.oracle.com/ODTransactionLogger"
         xmlns:ns1="http://xmlns.oracle.com/ProcessCEStoreBankDeposits"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/file/SynchFileRead/"
         xmlns:ns15="http://TargetNamespace.com/ZeroByte"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns10="http://xmlns.oracle.com/TransactionData"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns13="ODError"
         xmlns:ns7="http://xmlns.oracle.com/pcbpel/adapter/db/top/InsertXXCESTOREBANKDEPOSITS"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns12="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:client="http://xmlns.oracle.com/ProcessCEStoreBankDeposits"
         xmlns:ns6="http://TargetNamespace.com/FTPGetStoreBankDeposits"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ns11="http://xmlns.oracle.com/PostJournalEntry"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns14="http://xmlns.oracle.com/pcbpel/adapter/file/ZeroByteRead/"
         xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/file/"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns8="http://xmlns.oracle.com/BPELInvokeESP">
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="client"
                     partnerLinkType="client:ProcessCEStoreBankDeposits"
                     myRole="ProcessCEStoreBankDepositsProvider"
                     partnerRole="ProcessCEStoreBankDepositsRequester"/>
        <partnerLink name="SynchFileRead" partnerLinkType="ns2:SynchChunked_plt"
                     partnerRole="SynchChunked_role"
                     myRole="SynchChunked_role"/>
        <partnerLink name="InsertXX_CE_STORE_BANK_DEPOSITS"
                     partnerRole="InsertXX_CE_STORE_BANK_DEPOSITS_role"
                     partnerLinkType="ns5:InsertXX_CE_STORE_BANK_DEPOSITS_plt"/>
        <partnerLink myRole="BPELInvokeESPRequester" name="BPELInvokeESP"
                     partnerRole="BPELInvokeESPProvider"
                     partnerLinkType="ns8:BPELInvokeESP"/>
        <partnerLink myRole="ODTransactionLoggerRequester"
                     name="ODTransactionLogger"
                     partnerRole="ODTransactionLoggerProvider"
                     partnerLinkType="ns9:ODTransactionLogger"/>
        <partnerLink myRole="ODErrorLoggerRequester" name="ODErrorLogger"
                     partnerRole="ODErrorLoggerProvider"
                     partnerLinkType="ns12:ODErrorLogger"/>
        <partnerLink name="ZeroByteRead" partnerRole="SynchChunked_role"
                     partnerLinkType="ns14:SynchChunked_plt"/>
    </partnerLinks>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable"
                  messageType="client:ProcessCEStoreBankDepositsRequestMessage"/>
        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable"
                  messageType="client:ProcessCEStoreBankDepositsResponseMessage"/>
        <variable name="ProcessHeader" type="xsd:string"/>
        <variable name="InvokeSynchFileRead_In" messageType="ns2:Empty_msg"/>
        <variable name="InvokeSyncFileRead_Out"
                  messageType="ns2:Root-Element_msg"/>
        <variable name="SyncChunkReadInboundHeader"
                  messageType="ns3:OutboundHeader_msg"/>
        <variable name="SyncChunkReadOutboundHeader"
                  messageType="ns3:OutboundHeader_msg"/>
        <variable name="counter" type="xsd:int"/>
        <variable name="TotalNoOfRecs" type="xsd:int"/>
        <variable name="XSLT_PARAM" element="ns4:parameters"/>
        <variable name="InvokeTableInsert_In"
                  messageType="ns5:XxCeStoreBankDepositsCollection_msg"/>
        <variable name="ReleaseESPJob" type="xsd:string"/>
        <variable name="ESPJobReleased" type="xsd:string"/>
        <variable name="invkESP_initiate_InputVariable"
                  messageType="ns8:BPELInvokeESPRequestMessage"/>
        <variable name="invkTransactionStart_initiate_InputVariable"
                  messageType="ns9:ODTransactionLoggerRequestMessage"/>
        <variable name="invkCatchAll_initiate"
                  messageType="ns12:ODErrorLoggerRequestMessage"/>
        <variable name="ErrorMsgText" type="xsd:string"/>
        <variable name="InvokeZeroByteRead_SynchChunked_InputVariable"
                  messageType="ns14:Empty_msg"/>
        <variable name="InvokeZeroByteRead_SynchChunked_OutputVariable"
                  messageType="ns14:ZeroByte_msg"/>
        <variable name="Filler" type="xsd:string"/>
        <variable name="Exception" messageType="bpelx:RuntimeFaultMessage"/>
    </variables>
    <faultHandlers>
        <catchAll>
            <sequence name="Sequence_5">
                <scope name="LogTransationError">
                    <sequence name="Sequence_6">
                        <assign name="AssignLogTransactionError">
                            <copy>
                                <from expression="'Error'"/>
                                <to variable="invkTransactionStart_initiate_InputVariable"
                                    part="payload"
                                    query="/ns10:TransactionData/ns10:ProcessInfo/ns10:ProcessStatus"/>
                            </copy>
                        </assign>
                        <invoke name="invkLogTransactionError"
                                partnerLink="ODTransactionLogger"
                                portType="ns9:ODTransactionLogger"
                                operation="initiate"
                                inputVariable="invkTransactionStart_initiate_InputVariable"/>
                    </sequence>
                </scope>
                <assign name="asnCatchAll">
                    <copy>
                        <from expression="concat('Error encountered in ProcessCEStoreBankDeposits while copying file ',bpws:getVariableData('inputVariable','payload','/ns11:fileHeader/ns11:fileName'))"/>
                        <to variable="ErrorMsgText"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:ProcessInfo/ns13:BusinessProcessName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getInstanceId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:ProcessInfo/ns13:BusinessProcessId"/>
                    </copy>
                    <copy>
                        <from expression="ora:getDomainId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:ProcessInfo/ns13:BusinessProcessDomain"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessURL()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:ProcessInfo/ns13:SystemName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getCurrentDateTime()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:ErrorDetails/ns13:ErrorDateTime"/>
                    </copy>
                    <copy>
                        <from expression="'Catch All on the Main Sequence'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:ProcessInfo/ns13:BusinessProcessStep"/>
                    </copy>
                    <copy>
                        <from expression="ora:getFaultName()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:ErrorDetails/ns13:ErrorCode"/>
                    </copy>
                    <copy>
                        <from variable="ErrorMsgText"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:ErrorDetails/ns13:ErrorDescription"/>
                    </copy>
                    <copy>
                        <from expression="ora:getFaultAsString()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:ErrorDetails/ns13:ErrorText"/>
                    </copy>
                    <copy>
                        <from expression="'system'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:ErrorDetails/ns13:ErrorType"/>
                    </copy>
                    <copy>
                        <from expression="'fatal'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:ErrorDetails/ns13:ErrorSeverity"/>
                    </copy>
                    <copy>
                        <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns13:ErrorData/ns13:Notification/ns13:sendNotification"/>
                    </copy>
                </assign>
                <invoke name="invkCatchAll" partnerLink="ODErrorLogger"
                        portType="ns12:ODErrorLogger" operation="initiate"
                        inputVariable="invkCatchAll_initiate"/>
                <terminate name="Terminate"/>
            </sequence>
        </catchAll>
    </faultHandlers>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in ProcessCEStoreBankDeposits.wsdl) -->
        <receive name="receiveInput" partnerLink="client"
                 portType="client:ProcessCEStoreBankDeposits"
                 operation="initiate" variable="inputVariable"
                 createInstance="yes"/>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <scope name="LogTransactionStart">
            <variables>
                <variable name="xmlFragment" type="xsd:string"/>
            </variables>
            <sequence name="Sequence_3">
                <assign name="AssignTransactionStart">
                    <copy>
                        <from expression="ora:getDomainId() "/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:ProcessInfo/ns10:Domain"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessId()"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:ProcessInfo/ns10:ProcessName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getInstanceId()"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:ProcessInfo/ns10:InstanceId"/>
                    </copy>
                    <copy>
                        <from expression="'Start'"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:ProcessInfo/ns10:ProcessStatus"/>
                    </copy>
                    <copy>
                        <from expression="'DB Insert'"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:MessageDetails/ns10:MessageOperation"/>
                    </copy>
                    <copy>
                        <from expression="'Concurrent Program Short Name: XX_CE_STORE_OS_CC, Concurrent Manager Description: OD: CM Store Over/Short and Cash Concentration'"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:MessageDetails/ns10:MessageSourceSystemComponent"/>
                    </copy>
                    <copy>
                        <from expression="'file csv format'"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:MessageDetails/ns10:MessageType"/>
                    </copy>
                    <copy>
                        <from expression="ora:getCurrentDateTime()"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:ProcessInfo/ns10:transactionStartTime"/>
                    </copy>
                    <copy>
                        <from expression="'CM I0026_SA-CM Inbound StoreBankDeposits'"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:ProcessInfo/ns10:SystemName"/>
                    </copy>
                    <copy>
                        <from expression="'EBS'"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:ProcessInfo/ns10:TradingPartnerDetails/ns10:TPFrom"/>
                    </copy>
                    <copy>
                        <from expression="'EBS'"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:MessageDetails/ns10:MessageSourceSystem"/>
                    </copy>
                    <copy>
                        <from>
                            <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                                <EntityID EntityType="SourceFileName"/>
                                <EntityID EntityType="TableName"/>
                            </EntiltyList>
                        </from>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:EntiltyList"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>', bpws:getVariableData('inputVariable','payload','/ns11:fileHeader/ns11:fileName'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:EntiltyList/ns10:EntityID[1]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;TableName&quot;>', 'XX_CE_STORE_BANK_DEPOSITS', '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:EntiltyList/ns10:EntityID[2]"/>
                    </copy>
                </assign>
                <invoke name="invkTransactionStart"
                        partnerLink="ODTransactionLogger"
                        portType="ns9:ODTransactionLogger" operation="initiate"
                        inputVariable="invkTransactionStart_initiate_InputVariable"/>
            </sequence>
        </scope>
        <scope name="SetProcessHeader">
            <sequence>
                <assign name="InitializeInstanceTitle">
                    <copy>
                        <from expression="substring(concat('Processing',bpws:getVariableData('inputVariable','payload','/ns11:fileHeader/ns11:fileName')),1,50)"/>
                        <to variable="ProcessHeader"/>
                    </copy>
                </assign>
                <bpelx:exec name="SetTitle" language="java" version="1.5">
                    <![CDATA[try {              
                         String title = (String)getVariableData("ProcessHeader");              
                         setTitle(title);              
                         addAuditTrailEntry(title) ;              
                       } catch (Exception ex) {              
                         addAuditTrailEntry(ex.toString());              
                         ex.printStackTrace();              
          }]]>
                </bpelx:exec>
            </sequence>
        </scope>
        <assign name="InitializeESPParameters">
            <copy>
                <from expression="'No'"/>
                <to variable="ReleaseESPJob"/>
            </copy>
            <copy>
                <from expression="'Error'"/>
                <to variable="ESPJobReleased"/>
            </copy>
        </assign>
        <assign name="InitailAssignHeaders">
            <copy>
                <from variable="inputVariable" part="payload"
                      query="/ns11:fileHeader/ns11:fileName"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:fileName"/>
            </copy>
            <copy>
                <from variable="inputVariable" part="payload"
                      query="/ns11:fileHeader/ns11:directory"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:directory"/>
            </copy>
            <copy>
                <from expression="''"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:lineNumber"/>
            </copy>
            <copy>
                <from expression="''"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:columnNumber"/>
            </copy>
            <copy>
                <from expression="''"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:recordNumber"/>
            </copy>
            <copy>
                <from expression="'false'"/>
                <to variable="SyncChunkReadOutboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:isEOF"/>
            </copy>
            <copy>
                <from expression="0"/>
                <to variable="counter"/>
            </copy>
            <copy>
                <from expression="0"/>
                <to variable="TotalNoOfRecs"/>
            </copy>
            <copy>
                <from expression="'CE Store Deposits File Name'"/>
                <to variable="XSLT_PARAM"
                    query="/ns4:parameters/ns4:item/ns4:name"/>
            </copy>
            <copy>
                <from variable="inputVariable"
                      query="/ns11:fileHeader/ns11:fileName" part="payload"/>
                <to variable="XSLT_PARAM"
                    query="/ns4:parameters/ns4:item/ns4:value"/>
            </copy>
        </assign>
        <invoke name="InvokeZeroByteRead" partnerLink="ZeroByteRead"
                portType="ns14:SynchChunked_ptt" operation="SynchChunked"
                inputVariable="InvokeZeroByteRead_SynchChunked_InputVariable"
                outputVariable="InvokeZeroByteRead_SynchChunked_OutputVariable"
                bpelx:outputHeaderVariable="SyncChunkReadOutboundHeader"
                bpelx:inputHeaderVariable="SyncChunkReadInboundHeader"/>
        <assign name="AssignChunkReadHeaders">
            <copy>
                <from expression="''"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:lineNumber"/>
            </copy>
            <copy>
                <from expression="''"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:columnNumber"/>
            </copy>
            <copy>
                <from expression="''"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:recordNumber"/>
            </copy>
            <copy>
                <from expression="'false'"/>
                <to variable="SyncChunkReadOutboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:isEOF"/>
            </copy>
            <copy>
                <from expression="0"/>
                <to variable="counter"/>
            </copy>
            <copy>
                <from variable="inputVariable"
                      query="/ns11:fileHeader/ns11:directory" part="payload"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:directory"/>
            </copy>
            <copy>
                <from variable="inputVariable"
                      query="/ns11:fileHeader/ns11:fileName" part="payload"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns3:OutboundFileHeaderType/ns3:fileName"/>
            </copy>
            <copy>
                <from expression="0"/>
                <to variable="TotalNoOfRecs"/>
            </copy>
            <copy>
                <from expression="'CE Store Deposits File Name'"/>
                <to variable="XSLT_PARAM"
                    query="/ns4:parameters/ns4:item/ns4:name"/>
            </copy>
            <copy>
                <from variable="inputVariable"
                      query="/ns11:fileHeader/ns11:fileName" part="payload"/>
                <to variable="XSLT_PARAM"
                    query="/ns4:parameters/ns4:item/ns4:value"/>
            </copy>
        </assign>
        <switch name="Switch_1">
            <case condition="bpws:getVariableData('InvokeZeroByteRead_SynchChunked_OutputVariable','ZeroByte','/ns15:ZeroByte/ns15:Filler')='&amp;#0;'">
                <assign name="AssignZeroFileName">
                    <copy>
                        <from variable="inputVariable" part="payload"
                              query="/ns11:fileHeader/ns11:fileName"/>
                        <to variable="SyncChunkReadInboundHeader"
                            part="outboundHeader"
                            query="/ns3:OutboundFileHeaderType/ns3:fileName"/>
                    </copy>
                    <copy>
                        <from expression="0"/>
                        <to variable="TotalNoOfRecs"/>
                    </copy>
                </assign>
            </case>
            <otherwise>
                <while name="While_1"
                       condition="bpws:getVariableData('SyncChunkReadInboundHeader','outboundHeader','/ns3:OutboundFileHeaderType/ns3:isEOF')!='true'">
                    <sequence name="Sequence_1">
                        <invoke name="InvokeSynchFileRead"
                                partnerLink="SynchFileRead"
                                portType="ns2:SynchChunked_ptt"
                                operation="SynchChunked"
                                inputVariable="InvokeSynchFileRead_In"
                                outputVariable="InvokeSyncFileRead_Out"
                                bpelx:outputHeaderVariable="SyncChunkReadOutboundHeader"
                                bpelx:inputHeaderVariable="SyncChunkReadInboundHeader"/>
                        <assign name="AssignINOUTHeader">
                            <copy>
                                <from variable="SyncChunkReadOutboundHeader"/>
                                <to variable="SyncChunkReadInboundHeader"/>
                            </copy>
                            <copy>
                                <from expression="bpws:getVariableData('counter')+1"/>
                                <to variable="counter"/>
                            </copy>
                        </assign>
                        <switch name="ISMessageRejected">
                            <case condition="bpws:getVariableData('SyncChunkReadOutboundHeader','outboundHeader','/ns3:OutboundFileHeaderType/ns3:isMessageRejected')!='true'">
                                <sequence name="Sequence_7">
                                    <assign name="TransformData">
                                        <bpelx:annotation>
                                            <bpelx:pattern>transformation</bpelx:pattern>
                                        </bpelx:annotation>
                                        <copy>
                                            <from expression="ora:processXSLT('Transformation_1.xsl',bpws:getVariableData('InvokeSyncFileRead_Out','Root-Element'))"/>
                                            <to variable="InvokeTableInsert_In"
                                                part="XxCeStoreBankDepositsCollection"/>
                                        </copy>
                                    </assign>
                                    <invoke name="InvokeTableInsert"
                                            partnerLink="InsertXX_CE_STORE_BANK_DEPOSITS"
                                            portType="ns5:InsertXX_CE_STORE_BANK_DEPOSITS_ptt"
                                            operation="insert"
                                            inputVariable="InvokeTableInsert_In"/>
                                    <assign name="TotalNoOfRecs">
                                        <copy>
                                            <from expression="ora:countNodes('InvokeTableInsert_In','XxCeStoreBankDepositsCollection','/ns7:XxCeStoreBankDepositsCollection/ns7:XxCeStoreBankDeposits')+bpws:getVariableData('TotalNoOfRecs')"/>
                                            <to variable="TotalNoOfRecs"/>
                                        </copy>
                                    </assign>
                                </sequence>
                            </case>
                            <otherwise>
                                <sequence name="Sequence_8">
                                    <assign name="InvalidMessage">
                                        <copy>
                                            <from expression="string('Invalid Message')"/>
                                            <to variable="Exception"
                                                part="code"/>
                                        </copy>
                                        <copy>
                                            <from expression="string('ReadChunkFile.InvalidMessage')"/>
                                            <to variable="Exception"
                                                part="summary"/>
                                        </copy>
                                        <copy>
                                            <from expression="bpws:getVariableData('SyncChunkReadOutboundHeader','outboundHeader','/ns3:OutboundFileHeaderType/ns3:rejectionReason')"/>
                                            <to variable="Exception"
                                                part="detail"/>
                                        </copy>
                                    </assign>
                                    <throw name="ThrowInvalidMessage"
                                           faultName="bpelx:bindingFault"
                                           faultVariable="Exception"/>
                                </sequence>
                            </otherwise>
                        </switch>
                    </sequence>
                </while>
            </otherwise>
        </switch>
        <scope name="CallESP">
            <sequence name="Sequence_2">
                <assign name="AssignESP">
                    <copy>
                        <from expression="ora:getDomainId()"/>
                        <to variable="invkESP_initiate_InputVariable"
                            part="payload"
                            query="/ns8:BPELInvokeESPProcessRequest/ns8:processDomain"/>
                    </copy>
                    <copy>
                        <from expression="'CE_StoreBankDeposits_Upload'"/>
                        <to variable="invkESP_initiate_InputVariable"
                            part="payload"
                            query="/ns8:BPELInvokeESPProcessRequest/ns8:processName"/>
                    </copy>
                    <copy>
                        <from expression="'StoreBankDeposits'"/>
                        <to variable="invkESP_initiate_InputVariable"
                            part="payload"
                            query="/ns8:BPELInvokeESPProcessRequest/ns8:filePattern"/>
                    </copy>
                </assign>
                <invoke name="invkESP" partnerLink="BPELInvokeESP"
                        portType="ns8:BPELInvokeESP" operation="initiate"
                        inputVariable="invkESP_initiate_InputVariable"/>
                <assign name="AssignReleaseESPJob">
                    <copy>
                        <from expression="'Yes'"/>
                        <to variable="ReleaseESPJob"/>
                    </copy>
                    <copy>
                        <from expression="'Success'"/>
                        <to variable="ESPJobReleased"/>
                    </copy>
                </assign>
            </sequence>
        </scope>
        <scope name="LogTransactionEnd">
            <variables>
                <variable name="xmlFragment" type="xsd:string"/>
            </variables>
            <sequence name="Sequence_4">
                <assign name="AssignLogTransactionEnd">
                    <copy>
                        <from expression="'Success'"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:ProcessInfo/ns10:ProcessStatus"/>
                    </copy>
                    <copy>
                        <from>
                            <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                                <EntityID EntityType="SourceFileName"/>
                                <EntityID EntityType="NumberOfRecords"/>
                                <EntityID EntityType="ESPJobRequired"/>
                                <EntityID EntityType="ReleaseESPJobStatus"/>
                                <EntityID EntityType="TableName"/>
                            </EntiltyList>
                        </from>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:EntiltyList"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>', bpws:getVariableData('inputVariable','payload','/ns11:fileHeader/ns11:fileName'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:EntiltyList/ns10:EntityID[1]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;NumberOfRecords&quot;>', bpws:getVariableData('TotalNoOfRecs'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:EntiltyList/ns10:EntityID[2]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;ESPJobRequired&quot;>', bpws:getVariableData('ReleaseESPJob'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:EntiltyList/ns10:EntityID[3]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;ReleaseESPJobStatus&quot;>', bpws:getVariableData('ESPJobReleased'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:EntiltyList/ns10:EntityID[4]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;TableName&quot;>', 'XX_CE_STORE_BANK_DEPOSITS', '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionStart_initiate_InputVariable"
                            part="payload"
                            query="/ns10:TransactionData/ns10:EntiltyList/ns10:EntityID[5]"/>
                    </copy>
                </assign>
                <invoke name="invkLogTransactionEnd"
                        partnerLink="ODTransactionLogger"
                        portType="ns9:ODTransactionLogger" operation="initiate"
                        inputVariable="invkTransactionStart_initiate_InputVariable"/>
            </sequence>
        </scope>
    </sequence>
</process>