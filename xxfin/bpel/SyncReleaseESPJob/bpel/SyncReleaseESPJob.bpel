<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Nov 12 15:45:12 IST 2009
  Author:  aravind
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="SyncReleaseESPJob"
         targetNamespace="http://xmlns.oracle.com/SyncReleaseESPJob"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns4="http://xmlns.oracle.com/TransactionData"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns5="ODError"
         xmlns:client="http://xmlns.oracle.com/SyncReleaseESPJob"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns1="http://xmlns.oracle.com/BPELInvokeESP"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:ns2="http://xmlns.oracle.com/ODTransactionLogger"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="client" partnerLinkType="client:SyncReleaseESPJob"
                 myRole="SyncReleaseESPJobProvider"/>
    <partnerLink myRole="BPELInvokeESPRequester" name="BPELInvokeESP"
                 partnerRole="BPELInvokeESPProvider"
                 partnerLinkType="ns1:BPELInvokeESP"/>
    <partnerLink myRole="ODTransactionLoggerRequester"
                 name="ODTransactionLogger"
                 partnerRole="ODTransactionLoggerProvider"
                 partnerLinkType="ns2:ODTransactionLogger"/>
    <partnerLink name="ODErrorLogger" partnerRole="ODErrorLoggerProvider"
                 partnerLinkType="ns3:ODErrorLogger"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable"
              messageType="client:SyncReleaseESPJobRequestMessage"/>
    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable"
              messageType="client:SyncReleaseESPJobResponseMessage"/>
    <variable name="LBHeaderFileName" type="xsd:string"/>
    <variable name="InvokeESPProcessIn"
              messageType="ns1:BPELInvokeESPRequestMessage"/>
    <variable name="InvokeTransactionLoggerIn"
              messageType="ns2:ODTransactionLoggerRequestMessage"/>
    <variable name="ProcessHeader" type="xsd:string"/>
    <variable name="invkCatchAll_initiate"
              messageType="ns3:ODErrorLoggerRequestMessage"/>
    <variable name="Exception" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="xmlFragment" type="xsd:string"/>
  </variables>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence_4">
        <assign name="AssignCatchAll">
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns5:ErrorData/ns5:ProcessInfo/ns5:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns5:ErrorData/ns5:ProcessInfo/ns5:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns5:ErrorData/ns5:ProcessInfo/ns5:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns5:ErrorData/ns5:ProcessInfo/ns5:SystemName"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorDateTime"/>
          </copy>
          <copy>
            <from variable="Exception" part="code"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorCode"/>
          </copy>
          <copy>
            <from variable="Exception" part="detail"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="Exception" part="detail"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorText"/>
          </copy>
          <copy>
            <from expression="'system'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorType"/>
          </copy>
          <copy>
            <from expression="'fatal'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns5:ErrorData/ns5:Notification/ns5:sendNotification"/>
          </copy>
        </assign>
        <assign name="CopyTransactionData">
          <copy>
            <from expression="'Error'"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:ProcessInfo/ns4:ProcessStatus"/>
          </copy>
        </assign>
        <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                portType="ns2:ODTransactionLogger" operation="initiate"
                inputVariable="InvokeTransactionLoggerIn"/>
        <invoke name="invkCatchAll" partnerLink="ODErrorLogger"
                portType="ns3:ODErrorLogger" operation="initiate"
                inputVariable="invkCatchAll_initiate"/>
        <assign name="AssignOut">
          <copy>
            <from expression="'Error Occured ESP Job Not Released'"/>
            <to variable="outputVariable" part="payload"
                query="/client:SyncReleaseESPJobProcessResponse/client:result"/>
          </copy>
        </assign>
        <reply name="ReplyOut" partnerLink="client"
               portType="client:SyncReleaseESPJob" operation="process"
               variable="outputVariable"/>
        <terminate name="Terminate"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in SyncReleaseESPJob.wsdl) -->
    <receive name="receiveInput" partnerLink="client"
             portType="client:SyncReleaseESPJob" operation="process"
             variable="inputVariable" createInstance="yes"/>
    <!-- Generate reply to synchronous request -->
    <scope name="LogTransactionStart">
      <sequence name="SeqTransactionStart">
        <assign name="AssignTransactionData">
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:ProcessInfo/ns4:Domain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:ProcessInfo/ns4:ProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:ProcessInfo/ns4:InstanceId"/>
          </copy>
          <copy>
            <from expression="'Start'"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:ProcessInfo/ns4:ProcessStatus"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:ProcessInfo/ns4:transactionStartTime"/>
          </copy>
          <copy>
            <from expression="'ESP Release'"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:MessageDetails/ns4:MessageOperation"/>
          </copy>
          <copy>
            <from expression="'EBS'"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:MessageDetails/ns4:MessageSourceSystem"/>
          </copy>
          <copy>
            <from expression="'PL/SQL Concurrent Program'"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:MessageDetails/ns4:MessageSourceSystemComponent"/>
          </copy>
          <copy>
            <from expression="'Release Parameters'"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:MessageDetails/ns4:MessageType"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:MessageDetails/ns4:MessageDateTime"/>
          </copy>
          <copy>
            <from>
              <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                <EntityID EntityType="ESP Process Name"/>
              </EntiltyList>
            </from>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:EntiltyList"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityList>&lt;EntityID EntityType=&quot;ProcessName&quot;>', bpws:getVariableData('inputVariable','payload','/client:SyncReleaseESPJobProcessRequest/client:ProcessName'), '&lt;/EntityID>&lt;EntityID EntityType=&quot;ESP Attribute1&quot;>',bpws:getVariableData('inputVariable','payload','/client:SyncReleaseESPJobProcessRequest/client:ESPAttribute_1'),'&lt;/EntityID>&lt;EntityID EntityType=&quot;ESP Attribute2&quot;>',bpws:getVariableData('inputVariable','payload','/client:SyncReleaseESPJobProcessRequest/client:ESPAttribute_2'),'&lt;/EntityID>&lt;/EntityList>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:EntiltyList/ns4:EntityID[1]"/>
          </copy>
          <copy>
            <from expression="'ESP Release from PL/SQL'"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:ProcessInfo/ns4:SystemName"/>
          </copy>
          <copy>
            <from expression="'EBS'"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:ProcessInfo/ns4:TradingPartnerDetails/ns4:TPFrom"/>
          </copy>
          <copy>
            <from expression="'ESP'"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:ProcessInfo/ns4:TradingPartnerDetails/ns4:TPTo"/>
          </copy>
        </assign>
        <invoke name="InvokeTransactionLogger" partnerLink="ODTransactionLogger"
                portType="ns2:ODTransactionLogger" operation="initiate"
                inputVariable="InvokeTransactionLoggerIn"/>
      </sequence>
    </scope>
    <scope name="setTitle">
      <sequence name="SeqProcessHeader">
        <assign name="initializeFileName">
          <copy>
            <from expression="substring(concat('Variables ',bpws:getVariableData('inputVariable','payload','/client:SyncReleaseESPJobProcessRequest/client:ProcessName'),' ',bpws:getVariableData('inputVariable','payload','/client:SyncReleaseESPJobProcessRequest/client:ESPAttribute_1'),' ',bpws:getVariableData('inputVariable','payload','/client:SyncReleaseESPJobProcessRequest/client:ESPAttribute_2')),1,50)"/>
            <to variable="ProcessHeader"/>
          </copy>
        </assign>
        <bpelx:exec name="setTitle" language="java" version="1.5">
          <![CDATA[try {                   
  String title = (String)getVariableData("ProcessHeader");                   
  setTitle(title);                   
  addAuditTrailEntry(title) ;                   
} catch (Exception ex) {                   
  addAuditTrailEntry(ex.toString());                   
  ex.printStackTrace();                   
}]]>
        </bpelx:exec>
      </sequence>
    </scope>
    <switch name="SwitchProcess">
      <case condition="bpws:getVariableData('inputVariable','payload','/client:SyncReleaseESPJobProcessRequest/client:ProcessName') = 'ProcessInboundBankFiles'">
        <sequence name="Seq_LBHeader">
          <assign name="AssignHeaderFileName">
            <copy>
              <from variable="inputVariable" part="payload"
                    query="/client:SyncReleaseESPJobProcessRequest/client:ESPAttribute_2"/>
              <to variable="LBHeaderFileName"/>
            </copy>
          </assign>
          <assign name="AssignESPData">
            <copy>
              <from expression="ora:doc('${server_url}/xmllib/fin/BankFileCrossReference.xml','/BankFiles/BankFile[@AS2Name=bpws:getVariableData(&amp;quot;LBHeaderFileName&amp;quot;)]/ESPFilePattern')"/>
              <to variable="InvokeESPProcessIn" part="payload"
                  query="/ns1:BPELInvokeESPProcessRequest/ns1:filePattern"/>
            </copy>
            <copy>
              <from variable="inputVariable" part="payload"
                    query="/client:SyncReleaseESPJobProcessRequest/client:ESPAttribute_1"/>
              <to variable="InvokeESPProcessIn" part="payload"
                  query="/ns1:BPELInvokeESPProcessRequest/ns1:processDomain"/>
            </copy>
            <copy>
              <from variable="inputVariable" part="payload"
                    query="/client:SyncReleaseESPJobProcessRequest/client:ProcessName"/>
              <to variable="InvokeESPProcessIn" part="payload"
                  query="/ns1:BPELInvokeESPProcessRequest/ns1:processName"/>
            </copy>
          </assign>
          <invoke name="InvokeESPProcess" partnerLink="BPELInvokeESP"
                  portType="ns1:BPELInvokeESP" operation="initiate"
                  inputVariable="InvokeESPProcessIn"/>
        </sequence>
      </case>
      <otherwise>
        <sequence name="SeqOtherProcesses">
          <empty name="EmptyActivity"/>
        </sequence>
      </otherwise>
    </switch>
    <assign name="AssignReplyOut">
      <copy>
        <from expression="'ESP Job Released'"/>
        <to variable="outputVariable" part="payload"
            query="/client:SyncReleaseESPJobProcessResponse/client:result"/>
      </copy>
    </assign>
    <scope name="LogTransactionEnd">
      <sequence name="SeqTransactionEnd">
        <assign name="AssignTransactionData">
          <copy>
            <from expression="'Success'"/>
            <to variable="InvokeTransactionLoggerIn" part="payload"
                query="/ns4:TransactionData/ns4:ProcessInfo/ns4:ProcessStatus"/>
          </copy>
        </assign>
        <invoke name="InvokeTransactionLogger" partnerLink="ODTransactionLogger"
                portType="ns2:ODTransactionLogger" operation="initiate"
                inputVariable="InvokeTransactionLoggerIn"/>
      </sequence>
    </scope>
    <reply name="replyOutput" partnerLink="client"
           portType="client:SyncReleaseESPJob" operation="process"
           variable="outputVariable"/>
  </sequence>
</process>