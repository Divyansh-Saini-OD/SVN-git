<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Jul 11 08:57:13 EDT 2007
  Author:  Rajesh-Iyangar
  Purpose: Empty BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="SyncSupplierData_EBS_Out"
         targetNamespace="http://xmlns.oracle.com/SyncSupplierData_EBS_Out"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns4="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns24="http://xmlns.oracle.com/pcbpel/adapter/ftp/SynchZeroByte/"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns16="http://xmlns.oracle.com/pcbpel/adapter/db/top/ServicePeopleSoftTableInsertUpdate"
         xmlns:ns5="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ns9="http://xmlns.oracle.com/pcbpel/adapter/db/top/ServiceExtractTableSelect"
         xmlns:ns17="http://www.openapplications.org/officedepot/merchandising/foundation/1"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/ftp/ServiceFileRead/"
         xmlns:ns25="http://xmlns.oracle.com/pcbpel/adapter/db/top/ServiceGSSTableInserUpdate"
         xmlns:ns2="http://www.openapplications.org/oagis/9"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns15="ODError"
         xmlns:ns10="http://xmlns.oracle.com/pcbpel/adapter/db/ServiceExtractTableUpdate/"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns20="http://xmlns.oracle.com/ODTransactionLogger"
         xmlns:ns13="http://xmlns.oracle.com/NASupplier_rms_inb"
         xmlns:ns7="http://xmlns.oracle.com/pcbpel/adapter/db/ServiceGSSTableInserUpdate/"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns12="http://xmlns.oracle.com/pcbpel/adapter/db/ServicePeopleSoftTableInsertUpdate/"
         xmlns:ns23="http://xmlns.oracle.com/pcbpel/adapter/ftp/SynchFileRead/"
         xmlns:ns18="http://xmlns.oracle.com/pcbpel/adapter/ftp/"
         xmlns:client="http://xmlns.oracle.com/SyncSupplierData_EBS_Out"
         xmlns:ns6="http://TargetNamespace.com/ServiceSupplierFileRead"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ns22="http://xmlns.oracle.com/BPELInvokeESP"
         xmlns:ns11="http://xmlns.oracle.com/pcbpel/adapter/db/top/ServiceExtractTableUpdate"
         xmlns:ns19="http://schemas.oracle.com/service/bpel/common"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://www.openapplications.org/oagis/9/officedepot/1"
         xmlns:ns14="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns21="http://xmlns.oracle.com/TransactionData"
         xmlns:ns8="http://xmlns.oracle.com/pcbpel/adapter/db/ServiceExtractTableSelect/">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <partnerLinks>
    <partnerLink myRole="Get_role" name="ServiceFileRead"
                 partnerLinkType="ns1:Get_plt"/>
    <partnerLink name="ServiceGSSTableInserUpdate"
                 partnerRole="ServiceGSSTableInserUpdate_role"
                 partnerLinkType="ns7:ServiceGSSTableInserUpdate_plt"/>
    <partnerLink name="ServiceExtractTableSelect"
                 partnerRole="ServiceExtractTableSelect_role"
                 partnerLinkType="ns8:ServiceExtractTableSelect_plt"/>
    <partnerLink name="ServiceExtractTableUpdate"
                 partnerRole="ServiceExtractTableUpdate_role"
                 partnerLinkType="ns10:ServiceExtractTableUpdate_plt"/>
    <partnerLink name="ServicePeopleSoftTableInsertUpdate"
                 partnerRole="ServicePeopleSoftTableInsertUpdate_role"
                 partnerLinkType="ns12:ServicePeopleSoftTableInsertUpdate_plt"/>
    <partnerLink myRole="ODErrorLoggerRequester" name="ODErrorLogger"
                 partnerRole="ODErrorLoggerProvider"
                 partnerLinkType="ns14:ODErrorLogger"/>
    <partnerLink myRole="ODTransactionLoggerRequester"
                 name="ODTransactionLogger"
                 partnerRole="ODTransactionLoggerProvider"
                 partnerLinkType="ns20:ODTransactionLogger"/>
    <partnerLink myRole="BPELInvokeESPRequester" name="BPELInvokeESP"
                 partnerRole="BPELInvokeESPProvider"
                 partnerLinkType="ns22:BPELInvokeESP"/>
    <partnerLink name="SynchFileRead" partnerRole="SynchRead_role"
                 partnerLinkType="ns23:SynchRead_plt"/>
    <partnerLink name="SynchZeroByte" partnerRole="SynchRead_role"
                 partnerLinkType="ns24:SynchRead_plt"/>
    <partnerLink myRole="NASupplier_rms_inbRequester" name="NASupplier_rms_inb"
                 partnerRole="NASupplier_rms_inbProvider"
                 partnerLinkType="ns13:NASupplier_rms_inb"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <variable name="ReceiveFile_Read" messageType="ns1:Root-Element_msg"/>
    <variable name="oagis" element="ns2:SyncSupplierPartyMaster"/>
    <variable name="InvokeGSSTableInsertUpdate"
              messageType="ns7:XxApGsapvenCollection_msg"/>
    <variable name="InvokeExtractTableSelect_GSS"
              messageType="ns8:ServiceExtractTableSelectSelect_P_Sys_Name_inparameters"/>
    <variable name="InvokeExtractTableSelect_GSS_Out"
              messageType="ns8:XxApSuppExtractCollection_msg"/>
    <variable name="InvokeExtractTableUpdate_update"
              messageType="ns10:XxApSuppExtractCollection_msg"/>
    <variable name="InvokePeopleSoftTableInsertUpdate"
              messageType="ns12:XxApPsVendorCollection_msg"/>
    <variable name="InvokeExtractTableSelectPSFT"
              messageType="ns8:ServiceExtractTableSelectSelect_P_Sys_Name_inparameters"/>
    <variable name="InvokeExtractTableSelectPSFT_Out"
              messageType="ns8:XxApSuppExtractCollection_msg"/>
    <variable name="InvokeExtractTableUpdatePSFT"
              messageType="ns10:XxApSuppExtractCollection_msg"/>
    <variable name="invkCatchAll_initiate"
              messageType="ns14:ODErrorLoggerRequestMessage"/>
    <variable name="InvokeExtractTableUpdateException_RMS"
              messageType="ns10:XxApSuppExtractCollection_msg"/>
    <variable name="InvokeExtractTableSelect_RMS"
              messageType="ns8:ServiceExtractTableSelectSelect_P_Sys_Name_inparameters"/>
    <variable name="InvokeExtractTableSelect_RMS_Out"
              messageType="ns8:XxApSuppExtractCollection_msg"/>
    <variable name="InvokeExtractTableUpdateException_RMS_Success_update"
              messageType="ns10:XxApSuppExtractCollection_msg"/>
    <variable name="Exception_Var" type="xsd:string"/>
    <variable name="ErrorMessageText" type="xsd:string"/>
    <variable name="FileName_In" messageType="ns18:InboundHeader_msg"/>
    <variable name="ProcessHeader" type="xsd:string"/>
    <variable name="XSLT_PARAM" element="ns19:parameters"/>
    <variable name="logTransactionInput"
              messageType="ns20:ODTransactionLoggerRequestMessage"/>
    <variable name="InvokeServiceESPIn"
              messageType="ns22:BPELInvokeESPRequestMessage"/>
    <variable name="FileSize" type="xsd:integer"/>
    <variable name="InvokeSynchReadIn" messageType="ns23:Empty_msg"/>
    <variable name="InvokeSynchReadOut" messageType="ns23:Root-Element_msg"/>
    <variable name="SynchReadFileName" messageType="ns18:OutboundHeader_msg"/>
    <variable name="InvokeZeroByteReadIn" messageType="ns24:Empty_msg"/>
    <variable name="InvokeZeroByteReadOut" messageType="ns24:SynchRead_msg"/>
    <variable name="numberOfRecords" type="xsd:integer"/>
    <variable name="SystemName" type="xsd:string"/>
    <variable name="TableName" type="xsd:string"/>
    <variable name="RMS_ret_code" type="xsd:string"/>
    <variable name="Exception" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="RMS_ret_message" type="xsd:string"/>
    <variable name="InvokeRMS_process_InputVariable"
              messageType="ns13:NASupplier_rms_inbRequestMessage"/>
    <variable name="InvokeRMS_process_OutputVariable"
              messageType="ns13:NASupplier_rms_inbResponseMessage"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence_4">
        <assign name="asnCatchAll">
          <copy>
            <from expression="concat(&quot;Error encountered in Process SyncSupplierData_EBS_out, while processing file &quot;, bpws:getVariableData('FileName_In','inboundHeader','/ns18:InboundFTPHeaderType/ns18:fileName'))"/>
            <to variable="ErrorMessageText"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:ProcessInfo/ns15:SystemName"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'Catch All on the Main Sequence'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessStep"/>
          </copy>
          <copy>
            <from expression="ora:getFaultName()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorCode"/>
          </copy>
          <copy>
            <from variable="ErrorMessageText"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorDescription"/>
          </copy>
          <copy>
            <from expression="ora:getFaultAsString()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorText"/>
          </copy>
          <copy>
            <from expression="'system'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorType"/>
          </copy>
          <copy>
            <from expression="'fatal'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns15:ErrorData/ns15:Notification/ns15:sendNotification"/>
          </copy>
          <copy>
            <from variable="Exception_Var"/>
            <to variable="InvokeExtractTableUpdate_update"
                part="XxApSuppExtractCollection"
                query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:extSystem"/>
          </copy>
          <copy>
            <from expression="'E'"/>
            <to variable="InvokeExtractTableUpdate_update"
                part="XxApSuppExtractCollection"
                query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:bpelRunningFlag"/>
          </copy>
        </assign>
        <invoke name="InvokeExtractTableUpdate_update"
                partnerLink="ServiceExtractTableUpdate"
                portType="ns10:ServiceExtractTableUpdate_ptt" operation="update"
                inputVariable="InvokeExtractTableUpdate_update"/>
        <invoke name="invkCatchAll" partnerLink="ODErrorLogger"
                portType="ns14:ODErrorLogger" operation="initiate"
                inputVariable="invkCatchAll_initiate"/>
        <scope name="LogTransactionError">
          <variables>
            <variable name="xmlFragment" type="xsd:string"/>
          </variables>
          <sequence name="SeqTransLog">
            <assign name="copyTransactionData">
              <copy>
                <from expression="'Error'"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns21:TransactionData/ns21:ProcessInfo/ns21:ProcessStatus"/>
              </copy>
              <copy>
                <from>
                  <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                    <EntityID EntityType="SourceFileName"/>
                    <EntityID EntityType="FileSize"/>
                    <EntityID EntityType="NumberOfRecordsInserted"/>
                    <EntityID EntityType="RMS_ret_code"/>
                    <EntityID EntityType="RMS_ret_message"/>
                    <EntityID EntityType="TargetSystemName"/>
                    <EntityID EntityType="TableName"/>
                    <EntityID EntityType="ReleaseESPJob"/>
                  </EntiltyList>
                </from>
                <to variable="logTransactionInput" part="payload"
                    query="/ns21:TransactionData/ns21:EntiltyList"/>
              </copy>
              <copy>
                <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>',bpws:getVariableData('FileName_In','inboundHeader','/ns18:InboundFTPHeaderType/ns18:fileName') , '&lt;/EntityID>')"/>
                <to variable="xmlFragment"/>
              </copy>
              <copy>
                <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[1]"/>
              </copy>
              <copy>
                <from expression="concat('&lt;EntityID EntityType=&quot;FileSize&quot;>', bpws:getVariableData('FileName_In','inboundHeader','/ns18:InboundFTPHeaderType/ns18:size'), ' bytes', '&lt;/EntityID>')"/>
                <to variable="xmlFragment"/>
              </copy>
              <copy>
                <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[2]"/>
              </copy>
              <copy>
                <from expression="concat('&lt;EntityID EntityType=&quot;NumberOfRecords&quot;>', bpws:getVariableData('numberOfRecords'), '&lt;/EntityID>')"/>
                <to variable="xmlFragment"/>
              </copy>
              <copy>
                <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[3]"/>
              </copy>
              <copy>
                <from expression="concat('&lt;EntityID EntityType=&quot;RMS_ret_code&quot;>',bpws:getVariableData('RMS_ret_code'), '&lt;/EntityID>')"/>
                <to variable="xmlFragment"/>
              </copy>
              <copy>
                <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[4]"/>
              </copy>
              <copy>
                <from expression="concat('&lt;EntityID EntityType=&quot;RMS_ret_message&quot;>',bpws:getVariableData('RMS_ret_message'), '&lt;/EntityID>')"/>
                <to variable="xmlFragment"/>
              </copy>
              <copy>
                <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[5]"/>
              </copy>
              <copy>
                <from expression="concat('&lt;EntityID EntityType=&quot;ReleaseESPJob&quot;>', 'NO', '&lt;/EntityID>')"/>
                <to variable="xmlFragment"/>
              </copy>
              <copy>
                <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[6]"/>
              </copy>
              <copy>
                <from expression="concat('&lt;EntityID EntityType=&quot;TableName&quot;>',bpws:getVariableData('TableName'), '&lt;/EntityID>')"/>
                <to variable="xmlFragment"/>
              </copy>
              <copy>
                <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[7]"/>
              </copy>
              <copy>
                <from expression="concat('&lt;EntityID EntityType=&quot;TargetSystemName&quot;>',bpws:getVariableData('SystemName'), '&lt;/EntityID>')"/>
                <to variable="xmlFragment"/>
              </copy>
              <copy>
                <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[8]"/>
              </copy>
            </assign>
            <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                    portType="ns20:ODTransactionLogger" operation="initiate"
                    inputVariable="logTransactionInput"/>
          </sequence>
        </scope>
        <terminate name="Terminate"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <receive name="ReceiveFile" partnerLink="ServiceFileRead"
             portType="ns1:Get_ptt" operation="Get" variable="ReceiveFile_Read"
             createInstance="yes" bpelx:headerVariable="FileName_In"/>
    <assign name="AssignFileSize">
      <copy>
        <from variable="FileName_In" part="inboundHeader"
              query="/ns18:InboundFTPHeaderType/ns18:size"/>
        <to variable="FileSize"/>
      </copy>
      <copy>
        <from expression="''"/>
        <to variable="Exception_Var"/>
      </copy>
    </assign>
    <scope name="ProcessTitle">
      <sequence name="SeqProcessTitle">
        <assign name="InitializeInstanceTitle">
          <copy>
            <from expression="substring(concat('Process - ', bpws:getVariableData('FileName_In','inboundHeader','/ns18:InboundFTPHeaderType/ns18:fileName')),1,50)"/>
            <to variable="ProcessHeader"/>
          </copy>
          <copy>
            <from expression="'SyncSupplierFileName'"/>
            <to variable="XSLT_PARAM"
                query="/ns19:parameters/ns19:item/ns19:name"/>
          </copy>
          <copy>
            <from variable="FileName_In" part="inboundHeader"
                  query="/ns18:InboundFTPHeaderType/ns18:fileName"/>
            <to variable="XSLT_PARAM"
                query="/ns19:parameters/ns19:item/ns19:value"/>
          </copy>
        </assign>
        <bpelx:exec name="SetProcessTitle" language="java" version="1.5">
          <![CDATA[try {               
  String title = (String)getVariableData("ProcessHeader");               
  setTitle(title);               
  addAuditTrailEntry(title) ;               
} catch (Exception ex) {               
  addAuditTrailEntry(ex.toString());               
  ex.printStackTrace();               
}]]>
        </bpelx:exec>
      </sequence>
    </scope>
    <scope name="LogTransactionStart">
      <variables>
        <variable name="xmlFragment" type="xsd:string"/>
      </variables>
      <sequence name="SeqTransLog">
        <assign name="copyTransactionData">
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:ProcessInfo/ns21:Domain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:ProcessInfo/ns21:ProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:ProcessInfo/ns21:InstanceId"/>
          </copy>
          <copy>
            <from expression="'Start'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:ProcessInfo/ns21:ProcessStatus"/>
          </copy>
          <copy>
            <from expression="'SyncSupplier File Read'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:MessageDetails/ns21:MessageOperation"/>
          </copy>
          <copy>
            <from expression="'OD: AP GSS/PSFT/RMS Supplier Outbound'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:MessageDetails/ns21:MessageSourceSystem"/>
          </copy>
          <copy>
            <from expression="'Payload'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:MessageDetails/ns21:MessageType"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:MessageDetails/ns21:MessageDateTime"/>
          </copy>
          <copy>
            <from variable="FileName_In" part="inboundHeader"
                  query="/ns18:InboundFTPHeaderType/ns18:fileName"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID"/>
          </copy>
          <copy>
            <from>
              <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                <EntityID EntityType="SourceFileName"/>
              </EntiltyList>
            </from>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>',bpws:getVariableData('FileName_In','inboundHeader','/ns18:InboundFTPHeaderType/ns18:fileName') , '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList"/>
          </copy>
          <copy>
            <from expression="'EBS'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:ProcessInfo/ns21:TradingPartnerDetails/ns21:TPFrom"/>
          </copy>
          <copy>
            <from expression="'Legacy Systems'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:ProcessInfo/ns21:TradingPartnerDetails/ns21:TPTo"/>
          </copy>
          <copy>
            <from expression="'I0380 Supplier Interface'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:ProcessInfo/ns21:SystemName"/>
          </copy>
        </assign>
        <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                portType="ns20:ODTransactionLogger" operation="initiate"
                inputVariable="logTransactionInput"/>
      </sequence>
    </scope>
    <switch name="SwitchFileSize">
      <case condition="bpws:getVariableData('FileSize') > 0">
        <sequence name="SeqFileSize">
          <assign name="AssignFileName">
            <copy>
              <from variable="FileName_In" part="inboundHeader"
                    query="/ns18:InboundFTPHeaderType/ns18:fileName"/>
              <to variable="SynchReadFileName" part="outboundHeader"
                  query="/ns18:OutboundFTPHeaderType/ns18:fileName"/>
            </copy>
          </assign>
          <invoke name="InvokeSynchRead" partnerLink="SynchFileRead"
                  portType="ns23:SynchRead_ptt" operation="SynchRead"
                  inputVariable="InvokeSynchReadIn"
                  outputVariable="InvokeSynchReadOut"
                  bpelx:inputHeaderVariable="SynchReadFileName"/>
          <assign name="TransformOAGIS">
            <bpelx:annotation>
              <bpelx:pattern>transformation</bpelx:pattern>
            </bpelx:annotation>
            <copy>
              <from expression="ora:processXSLT('TransformationOAGIS.xsl',bpws:getVariableData('InvokeSynchReadOut','Root-Element'))"/>
              <to variable="oagis"/>
            </copy>
          </assign>
          <switch name="SwitchSystem">
            <case condition="bpws:getVariableData('InvokeSynchReadOut','Root-Element','/ns6:Root-Element/ns6:Supplier/ns6:System')='RMS'">
              <bpelx:annotation>
                <bpelx:pattern>Case:- RMS</bpelx:pattern>
              </bpelx:annotation>
              <sequence name="Sequence_4">
                <assign name="AssignOAGISRMS">
                  <copy>
                    <from variable="oagis"
                          query="/ns2:SyncSupplierPartyMaster"/>
                    <to variable="InvokeRMS_process_InputVariable"
                        part="payload" query="/ns2:SyncSupplierPartyMaster"/>
                  </copy>
                </assign>
                <invoke name="InvokeRMS" partnerLink="NASupplier_rms_inb"
                        portType="ns13:NASupplier_rms_inb" operation="initiate"
                        inputVariable="InvokeRMS_process_InputVariable"/>
                <receive name="ReceiveRMSResponse"
                         partnerLink="NASupplier_rms_inb"
                         portType="ns13:NASupplier_rms_inbCallback"
                         operation="onResult"
                         variable="InvokeRMS_process_OutputVariable"
                         createInstance="no"/>
                <assign name="AssignSystemNameRMS1">
                  <copy>
                    <from expression="ora:countNodes('InvokeRMS_process_InputVariable','payload','/ns2:SyncSupplierPartyMaster/ns2:DataArea/ns2:SupplierPartyMaster/ns2:PartyIDs')"/>
                    <to variable="numberOfRecords"/>
                  </copy>
                  <copy>
                    <from expression="'RMS'"/>
                    <to variable="InvokeExtractTableSelect_RMS"
                        part="ServiceExtractTableSelectSelect_P_Sys_Name_inparameters"
                        query="/ns9:ServiceExtractTableSelectSelect_P_Sys_NameInputParameters/ns9:P_Sys_Name"/>
                  </copy>
                  <copy>
                    <from expression="'RMS'"/>
                    <to variable="Exception_Var"/>
                  </copy>
                  <copy>
                    <from expression="'RMS'"/>
                    <to variable="SystemName"/>
                  </copy>
                  <copy>
                    <from expression="'NASupplier_rms_inb BPEL process'"/>
                    <to variable="TableName"/>
                  </copy>
                </assign>
                <invoke name="InvokeExtractTableSelect_RMS"
                        partnerLink="ServiceExtractTableSelect"
                        portType="ns8:ServiceExtractTableSelect_ptt"
                        operation="ServiceExtractTableSelectSelect_P_Sys_Name"
                        inputVariable="InvokeExtractTableSelect_RMS"
                        outputVariable="InvokeExtractTableSelect_RMS_Out"/>
                <switch name="Switch_1">
                  <case condition="bpws:getVariableData('InvokeRMS_process_OutputVariable','payload','/ns17:CommonResponse/ns17:ReturnCode')='0'">
                    <bpelx:annotation>
                      <bpelx:pattern>Case :- RMS success</bpelx:pattern>
                    </bpelx:annotation>
                    <sequence name="Sequence_7">
                      <assign name="Assign_ExtractTableUpdateColumnsRMS">
                        <copy>
                          <from variable="InvokeExtractTableSelect_RMS_Out"
                                part="XxApSuppExtractCollection"
                                query="/ns9:XxApSuppExtractCollection/ns9:XxApSuppExtract/ns9:extractTime"/>
                          <to variable="InvokeExtractTableUpdateException_RMS_Success_update"
                              part="XxApSuppExtractCollection"
                              query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:lastUpdateDate"/>
                        </copy>
                        <copy>
                          <from expression="'N'"/>
                          <to variable="InvokeExtractTableUpdateException_RMS_Success_update"
                              part="XxApSuppExtractCollection"
                              query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:bpelRunningFlag"/>
                        </copy>
                        <copy>
                          <from expression="'RMS'"/>
                          <to variable="InvokeExtractTableUpdateException_RMS_Success_update"
                              part="XxApSuppExtractCollection"
                              query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:extSystem"/>
                        </copy>
                        <copy>
                          <from expression="concat(bpws:getVariableData('InvokeRMS_process_OutputVariable','payload','/ns17:CommonResponse/ns17:ReturnCode'), &quot;: S&quot; )"/>
                          <to variable="RMS_ret_code"/>
                        </copy>
                      </assign>
                      <invoke name="InvokeExtractTableUpdateException_RMS_Success"
                              partnerLink="ServiceExtractTableUpdate"
                              portType="ns10:ServiceExtractTableUpdate_ptt"
                              operation="update"
                              inputVariable="InvokeExtractTableUpdateException_RMS_Success_update"/>
                    </sequence>
                  </case>
                  <case condition="bpws:getVariableData('InvokeRMS_process_OutputVariable','payload','/ns17:CommonResponse/ns17:ReturnCode')!='0'">
                    <bpelx:annotation>
                      <bpelx:pattern>Case:-RMS Errror</bpelx:pattern>
                    </bpelx:annotation>
                    <sequence name="Sequence_6">
                      <assign name="AssignSystemNameRMS">
                        <copy>
                          <from expression="'E'"/>
                          <to variable="InvokeExtractTableUpdateException_RMS"
                              part="XxApSuppExtractCollection"
                              query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:bpelRunningFlag"/>
                        </copy>
                        <copy>
                          <from expression="'RMS'"/>
                          <to variable="InvokeExtractTableUpdateException_RMS"
                              part="XxApSuppExtractCollection"
                              query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:extSystem"/>
                        </copy>
                        <copy>
                          <from expression="concat(bpws:getVariableData('InvokeRMS_process_OutputVariable','payload','/ns17:CommonResponse/ns17:ReturnCode'), &quot;: E&quot; )"/>
                          <to variable="RMS_ret_code"/>
                        </copy>
                        <copy>
                          <from expression="bpws:getVariableData('InvokeRMS_process_OutputVariable','payload','/ns17:CommonResponse/ns17:ReturnMessage')"/>
                          <to variable="RMS_ret_message"/>
                        </copy>
                      </assign>
                      <invoke name="InvokeExtractTableUpdateException_RMS_Error"
                              partnerLink="ServiceExtractTableUpdate"
                              portType="ns10:ServiceExtractTableUpdate_ptt"
                              operation="update"
                              inputVariable="InvokeExtractTableUpdateException_RMS"/>
                      <assign name="AssignInvalidMessage">
                        <copy>
                          <from expression="string('RMS Error')"/>
                          <to variable="Exception" part="code"/>
                        </copy>
                        <copy>
                          <from expression="string('ReadRMSFile.DataError')"/>
                          <to variable="Exception" part="summary"/>
                        </copy>
                        <copy>
                          <from expression="bpws:getVariableData('InvokeRMS_process_OutputVariable','payload','/ns17:CommonResponse/ns17:ReturnMessage')"/>
                          <to variable="Exception" part="detail"/>
                        </copy>
                      </assign>
                      <throw name="ThrowInvalidMessage"
                             faultName="bpelx:bindingFault"
                             faultVariable="Exception"/>
                    </sequence>
                  </case>
                </switch>
              </sequence>
            </case>
            <case condition="bpws:getVariableData('InvokeSynchReadOut','Root-Element','/ns6:Root-Element/ns6:Supplier/ns6:System')='GSS'">
              <bpelx:annotation>
                <bpelx:pattern>Case :- GSS</bpelx:pattern>
              </bpelx:annotation>
              <sequence name="Sequence_1">
                <assign name="AssignSystemNameGSS">
                  <copy>
                    <from expression="'GSS'"/>
                    <to variable="InvokeExtractTableSelect_GSS"
                        part="ServiceExtractTableSelectSelect_P_Sys_Name_inparameters"
                        query="/ns9:ServiceExtractTableSelectSelect_P_Sys_NameInputParameters/ns9:P_Sys_Name"/>
                  </copy>
                  <copy>
                    <from expression="'GSS'"/>
                    <to variable="Exception_Var"/>
                  </copy>
                </assign>
                <assign name="TransformOAGISGSS">
                  <bpelx:annotation>
                    <bpelx:pattern>transformation</bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from expression="ora:processXSLT('TransformationOAGISGSS.xsl',bpws:getVariableData('oagis'))"/>
                    <to variable="InvokeGSSTableInsertUpdate"
                        part="XxApGsapvenCollection"/>
                  </copy>
                </assign>
                <invoke name="InvokeGSSTableInsertUpdate"
                        partnerLink="ServiceGSSTableInserUpdate"
                        portType="ns7:ServiceGSSTableInserUpdate_ptt"
                        operation="merge"
                        inputVariable="InvokeGSSTableInsertUpdate"/>
                <invoke name="InvokeExtractTableSelect_GSS"
                        partnerLink="ServiceExtractTableSelect"
                        portType="ns8:ServiceExtractTableSelect_ptt"
                        operation="ServiceExtractTableSelectSelect_P_Sys_Name"
                        inputVariable="InvokeExtractTableSelect_GSS"
                        outputVariable="InvokeExtractTableSelect_GSS_Out"/>
                <assign name="AssignExtractTableUpdateColumnsGSS">
                  <copy>
                    <from variable="InvokeExtractTableSelect_GSS_Out"
                          part="XxApSuppExtractCollection"
                          query="/ns9:XxApSuppExtractCollection/ns9:XxApSuppExtract/ns9:extractTime"/>
                    <to variable="InvokeExtractTableUpdate_update"
                        part="XxApSuppExtractCollection"
                        query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:lastUpdateDate"/>
                  </copy>
                  <copy>
                    <from variable="InvokeExtractTableSelect_GSS_Out"
                          part="XxApSuppExtractCollection"
                          query="/ns9:XxApSuppExtractCollection/ns9:XxApSuppExtract/ns9:extSystem"/>
                    <to variable="InvokeExtractTableUpdate_update"
                        part="XxApSuppExtractCollection"
                        query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:extSystem"/>
                  </copy>
                  <copy>
                    <from expression="'N'"/>
                    <to variable="InvokeExtractTableUpdate_update"
                        part="XxApSuppExtractCollection"
                        query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:bpelRunningFlag"/>
                  </copy>
                  <copy>
                    <from expression="ora:countNodes('InvokeGSSTableInsertUpdate','XxApGsapvenCollection','/ns25:XxApGsapvenCollection/ns25:XxApGsapven/ns25:vendorName')"/>
                    <to variable="numberOfRecords"/>
                  </copy>
                  <copy>
                    <from expression="'GSS'"/>
                    <to variable="SystemName"/>
                  </copy>
                  <copy>
                    <from expression="'XxApGsapven'"/>
                    <to variable="TableName"/>
                  </copy>
                </assign>
                <invoke name="InvokeExtractTableUpdateGSS"
                        partnerLink="ServiceExtractTableUpdate"
                        portType="ns10:ServiceExtractTableUpdate_ptt"
                        operation="update"
                        inputVariable="InvokeExtractTableUpdate_update"/>
              </sequence>
            </case>
            <case condition="bpws:getVariableData('InvokeSynchReadOut','Root-Element','/ns6:Root-Element/ns6:Supplier/ns6:System')='PSFT'">
              <bpelx:annotation>
                <bpelx:pattern>Case :- PSFT</bpelx:pattern>
              </bpelx:annotation>
              <sequence name="Sequence_3">
                <assign name="AssignSystemNamePeopleSoft">
                  <copy>
                    <from expression="'PSFT'"/>
                    <to variable="InvokeExtractTableSelectPSFT"
                        part="ServiceExtractTableSelectSelect_P_Sys_Name_inparameters"
                        query="/ns9:ServiceExtractTableSelectSelect_P_Sys_NameInputParameters/ns9:P_Sys_Name"/>
                  </copy>
                  <copy>
                    <from expression="'PSFT'"/>
                    <to variable="Exception_Var"/>
                  </copy>
                </assign>
                <assign name="TransformOAGISPSFT">
                  <bpelx:annotation>
                    <bpelx:pattern>transformation</bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from expression="ora:processXSLT('TransformationOAGISPeopleSoft.xsl',bpws:getVariableData('oagis'))"/>
                    <to variable="InvokePeopleSoftTableInsertUpdate"
                        part="XxApPsVendorCollection"/>
                  </copy>
                </assign>
                <invoke name="InvokePeopleSoftTableInsertUpdate"
                        partnerLink="ServicePeopleSoftTableInsertUpdate"
                        portType="ns12:ServicePeopleSoftTableInsertUpdate_ptt"
                        operation="merge"
                        inputVariable="InvokePeopleSoftTableInsertUpdate"/>
                <invoke name="InvokeExtractTableSelectPSFT"
                        partnerLink="ServiceExtractTableSelect"
                        portType="ns8:ServiceExtractTableSelect_ptt"
                        operation="ServiceExtractTableSelectSelect_P_Sys_Name"
                        inputVariable="InvokeExtractTableSelectPSFT"
                        outputVariable="InvokeExtractTableSelectPSFT_Out"/>
                <assign name="AssignExtractTableUpdateColumnsPSFT">
                  <copy>
                    <from variable="InvokeExtractTableSelectPSFT_Out"
                          part="XxApSuppExtractCollection"
                          query="/ns9:XxApSuppExtractCollection/ns9:XxApSuppExtract/ns9:extSystem"/>
                    <to variable="InvokeExtractTableUpdatePSFT"
                        part="XxApSuppExtractCollection"
                        query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:extSystem"/>
                  </copy>
                  <copy>
                    <from variable="InvokeExtractTableSelectPSFT_Out"
                          part="XxApSuppExtractCollection"
                          query="/ns9:XxApSuppExtractCollection/ns9:XxApSuppExtract/ns9:extractTime"/>
                    <to variable="InvokeExtractTableUpdatePSFT"
                        part="XxApSuppExtractCollection"
                        query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:lastUpdateDate"/>
                  </copy>
                  <copy>
                    <from expression="'N'"/>
                    <to variable="InvokeExtractTableUpdatePSFT"
                        part="XxApSuppExtractCollection"
                        query="/ns11:XxApSuppExtractCollection/ns11:XxApSuppExtract/ns11:bpelRunningFlag"/>
                  </copy>
                  <copy>
                    <from expression="ora:countNodes('InvokePeopleSoftTableInsertUpdate','XxApPsVendorCollection','/ns16:XxApPsVendorCollection/ns16:XxApPsVendor/ns16:vendorId')"/>
                    <to variable="numberOfRecords"/>
                  </copy>
                  <copy>
                    <from expression="'PSFT'"/>
                    <to variable="SystemName"/>
                  </copy>
                  <copy>
                    <from expression="'XxApPsVendor , xxApPsVendorAddr, xxApPsVendorLoc, xxApPsVndrAddrScrol, xxApPsVndrLocScrol'"/>
                    <to variable="TableName"/>
                  </copy>
                </assign>
                <invoke name="InvokeExtractTableUpdatePSFT"
                        partnerLink="ServiceExtractTableUpdate"
                        portType="ns10:ServiceExtractTableUpdate_ptt"
                        operation="update"
                        inputVariable="InvokeExtractTableUpdatePSFT"/>
              </sequence>
            </case>
          </switch>
        </sequence>
      </case>
      <otherwise>
        <sequence name="SeqZeroByte">
          <assign name="AssignZeroByteFile">
            <copy>
              <from variable="FileName_In" part="inboundHeader"
                    query="/ns18:InboundFTPHeaderType/ns18:fileName"/>
              <to variable="SynchReadFileName" part="outboundHeader"
                  query="/ns18:OutboundFTPHeaderType/ns18:fileName"/>
            </copy>
          </assign>
          <invoke name="InvokeZeroByteRead" partnerLink="SynchZeroByte"
                  portType="ns24:SynchRead_ptt" operation="SynchRead"
                  inputVariable="InvokeZeroByteReadIn"
                  outputVariable="InvokeZeroByteReadOut"
                  bpelx:inputHeaderVariable="SynchReadFileName"/>
        </sequence>
      </otherwise>
    </switch>
    <scope name="LogTransactionEnd">
      <variables>
        <variable name="xmlFragment" type="xsd:string"/>
      </variables>
      <sequence name="SeqTransLog">
        <assign name="copyTransactionData">
          <copy>
            <from expression="'Success'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:ProcessInfo/ns21:ProcessStatus"/>
          </copy>
          <copy>
            <from>
              <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                <EntityID EntityType="SourceFileName"/>
                <EntityID EntityType="FileSize"/>
                <EntityID EntityType="NumberOfRecordsInserted"/>
                <EntityID EntityType="RMS_ret_code"/>
                <EntityID EntityType="RMS_ret_message"/>
                <EntityID EntityType="TargetSystemName"/>
                <EntityID EntityType="TableName"/>
                <EntityID EntityType="ReleaseESPJob"/>
              </EntiltyList>
            </from>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>',bpws:getVariableData('FileName_In','inboundHeader','/ns18:InboundFTPHeaderType/ns18:fileName') , '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[1]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;FileSize&quot;>', bpws:getVariableData('FileName_In','inboundHeader','/ns18:InboundFTPHeaderType/ns18:size'), ' bytes', '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[2]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;NumberOfRecords&quot;>', bpws:getVariableData('numberOfRecords'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[3]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;RMS_ret_code&quot;>',bpws:getVariableData('RMS_ret_code'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[4]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;RMS_ret_message&quot;>',bpws:getVariableData('RMS_ret_message'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[5]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;ReleaseESPJob&quot;>', 'NO', '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[6]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;TableName&quot;>',bpws:getVariableData('TableName'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[7]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;TargetSystemName&quot;>',bpws:getVariableData('SystemName'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns21:TransactionData/ns21:EntiltyList/ns21:EntityID[8]"/>
          </copy>
        </assign>
        <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                portType="ns20:ODTransactionLogger" operation="initiate"
                inputVariable="logTransactionInput"/>
      </sequence>
    </scope>
  </sequence>
</process>