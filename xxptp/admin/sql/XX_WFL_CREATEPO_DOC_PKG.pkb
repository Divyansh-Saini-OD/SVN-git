CREATE OR REPLACE
PACKAGE BODY XX_WFL_CREATEPO_DOC_PKG
-- +==================================================================================================+
-- |                  Office Depot - Project Simplify                                                 |
-- |                                                                                                  |
-- +==================================================================================================+
-- | Name        :  XX_WFL_CREATEPO_DOC_PKG.pkb                                       	              |
-- | Description :  This script is used to process each requisition for which PO     	              |
-- |                needs to be created. Copied from PO_AUTOCREATE_DOC. All custom procedure names    |
-- |                are prefixed with XX_.                                                            |
-- |Change Record:                                                                                    |
-- |===============                                                                                   |
-- |Rice Id Version   Date        Author                  Remarks            	                      |
-- |======= =======   ==========  =============           ============================                |
-- |        1.0       08/30/2004  Paul DSouza             Initial Creation                            |
-- |        1.1	      05/25/2015  Madhu Bolli             Retroffited from PO_AUTOCRAEATE_DOC of      |
-- | 							  version	120.26.12010000.39            |
-- |        1.2	      12/08/2015  Madhu Bolli             Retroffited from PO_AUTOCRAEATE_DOC again   |
-- | 							  on the version 120.26.12010000.39           |
-- |        1.3       08/01/2016  Avinash Baddam          Retrofit12.2 POXWATCB.pls 120.37.12020000.19|
-- |        1.4       10/21/2016  Avinash Baddam          Retrofitted POXWATCB.pls 120.37.12020000.22 |
-- +==================================================================================================+

AS


-- Read the profile option that enables/disables the debug log
g_po_wf_debug VARCHAR2(1) := NVL(FND_PROFILE.VALUE('PO_SET_DEBUG_WORKFLOW_ON'),'N');
x_progress              VARCHAR2(300);

/*********************************************************************************************
 *DESCRIPTION   : Private Procedures copied from PO_AUTOCREATE_DOC                           *
 *                                                                                           *
 *********************************************************************************************/

FUNCTION valid_contact(p_vendor_site_id number, p_vendor_contact_id number) RETURN BOOLEAN;
FUNCTION get_contact_id(p_contact_name varchar2, p_vendor_site_id number) RETURN NUMBER;

--<Shared Proc FPJ START>
PROCEDURE set_purchasing_org_id(
  itemtype        IN VARCHAR2,
  itemkey         IN VARCHAR2,
  p_org_id      IN NUMBER,
  p_suggested_vendor_site_id    IN NUMBER
);
--<Shared Proc FPJ END>


/* Start of procedure/function bodies */
/* Private Procedure/Functions */

FUNCTION valid_contact(p_vendor_site_id number, p_vendor_contact_id number) RETURN BOOLEAN
is
   x_count number;
begin
  if (p_vendor_site_id is null or p_vendor_contact_id is null) then
    return false;
  else
    -- check if contact on req. lines is valid
    select count(*) into x_count
    from po_vendor_contacts
    where vendor_site_id = p_vendor_site_id
    and vendor_contact_id = p_vendor_contact_id
    and nvl(inactive_date, sysdate+1) > sysdate;

    if (x_count > 0) then
      return true;
    else
      return false;
    end if;
  end if;
end;

FUNCTION get_contact_id(p_contact_name varchar2, p_vendor_site_id number) RETURN NUMBER
IS
     x_first_name varchar2(60);
     x_last_name  varchar2(60);
     x_comma_pos  number;
     x_contact_id number := null;
BEGIN

  begin
    select max(vendor_contact_id)
    into x_contact_id
    from po_supplier_contacts_val_v
    where vendor_site_id = p_vendor_site_id
    and contact = p_contact_name;
  exception
    when others then
    x_contact_id := null;
  end;

  return x_contact_id;
END;

----------------------------------------------------------------
--Start of Comments
--Name: set_purchasing_org_id
--Pre-reqs:
--  None
--Modifies:
--  None
--Locks:
--  None
--Function:
--  Helper function to set the PURCHASING_ORG_ID workflow
--  attribute. 
--Parameters:
--IN:
--itemtype
--  internal name for the item type
--itemkey
--  primary key generated by the workflow for the item type
--p_org_id
--  org_id of the operating unit where the requisition in
--  question was created
--p_suggested_vendor_site_id
--  id of the suggested vendor site for the requisition in
--  question
--Notes:
--  Added for Shared Procurement Services Project in FPJ
--Testing:
--  None
--End of Comments
----------------------------------------------------------------

PROCEDURE set_purchasing_org_id(
  itemtype        IN VARCHAR2,
  itemkey         IN VARCHAR2,
  p_org_id      IN NUMBER,
  p_suggested_vendor_site_id    IN NUMBER
)
IS

  l_purchasing_org_id PO_HEADERS_ALL.org_id%TYPE;
  l_progress      VARCHAR2(300);

BEGIN

  --Get the purchasing_org_id

  l_progress:= '10: set_purchasing_org_id: org_id = ' || to_char(p_org_id);

  IF p_suggested_vendor_site_id IS NOT NULL THEN
    BEGIN
      SELECT org_id
      INTO l_purchasing_org_id
      FROM po_vendor_sites_all
      WHERE vendor_site_id = p_suggested_vendor_site_id;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        l_purchasing_org_id := p_org_id;
    END;
  ELSE
    --suggested_vendor_site_id is null
    l_purchasing_org_id := p_org_id;
  END IF;


  l_progress:= '20: set_purchasing_org_id: org_id = ' || to_char(p_org_id)
                || ' purchasing_org_id = ' || to_char(l_purchasing_org_id);


  --Set purchasing_org_id workflow attribute
  po_wf_util_pkg.SetItemAttrNumber (itemtype   => itemtype,
                              itemkey    => itemkey,
                              aname      => 'PURCHASING_ORG_ID',
                              avalue     => l_purchasing_org_id);

EXCEPTION

  WHEN OTHERS THEN
    wf_core.context('po_autocreate_doc', 'set_purchasing_org_id', l_progress);
    RAISE;

END set_purchasing_org_id;


/*********************************************************************************************
 *AUTHOR        : Paul DSouza                                                                *
 *RICE ID       :                                                                            *
 *PROCEDURE     : XX_IS_REQ_FROM_IPROC                                                       *
 *DESCRIPTION   : Procedure to check whether the requisition is from Iprocurement            *
 *                                                                                           *
 *********************************************************************************************/

PROCEDURE XX_IS_REQ_FROM_IPROC(itemtype   IN   VARCHAR2
                                    ,itemkey    IN   VARCHAR2
                                    ,actid      IN   NUMBER
                                    ,funcmode   IN   VARCHAR2
                                    ,resultout  OUT NOCOPY  VARCHAR2 )
IS
ln_req_header_id  po_Requisition_Headers_All.requisition_header_id%TYPE;
lc_itemtype       wf_items.parent_item_type%TYPE;
ln_itemkey        wf_items.parent_item_key%TYPE;
ln_iproc_flag     NUMBER:=0;


BEGIN
--Get the REQ_HEADER_ID workflow attribute value into the variable for processing.
x_progress	:= '10: xx_is_req_from_iproc: itemkey='||itemkey;
IF (g_po_wf_debug = 'Y') THEN
   po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
END IF;

ln_req_header_id:= po_wf_util_pkg.GetItemAttrNumber
						 (itemtype => itemtype,
						  itemkey  => itemkey,
						  aname    => 'REQ_HEADER_ID');

x_progress	:= '10: xx_is_req_from_iproc: ln_req_header_id='||ln_req_header_id;
IF (g_po_wf_debug = 'Y') THEN
    po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
END IF;
IF (ln_req_header_id is null) OR (ln_req_header_id=0) THEN
   BEGIN
      SELECT PARENT_ITEM_TYPE, PARENT_ITEM_KEY
      INTO   lc_itemtype, ln_itemkey
      FROM   WF_ITEMS
      WHERE  ITEM_TYPE='CREATEPO'
      AND    ITEM_KEY=itemkey;     
      ln_req_header_id:= po_wf_util_pkg.GetItemAttrNumber
						 (itemtype => lc_itemtype,
						  itemkey  => ln_itemkey,
						  aname    => 'REQ_HEADER_ID');
   EXCEPTION 
   WHEN OTHERS THEN
      lc_itemtype:='';
      ln_itemkey:=0;
   END;
   x_progress	:= '11: xx_is_req_from_iproc: lc_item_type='||lc_itemtype;
   IF (g_po_wf_debug = 'Y') THEN
      po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
   END IF;

   x_progress	:= '12: xx_is_req_from_iproc: ln_item_key='||ln_itemkey;
   IF (g_po_wf_debug = 'Y') THEN
      po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
   END IF;

   x_progress	:= '13: xx_is_req_from_iproc: ln_req_header_id='||ln_req_header_id;
   IF (g_po_wf_debug = 'Y') THEN
      po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
   END IF;
END IF;

--Check whether the requisition is from Iprocurement.
  BEGIN
     SELECT 1
     INTO   ln_iproc_flag
     FROM   po_requisition_headers_all
     WHERE  requisition_header_id=ln_req_header_id
     AND    apps_source_code='POR';
  EXCEPTION
  WHEN OTHERS THEN
     ln_iproc_flag:=0;
  END;

  x_progress	:= '10: xx_is_req_from_iproc: ln_iproc_flag='||ln_iproc_flag;
  IF (g_po_wf_debug = 'Y') THEN
      po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
  END IF;
  
  IF ln_iproc_flag=1 THEN
     resultout 	:=  wf_engine.eng_completed || ':' ||  'Y';
     x_progress	:= '10: xx_is_req_from_iproc: result = Y';
     IF (g_po_wf_debug = 'Y') THEN
        po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
     END IF;
     po_wf_util_pkg.SetItemAttrText(itemtype   => itemtype,
                                    itemkey    => itemkey,
                                    aname      => 'XX_ORDER_TYPE',
                                    avalue     => 'IPROC');
  ELSE
     resultout 	:=  wf_engine.eng_completed || ':' ||  'N';
     x_progress	:= '10: xx_is_req_from_iproc: result = N';
     IF (g_po_wf_debug = 'Y') THEN
        po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
     END IF;
  END IF;     

END XX_IS_REQ_FROM_IPROC;

/***************************************************************************
 *
 *  Procedure:  xx_group_req_lines
 *
 *  Description:  Groups the requistion lines in the temp table into
 *      header and line records which it then inserts into
 *      the interface tables.
 *
 **************************************************************************/
procedure xx_group_req_lines (itemtype   IN   VARCHAR2,
                           itemkey    IN   VARCHAR2,
                           actid      IN   NUMBER,
                           funcmode   IN   VARCHAR2,
                           resultout  OUT NOCOPY  VARCHAR2 ) is


c1_group_id     number;
c1_req_header_id    number;
c1_req_line_id      number;
c1_suggested_buyer_id   number;
c1_source_doc_type_code   varchar2(25);
c1_source_doc_id    number;
c1_source_doc_line    number;
c1_suggested_vendor_id    number;
c1_suggested_vendor_site_id number;
c1_currency_code    varchar2(15);
c1_rate_type      varchar2(30);
c1_rate_date      date;
c1_rate       number;
c1_process_code     varchar2(30);
c1_rel_gen_method   varchar2(25);
c1_item_id      number;
c1_pcard_id     number;
c1_contract_id      number;
c1_deliver_to_location_code     hr_locations_all.location_code%type;
c1_dest_org_id                  number;                                          -- Consigned FPI
c1_dest_type_code               po_requisition_lines.destination_type_code%TYPE; -- Consigned FPI
c1_cons_from_supp_flag          varchar2(1);                                     -- Consigned FPI
c1_labor_req_line_id            number;  -- <SERVICES FPJ>

c2_rowid      rowid;
c2_group_id     number;
c2_req_header_id    number;
c2_req_line_id      number;
c2_suggested_buyer_id   number;
c2_source_doc_type_code   varchar2(25);
c2_source_doc_id    number;
c2_source_doc_line    number;
c2_suggested_vendor_id    number;
c2_suggested_vendor_site_id number;
c2_currency_code    varchar2(15);
c2_rate_type      varchar2(30);
c2_rate_date      date;
c2_rate       number;
c2_process_code     varchar2(30);
c2_rel_gen_method   varchar2(25);
c2_item_id      number;
c2_pcard_id     number;
c2_contract_id      number;
c2_labor_req_line_id            number;  -- <SERVICES FPJ>
--<R12 STYLES PHASE II START>
c2_line_type_id             number;
c2_purchase_basis           varchar2(30);
c1_line_type_id             number;
c1_purchase_basis           varchar2(30);
l_pcard_id                  number;
--<R12 STYLES PHASE II END>


l_enable_vmi_flag       po_asl_attributes.enable_vmi_flag%TYPE;               -- Consigned FPI
l_last_billing_date     po_asl_attributes.last_billing_date%TYPE;             -- Consigned FPI
l_cons_billing_cycle    po_asl_attributes.consigned_billing_cycle%TYPE;       -- Consigned FPI

c2_dest_org_id              number;                                           -- Consigned FPI
c2_dest_type_code           po_requisition_lines.destination_type_code%TYPE;  -- Consigned FPI
c2_cons_from_supp_flag      varchar2(1);                                      -- Consigned FPI

x_group_id      number;
x_first_time_for_this_comb  varchar2(5);
x_interface_header_id   number;
x_suggested_vendor_contact_id   number;
x_suggested_vendor_contact      varchar2(240);
c2_deliver_to_location_code     hr_locations_all.location_code%type;
x_prev_sug_vendor_contact_id    number;
x_carry_contact_to_po_flag      varchar2(10);

/*  x_grouping_allowed              varchar2(1); Bug 2974129 */
x_group_one_time_address        varchar2(1);

x_progress          varchar2(300);
x_valid       number;

c1_ga_flag                      varchar2(1);     -- FPI GA
c2_ga_flag                      varchar2(1);     -- FPI GA

--Bug 2745549
l_ref_ga_is_valid               varchar2(1) := 'N';

l_return_status         varchar2(1)    := NULL;
l_msg_count             number         := NULL;
l_msg_data              varchar2(2000) := NULL;

x_source_contact_id   NUMBER :=NULL; -- Bug 3586181
c2_found      VARCHAR2(1); -- Bug 3586181
l_is_clm_flow       VARCHAR2(1); -- Bug14314684



/* Define the cursor which picks up records from the temp table.
 * We need the 'for update' since we are going to update the
 * process_code.
 */
/* Bug # 1721991.
   The 'for update' clause was added to update the row which was processed
   in the Cursor c2 but this led to another problem in Oracle 8.1.6.3 or above
   where you can't have a commit inside a 'for update' Cursor loop.
   This let to the Runtime Error 'fetch out of sequence'
   The commit was actually issued in the procedure insert_into_header_interface.
   To solve this we removed the for update in the cursor and instead used rowid
   to update the row processed by the Cursor.
*/
-- <SERVICES FPJ>
-- Added labor_req_line_id to the select statement
cursor c1  is       /* x_group_id is a parameter */
  select prlt.group_id,
         prlt.requisition_header_id,
         prlt.requisition_line_id,
   prlt.suggested_buyer_id,
         prlt.source_doc_type_code,
   prlt.source_doc_id,
   prlt.source_doc_line,
   prlt.suggested_vendor_id,
         prlt.suggested_vendor_site_id,
   prlt.currency_code,
         prlt.rate_type,
   prlt.rate_date,
   prlt.rate,
   prlt.process_code,
   prlt.release_generation_method,
   prlt.item_id,
   prlt.pcard_id,
         prlt.contract_id,
         hrl.location_code,
         prl.destination_organization_id,
         prl.destination_type_code,
         prl.labor_req_line_id
         --<R12 STYLES PHASE II START>
        ,prl.line_type_id,
         prl.purchase_basis
         --<R12 STYLES PHASE II END>
    from po_wf_candidate_req_lines_temp prlt,
         po_requisition_lines prl,
         hr_locations_all hrl
   where prlt.process_code = 'PENDING'
     and prlt.group_id     = x_group_id
     and prlt.requisition_line_id = prl.requisition_line_id
     and prl.deliver_to_location_id = hrl.location_id(+)    -- bug 2709046
     and prl.line_location_id IS NULL-- <REQINPOOL> --bug10064616
   for update; -- <BUG 5256593>
   --bug10064616 changed the condition reqs_in_pool_flag = 'Y' to line_location_id is NULL



-- <SERVICES FPJ>
-- Added labor_req_line_id to the select statement
cursor c2  is       /* x_group_id is a parameter */
  select prlt.rowid,   -- Bug# 1721991 , Added rowid to update row processed
         prlt.group_id,
         prlt.requisition_header_id,
         prlt.requisition_line_id,
   prlt.suggested_buyer_id,
         prlt.source_doc_type_code,
   prlt.source_doc_id,
   prlt.source_doc_line,
   prlt.suggested_vendor_id,
         prlt.suggested_vendor_site_id,
   prlt.currency_code,
         prlt.rate_type,
   prlt.rate_date,
   prlt.rate,
   prlt.process_code,
   prlt.release_generation_method,
   prlt.item_id,
   prlt.pcard_id,
         prlt.contract_id,
   prl.suggested_vendor_contact,
   prl.vendor_contact_id,
         hrl.location_code,
         prl.destination_organization_id,
         prl.destination_type_code,
         prl.labor_req_line_id
         --<R12 STYLES PHASE II START>
        ,prl.line_type_id,
         prl.purchase_basis
         --<R12 STYLES PHASE II END>

    from po_wf_candidate_req_lines_temp prlt,
   po_requisition_lines prl,
         hr_locations_all hrl
   where prlt.process_code = 'PENDING'
     and prlt.group_id     = x_group_id
     and prlt.requisition_line_id = prl.requisition_line_id
     and prl.deliver_to_location_id = hrl.location_id(+)  -- bug 2709046
    and prl.line_location_id IS NULL-- <REQINPOOL> --bug10064616
     --Bug# 1721991, for update;
   for update; -- <BUG 5256593>
   --bug10064616 changed the condition reqs_in_pool_flag = 'Y' to line_location_id is NULL

    --<R12 STYLES PHASE II START>
    c1_style_id  PO_DOC_STYLE_HEADERS.style_id%type;
    c2_style_id  PO_DOC_STYLE_HEADERS.style_id%type;
    c1_valid_style   BOOLEAN;
    c2_valid_style   BOOLEAN;
    x_return_status   VARCHAR2(1);
    x_msg_count       NUMBER;
    x_msg_data        VARCHAR2(2000);
    --<R12 STYLES PHASE II END>

    x_different varchar2(1) ;
    x_src_doc_id number;

begin


   /* Get the group_id since we only want to process lines belonging
    * to the same group. We need to get the group_id before opening
    * the cursor since it is a parameter to the cursor.
    */

   x_group_id := po_wf_util_pkg.GetItemAttrNumber (itemtype => itemtype,
                                              itemkey  => itemkey,
                                              aname    => 'GROUP_ID');

 /* Bug 2974129. This Grouping allowed flag should not decide the #of documents
    Instead this should be applied to group the lines.

   x_grouping_allowed := PO_WF_UTIL_PKG.GetItemAttrText (itemtype => itemtype,
                                              itemkey  => itemkey,
                                              aname    => 'GROUPING_ALLOWED_FLAG');   */

   x_group_one_time_address := PO_WF_UTIL_PKG.GetItemAttrText (itemtype => itemtype,
                                              itemkey  => itemkey,
                                              aname    => 'GROUP_ONE_ADDR_LINE_FLAG');

/*   if x_grouping_allowed is NULL then

     x_grouping_allowed := 'Y';

   end if; Bug 2974129 */

   if x_group_one_time_address is NULL then

     x_group_one_time_address := 'Y';

   end if;

   /* Open the cursor with that group_id */
   open c1;   /* Based on x_group_id */
   -- Outer Loop: Loop through all the Req Lines with process_code = PENDING
   loop
      fetch c1 into c1_group_id,
        c1_req_header_id,
              c1_req_line_id,
              c1_suggested_buyer_id,
              c1_source_doc_type_code,
              c1_source_doc_id,
              c1_source_doc_line,
              c1_suggested_vendor_id,
              c1_suggested_vendor_site_id,
              c1_currency_code,
              c1_rate_type,
              c1_rate_date,
              c1_rate,
              c1_process_code,
              c1_rel_gen_method,
              c1_item_id,
        c1_pcard_id,
                    c1_contract_id,
                    c1_deliver_to_location_code,
                    c1_dest_org_id,
                    c1_dest_type_code,
                    c1_labor_req_line_id
                     --<R12 STYLES PHASE II START>
                    ,c1_line_type_id,
                     c1_purchase_basis
                     --<R12 STYLES PHASE II END>
                    ;
        exit when c1%NOTFOUND;

        --<R12 STYLES PHASE II START>
        c1_valid_style := TRUE;

        x_progress := '01: group_req_lines : c1_req_line_id = '|| to_char(c1_req_line_id);
        IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
        END IF;

        -- bug 4923134

        x_progress := '01: group_req_lines : c1_source_doc_id = '|| to_char(c1_source_doc_id);
        IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
        END IF;

        x_progress := '01: group_req_lines : c1_contract_id = '|| to_char(c1_contract_id);
        IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
        END IF;


        if (nvl(c1_source_doc_id,c1_contract_id) is not null) then

            c1_style_id := PO_DOC_STYLE_PVT.get_doc_style_id(nvl(c1_source_doc_id,c1_contract_id));  -- bug 4923134

            x_progress := '01: group_req_lines : c1_style_id = '|| to_char(c1_style_id);
            IF (g_po_wf_debug = 'Y') THEN
                po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
            END IF;

            PO_DOC_STYLE_PVT.style_validate_req_attrs(p_api_version      => 1.0,
                                           p_init_msg_list    => fnd_api.g_true,
                                           x_return_status    => x_return_status,
                                           x_msg_count        => x_msg_count,
                                           x_msg_data         => x_msg_data,
                                           p_doc_style_id     => c1_style_id,
                                           p_document_id      => NULL,
                                           p_line_type_id     => c1_line_type_id,
                                           p_purchase_basis   => c1_purchase_basis,
                                           p_destination_type => c1_dest_type_code,
                                           p_source           => 'AUTOCREATE');

             if x_return_status <> FND_API.g_ret_sts_success THEN
                c1_valid_style := FALSE;
             end if;
         --<Bug#5695323 vmaduri START>
         --Set Style ID as 1 if P card is used and source doc or cotract are not there
          else
          c1_style_id:=1;
          end if;
         --<Bug#5695323 vmaduri END>
         --<R12 STYLES PHASE II END>

     if  c1_valid_style then  --< R12 STYLES PHASE II>

        x_progress := '01: group_req_lines : c1_req_line_id = '|| to_char(c1_req_line_id)||'valid style';
        IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
        END IF;

     /* FPI GA start */
        if (c1_source_doc_id is not null) then
            select global_agreement_flag
            into c1_ga_flag
            from po_headers_all
            where po_header_id = c1_source_doc_id;
		-- <Bug 14172394>
        -- Reset c1_ga_flag to NULL if there is no sourcing BPA.
        else
		  c1_ga_flag := NULL;
        end if;

     /* FPI GA End */

     /* Consigned FPI start */
        PO_THIRD_PARTY_STOCK_GRP.Get_Asl_Attributes
       ( p_api_version                  => 1.0
       , p_init_msg_list                => NULL
       , x_return_status                => l_return_status
       , x_msg_count                    => l_msg_count
       , x_msg_data                     => l_msg_data
       , p_inventory_item_id            => c1_item_id
       , p_vendor_id                    => c1_suggested_vendor_id
       , p_vendor_site_id               => c1_suggested_vendor_site_id
       , p_using_organization_id        => c1_dest_org_id
       , x_consigned_from_supplier_flag => c1_cons_from_supp_flag
       , x_enable_vmi_flag              => l_enable_vmi_flag
       , x_last_billing_date            => l_last_billing_date
       , x_consigned_billing_cycle      => l_cons_billing_cycle
      );
    /*Bug11802312 We ll retain the document reference for an consigned PO*/

     --  if c1_cons_from_supp_flag = 'Y' and
     --     nvl(c1_dest_type_code,'INVENTORY') = 'EXPENSE' then
     --     c1_cons_from_supp_flag := 'N';
     --  end if;

    /* Bug#14305183: We will retain the document reference for consigned PO.
     * With Profile 'PO: Create Consigned PO As Standard PO' control the type 
     * of consigned document to be created, if source document as local Blanket.
     * If Profile is set to 'Yes', we should still create a Standard PO without
     * having the source document reference. Hence x_doc_type_to_create should
     * be STANDARD in this case.
     * In Case Profile is set to 'No', system will created Consigned Releases.
     */	
    -- Bug#14305183::Start

       If c1_cons_from_supp_flag = 'Y' and nvl(c1_dest_type_code,'INVENTORY') <> 'EXPENSE'
       Then
         If (NVL(fnd_profile.value('PO_CREATE_CONSIGNED_PO_AS_SPO'),'N') = 'Y')
	     AND (NVL(c1_ga_flag,'N') = 'N')  -- Retain the Source Doc Ref for GBPA
	 Then
	   c1_source_doc_id := NULL;
           c1_contract_id   := NULL;
         End If;
       Else
         c1_cons_from_supp_flag := 'N';
       End If;
	 
    --Bug Fix#14305183::End
     /* Consigned FPI end */

     --<Bug 2745549 mbhargav START>
     --Null out GA information if GA is not valid
     if c1_source_doc_id is not null then

         po_autocreate_doc.is_ga_still_valid(c1_source_doc_id, l_ref_ga_is_valid);

         if l_ref_ga_is_valid = 'N' then
             c1_source_doc_id := null;
         end if;
     end if;
     --<Bug 2745549 mbhargav END>


     /* Supplier PCard FPH. Check whether c1_pcard_id is valid. The function
      * will return pcard_id if valid else will have value null if not.
     */

     If (c1_pcard_id is not null) then
    c1_pcard_id := po_pcard_pkg.get_valid_pcard_id(c1_pcard_id,c1_suggested_vendor_id,c1_suggested_vendor_site_id);
     end if;
      /* Supplier PCard FPH */
      x_first_time_for_this_comb := 'TRUE';
      x_suggested_vendor_contact_id := NULL;
      x_carry_contact_to_po_flag := 'TRUE';
      x_prev_sug_vendor_contact_id := NULL;
      c2_found :='Y';

      open c2;
      -- Inner Loop: Loop through all the Req Lines with process_code = PENDING,
      -- to compare it with current Req Line in cursor c1, and to check if it
      -- can be grouped with the Req Line in cursor c1.
      loop
         fetch c2 into  c2_rowid,  -- Bug# 1721991, Added rowid
                        c2_group_id,
      c2_req_header_id,
            c2_req_line_id,
                c2_suggested_buyer_id,
                c2_source_doc_type_code,
                c2_source_doc_id,
      c2_source_doc_line,
                c2_suggested_vendor_id,
                c2_suggested_vendor_site_id,
                c2_currency_code,
                c2_rate_type,
                c2_rate_date,
                c2_rate,
                c2_process_code,
                c2_rel_gen_method,
                c2_item_id,
            c2_pcard_id,
                        c2_contract_id,
      x_suggested_vendor_contact,
      x_suggested_vendor_contact_id,
                        c2_deliver_to_location_code,
                        c2_dest_org_id,
                        c2_dest_type_code,
                        c2_labor_req_line_id
                        --<R12 STYLES PHASE II START>
                       ,c2_line_type_id,
                        c2_purchase_basis
                        --<R12 STYLES PHASE II END>
                        ;


     if (c2%rowcount)= 0 then  -- Bug 3586181
              c2_found:='N';
           end if;
          exit when c2%NOTFOUND;




        --<R12 STYLES PHASE II START>
        c2_valid_style := TRUE;
        x_progress := '02: group_req_lines : c2_req_line_id = '|| to_char(c2_req_line_id);
        IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
        END IF;

        -- bug 4923134
        x_progress := '02: group_req_lines : c2_source_doc_id = '|| to_char(c2_source_doc_id);
        IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
        END IF;

        x_progress := '02: group_req_lines : c2_contract_id = '|| to_char(c2_contract_id);
        IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
        END IF;

        if (nvl(c2_source_doc_id,c2_contract_id) is not null) then

            c2_style_id := PO_DOC_STYLE_PVT.get_doc_style_id(nvl(c2_source_doc_id,c2_contract_id));  -- bug 4923134

            x_progress := '02: group_req_lines : c2_style_id = '|| to_char(c2_style_id);
            IF (g_po_wf_debug = 'Y') THEN
                 po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
            END IF;

            PO_DOC_STYLE_PVT.style_validate_req_attrs(p_api_version      => 1.0,
                                           p_init_msg_list    => fnd_api.g_true,
                                           x_return_status    => x_return_status,
                                           x_msg_count        => x_msg_count,
                                           x_msg_data         => x_msg_data,
                                           p_doc_style_id     => c2_style_id,
                                           p_document_id      => NULL,
                                           p_line_type_id     => c2_line_type_id,
                                           p_purchase_basis   => c2_purchase_basis,
                                           p_destination_type => c2_dest_type_code,
                                           p_source           => 'AUTOCREATE');

             if x_return_status <> FND_API.g_ret_sts_success THEN
                c2_valid_style := FALSE;
             end if;
         --<Bug#5695323 vmaduri START>
         --Set Style ID as 1 if P card is used and source doc or cotract are not there
          else
          c2_style_id:=1;
          end if;
         --<Bug#5695323 vmaduri END>
        --<R12 STYLES PHASE II END>

       if c2_valid_style then          --<R12 STYLES PHASE II>

        x_progress := '02: group_req_lines : c2_req_line_id = '|| to_char(c2_req_line_id)||'valid style';
        IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
        END IF;

      /* FPI GA start */
        if (c2_source_doc_id is not null) then
            select global_agreement_flag
            into c2_ga_flag
            from po_headers_all
            where po_header_id = c2_source_doc_id;
		-- <Bug 14172394>
        -- Reset c2_ga_flag to NULL if there is no sourcing BPA.
        else
		  c2_ga_flag := NULL;
        end if;

     /* FPI GA End */
     /* Consigned FPI start */
        PO_THIRD_PARTY_STOCK_GRP.Get_Asl_Attributes
       ( p_api_version                  => 1.0
       , p_init_msg_list                => NULL
       , x_return_status                => l_return_status
       , x_msg_count                    => l_msg_count
       , x_msg_data                     => l_msg_data
       , p_inventory_item_id            => c2_item_id
       , p_vendor_id                    => c2_suggested_vendor_id
       , p_vendor_site_id               => c2_suggested_vendor_site_id
       , p_using_organization_id        => c2_dest_org_id
       , x_consigned_from_supplier_flag => c2_cons_from_supp_flag
       , x_enable_vmi_flag              => l_enable_vmi_flag
       , x_last_billing_date            => l_last_billing_date
       , x_consigned_billing_cycle      => l_cons_billing_cycle
      );

     /*Bug11802312 We ll retain the document reference for an consigned PO*/
      -- if c2_cons_from_supp_flag = 'Y' and
      --    nvl(c2_dest_type_code,'INVENTORY') = 'EXPENSE' then
      --    c2_cons_from_supp_flag := 'N';
      -- end if;

    /* Bug#14305183: We will retain the document reference for consigned PO.
     * With Profile 'PO: Create Consigned PO As Standard PO' control the type
     * of consigned document to be created, if source document as local Blanket.
     * If Profile is set to 'Yes', we should still create a Standard PO without
     * having the source document reference. Hence x_doc_type_to_create should
     * be STANDARD in this case.
     * In Case Profile is set to 'No', system will created Consigned Releases.
     */	
     -- Bug#14305183::Start

      If c2_cons_from_supp_flag = 'Y' and nvl(c2_dest_type_code,'INVENTORY') <> 'EXPENSE'
      Then
        If (NVL(fnd_profile.value('PO_CREATE_CONSIGNED_PO_AS_SPO'),'N') = 'Y')
	    AND (NVL(c2_ga_flag,'N') = 'N')  -- Retain the Source Doc Ref for GBPA
	Then
           c2_source_doc_id := NULL;
           c2_contract_id := NULL;
        End If;
      Else
        c2_cons_from_supp_flag := 'N';
      End If;

      --Bug Fix#14305183::End
     /* Consigned FPI end */

     --<Bug 2745549 mbhargav START>
     --Null out GA information if GA is not valid
     if c2_source_doc_id is not null then

         po_autocreate_doc.is_ga_still_valid(c2_source_doc_id, l_ref_ga_is_valid);

         if l_ref_ga_is_valid = 'N' then
             c2_source_doc_id := null;
         end if;
     end if;
     --<Bug 2745549 mbhargav END>

     /* Supplier PCard FPH. Check whether c2_pcard_id is valid. The function
      * will return pcard_id if valid else will have value null if not.
     */
  If (c2_pcard_id is not null) then
    c2_pcard_id := po_pcard_pkg.get_valid_pcard_id(c2_pcard_id,c2_suggested_vendor_id,c2_suggested_vendor_site_id);
  end if;
        /* Supplier PCard FPH */
    /* Associate similiar lines with the same header. This is the core
           * grouping logic.
           */

    x_progress := '10: group_req_lines : c1_req_line_id = '
        || to_char(c1_req_line_id) || '   c2_req_line_id = '
        || to_char(c2_req_line_id);

    if (x_suggested_vendor_contact_id is null) then
    x_suggested_vendor_contact_id := get_contact_id(x_suggested_vendor_contact, c2_suggested_vendor_site_id);
    end if;

          IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
          END IF;

   /* Bug 1362315
   When you initiate the create doc workflow from requisition import
   for a batch of 5000 requisitions or more, the process
   failed to create the po for one or two requisitions bcos
   we were not truncating the sysdate before a comparison in the following
   if logic and thereby not creating records in the po_headers_interface
   table for the autocreate logic to process the req to a PO.
   */


          /* Add one time location grouping logic */

    if (c1_req_line_id = c2_req_line_id) /* Always insert if c1 and c2 is the same line */
             OR
             ( /* (x_grouping_allowed = 'Y') AND Bug 2974129 */
             (x_group_one_time_address = 'Y' OR
              (x_group_one_time_address = 'N' AND
			  
               /* Bug 16518070
			     Added NVL for  deliver to location code as theyre failing for drop ship so flow
			     Because deliver to location is not present in hr locations for drop ship SO instead in hz locations.
				 So above cursors will retrieve NULL values for these variables*/
				 
               nvl(c1_deliver_to_location_code,-99) <> nvl(fnd_profile.value('POR_ONE_TIME_LOCATION'),-99) AND	--bug 4449781 : added nvl
               nvl(c2_deliver_to_location_code,-99) <> nvl(fnd_profile.value('POR_ONE_TIME_LOCATION'),-99))) AND
             (c1_suggested_buyer_id     = c2_suggested_buyer_id)       AND
             (c1_style_id = c2_style_id)  AND                         --<R12 STYLES PHASE II>
       (c1_suggested_vendor_id    = c2_suggested_vendor_id)    AND
       (c1_suggested_vendor_site_id = c2_suggested_vendor_site_id) AND
       (nvl(c1_source_doc_type_code ,'QUOTATION')    =
              nvl(c2_source_doc_type_code,'QUOTATION'))                  AND
             (nvl(c1_ga_flag,'N')         = nvl(c2_ga_flag,'N'))         AND      -- FPI GA
             (nvl(c1_contract_id,-1)    = nvl(c2_contract_id,-1))  AND
             (nvl(c1_currency_code,'ok')  = nvl(c2_currency_code, 'ok')) AND
       (nvl(c1_rate_type, 'ok')   = nvl(c2_rate_type, 'ok'))   AND
             ((c1_rate is NULL AND c2_rate is NULL)     --<Bug 3343855>
              OR
        (nvl(trunc(c1_rate_date), trunc(sysdate))  = nvl(trunc(c2_rate_date), trunc(sysdate))))  AND --bug9104813
       (nvl(c1_rate,-1)     = nvl(c2_rate, -1))    AND
       (nvl(c1_pcard_id,-1)   = nvl(c2_pcard_id,-1))   AND
       ((nvl(c1_source_doc_id,-1)   = nvl(c2_source_doc_id,-1))
        OR
              (nvl(c1_source_doc_type_code ,'QUOTATION')   = 'QUOTATION')
              OR
              ((nvl(c1_source_doc_type_code,'QUOTATION') = 'BLANKET') AND (nvl(c1_ga_flag,'N') = 'Y'))) -- FPI GA   AND
             )
             -- <SERVICES FPJ START>
             OR
             (nvl(c1_req_line_id, -1) = nvl(c2_labor_req_line_id, -1))
             OR
             (nvl(c1_labor_req_line_id, -1) = nvl(c2_req_line_id, -1))
             -- <SERVICES FPJ END>
          THEN

        x_progress := '20: group_req_lines: c1 and c2 match ';
        IF (g_po_wf_debug = 'Y') THEN
          po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
        END IF;


       /* Update the process code of the current line in the temp table so
          * it doesn't get picked up again by the cursor for processing.
        */

       update po_wf_candidate_req_lines_temp
       set process_code = 'PROCESSED'
             where rowid=c2_rowid;
       -- Bug# 1721991, where current of c2;

       x_progress:= '30:group_req_lines: Updated process_code ';
       IF (g_po_wf_debug = 'Y') THEN
         po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
       END IF;

       -- bug 14314684, When the Req has multiple lines with same suggested supplier
       -- but with different sourcing document, create doc wf should create different Awards
        l_is_clm_flow :=  po_wf_util_pkg.GetItemAttrText (itemtype => itemtype,
                                             itemkey  => itemkey,
                                             aname    => 'IS_CLM_FLOW');

        if (x_first_time_for_this_comb  = 'TRUE' or (Nvl(l_is_clm_flow,'N')= 'Y' AND nvl(c1_source_doc_id,-1)   <> nvl(c2_source_doc_id,-1))) then

         --<R12 STYLES PHASE II START>
         -- bug5731406
         -- The check for source doc id (added through bug4923134) has been
         -- removed as c2_style_id is always populated after bug5695323

         x_progress:= '30:group_req_lines: is progress payments  ';
         IF (g_po_wf_debug = 'Y') THEN
           po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
         END IF;

         if PO_DOC_STYLE_PVT.is_progress_payments_enabled(c2_style_id) then
           l_pcard_id := NULL;
         else
           l_pcard_id := c2_pcard_id;
         end if;

         --<R12 STYLES PHASE II END>

                if(xx_insert_into_headers_iface
                     (itemtype,
                      itemkey,
                      c2_group_id,
                      c2_suggested_vendor_id,
                      c2_suggested_vendor_site_id,
                      c2_suggested_buyer_id,
                      c2_source_doc_type_code,
                      c2_source_doc_id,
                      c2_currency_code,
                      c2_rate_type,
                      c2_rate_date,
                      c2_rate,
                      l_pcard_id,  --<R12 STYLES PHASE II>
                      c2_style_id,  --<R12 STYLES PHASE II>
                      x_interface_header_id) = FALSE) then
                  exit; --bug 3401653: po creation failed, skip out of inner loop
                end if;



                  xx_insert_into_lines_iface(itemtype,
                  itemkey,
                  x_interface_header_id,
                  c2_req_line_id,
                  c2_source_doc_line,
                  c2_source_doc_type_code,
                                                            c2_contract_id,
                                                            c2_source_doc_id,         -- GA FPI
                                                            c2_cons_from_supp_flag);  -- Consigned FPI

    /* Bug  3586181 When the document is Contract or Global Aggrement
                               get the vendor contact from them*/

    /*Bug9060101 Removed the code added in Bug8632992. Since the contact can be
      valid across orgs. We validate the contact against the site on the requisition.
      If valid we set the source contact id*/

      BEGIN
        IF ((NVL(c1_source_doc_type_code,'BLANKET')='CONTRACT')) THEN
             SELECT vendor_contact_id
             INTO   x_source_contact_id
             FROM   po_headers_all
             WHERE  po_header_id=c2_contract_id;

        elsif (NVL(c2_ga_flag,'N')='Y') THEN -- For Global Aggrement.
             SELECT vendor_contact_id
             INTO   x_source_contact_id
             FROM   po_headers_all -- To take care of GAs in Diff Operating unit
             WHERE  po_header_id=c2_source_doc_id;

        ELSE
             x_source_contact_id := NULL;
        END IF;

        IF x_source_contact_id IS NOT NULL THEN
           IF (NOT valid_contact(c2_suggested_vendor_site_id, x_source_contact_id))
           THEN
             x_source_contact_id := NULL;
           END IF;
        END IF;

      EXCEPTION
      WHEN no_data_found THEN
         x_source_contact_id := NULL;
      END;

   /* End  3586181*/

          x_progress := '40: group_req_lines: inserted header'||
          ' and line for req line = ' || to_char(c2_req_line_id);
    IF (g_po_wf_debug = 'Y') THEN
      po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
    END IF;
/* bug 2656323
   Added code to update vendor_contact_id when  po_headers is inserted for first time. */
     if (x_carry_contact_to_po_flag = 'TRUE' and
              valid_contact(c2_suggested_vendor_site_id, x_suggested_vendor_contact_id)) then
     begin
                      update po_headers_interface
                set vendor_contact_id = x_suggested_vendor_contact_id
          where interface_header_id = x_interface_header_id;
           exception
             when others then
          IF (g_po_wf_debug = 'Y') THEN
                         po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
                END IF;
           end;
     end if;



          x_first_time_for_this_comb := 'FALSE';
    --bug#3586181
    if (x_suggested_vendor_contact_id is not NULL) then
      x_prev_sug_vendor_contact_id := x_suggested_vendor_contact_id;
    end if;
    --bug#3586181


       else  /*  ie. x_first_time_for_this_comb  = FALSE */

              /* The line we are checking now can put put onto the same header
           * as a previous one, so only insert a new line into the
                 * po_lines_interface table.
           */

                xx_insert_into_lines_iface (itemtype,
                  itemkey,
                  x_interface_header_id,
                  c2_req_line_id,
                  c2_source_doc_line,
                  c2_source_doc_type_code,
                                                            c2_contract_id,
                                                            c2_source_doc_id,          -- GA FPI
                                                            c2_cons_from_supp_flag);   -- Consigned FPI

           x_progress := '50: group_req_lines: inserted just line for '||
             'req line = ' || to_char(c2_req_line_id);
     IF (g_po_wf_debug = 'Y') THEN
       po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
     END IF;

    --bug#3586181
     if (x_carry_contact_to_po_flag = 'TRUE')  then -- SS
         if ( x_suggested_vendor_contact_id is not null and x_prev_sug_vendor_contact_id is not null) and
            (x_suggested_vendor_contact_id <> x_prev_sug_vendor_contact_id) then -- SS
              x_carry_contact_to_po_flag := 'FALSE';
         end if;
     end if;

     -- Start Bug 5250863
     if(x_suggested_vendor_contact_id is not null and
         x_prev_sug_vendor_contact_id  is null )then
          x_prev_sug_vendor_contact_id := x_suggested_vendor_contact_id;
     end if;
     -- End Bug 5250863
    --bug#3586181

       end if;

          end if;
    /* Commented by Bug 5250863
    --bug#3586181
    if(x_suggested_vendor_contact_id is not null)then
      x_prev_sug_vendor_contact_id := x_suggested_vendor_contact_id;
    end if;
    --bug#3586181
    */
   else
        x_progress := '02: group_req_lines : c2_req_line_id = '|| to_char(c2_req_line_id)||'invalid style';
        IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
        END IF;

   end if ; --if c2_valid_style     --<R12 STYLES PHASE II>

      end loop;
/* Commented this code as we are updating vendor_contact_id when header is inserted first time.
      if (x_carry_contact_to_po_flag = 'TRUE' and
          valid_contact(c2_suggested_vendor_site_id, x_suggested_vendor_contact_id)) then
            begin
                    x_progress := '55: group_req_lines: updating header with vendor contact :'||x_interface_header_id;
                    update po_headers_interface
                    set vendor_contact_id = x_suggested_vendor_contact_id
                    where interface_header_id = x_interface_header_id;
            exception
                    when others then
                    IF (g_po_wf_debug = 'Y') THEN
                       po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
                    END IF;
      end;
      end if;
*/
      close c2;



 /* Bug 3586181 Update the contact id if the either Contract or GA has
                got a valid contact */
       if (c2_found='Y') then
       Begin

         if ( x_source_contact_id is not null) then
        update po_headers_interface
              set    vendor_contact_id = x_source_contact_id
              where  interface_header_id = x_interface_header_id;

         elsif (x_carry_contact_to_po_flag = 'FALSE') then -- Implies contacts in Req lines are different
              update po_headers_interface
              set    vendor_contact_id = NULL
              where  interface_header_id = x_interface_header_id;
         elsif (x_carry_contact_to_po_flag = 'TRUE') and (x_prev_sug_vendor_contact_id is not null) then
              update po_headers_interface
        set    vendor_contact_id = x_prev_sug_vendor_contact_id
              where  interface_header_id = x_interface_header_id;

          end if;
        end;
      end if;
 /* End 3586181 */
  else
        x_progress := '01: group_req_lines : c1_req_line_id = '|| to_char(c1_req_line_id)||'invalid style';
        IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
        END IF;
  end if;  --if c1_valid_style --<R12 STYLES PHASE II>


   end loop;

   close c1;

   /* Calling process should do the commit, so comment out here.
    * COMMIT;
    */

  resultout := wf_engine.eng_completed || ':' ||  'ACTIVITY_PERFORMED';

  x_progress := '60: group_req_lines: result = ACTIVITY_PERFORMED ';
  IF (g_po_wf_debug = 'Y') THEN
     po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
  END IF;

exception
  when others then
    close c1;
    close c2;
    wf_core.context('po_autocreate_doc','group_req_lines',x_progress);
    raise;
end xx_group_req_lines;


/***************************************************************************
 *
 *	Procedure:	xx_insert_into_headers_iface
 *
 *  Description:  Inserts a row into the po_headers_interface
 *  Returns false if creating PO header fails, and true otherwise (bug 3401653)
 *
 **************************************************************************/
function xx_insert_into_headers_iface (itemtype		     IN  VARCHAR2,
           itemkey         IN  VARCHAR2,
           x_group_id        IN  NUMBER,
           x_suggested_vendor_id       IN  NUMBER,
           x_suggested_vendor_site_id  IN  NUMBER,
           x_suggested_buyer_id      IN  NUMBER,
           x_source_doc_type_code      IN  VARCHAR2,
           x_source_doc_id       IN  NUMBER,
           x_currency_code       IN  VARCHAR2,
           x_rate_type         IN  VARCHAR2,
           x_rate_date         IN  DATE,
           x_rate          IN  NUMBER,
           x_pcard_id        IN  NUMBER,
           p_style_id                  IN  NUMBER,  --<R12 STYLES PHASE II>
           x_interface_header_id   IN OUT NOCOPY  NUMBER)
RETURN boolean is --bug 3401653


x_batch_id      number;
x_creation_date     date  := sysdate;
x_last_update_date    date  := sysdate;
x_created_by      number;
x_last_updated_by   number;
x_org_id      number;
x_doc_type_to_create    varchar2(25);
x_release_date      date;
x_document_num      varchar2(25);
x_release_num     number;
x_release_num1      number;
x_currency_code_doc   varchar2(15);
x_found       varchar2(30);

x_no_releases     number;
x_ga_flag                       varchar2(1);   -- FPI GA
x_progress          varchar2(300);

x_grouping_allowed              varchar2(1); /* Bug 2974129 */
x_group_code                    po_headers_interface.group_code%TYPE; /* Bug 2974129 */
l_purchasing_org_id             po_headers_all.org_id%TYPE;  --<Shared Proc FPJ>

--begin bug 3401653
l_source_doc_currency_code      po_headers_all.currency_code%TYPE := NULL;
l_pou_currency_code      po_headers_all.currency_code%TYPE;
l_rou_currency_code      po_headers_all.currency_code%TYPE;
l_pou_sob_id             gl_sets_of_books.set_of_books_id%TYPE;
l_pou_default_rate_type  po_headers_all.rate_type%TYPE;
l_interface_rate         po_headers_all.rate%TYPE := NULL;
l_interface_rate_type    po_headers_all.rate_type%TYPE := NULL;
l_interface_rate_date    po_headers_all.rate_date%TYPE := NULL;
l_display_rate           po_headers_all.rate%TYPE := NULL;
x_iproc_po_type          po_headers_all.attribute_category%TYPE := 'Non-Trade';
x_iproc_source           po_headers_all.attribute1%TYPE := 'NA-IPREQ';
--end bug 3401653

begin

   /* Set the org context. Backend create_po process assumes it is in
    * an org.
    */

    x_org_id := po_wf_util_pkg.GetItemAttrNumber
          (itemtype => itemtype,
                                         itemkey  => itemkey,
                                         aname    => 'ORG_ID');

    --<Shared Proc FPJ START>

    x_progress := '10:insert_into_headers_interface:' ||
      'just before set_purchasing_org_id';

    set_purchasing_org_id(itemtype,
      itemkey,
      x_org_id,
      x_suggested_vendor_site_id);

    l_purchasing_org_id := po_wf_util_pkg.GetItemAttrNumber
                                        (itemtype => itemtype,
                                         itemkey  => itemkey,
                                         aname    => 'PURCHASING_ORG_ID');

    x_progress:= '20: insert_into_headers_interface: org_id = ' ||
    to_char(x_org_id) || ' purchasing_org_id = ' ||
    to_char(l_purchasing_org_id);

    --<Shared Proc FPJ END>


  /* Bug 2974129.
     This attribute should decide the grouping logic in Auto Create. If this is set Y,
     then the 'DEFAULT' will be populated as grope code else 'REQUISITION' will be
     populated as group code */

    x_grouping_allowed := PO_WF_UTIL_PKG.GetItemAttrText (itemtype => itemtype,
                                                          itemkey  => itemkey,
                                                          aname    => 'GROUPING_ALLOWED_FLAG');

   if x_grouping_allowed = 'N' then
          x_group_code := 'REQUISITION';
   else
          x_group_code := 'DEFAULT';
   end if;


   po_moac_utils_pvt.set_org_context(x_org_id); --<R12 MOAC>

   /* Get user values */

     --Bug 18465047 added the below IF clause.
     --This is to ensure buyer_id goes into po_headers_all as created_by and last_updated_by.
 	   IF  x_suggested_buyer_id IS NOT NULL THEN
 	         BEGIN
 	           SELECT user_id
 	           INTO   x_created_by
 	           FROM   fnd_user
 	           WHERE  employee_id = x_suggested_buyer_id
 	                  AND ROWNUM = 1;
 	         EXCEPTION
 	           WHEN no_data_found THEN
 	             x_created_by := to_number(fnd_profile.VALUE('user_id'));
 	         END;

 	      x_last_updated_by  := x_created_by;
 	   ELSE
       x_created_by       := to_number(FND_PROFILE.VALUE('user_id'));
       x_last_updated_by  := to_number(FND_PROFILE.VALUE('user_id'));
     END IF;


   /* Get the interface_header_id from the sequence */

   select po_headers_interface_s.nextval
     into x_interface_header_id
     from sys.dual;

   /* Set the batch id which can be the same as
    * the interface_header_id since we create only one
    * po at a time from workflow
    */

   x_batch_id := x_interface_header_id;

   /* If the source doc is a blanket then we are going to create a blanket release.
    * If the source doc is a quotation then we are going to create a standard po.
    */

  /* FPI GA - If ga flag is Y then we create a standard PO */

  -- Bug 2695074 getting the ga flag from the db as the attribute does not have any value
  -- in this process

   if x_source_doc_id is not null then
     select global_agreement_flag, currency_code
     into x_ga_flag, l_source_doc_currency_code
     from po_headers_all
     where po_header_id = x_source_doc_id;
   end if;

   /* Bug 2735730.
    * If x_source_doc_id is null, then it would be only in the case
    * when the supplier is set up as a consigned enabled and the
    * destination type is INVENTORY for the requisition. In this case,
    * we should still create a Standard PO. Hence x_doc_type_to_create
    * should be STANDARD in this case.
   */
   if (x_source_doc_id is null) then
     x_doc_type_to_create := 'STANDARD';
   else
     if (x_source_doc_type_code = 'BLANKET')
      and nvl(x_ga_flag,'N') = 'N' then  -- FPI GA
        x_doc_type_to_create    := 'RELEASE';
     else
        x_doc_type_to_create    := 'STANDARD';
     end if;
   end if;


   if (x_doc_type_to_create = 'STANDARD') then

     /* Whether automatic numbering is on our not, we are going to use
      * the automatic number from the unique identifier table. This is
      * as per req import. If however we have an  po num (eg. emergency po)
      * passed into the workflow then we need to use that.
      *
      * The autocreate backend will take whatever doc num we give it and
      * will try and create that. If we weren't to pass in a doc num and
      * automatic numbering was on, it would get the next number.
      *
      * If we are not using automatic numbering but we get the po num
      * from the unique identifier table then we could get a number that
      * has been used (entered manually by the user). We need to make sure
      * that the doc number is unique here since the backend expects that
      * when using manual numbering.
      */

     x_document_num := po_wf_util_pkg.GetItemAttrText
          (itemtype => itemtype,
                                         itemkey  => itemkey,
                                         aname    => 'PO_NUM_TO_CREATE');

     if (x_document_num is NULL) then

        x_progress := '30: insert_into_headers_interface: Just about to get doc' ||
           'num from po_unique_identifier_control';

  IF (g_po_wf_debug = 'Y') THEN
    po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
  END IF;

/*
   Bug# 1869409
   Created a function get_document_num  to get the next doucument
   Number from the PO_UNIQUE_IDENTIFIER_CONTROL table. This was
   done as the Commit after the UPDATE of the PO_UNIQUE_IDENTIFIER_CONTROL
   table was also affecting the Workflow transactions.
   The function get_document_num is an autonomous transaction.
*/
        --<Shared Proc FPJ>
        --Get document num in purchasing org
        x_document_num := po_autocreate_doc.get_document_num(l_purchasing_org_id);

        x_progress := '40: insert_into_headers_interface: Got doc' ||
           'num from po_unique_identifier_control';
  IF (g_po_wf_debug = 'Y') THEN
    po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
  END IF;

     end if;

     /* Check to make sure the doc num is not a duplicate */

     begin
        --<Shared Proc FPJ>
        --Modified the query to select from po_headers_all instead of po_headers.
        select 'PO EXISTS'
          into x_found
          from po_headers_all
         where segment1 = x_document_num
           and org_id = l_purchasing_org_id    -- <R12 MOAC>
           and type_lookup_code IN ('STANDARD', 'PLANNED', 'BLANKET', 'CONTRACT');

     exception
        when NO_DATA_FOUND then
             null;
  when others then
       /* We have found a duplicate so raise the exception */

             x_progress := '45: insert_into_headers_interface: document_num is a ' ||
         'duplicate - not going to insert into po_headers_interface';
       IF (g_po_wf_debug = 'Y') THEN
         po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
       END IF;

       raise;
     end;

     x_release_num      := NULL;
     x_release_date     := NULL;


    --begin bug 3401653
    select sob.currency_code, fsp.set_of_books_id
      into l_pou_currency_code, l_pou_sob_id
      from financials_system_params_all fsp,
           gl_sets_of_books sob
     where fsp.set_of_books_id = sob.set_of_books_id
           and fsp.org_id = l_purchasing_org_id;  -- <R12 MOAC>

    select default_rate_type
      into l_pou_default_rate_type
      from po_system_parameters_all psp  --<Shared Proc FPJ>
     where psp.org_id = l_purchasing_org_id;    -- <R12 MOAC> removed nvl

    select sob.currency_code
      into l_rou_currency_code
      from financials_system_params_all fsp,
           gl_sets_of_books sob
     where fsp.set_of_books_id = sob.set_of_books_id
           and fsp.org_id = x_org_id;
    --end bug 3401653

     /* Bug:565623. gtummala. 10/17/97
      * The backend also needs the currency_code to be populated in the
      * the po_headers_interface table. Should use functional currency if
      * its null.
      */
     if (x_currency_code is NULL) then
       x_currency_code_doc := l_pou_currency_code;
     else
       x_currency_code_doc := x_currency_code;
     end if;


    --begin bug 3401653

    IF(l_source_doc_currency_code is not null) THEN
        x_currency_code_doc := l_source_doc_currency_code;
    END IF;

    l_interface_rate_date := x_rate_date;
    IF(l_purchasing_org_id = x_org_id) THEN --x_org_id is req_org_id
       IF(x_currency_code_doc <> l_rou_currency_code) THEN
          --rate from req can go to po because pou=rou
          l_interface_rate_type := x_rate_type;
          l_interface_rate := x_rate;
       END IF;
    ELSE
        IF(l_pou_currency_code <> x_currency_code_doc) THEN
            IF l_pou_default_rate_type IS NULL THEN
                IF (g_po_wf_debug = 'Y') THEN
                    x_progress := '47: insert_into_headers_interface: Purchasing Operating unit' ||
              ' has no default rate type, cannot create PO';
                    po_wf_debug_pkg.insert_debug (itemtype, itemkey, x_progress);
                END IF;
                return FALSE;
            END IF;

            -- copy rate info for PO currency to pou_currency
            l_interface_rate_type := l_pou_default_rate_type;
            l_interface_rate_date := trunc(sysdate);
            PO_CURRENCY_SV.get_rate(x_set_of_books_id => l_pou_sob_id,
                                    x_currency_code => x_currency_code_doc,
                                    x_rate_type => l_pou_default_rate_type,
                                    x_rate_date => l_interface_rate_date,
                                    x_inverse_rate_display_flag => 'N',
                                    x_rate => l_interface_rate,
                                    x_display_rate => l_display_rate);

       END IF;
       IF(l_rou_currency_code <> x_currency_code_doc) THEN
            IF l_pou_default_rate_type IS NULL THEN
                IF (g_po_wf_debug = 'Y') THEN
                    x_progress := '47: insert_into_headers_interface: Purchasing Operating unit' ||
              ' has no default rate type, cannot create PO';
                    po_wf_debug_pkg.insert_debug (itemtype, itemkey, x_progress);
                END IF;

               return FALSE;
            END IF;

            -- Fail creation of the PO if there is no rate to convert from
            -- ROU currency to PO currency
            IF(PO_CURRENCY_SV.rate_exists (
                                      p_from_currency => l_rou_currency_code,
                                      p_to_currency => x_currency_code_doc,
                                      p_conversion_date => trunc(sysdate),
                                      p_conversion_type => l_pou_default_rate_type) <> 'Y')
                THEN
                IF (g_po_wf_debug = 'Y') THEN
                    x_progress := '48: insert_into_headers_interface: No rate defined to' ||
              ' convert from Requesting OU currency to PO currency, cannot create PO';
                    po_wf_debug_pkg.insert_debug (itemtype, itemkey, x_progress);
                END IF;
                return FALSE;
            END IF;
       END IF;
    END IF;
    --end bug 3401653



   else

     -- Doc is RELEASE
     -- Bug 4471683
     -- If Currency code is null get the functional currency
     IF x_currency_code is not NULL THEN
       x_currency_code_doc := x_currency_code;
     ELSE
       x_currency_code_doc := PO_CORE_S2.get_base_currency;
     END IF;

     l_interface_rate_type := x_rate_type; --bug 3401653
     l_interface_rate_date := x_rate_date; --bug 3401653
     l_interface_rate := x_rate; --bug 3401653

     select segment1
       into x_document_num
       from po_headers
      where po_header_id = x_source_doc_id;

     /* Get the release number as the next release in sequence */

     select nvl(max(release_num),0)+1
       into x_release_num
       from po_releases_all por,    -- <R12 MOAC>
            po_headers poh
      where poh.po_header_id = x_source_doc_id
        and poh.po_header_id = por.po_header_id;

     /* Bug565530. gtummala. 10/23/97.
      * Even if the po_releases table gives us the next one in sequence,
      * this could conflict with a release_num that we have inserted into
      * the po_headers_interface table previously that has yet to converted
      * into a release eg. when we have two req lines that will be created
      * onto two diff. releases.
      */

     -- Bug 722352, lpo, 08/26/98
     -- Commented out the release_num filters for the next 2 queries.

     select count (*)
       into x_no_releases
       from po_headers_interface phi
      where phi.document_num = x_document_num;
      -- and phi.release_num  = x_release_num;

     if (x_no_releases <> 0) then
       select max(release_num)+1
   into x_release_num1
         from po_headers_interface phi
        where phi.document_num = x_document_num;
  --  and phi.release_num  = x_release_num;
     end if;

     -- End of fix. Bug 722352, lpo, 08/26/98



     -- <Action Date TZ FPJ>
      /* Bug 638599, lpo, 03/26/98
       * Strip out time portion to be consistent with Enter Release form.
       * 10/22/2003: Action Date TZ FPJ Change
       * Since release_date on the Enter Release form is now
       * a datetime, the trunc is now removed.
       */
      /* Set release date to sysdate */
      x_release_date := SYSDATE;

      -- <End Action Date TZ FPJ>


    end if;

    /* dreddy : bug 1394312 */
    if (x_release_num1 >= x_release_num) then
     x_release_num := x_release_num1;
    end if;

   /* Insert into po_headers_inteface */

   x_progress := '50: insert_into_headers_interface: Just about to insert into ' ||
      'po_headers_interface';
   IF (g_po_wf_debug = 'Y') THEN
      po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
   END IF;

   x_progress :=  '11: the doc type to be created ' || x_doc_type_to_create ;

    IF (g_po_wf_debug = 'Y') THEN
       po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
    END IF;

    begin
      insert into po_headers_interface
              (wf_group_id,
         interface_header_id,
               interface_source_code,
               batch_id,
               process_code,
               action,
                 document_type_code,
               document_subtype,
               document_num,
               group_code,
               vendor_id,
               vendor_site_id,
         release_num,
               release_date,
               agent_id,
         currency_code,
         rate_type_code,
         rate_date,
         rate,
         creation_date,
         created_by,
             last_update_date,
         last_updated_by,
         pcard_id,
		 style_id,     --<R12 STYLES PHASE II>
                         attribute_category,
                         attribute1)
            values
              (x_group_id,
         x_interface_header_id,
               'PO',
               x_batch_id,
         'NEW',
               'NEW',
               'PO',                -- PO for both po's and releases
               x_doc_type_to_create,
               x_document_num,
               x_group_code, /* Bug 2974129 */
               x_suggested_vendor_id,
               x_suggested_vendor_site_id,
         x_release_num,
         x_release_date,
               x_suggested_buyer_id,
         x_currency_code_doc,
         l_interface_rate_type, --bug 3401653
         l_interface_rate_date, --bug 3401653
         l_interface_rate, --bug 3401653
         x_creation_date,
         x_created_by,
         x_last_update_date,
         x_last_updated_by,
         x_pcard_id,
		 p_style_id,     --<R12 STYLES PHASE II>
                         x_iproc_po_type,
                         x_iproc_source);

                 return TRUE; --bug 3401653

    exception
        when others then
    x_progress := '55: insert_into_headers_interface: IN EXCEPTION when '||
      'inserting into po_headers_interface';
          IF (g_po_wf_debug = 'Y') THEN
             po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
          END IF;

          raise;
    end;

    x_progress := '60: insert_into_headers_interface: Inserted into ' ||
      'po_headers_interface';
    IF (g_po_wf_debug = 'Y') THEN
       po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
    END IF;

    /* The interface_header_id is returned as an out parameter so that
     * subsequent lines can be tied to this same header if needed.
     */


exception
  when others then
    wf_core.context('po_autoinsert_into_headers_interface','create_doc',x_progress);
    raise;
end xx_insert_into_headers_iface;

/***************************************************************************
 *
 *	Procedure:	xx_insert_into_lines_iface
 *
 *  Description:  Inserts a row in the po_lines_interface table
 *
 *
 **************************************************************************/
procedure xx_insert_into_lines_iface (itemtype		      IN VARCHAR2,
               itemkey          IN VARCHAR2,
               x_interface_header_id  IN NUMBER,
               x_req_line_id        IN NUMBER,
               x_source_doc_line      IN NUMBER,
               x_source_doc_type_code IN VARCHAR2,
                                       x_contract_id          IN NUMBER,
                                       x_source_doc_id        IN NUMBER,            -- GA FPI
                                       x_cons_from_supp_flag  IN VARCHAR2) is       -- Consigned FPI

-- <GC FPJ> : removed variable x_contract_num

x_interface_line_id       number;
x_creation_date     date  := sysdate;
x_last_update_date    date  := sysdate;
x_created_by      number;
x_last_updated_by   number;
x_org_id      number;
x_doc_type_to_create    varchar2(25);
x_action_type_code_line   varchar2(3);
x_line_num      number;
x_progress          varchar2(300);
x_source_line_id                number;
x_ga_flag                       varchar2(1);


--<<BEGIN : 22866270 Spot Buy ER >>--
x_promised_date DATE;
x_unit_price NUMBER;
x_amount  NUMBER;

--<<END : 22866270 Spot Buy ER >>--

x_iproc_po_type               po_lines_all.attribute_category%TYPE := 'Non-Trade';

begin

   /* Set the org context. Backend create_po process assumes it is in
    * an org.
    */

    x_org_id := po_wf_util_pkg.GetItemAttrNumber
          (itemtype => itemtype,
                                         itemkey  => itemkey,
                                         aname    => 'ORG_ID');

    po_moac_utils_pvt.set_org_context(x_org_id); --<R12 MOAC>

   /* Get user values */

   x_created_by       := to_number(FND_PROFILE.VALUE('user_id'));
   x_last_updated_by  := to_number(FND_PROFILE.VALUE('user_id'));

   /* FPI GA - If ga flag is Y then we create a standard PO */

   if x_source_doc_id is not null then
     select global_agreement_flag
     into x_ga_flag
     from po_headers_all
     where po_header_id = x_source_doc_id;
   end if;

   /* Bug 2735730.
    * If x_source_doc_id is null, then it would be only in the case
    * when the supplier is set up as a consigned enabled and the
    * destination type is INVENTORY for the requisition. In this case,
    * we should still create a Standard PO. Hence x_doc_type_to_create
    * should be STANDARD in this case.
   */
   if (x_source_doc_id is null) then
  x_doc_type_to_create := 'STANDARD';
   else
     if (x_source_doc_type_code = 'BLANKET')
      and nvl(x_ga_flag,'N') = 'N' then  -- FPI GA
        x_doc_type_to_create    := 'RELEASE';
     else
        x_doc_type_to_create    := 'STANDARD';
     end if;
   end if;

   if (x_doc_type_to_create = 'STANDARD') then
     x_action_type_code_line  := NULL;
     x_line_num           := NULL;

     -- <GC FPJ START>
     -- We can now insert contract_id into po_lines_interface directly
     -- and therefore no need to derive contract_num

     --if (x_contract_id is not null) then
     --
     --  select max(segment1)
     --    into x_contract_num
     --    from po_headers
     --   where po_header_id = x_contract_id;
     --
     --end if;

     -- <GC FPJ END>

   else
      /* RELEASE */
      x_action_type_code_line := 'ADD';
      x_line_num        :=  x_source_doc_line;
    end if;


    select po_lines_interface_s.nextval
      into x_interface_line_id
      from sys.dual;

    /*  GA FPI start */

     if  x_source_doc_id is not null and
         x_source_doc_line is not null then

    -- SQL what  Get the line id from the source doc line
    -- SQL why    Requisition line does not store the line id
    -- Bug fix 2703592 - need to select from all table instead of po_lines
         Select  po_line_id
         into x_source_line_id
         From po_lines_all
         Where  po_header_id = x_source_doc_id
         And line_num = x_source_doc_line;

     end if;

    /*  GA FPI end */
    
    
 --<<BEGIN : 22866270 Spot Buy ER >>--
      BEGIN

      SELECT prs.promised_date , DECODE(prl.labor_req_line_id,NULL,prs.unit_price),
      DECODE(prl.labor_req_line_id ,NULL,prs.SUPPL_LABOR_AMOUNT,prs.SUPPL_EXPENSE_AMOUNT)
      INTO x_promised_date , x_unit_price , x_amount
      FROM po_requisition_suppliers prs, po_requisition_lines_all prl
      WHERE prl.requisition_line_id = x_req_line_id
      AND   prl.requisition_line_id = prs.requisition_line_id
      AND   prs.shortlist_flag = 'Y';

      EXCEPTION

      WHEN NO_DATA_FOUND THEN
       
        x_promised_date := NULL;
	x_unit_price := NULL;
	x_amount := NULL;

      END;

   --<<END : 22866270 Spot Buy ER >>--

    /* Insert into po_lines */

    x_progress :=  '10: insert_into_lines_interface: Just about to insert into ' ||
       'po_lines_interface';

    IF (g_po_wf_debug = 'Y') THEN
       po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
    END IF;

    x_progress :=  '11: the doc type to be created ' || x_doc_type_to_create ;

    IF (g_po_wf_debug = 'Y') THEN
       po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
    END IF;

/*Bug11802312 We ll retain the document reference for an consigned PO*/
    begin
      insert into po_lines_interface
                  (interface_header_id,
                interface_line_id,
          action,
                line_num,
                shipment_num,
                requisition_line_id,
                                contract_id,     -- <GC FPJ>
                                from_header_id, -- GA FPI
                                from_line_id,   -- GA FPI
                                consigned_flag,  -- Bug 2798503
				promised_date, -- Bug 22866270
				unit_price, -- Bug 22866270
				amount, -- Bug 22866270                                
        creation_date,
        created_by,
            last_update_date,
	 			last_updated_by,
                        line_attribute_category_lines,
                        shipment_attribute_category)
            values
              (x_interface_header_id,
                 x_interface_line_id,
           x_action_type_code_line,
                 x_line_num,
                 null,
                 x_req_line_id,
                                 x_contract_id,   -- <GC FPJ>
                         decode(x_cons_from_supp_flag,'Y',null,x_source_doc_id) ,  -- Consigned FPI
                         decode(x_cons_from_supp_flag,'Y',null,x_source_line_id),  -- Consigned FPI
                                 x_cons_from_supp_flag,    -- Bug 2798503
				 x_promised_date, -- Bug 226866270
				 x_unit_price, -- Bug 22866270
				 x_amount, -- Bug 22866270
         x_creation_date,
         x_created_by,
         x_last_update_date,
				 x_last_updated_by,
                         x_iproc_po_type,
                         x_iproc_po_type);

     exception
        when others then
           x_progress:= '15: insert_into_lines_interface: IN EXCEPTION when' ||
      'inserting into po_lines_interface';
     IF (g_po_wf_debug = 'Y') THEN
       po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
     END IF;
     raise;
     end;

     x_progress := '20: insert_into_lines_interface: Inserted into ' ||
       'po_lines_interface';
     IF (g_po_wf_debug = 'Y') THEN
        po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
     END IF;


exception
  when others then
    wf_core.context('po_autoinsert_into_lines_interface','insert_into_lines_interface',
                      x_progress);
    raise;
end xx_insert_into_lines_iface;

/*************************************************************************************
 *      Author:         Paul DSouza                                                  *
 *	Procedure:	XX_CREATE_DOC                                                *
 *                                                                                   *
 *	Description:	This procedure is copied from standard package               *
 *                      PO_AUTOCREATE_DOC.CREATE_DOC  .                              *
 *                      Calls backend autocreate package to create the               *
 *			standard po or blanket release.This procedure                *
 *                      calls XX_PO_INTERFACE_PKG.CREATE_DOCUMENT to insert          *
 *                      additional attribute columns of PO_HEADERS_INTERFACE         *
 *                      table into PO_HEADERS_ALL.The custom package is              *
 *                      created as the standard API PO_INTERFACE_S.CREATE_DOCUMENT   *
 *                      does not insert attribute columns of interface table         *
 *                      to PO_HEADERS_ALL table.                                     *
 *************************************************************************************/

PROCEDURE XX_CREATE_DOC (itemtype    IN   VARCHAR2,
                      itemkey     IN   VARCHAR2,
                      actid       IN   NUMBER,
                      funcmode    IN   VARCHAR2,
                      resultout   OUT NOCOPY  VARCHAR2 ) is

x_interface_header_id     number;
x_num_lines_processed     number;
x_autocreated_doc_id    number;
x_org_id      number;
x_progress          varchar2(300);

--<Shared Proc FPJ START>
l_purchasing_org_id             PO_HEADERS_ALL.org_id%TYPE;
l_return_status                 VARCHAR2(1);
l_msg_count                     NUMBER;
l_msg_data                      FND_NEW_MESSAGES.message_text%TYPE;
l_doc_number                    PO_HEADERS_ALL.segment1%TYPE;
--<Shared Proc FPJ END>

x_group_shipments varchar2(1);             --<Bug 14608120 Autocreate GE ER>
x_operting_unit_id    Number;              --<Bug 14608120 Autocreate GE ER>

l_document_creation_method po_headers_all.document_creation_method%TYPE;

begin

   /* Set the org context. Backend create_po process assumes it is in
    * an org.
    */

    x_org_id := po_wf_util_pkg.GetItemAttrNumber
          (itemtype => itemtype,
                                         itemkey  => itemkey,
                                         aname    => 'ORG_ID');
    --<Shared Proc FPJ START>
    l_purchasing_org_id := po_wf_util_pkg.GetItemAttrNumber
          (itemtype => itemtype,
                                         itemkey  => itemkey,
                                         aname    => 'PURCHASING_ORG_ID');
    --<Shared Proc FPJ END>

    PO_MOAC_UTILS_PVT.set_org_context(x_org_id); --<R12 MOAC>
    x_interface_header_id := po_wf_util_pkg.GetItemAttrNumber
              (itemtype  => itemtype,
                                      itemkey    => itemkey,
                                      aname      => 'INTERFACE_HEADER_ID');




    /* Call the main sever side routine to actually create
     * the documents, ie:
     *      - default in values not populated
     *      - group accordingly
     *      - insert into the main tables from the
     *        the interface tables.
     *
     * x_document_id is populated with po_header_id for pos
     * and po_release_id for releases
     */


     x_progress:= '10: xx_create_doc: Kicking off backend with' ||
            'interface_header_id = '|| to_char(x_interface_header_id);
     IF (g_po_wf_debug = 'Y') THEN
        po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
     END IF;

	--<Bug 14608120 Autocreate GE ER Start>
    /*Logic to get the group shipments value in the purchasing options
    and pass it to create_document proc*/

    select nvl(group_shipments_flag, 'Y')
    into x_group_shipments
    from po_system_parameters;
    

    --<<BEGIN : 22866270 Spot Buy ER >>--

    SELECT DECODE ( spot_buy_cnt ,0,'CREATEDOC','SPOT_BUY')
    INTO l_document_creation_method
    FROM
    (
    SELECT COUNT(*) spot_buy_cnt
    FROM   po_headers_interface phi,
           po_lines_interface PLI,
	   po_requisition_lines_all prl
    WHERE phi.interface_header_id = x_interface_header_id
    AND   phi.interface_header_id = PLI.interface_header_id
    AND   PLI.requisition_line_id = prl.requisition_line_id
    AND   NVL(prl.spot_buy_flag,'N') = 'Y'
    );
    
       
    --<<END : 22866270 Spot Buy ER >>--

    --<Bug 14608120 Autocreate GE ER End>

     --<Shared Proc FPJ>
     --Call Autocreate Backend to create the document
     --in the purchasing org specified.

     --<Comments>Added by Paul DSouza .Copied PO_INTERFACE_S.Create_documents
     --to XX_PO_INTERFACE_PKG.CREATE_DOCUMENTS
     --to insert additional attributes and attribute category columnes
     --into po_headers_interface table.
     --<Comments>

     xx_po_interface_pkg.create_documents(p_api_version    	=> 1.0,
                                     x_return_status            => l_return_status,
                                     x_msg_count                => l_msg_count,
                                     x_msg_data                 => l_msg_data,
                                     p_batch_id                 => x_interface_header_id,
                                     p_req_operating_unit_id  => x_org_id,
                                     p_purch_operating_unit_id  => l_purchasing_org_id,
                                     x_document_id              => x_autocreated_doc_id,
                                     x_number_lines             => x_num_lines_processed,
                                     x_document_number        => l_doc_number,
                 -- Bug 3648268. Using lookup code instead of hardcoded value
                                     p_document_creation_method => 'CREATEDOC',
                                     p_orig_org_id              => x_org_id,    -- <R12 MOAC>
									 p_group_shipments          => x_group_shipments  --<Bug 14608120 Autocreate GE ER>
                                    );
--<Comments>
--End of code by Paul DSouza.
--<Comments>


     x_progress := '20: xx_create_doc: Came back from the backend with '  ||
       'doc_id = ' || to_char(x_autocreated_doc_id) || '/ ' ||
       'num_lines_processed = ' || to_char(x_num_lines_processed);

     IF (g_po_wf_debug = 'Y') THEN
        po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
     END IF;


     /* If at least one req line got processed then we have succeeded in
      * creating the po or release
      */

     if (x_num_lines_processed > 0) then
       po_wf_util_pkg.SetItemAttrNumber (itemtype   => itemtype,
                                    itemkey    => itemkey,
                                    aname      => 'AUTOCREATED_DOC_ID',
                                    avalue     => x_autocreated_doc_id);

       /* Call procedure to setup notification data which will be used
        * in sending a notification to the buyer that the doc has been
        * created successfully.
        */

       po_autocreate_doc.setup_notification_data (itemtype, itemkey);

       resultout := wf_engine.eng_completed || ':' ||  'CREATE_OK';

       x_progress:= '30: xx_create_doc: result = CREATE_OK';
       IF (g_po_wf_debug = 'Y') THEN
          po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
       END IF;

     else
       resultout := wf_engine.eng_completed || ':' ||  'CREATE_FAILED';

       x_progress:= '40: xx_create_doc: result = CREATE_FAILED';
       IF (g_po_wf_debug = 'Y') THEN
          po_wf_debug_pkg.insert_debug(itemtype,itemkey,x_progress);
       END IF;

     end if;

exception
  when others then
    wf_core.context('po_autocreate_doc','xxcreate_doc',x_progress);
    raise;
end xx_create_doc;
END XX_WFL_CREATEPO_DOC_PKG ;
/
show errors

