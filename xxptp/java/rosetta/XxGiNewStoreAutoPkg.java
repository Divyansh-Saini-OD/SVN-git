/*============================================================================+
 |    Copyright (c) 2007 Oracle Corporation, Redwood Shores, CA, USA          |
 |                          All rights reserved.                              |
 +============================================================================+
 |  FILENAME                                                                  |
 |      XxGiNewStoreAutoPkg.java                                              |
 |  DESCRIPTION                                                               |
 |      This file is a Rosetta-generated wrapper for the pl/sql package called|
 |      xx_gi_new_store_auto_pkg                                              |
 |                                                                            |
 |      Generated by Rosetta Version 2.061                                    |
 |                                                                            |
 |  NOTES                                                                     |
 |                                                                            |
 |  DEPENDANCIES                                                              |
 |  HISTORY                                                                   |
 |      Wed Sep 19 08:01:27 EDT 2007 Rosetta Created.                         |
 +============================================================================*/
package od.oracle.apps.xxptp.rosetta;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.SQLException;
import oracle.jbo.server.DBTransaction;
/*import oracle.jdbc.driver.OracleCallableStatement;
import oracle.jdbc.driver.OracleTypes;*/
import oracle.jdbc.OracleCallableStatement;      
import oracle.jdbc.OracleTypes;                       //commented/added by Veronica on 03-Oct-13 for R12 Upgrade Retrofit 
import oracle.sql.ROWID;
import oracle.sql.NUMBER;
import oracle.sql.DATE;
import oracle.sql.CHAR;
import oracle.sql.ARRAY;
import oracle.sql.STRUCT;
import oracle.sql.BLOB;
import oracle.sql.CLOB;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
  // this is generated to call xx_gi_new_store_auto_pkg_w more easily

public class XxGiNewStoreAutoPkg {
  public static final String RCS_ID=
  "$Header: XxGiNewStoreAutoPkg.java $";
  // here're java records which give you handles on the PL/SQL records
  public static class XxInvAccountsRec {
    public Number material_account;
    public Number getMaterialAccount() {return material_account;}
    public void setMaterialAccount(Number __RosettaAttr) {material_account= __RosettaAttr;}
    public Number material_overhead_account;
    public Number getMaterialOverheadAccount() {return material_overhead_account;}
    public void setMaterialOverheadAccount(Number __RosettaAttr) {material_overhead_account= __RosettaAttr;}
    public Number matl_ovhd_absorption_acct;
    public Number getMatlOvhdAbsorptionAcct() {return matl_ovhd_absorption_acct;}
    public void setMatlOvhdAbsorptionAcct(Number __RosettaAttr) {matl_ovhd_absorption_acct= __RosettaAttr;}
    public Number resource_account;
    public Number getResourceAccount() {return resource_account;}
    public void setResourceAccount(Number __RosettaAttr) {resource_account= __RosettaAttr;}
    public Number purchase_price_var_account;
    public Number getPurchasePriceVarAccount() {return purchase_price_var_account;}
    public void setPurchasePriceVarAccount(Number __RosettaAttr) {purchase_price_var_account= __RosettaAttr;}
    public Number ap_accrual_account;
    public Number getApAccrualAccount() {return ap_accrual_account;}
    public void setApAccrualAccount(Number __RosettaAttr) {ap_accrual_account= __RosettaAttr;}
    public Number overhead_account;
    public Number getOverheadAccount() {return overhead_account;}
    public void setOverheadAccount(Number __RosettaAttr) {overhead_account= __RosettaAttr;}
    public Number outside_processing_account;
    public Number getOutsideProcessingAccount() {return outside_processing_account;}
    public void setOutsideProcessingAccount(Number __RosettaAttr) {outside_processing_account= __RosettaAttr;}
    public Number intransit_inv_account;
    public Number getIntransitInvAccount() {return intransit_inv_account;}
    public void setIntransitInvAccount(Number __RosettaAttr) {intransit_inv_account= __RosettaAttr;}
    public Number interorg_receivables_account;
    public Number getInterorgReceivablesAccount() {return interorg_receivables_account;}
    public void setInterorgReceivablesAccount(Number __RosettaAttr) {interorg_receivables_account= __RosettaAttr;}
    public Number interorg_price_var_account;
    public Number getInterorgPriceVarAccount() {return interorg_price_var_account;}
    public void setInterorgPriceVarAccount(Number __RosettaAttr) {interorg_price_var_account= __RosettaAttr;}
    public Number interorg_payables_account;
    public Number getInterorgPayablesAccount() {return interorg_payables_account;}
    public void setInterorgPayablesAccount(Number __RosettaAttr) {interorg_payables_account= __RosettaAttr;}
    public Number cost_of_sales_account;
    public Number getCostOfSalesAccount() {return cost_of_sales_account;}
    public void setCostOfSalesAccount(Number __RosettaAttr) {cost_of_sales_account= __RosettaAttr;}
    public Number encumbrance_account;
    public Number getEncumbranceAccount() {return encumbrance_account;}
    public void setEncumbranceAccount(Number __RosettaAttr) {encumbrance_account= __RosettaAttr;}
    public Number project_cost_account;
    public Number getProjectCostAccount() {return project_cost_account;}
    public void setProjectCostAccount(Number __RosettaAttr) {project_cost_account= __RosettaAttr;}
    public Number interorg_transfer_cr_account;
    public Number getInterorgTransferCrAccount() {return interorg_transfer_cr_account;}
    public void setInterorgTransferCrAccount(Number __RosettaAttr) {interorg_transfer_cr_account= __RosettaAttr;}
    public Number receiving_account_id;
    public Number getReceivingAccountId() {return receiving_account_id;}
    public void setReceivingAccountId(Number __RosettaAttr) {receiving_account_id= __RosettaAttr;}
    public Number clearing_account_id;
    public Number getClearingAccountId() {return clearing_account_id;}
    public void setClearingAccountId(Number __RosettaAttr) {clearing_account_id= __RosettaAttr;}
    public Number retroprice_adj_account_id;
    public Number getRetropriceAdjAccountId() {return retroprice_adj_account_id;}
    public void setRetropriceAdjAccountId(Number __RosettaAttr) {retroprice_adj_account_id= __RosettaAttr;}
    public Number sales_account;
    public Number getSalesAccount() {return sales_account;}
    public void setSalesAccount(Number __RosettaAttr) {sales_account= __RosettaAttr;}
    public Number expense_account;
    public Number getExpenseAccount() {return expense_account;}
    public void setExpenseAccount(Number __RosettaAttr) {expense_account= __RosettaAttr;}
    public Number avg_cost_var_account;
    public Number getAvgCostVarAccount() {return avg_cost_var_account;}
    public void setAvgCostVarAccount(Number __RosettaAttr) {avg_cost_var_account= __RosettaAttr;}
    public Number invoice_price_var_account;
    public Number getInvoicePriceVarAccount() {return invoice_price_var_account;}
    public void setInvoicePriceVarAccount(Number __RosettaAttr) {invoice_price_var_account= __RosettaAttr;}
    public String material_acc_cd;
    public String getMaterialAccCd() {return material_acc_cd;}
    public void setMaterialAccCd(String __RosettaAttr) {material_acc_cd= __RosettaAttr;}
    public String material_overhead_ac_cd;
    public String getMaterialOverheadAcCd() {return material_overhead_ac_cd;}
    public void setMaterialOverheadAcCd(String __RosettaAttr) {material_overhead_ac_cd= __RosettaAttr;}
    public String matl_ovhd_abs_acc_cd;
    public String getMatlOvhdAbsAccCd() {return matl_ovhd_abs_acc_cd;}
    public void setMatlOvhdAbsAccCd(String __RosettaAttr) {matl_ovhd_abs_acc_cd= __RosettaAttr;}
    public String resource_acc_cd;
    public String getResourceAccCd() {return resource_acc_cd;}
    public void setResourceAccCd(String __RosettaAttr) {resource_acc_cd= __RosettaAttr;}
    public String pur_price_var_acc_cd;
    public String getPurPriceVarAccCd() {return pur_price_var_acc_cd;}
    public void setPurPriceVarAccCd(String __RosettaAttr) {pur_price_var_acc_cd= __RosettaAttr;}
    public String ap_accrual_acc_cd;
    public String getApAccrualAccCd() {return ap_accrual_acc_cd;}
    public void setApAccrualAccCd(String __RosettaAttr) {ap_accrual_acc_cd= __RosettaAttr;}
    public String overhead_acc_cd;
    public String getOverheadAccCd() {return overhead_acc_cd;}
    public void setOverheadAccCd(String __RosettaAttr) {overhead_acc_cd= __RosettaAttr;}
    public String outside_processing_acc_cd;
    public String getOutsideProcessingAccCd() {return outside_processing_acc_cd;}
    public void setOutsideProcessingAccCd(String __RosettaAttr) {outside_processing_acc_cd= __RosettaAttr;}
    public String intransit_inv_acc_cd;
    public String getIntransitInvAccCd() {return intransit_inv_acc_cd;}
    public void setIntransitInvAccCd(String __RosettaAttr) {intransit_inv_acc_cd= __RosettaAttr;}
    public String interorg_rec_acc_cd;
    public String getInterorgRecAccCd() {return interorg_rec_acc_cd;}
    public void setInterorgRecAccCd(String __RosettaAttr) {interorg_rec_acc_cd= __RosettaAttr;}
    public String interorg_price_var_acc_cd;
    public String getInterorgPriceVarAccCd() {return interorg_price_var_acc_cd;}
    public void setInterorgPriceVarAccCd(String __RosettaAttr) {interorg_price_var_acc_cd= __RosettaAttr;}
    public String interorg_payables_acc_cd;
    public String getInterorgPayablesAccCd() {return interorg_payables_acc_cd;}
    public void setInterorgPayablesAccCd(String __RosettaAttr) {interorg_payables_acc_cd= __RosettaAttr;}
    public String cost_of_sales_acc_cd;
    public String getCostOfSalesAccCd() {return cost_of_sales_acc_cd;}
    public void setCostOfSalesAccCd(String __RosettaAttr) {cost_of_sales_acc_cd= __RosettaAttr;}
    public String encumbrance_acc_cd;
    public String getEncumbranceAccCd() {return encumbrance_acc_cd;}
    public void setEncumbranceAccCd(String __RosettaAttr) {encumbrance_acc_cd= __RosettaAttr;}
    public String project_cost_acc_cd;
    public String getProjectCostAccCd() {return project_cost_acc_cd;}
    public void setProjectCostAccCd(String __RosettaAttr) {project_cost_acc_cd= __RosettaAttr;}
    public String interorg_trnfr_cr_acc_cd;
    public String getInterorgTrnfrCrAccCd() {return interorg_trnfr_cr_acc_cd;}
    public void setInterorgTrnfrCrAccCd(String __RosettaAttr) {interorg_trnfr_cr_acc_cd= __RosettaAttr;}
    public String receiving_acc_cd;
    public String getReceivingAccCd() {return receiving_acc_cd;}
    public void setReceivingAccCd(String __RosettaAttr) {receiving_acc_cd= __RosettaAttr;}
    public String clearing_acc_cd;
    public String getClearingAccCd() {return clearing_acc_cd;}
    public void setClearingAccCd(String __RosettaAttr) {clearing_acc_cd= __RosettaAttr;}
    public String retropr_adj_acc_cd;
    public String getRetroprAdjAccCd() {return retropr_adj_acc_cd;}
    public void setRetroprAdjAccCd(String __RosettaAttr) {retropr_adj_acc_cd= __RosettaAttr;}
    public String sales_acc_cd;
    public String getSalesAccCd() {return sales_acc_cd;}
    public void setSalesAccCd(String __RosettaAttr) {sales_acc_cd= __RosettaAttr;}
    public String expense_acc_cd;
    public String getExpenseAccCd() {return expense_acc_cd;}
    public void setExpenseAccCd(String __RosettaAttr) {expense_acc_cd= __RosettaAttr;}
    public String avg_cost_var_acc_cd;
    public String getAvgCostVarAccCd() {return avg_cost_var_acc_cd;}
    public void setAvgCostVarAccCd(String __RosettaAttr) {avg_cost_var_acc_cd= __RosettaAttr;}
    public String invoice_price_var_acc_cd;
    public String getInvoicePriceVarAccCd() {return invoice_price_var_acc_cd;}
    public void setInvoicePriceVarAccCd(String __RosettaAttr) {invoice_price_var_acc_cd= __RosettaAttr;}
  }
  public static class XxInvSixacctsRec {
    public String material_account;
    public String getMaterialAccount() {return material_account;}
    public void setMaterialAccount(String __RosettaAttr) {material_account= __RosettaAttr;}
    public String material_overhead_account;
    public String getMaterialOverheadAccount() {return material_overhead_account;}
    public void setMaterialOverheadAccount(String __RosettaAttr) {material_overhead_account= __RosettaAttr;}
    public String resource_account;
    public String getResourceAccount() {return resource_account;}
    public void setResourceAccount(String __RosettaAttr) {resource_account= __RosettaAttr;}
    public String overhead_account;
    public String getOverheadAccount() {return overhead_account;}
    public void setOverheadAccount(String __RosettaAttr) {overhead_account= __RosettaAttr;}
    public String outside_processing_account;
    public String getOutsideProcessingAccount() {return outside_processing_account;}
    public void setOutsideProcessingAccount(String __RosettaAttr) {outside_processing_account= __RosettaAttr;}
    public String expense_account;
    public String getExpenseAccount() {return expense_account;}
    public void setExpenseAccount(String __RosettaAttr) {expense_account= __RosettaAttr;}
  }
  public static class XxConcRequestsRec {
    public Number conc_request_id;
    public Number getConcRequestId() {return conc_request_id;}
    public void setConcRequestId(Number __RosettaAttr) {conc_request_id= __RosettaAttr;}
    public String group_code;
    public String getGroupCode() {return group_code;}
    public void setGroupCode(String __RosettaAttr) {group_code= __RosettaAttr;}
  }
  public static class XxControlRec {
    public Number control_id;
    public Number getControlId() {return control_id;}
    public void setControlId(Number __RosettaAttr) {control_id= __RosettaAttr;}
    public Number location_number_sw;
    public Number getLocationNumberSw() {return location_number_sw;}
    public void setLocationNumberSw(Number __RosettaAttr) {location_number_sw= __RosettaAttr;}
    public String org_name;
    public String getOrgName() {return org_name;}
    public void setOrgName(String __RosettaAttr) {org_name= __RosettaAttr;}
  }

  // here're the utility methods to call the PL/SQL package or
  // the generated PL/SQL wrapper package
  /** This is the Rosetta-generated method to call
    * procedure update_stg_org_data
    * in package xx_gi_new_store_auto_pkg
    */
  public static void updateStgOrgData(
    DBTransaction _dbtransaction,
    String  [] x_errbuf,
    String  [] x_retcode,
    String p_debug_flag,
    String p_records_to_process
  ) throws SQLException {


    OracleCallableStatement ocs = null;
    try {
      ocs = (OracleCallableStatement)
          _dbtransaction.createCallableStatement("begin xx_gi_new_store_auto_pkg.update_stg_org_data("+
            ":1, :2, :3, :4"+
        "); end;", 1);

      // register types of OUT and IN-OUT params, if any
      ocs.registerOutParameter(1, OracleTypes.VARCHAR, 0, 1000);
      ocs.registerOutParameter(2, OracleTypes.VARCHAR, 0, 1000);

      // set IN or IN-OUT params, if any
      ocs.setString(3, p_debug_flag);
      ocs.setString(4, p_records_to_process);

      // call the routine!
      ocs.execute();

      // get OUT and IN-OUT params, if any
      if (x_errbuf != null) {
        x_errbuf[0] = ocs.getString(1);
      }
      if (x_retcode != null) {
        x_retcode[0] = ocs.getString(2);
      }

    } catch (SQLException __RosettaSe) {
      throw __RosettaSe;
    } finally {
      if(ocs!=null) ocs.close();
    }
  }
  /** This is the Rosetta-generated method to call
    * procedure get_accounts
    * in package xx_gi_new_store_auto_pkg
    */
  public static void getAccounts(
    DBTransaction _dbtransaction,
    Number p_model_org_id,
    Number p_location_number,
    Number p_does_rcv_exist,
    XxInvAccountsRec [][] x_accounts_tbl_type,
    String  [] x_errbuf,
    String  [] x_retcode
  ) throws SQLException {
    ARRAY x_accounts_tbl_type_material_account;
    Number [] x_accounts_tbl_type_material_account_zoo = null;
    ARRAY x_accounts_tbl_type_material_overhead_account;
    Number [] x_accounts_tbl_type_material_overhead_account_zoo = null;
    ARRAY x_accounts_tbl_type_matl_ovhd_absorption_acct;
    Number [] x_accounts_tbl_type_matl_ovhd_absorption_acct_zoo = null;
    ARRAY x_accounts_tbl_type_resource_account;
    Number [] x_accounts_tbl_type_resource_account_zoo = null;
    ARRAY x_accounts_tbl_type_purchase_price_var_account;
    Number [] x_accounts_tbl_type_purchase_price_var_account_zoo = null;
    ARRAY x_accounts_tbl_type_ap_accrual_account;
    Number [] x_accounts_tbl_type_ap_accrual_account_zoo = null;
    ARRAY x_accounts_tbl_type_overhead_account;
    Number [] x_accounts_tbl_type_overhead_account_zoo = null;
    ARRAY x_accounts_tbl_type_outside_processing_account;
    Number [] x_accounts_tbl_type_outside_processing_account_zoo = null;
    ARRAY x_accounts_tbl_type_intransit_inv_account;
    Number [] x_accounts_tbl_type_intransit_inv_account_zoo = null;
    ARRAY x_accounts_tbl_type_interorg_receivables_account;
    Number [] x_accounts_tbl_type_interorg_receivables_account_zoo = null;
    ARRAY x_accounts_tbl_type_interorg_price_var_account;
    Number [] x_accounts_tbl_type_interorg_price_var_account_zoo = null;
    ARRAY x_accounts_tbl_type_interorg_payables_account;
    Number [] x_accounts_tbl_type_interorg_payables_account_zoo = null;
    ARRAY x_accounts_tbl_type_cost_of_sales_account;
    Number [] x_accounts_tbl_type_cost_of_sales_account_zoo = null;
    ARRAY x_accounts_tbl_type_encumbrance_account;
    Number [] x_accounts_tbl_type_encumbrance_account_zoo = null;
    ARRAY x_accounts_tbl_type_project_cost_account;
    Number [] x_accounts_tbl_type_project_cost_account_zoo = null;
    ARRAY x_accounts_tbl_type_interorg_transfer_cr_account;
    Number [] x_accounts_tbl_type_interorg_transfer_cr_account_zoo = null;
    ARRAY x_accounts_tbl_type_receiving_account_id;
    Number [] x_accounts_tbl_type_receiving_account_id_zoo = null;
    ARRAY x_accounts_tbl_type_clearing_account_id;
    Number [] x_accounts_tbl_type_clearing_account_id_zoo = null;
    ARRAY x_accounts_tbl_type_retroprice_adj_account_id;
    Number [] x_accounts_tbl_type_retroprice_adj_account_id_zoo = null;
    ARRAY x_accounts_tbl_type_sales_account;
    Number [] x_accounts_tbl_type_sales_account_zoo = null;
    ARRAY x_accounts_tbl_type_expense_account;
    Number [] x_accounts_tbl_type_expense_account_zoo = null;
    ARRAY x_accounts_tbl_type_avg_cost_var_account;
    Number [] x_accounts_tbl_type_avg_cost_var_account_zoo = null;
    ARRAY x_accounts_tbl_type_invoice_price_var_account;
    Number [] x_accounts_tbl_type_invoice_price_var_account_zoo = null;
    ARRAY x_accounts_tbl_type_material_acc_cd;
    String [] x_accounts_tbl_type_material_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_material_overhead_ac_cd;
    String [] x_accounts_tbl_type_material_overhead_ac_cd_zoo = null;
    ARRAY x_accounts_tbl_type_matl_ovhd_abs_acc_cd;
    String [] x_accounts_tbl_type_matl_ovhd_abs_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_resource_acc_cd;
    String [] x_accounts_tbl_type_resource_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_pur_price_var_acc_cd;
    String [] x_accounts_tbl_type_pur_price_var_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_ap_accrual_acc_cd;
    String [] x_accounts_tbl_type_ap_accrual_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_overhead_acc_cd;
    String [] x_accounts_tbl_type_overhead_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_outside_processing_acc_cd;
    String [] x_accounts_tbl_type_outside_processing_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_intransit_inv_acc_cd;
    String [] x_accounts_tbl_type_intransit_inv_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_interorg_rec_acc_cd;
    String [] x_accounts_tbl_type_interorg_rec_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_interorg_price_var_acc_cd;
    String [] x_accounts_tbl_type_interorg_price_var_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_interorg_payables_acc_cd;
    String [] x_accounts_tbl_type_interorg_payables_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_cost_of_sales_acc_cd;
    String [] x_accounts_tbl_type_cost_of_sales_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_encumbrance_acc_cd;
    String [] x_accounts_tbl_type_encumbrance_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_project_cost_acc_cd;
    String [] x_accounts_tbl_type_project_cost_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_interorg_trnfr_cr_acc_cd;
    String [] x_accounts_tbl_type_interorg_trnfr_cr_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_receiving_acc_cd;
    String [] x_accounts_tbl_type_receiving_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_clearing_acc_cd;
    String [] x_accounts_tbl_type_clearing_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_retropr_adj_acc_cd;
    String [] x_accounts_tbl_type_retropr_adj_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_sales_acc_cd;
    String [] x_accounts_tbl_type_sales_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_expense_acc_cd;
    String [] x_accounts_tbl_type_expense_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_avg_cost_var_acc_cd;
    String [] x_accounts_tbl_type_avg_cost_var_acc_cd_zoo = null;
    ARRAY x_accounts_tbl_type_invoice_price_var_acc_cd;
    String [] x_accounts_tbl_type_invoice_price_var_acc_cd_zoo = null;
    XxInvAccountsRec [] x_accounts_tbl_type_retval;


    OracleCallableStatement ocs = null;
    try {
      ocs = (OracleCallableStatement)
          _dbtransaction.createCallableStatement("begin xx_gi_new_store_auto_pkg_w.get_accounts("+
            ":1, :2, :3, :4, :5, :6, :7, :8, :9, :10, "+
            ":11, :12, :13, :14, :15, :16, :17, :18, :19, :20, "+
            ":21, :22, :23, :24, :25, :26, :27, :28, :29, :30, "+
            ":31, :32, :33, :34, :35, :36, :37, :38, :39, :40, "+
            ":41, :42, :43, :44, :45, :46, :47, :48, :49, :50, "+
            ":51"+
        "); end;", 1);

      // register types of OUT and IN-OUT params, if any
      ocs.registerOutParameter(4, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(5, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(6, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(7, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(8, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(9, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(10, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(11, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(12, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(13, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(14, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(15, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(16, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(17, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(18, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(19, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(20, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(21, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(22, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(23, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(24, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(25, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(26, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(27, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(28, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(29, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(30, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(31, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(32, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(33, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(34, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(35, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(36, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(37, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(38, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(39, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(40, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(41, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(42, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(43, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(44, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(45, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(46, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(47, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(48, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(49, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(50, OracleTypes.VARCHAR, 0, 1000);
      ocs.registerOutParameter(51, OracleTypes.VARCHAR, 0, 1000);

      // set IN or IN-OUT params, if any
      ocs.setNUMBER(1, p_model_org_id);
      ocs.setNUMBER(2, p_location_number);
      ocs.setNUMBER(3, p_does_rcv_exist);

      // call the routine!
      ocs.execute();

      // get OUT and IN-OUT params, if any
      x_accounts_tbl_type_material_account = ocs.getARRAY(4);
      x_accounts_tbl_type_material_overhead_account = ocs.getARRAY(5);
      x_accounts_tbl_type_matl_ovhd_absorption_acct = ocs.getARRAY(6);
      x_accounts_tbl_type_resource_account = ocs.getARRAY(7);
      x_accounts_tbl_type_purchase_price_var_account = ocs.getARRAY(8);
      x_accounts_tbl_type_ap_accrual_account = ocs.getARRAY(9);
      x_accounts_tbl_type_overhead_account = ocs.getARRAY(10);
      x_accounts_tbl_type_outside_processing_account = ocs.getARRAY(11);
      x_accounts_tbl_type_intransit_inv_account = ocs.getARRAY(12);
      x_accounts_tbl_type_interorg_receivables_account = ocs.getARRAY(13);
      x_accounts_tbl_type_interorg_price_var_account = ocs.getARRAY(14);
      x_accounts_tbl_type_interorg_payables_account = ocs.getARRAY(15);
      x_accounts_tbl_type_cost_of_sales_account = ocs.getARRAY(16);
      x_accounts_tbl_type_encumbrance_account = ocs.getARRAY(17);
      x_accounts_tbl_type_project_cost_account = ocs.getARRAY(18);
      x_accounts_tbl_type_interorg_transfer_cr_account = ocs.getARRAY(19);
      x_accounts_tbl_type_receiving_account_id = ocs.getARRAY(20);
      x_accounts_tbl_type_clearing_account_id = ocs.getARRAY(21);
      x_accounts_tbl_type_retroprice_adj_account_id = ocs.getARRAY(22);
      x_accounts_tbl_type_sales_account = ocs.getARRAY(23);
      x_accounts_tbl_type_expense_account = ocs.getARRAY(24);
      x_accounts_tbl_type_avg_cost_var_account = ocs.getARRAY(25);
      x_accounts_tbl_type_invoice_price_var_account = ocs.getARRAY(26);
      x_accounts_tbl_type_material_acc_cd = ocs.getARRAY(27);
      x_accounts_tbl_type_material_overhead_ac_cd = ocs.getARRAY(28);
      x_accounts_tbl_type_matl_ovhd_abs_acc_cd = ocs.getARRAY(29);
      x_accounts_tbl_type_resource_acc_cd = ocs.getARRAY(30);
      x_accounts_tbl_type_pur_price_var_acc_cd = ocs.getARRAY(31);
      x_accounts_tbl_type_ap_accrual_acc_cd = ocs.getARRAY(32);
      x_accounts_tbl_type_overhead_acc_cd = ocs.getARRAY(33);
      x_accounts_tbl_type_outside_processing_acc_cd = ocs.getARRAY(34);
      x_accounts_tbl_type_intransit_inv_acc_cd = ocs.getARRAY(35);
      x_accounts_tbl_type_interorg_rec_acc_cd = ocs.getARRAY(36);
      x_accounts_tbl_type_interorg_price_var_acc_cd = ocs.getARRAY(37);
      x_accounts_tbl_type_interorg_payables_acc_cd = ocs.getARRAY(38);
      x_accounts_tbl_type_cost_of_sales_acc_cd = ocs.getARRAY(39);
      x_accounts_tbl_type_encumbrance_acc_cd = ocs.getARRAY(40);
      x_accounts_tbl_type_project_cost_acc_cd = ocs.getARRAY(41);
      x_accounts_tbl_type_interorg_trnfr_cr_acc_cd = ocs.getARRAY(42);
      x_accounts_tbl_type_receiving_acc_cd = ocs.getARRAY(43);
      x_accounts_tbl_type_clearing_acc_cd = ocs.getARRAY(44);
      x_accounts_tbl_type_retropr_adj_acc_cd = ocs.getARRAY(45);
      x_accounts_tbl_type_sales_acc_cd = ocs.getARRAY(46);
      x_accounts_tbl_type_expense_acc_cd = ocs.getARRAY(47);
      x_accounts_tbl_type_avg_cost_var_acc_cd = ocs.getARRAY(48);
      x_accounts_tbl_type_invoice_price_var_acc_cd = ocs.getARRAY(49);
      if (x_errbuf != null) {
        x_errbuf[0] = ocs.getString(50);
      }
      if (x_retcode != null) {
        x_retcode[0] = ocs.getString(51);
      }

    } catch (SQLException __RosettaSe) {
      throw __RosettaSe;
    } finally {
      if(ocs!=null) ocs.close();
    }
    if (x_accounts_tbl_type != null) {
      if (x_accounts_tbl_type_material_account == null) {
        x_accounts_tbl_type[0] = null;
      } else if (x_accounts_tbl_type_material_account.length() == 0) {
        x_accounts_tbl_type_retval = new XxInvAccountsRec[0];
        x_accounts_tbl_type[0] = x_accounts_tbl_type_retval;
      } else {
        oracle.sql.Datum [] x_accounts_tbl_type_material_account_rosettadata  = x_accounts_tbl_type_material_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_material_overhead_account_rosettadata  = x_accounts_tbl_type_material_overhead_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_matl_ovhd_absorption_acct_rosettadata  = x_accounts_tbl_type_matl_ovhd_absorption_acct.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_resource_account_rosettadata  = x_accounts_tbl_type_resource_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_purchase_price_var_account_rosettadata  = x_accounts_tbl_type_purchase_price_var_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_ap_accrual_account_rosettadata  = x_accounts_tbl_type_ap_accrual_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_overhead_account_rosettadata  = x_accounts_tbl_type_overhead_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_outside_processing_account_rosettadata  = x_accounts_tbl_type_outside_processing_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_intransit_inv_account_rosettadata  = x_accounts_tbl_type_intransit_inv_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_interorg_receivables_account_rosettadata  = x_accounts_tbl_type_interorg_receivables_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_interorg_price_var_account_rosettadata  = x_accounts_tbl_type_interorg_price_var_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_interorg_payables_account_rosettadata  = x_accounts_tbl_type_interorg_payables_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_cost_of_sales_account_rosettadata  = x_accounts_tbl_type_cost_of_sales_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_encumbrance_account_rosettadata  = x_accounts_tbl_type_encumbrance_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_project_cost_account_rosettadata  = x_accounts_tbl_type_project_cost_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_interorg_transfer_cr_account_rosettadata  = x_accounts_tbl_type_interorg_transfer_cr_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_receiving_account_id_rosettadata  = x_accounts_tbl_type_receiving_account_id.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_clearing_account_id_rosettadata  = x_accounts_tbl_type_clearing_account_id.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_retroprice_adj_account_id_rosettadata  = x_accounts_tbl_type_retroprice_adj_account_id.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_sales_account_rosettadata  = x_accounts_tbl_type_sales_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_expense_account_rosettadata  = x_accounts_tbl_type_expense_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_avg_cost_var_account_rosettadata  = x_accounts_tbl_type_avg_cost_var_account.getOracleArray();
        oracle.sql.Datum [] x_accounts_tbl_type_invoice_price_var_account_rosettadata  = x_accounts_tbl_type_invoice_price_var_account.getOracleArray();
        String [] x_accounts_tbl_type_material_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_material_acc_cd.getArray();
        String [] x_accounts_tbl_type_material_overhead_ac_cd_rosettadata  = (String []) x_accounts_tbl_type_material_overhead_ac_cd.getArray();
        String [] x_accounts_tbl_type_matl_ovhd_abs_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_matl_ovhd_abs_acc_cd.getArray();
        String [] x_accounts_tbl_type_resource_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_resource_acc_cd.getArray();
        String [] x_accounts_tbl_type_pur_price_var_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_pur_price_var_acc_cd.getArray();
        String [] x_accounts_tbl_type_ap_accrual_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_ap_accrual_acc_cd.getArray();
        String [] x_accounts_tbl_type_overhead_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_overhead_acc_cd.getArray();
        String [] x_accounts_tbl_type_outside_processing_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_outside_processing_acc_cd.getArray();
        String [] x_accounts_tbl_type_intransit_inv_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_intransit_inv_acc_cd.getArray();
        String [] x_accounts_tbl_type_interorg_rec_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_interorg_rec_acc_cd.getArray();
        String [] x_accounts_tbl_type_interorg_price_var_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_interorg_price_var_acc_cd.getArray();
        String [] x_accounts_tbl_type_interorg_payables_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_interorg_payables_acc_cd.getArray();
        String [] x_accounts_tbl_type_cost_of_sales_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_cost_of_sales_acc_cd.getArray();
        String [] x_accounts_tbl_type_encumbrance_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_encumbrance_acc_cd.getArray();
        String [] x_accounts_tbl_type_project_cost_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_project_cost_acc_cd.getArray();
        String [] x_accounts_tbl_type_interorg_trnfr_cr_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_interorg_trnfr_cr_acc_cd.getArray();
        String [] x_accounts_tbl_type_receiving_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_receiving_acc_cd.getArray();
        String [] x_accounts_tbl_type_clearing_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_clearing_acc_cd.getArray();
        String [] x_accounts_tbl_type_retropr_adj_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_retropr_adj_acc_cd.getArray();
        String [] x_accounts_tbl_type_sales_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_sales_acc_cd.getArray();
        String [] x_accounts_tbl_type_expense_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_expense_acc_cd.getArray();
        String [] x_accounts_tbl_type_avg_cost_var_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_avg_cost_var_acc_cd.getArray();
        String [] x_accounts_tbl_type_invoice_price_var_acc_cd_rosettadata  = (String []) x_accounts_tbl_type_invoice_price_var_acc_cd.getArray();

        x_accounts_tbl_type_retval = new XxInvAccountsRec[x_accounts_tbl_type_material_account_rosettadata.length];
        x_accounts_tbl_type[0] = x_accounts_tbl_type_retval;
        for (int __i=0; __i<x_accounts_tbl_type_material_account_rosettadata.length; ++__i) {
          x_accounts_tbl_type_retval[__i] = new XxInvAccountsRec();
          x_accounts_tbl_type_retval[__i].material_account = 
            ((null == x_accounts_tbl_type_material_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_material_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].material_overhead_account = 
            ((null == x_accounts_tbl_type_material_overhead_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_material_overhead_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].matl_ovhd_absorption_acct = 
            ((null == x_accounts_tbl_type_matl_ovhd_absorption_acct_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_matl_ovhd_absorption_acct_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].resource_account = 
            ((null == x_accounts_tbl_type_resource_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_resource_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].purchase_price_var_account = 
            ((null == x_accounts_tbl_type_purchase_price_var_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_purchase_price_var_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].ap_accrual_account = 
            ((null == x_accounts_tbl_type_ap_accrual_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_ap_accrual_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].overhead_account = 
            ((null == x_accounts_tbl_type_overhead_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_overhead_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].outside_processing_account = 
            ((null == x_accounts_tbl_type_outside_processing_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_outside_processing_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].intransit_inv_account = 
            ((null == x_accounts_tbl_type_intransit_inv_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_intransit_inv_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].interorg_receivables_account = 
            ((null == x_accounts_tbl_type_interorg_receivables_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_interorg_receivables_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].interorg_price_var_account = 
            ((null == x_accounts_tbl_type_interorg_price_var_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_interorg_price_var_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].interorg_payables_account = 
            ((null == x_accounts_tbl_type_interorg_payables_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_interorg_payables_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].cost_of_sales_account = 
            ((null == x_accounts_tbl_type_cost_of_sales_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_cost_of_sales_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].encumbrance_account = 
            ((null == x_accounts_tbl_type_encumbrance_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_encumbrance_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].project_cost_account = 
            ((null == x_accounts_tbl_type_project_cost_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_project_cost_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].interorg_transfer_cr_account = 
            ((null == x_accounts_tbl_type_interorg_transfer_cr_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_interorg_transfer_cr_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].receiving_account_id = 
            ((null == x_accounts_tbl_type_receiving_account_id_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_receiving_account_id_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].clearing_account_id = 
            ((null == x_accounts_tbl_type_clearing_account_id_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_clearing_account_id_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].retroprice_adj_account_id = 
            ((null == x_accounts_tbl_type_retroprice_adj_account_id_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_retroprice_adj_account_id_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].sales_account = 
            ((null == x_accounts_tbl_type_sales_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_sales_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].expense_account = 
            ((null == x_accounts_tbl_type_expense_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_expense_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].avg_cost_var_account = 
            ((null == x_accounts_tbl_type_avg_cost_var_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_avg_cost_var_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].invoice_price_var_account = 
            ((null == x_accounts_tbl_type_invoice_price_var_account_rosettadata[__i]) ? null : new Number((NUMBER) x_accounts_tbl_type_invoice_price_var_account_rosettadata[__i]));
          x_accounts_tbl_type_retval[__i].material_acc_cd = x_accounts_tbl_type_material_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].material_overhead_ac_cd = x_accounts_tbl_type_material_overhead_ac_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].matl_ovhd_abs_acc_cd = x_accounts_tbl_type_matl_ovhd_abs_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].resource_acc_cd = x_accounts_tbl_type_resource_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].pur_price_var_acc_cd = x_accounts_tbl_type_pur_price_var_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].ap_accrual_acc_cd = x_accounts_tbl_type_ap_accrual_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].overhead_acc_cd = x_accounts_tbl_type_overhead_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].outside_processing_acc_cd = x_accounts_tbl_type_outside_processing_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].intransit_inv_acc_cd = x_accounts_tbl_type_intransit_inv_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].interorg_rec_acc_cd = x_accounts_tbl_type_interorg_rec_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].interorg_price_var_acc_cd = x_accounts_tbl_type_interorg_price_var_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].interorg_payables_acc_cd = x_accounts_tbl_type_interorg_payables_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].cost_of_sales_acc_cd = x_accounts_tbl_type_cost_of_sales_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].encumbrance_acc_cd = x_accounts_tbl_type_encumbrance_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].project_cost_acc_cd = x_accounts_tbl_type_project_cost_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].interorg_trnfr_cr_acc_cd = x_accounts_tbl_type_interorg_trnfr_cr_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].receiving_acc_cd = x_accounts_tbl_type_receiving_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].clearing_acc_cd = x_accounts_tbl_type_clearing_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].retropr_adj_acc_cd = x_accounts_tbl_type_retropr_adj_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].sales_acc_cd = x_accounts_tbl_type_sales_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].expense_acc_cd = x_accounts_tbl_type_expense_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].avg_cost_var_acc_cd = x_accounts_tbl_type_avg_cost_var_acc_cd_rosettadata[__i];
          x_accounts_tbl_type_retval[__i].invoice_price_var_acc_cd = x_accounts_tbl_type_invoice_price_var_acc_cd_rosettadata[__i];
        }
      }
    }
  }
  /** This is the Rosetta-generated method to call
    * procedure copy_stg_org_data
    * in package xx_gi_new_store_auto_pkg
    */
  public static void copyStgOrgData(
    DBTransaction _dbtransaction,
    String  [] x_errbuf,
    String  [] x_retcode,
    String p_debug_flag,
    String p_records_to_process
  ) throws SQLException {


    OracleCallableStatement ocs = null;
    try {
      ocs = (OracleCallableStatement)
          _dbtransaction.createCallableStatement("begin xx_gi_new_store_auto_pkg.copy_stg_org_data("+
            ":1, :2, :3, :4"+
        "); end;", 1);

      // register types of OUT and IN-OUT params, if any
      ocs.registerOutParameter(1, OracleTypes.VARCHAR, 0, 1000);
      ocs.registerOutParameter(2, OracleTypes.VARCHAR, 0, 1000);

      // set IN or IN-OUT params, if any
      ocs.setString(3, p_debug_flag);
      ocs.setString(4, p_records_to_process);

      // call the routine!
      ocs.execute();

      // get OUT and IN-OUT params, if any
      if (x_errbuf != null) {
        x_errbuf[0] = ocs.getString(1);
      }
      if (x_retcode != null) {
        x_retcode[0] = ocs.getString(2);
      }

    } catch (SQLException __RosettaSe) {
      throw __RosettaSe;
    } finally {
      if(ocs!=null) ocs.close();
    }
  }
  /** This is the Rosetta-generated method to call
    * procedure get_ccid_wrapper
    * in package xx_gi_new_store_auto_pkg
    */
  public static void getCcidWrapper(
    DBTransaction _dbtransaction,
    XxInvSixacctsRec [][] p_inv_sixaccts_in,
    Number p_location_number
  ) throws SQLException {
    ARRAY p_inv_sixaccts_in_material_account;
    String [] p_inv_sixaccts_in_material_account_zoo = null;
    ARRAY p_inv_sixaccts_in_material_overhead_account;
    String [] p_inv_sixaccts_in_material_overhead_account_zoo = null;
    ARRAY p_inv_sixaccts_in_resource_account;
    String [] p_inv_sixaccts_in_resource_account_zoo = null;
    ARRAY p_inv_sixaccts_in_overhead_account;
    String [] p_inv_sixaccts_in_overhead_account_zoo = null;
    ARRAY p_inv_sixaccts_in_outside_processing_account;
    String [] p_inv_sixaccts_in_outside_processing_account_zoo = null;
    ARRAY p_inv_sixaccts_in_expense_account;
    String [] p_inv_sixaccts_in_expense_account_zoo = null;
    XxInvSixacctsRec [] p_inv_sixaccts_in_retval;

    if (p_inv_sixaccts_in == null || p_inv_sixaccts_in[0] == null) {
      p_inv_sixaccts_in_material_account = null;
      p_inv_sixaccts_in_material_overhead_account = null;
      p_inv_sixaccts_in_resource_account = null;
      p_inv_sixaccts_in_overhead_account = null;
      p_inv_sixaccts_in_outside_processing_account = null;
      p_inv_sixaccts_in_expense_account = null;
    } else {
      int size = p_inv_sixaccts_in[0].length;
      p_inv_sixaccts_in_material_account_zoo = new String[size];
      p_inv_sixaccts_in_material_overhead_account_zoo = new String[size];
      p_inv_sixaccts_in_resource_account_zoo = new String[size];
      p_inv_sixaccts_in_overhead_account_zoo = new String[size];
      p_inv_sixaccts_in_outside_processing_account_zoo = new String[size];
      p_inv_sixaccts_in_expense_account_zoo = new String[size];
      for (int __i=0; __i<size;++__i) {
        p_inv_sixaccts_in_material_account_zoo[__i] = p_inv_sixaccts_in[0][__i].material_account;
        p_inv_sixaccts_in_material_overhead_account_zoo[__i] = p_inv_sixaccts_in[0][__i].material_overhead_account;
        p_inv_sixaccts_in_resource_account_zoo[__i] = p_inv_sixaccts_in[0][__i].resource_account;
        p_inv_sixaccts_in_overhead_account_zoo[__i] = p_inv_sixaccts_in[0][__i].overhead_account;
        p_inv_sixaccts_in_outside_processing_account_zoo[__i] = p_inv_sixaccts_in[0][__i].outside_processing_account;
        p_inv_sixaccts_in_expense_account_zoo[__i] = p_inv_sixaccts_in[0][__i].expense_account;
      }
    }

    OracleCallableStatement ocs = null;
    try {
      ocs = (OracleCallableStatement)
          _dbtransaction.createCallableStatement("begin xx_gi_new_store_auto_pkg_w.get_ccid_wrapper("+
            ":1, :2, :3, :4, :5, :6, :7"+
        "); end;", 1);

      // register types of OUT and IN-OUT params, if any
      ocs.registerOutParameter(1, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(2, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(3, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(4, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(5, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      ocs.registerOutParameter(6, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");

      // set IN or IN-OUT params, if any
      if (p_inv_sixaccts_in == null || p_inv_sixaccts_in[0] == null) {
        ocs.setNull(1, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
        ocs.setNull(2, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
        ocs.setNull(3, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
        ocs.setNull(4, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
        ocs.setNull(5, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
        ocs.setNull(6, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_2000");
      } else {
        ocs.setARRAY(1, new ARRAY(
          oracle.sql.ArrayDescriptor.createDescriptor("JTF_VARCHAR2_TABLE_2000", ocs.getConnection()),
          ocs.getConnection(),
          p_inv_sixaccts_in_material_account_zoo));
        ocs.setARRAY(2, new ARRAY(
          oracle.sql.ArrayDescriptor.createDescriptor("JTF_VARCHAR2_TABLE_2000", ocs.getConnection()),
          ocs.getConnection(),
          p_inv_sixaccts_in_material_overhead_account_zoo));
        ocs.setARRAY(3, new ARRAY(
          oracle.sql.ArrayDescriptor.createDescriptor("JTF_VARCHAR2_TABLE_2000", ocs.getConnection()),
          ocs.getConnection(),
          p_inv_sixaccts_in_resource_account_zoo));
        ocs.setARRAY(4, new ARRAY(
          oracle.sql.ArrayDescriptor.createDescriptor("JTF_VARCHAR2_TABLE_2000", ocs.getConnection()),
          ocs.getConnection(),
          p_inv_sixaccts_in_overhead_account_zoo));
        ocs.setARRAY(5, new ARRAY(
          oracle.sql.ArrayDescriptor.createDescriptor("JTF_VARCHAR2_TABLE_2000", ocs.getConnection()),
          ocs.getConnection(),
          p_inv_sixaccts_in_outside_processing_account_zoo));
        ocs.setARRAY(6, new ARRAY(
          oracle.sql.ArrayDescriptor.createDescriptor("JTF_VARCHAR2_TABLE_2000", ocs.getConnection()),
          ocs.getConnection(),
          p_inv_sixaccts_in_expense_account_zoo));
      }
      ocs.setNUMBER(7, p_location_number);

      // call the routine!
      ocs.execute();

      // get OUT and IN-OUT params, if any
      p_inv_sixaccts_in_material_account = ocs.getARRAY(1);
      p_inv_sixaccts_in_material_overhead_account = ocs.getARRAY(2);
      p_inv_sixaccts_in_resource_account = ocs.getARRAY(3);
      p_inv_sixaccts_in_overhead_account = ocs.getARRAY(4);
      p_inv_sixaccts_in_outside_processing_account = ocs.getARRAY(5);
      p_inv_sixaccts_in_expense_account = ocs.getARRAY(6);

    } catch (SQLException __RosettaSe) {
      throw __RosettaSe;
    } finally {
      if(ocs!=null) ocs.close();
    }
    if (p_inv_sixaccts_in != null) {
      if (p_inv_sixaccts_in_material_account == null) {
        p_inv_sixaccts_in[0] = null;
      } else if (p_inv_sixaccts_in_material_account.length() == 0) {
        p_inv_sixaccts_in_retval = new XxInvSixacctsRec[0];
        p_inv_sixaccts_in[0] = p_inv_sixaccts_in_retval;
      } else {
        String [] p_inv_sixaccts_in_material_account_rosettadata  = (String []) p_inv_sixaccts_in_material_account.getArray();
        String [] p_inv_sixaccts_in_material_overhead_account_rosettadata  = (String []) p_inv_sixaccts_in_material_overhead_account.getArray();
        String [] p_inv_sixaccts_in_resource_account_rosettadata  = (String []) p_inv_sixaccts_in_resource_account.getArray();
        String [] p_inv_sixaccts_in_overhead_account_rosettadata  = (String []) p_inv_sixaccts_in_overhead_account.getArray();
        String [] p_inv_sixaccts_in_outside_processing_account_rosettadata  = (String []) p_inv_sixaccts_in_outside_processing_account.getArray();
        String [] p_inv_sixaccts_in_expense_account_rosettadata  = (String []) p_inv_sixaccts_in_expense_account.getArray();

        p_inv_sixaccts_in_retval = new XxInvSixacctsRec[p_inv_sixaccts_in_material_account_rosettadata.length];
        p_inv_sixaccts_in[0] = p_inv_sixaccts_in_retval;
        for (int __i=0; __i<p_inv_sixaccts_in_material_account_rosettadata.length; ++__i) {
          p_inv_sixaccts_in_retval[__i] = new XxInvSixacctsRec();
          p_inv_sixaccts_in_retval[__i].material_account = p_inv_sixaccts_in_material_account_rosettadata[__i];
          p_inv_sixaccts_in_retval[__i].material_overhead_account = p_inv_sixaccts_in_material_overhead_account_rosettadata[__i];
          p_inv_sixaccts_in_retval[__i].resource_account = p_inv_sixaccts_in_resource_account_rosettadata[__i];
          p_inv_sixaccts_in_retval[__i].overhead_account = p_inv_sixaccts_in_overhead_account_rosettadata[__i];
          p_inv_sixaccts_in_retval[__i].outside_processing_account = p_inv_sixaccts_in_outside_processing_account_rosettadata[__i];
          p_inv_sixaccts_in_retval[__i].expense_account = p_inv_sixaccts_in_expense_account_rosettadata[__i];
        }
      }
    }
  }
}
