<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/ODCommon/EnterpriseObjects/Core/EBO/Employee/V1/EmployeeEBM.xsd"/>
      <rootElement name="SyncEmployeeEBM" namespace="http://xmlns.officedepot.com/EnterpriseObjects/Core/EBO/Employee/V1"/>
    </source>    
    <source type="XSD">
      <schema location="../xsd/Counter.xsd"/>
      <rootElement name="counter" namespace="http://xmlns.officedepot.com/PSFTEmployeeSynch/Common"/>
      <param name="EmpCount" />
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="../xsd/APPS_XX_HR_PS_STG_INSERT_PKG_INSERT_PROC.xsd"/>
      <rootElement name="InputParameters" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XX_HR_PS_STG_INSERT_PKG/INSERT_PROC/"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.4.0(build 110106.1932.5682) AT [THU JUN 14 20:14:15 IST 2012]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:comm="http://xmlns.officedepot.com/EnterpriseObjects/Core/Common/V3"
                xmlns:commcust="http://xmlns.officedepot.com/EnterpriseObjects/Core/Custom/Common/V3"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:ns0="http://xmlns.officedepot.com/EnterpriseObjects/Core/EBO/Employee/V1"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:ns1="http://xmlns.officedepot.com/PSFTEmployeeSynch/Common"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:db="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XX_HR_PS_STG_INSERT_PKG/INSERT_PROC/"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl comm ns0 ns1 xsd db bpws xp20 mhdr bpel oraext dvm hwf med ids bpm xdk xref ora socket ldap">
  <xsl:param name="EmpCount"/>
  <xsl:template match="/">
    <!--  <db:InputParameters>
       <db:P_EMPLID>
        <xsl:value-of select="/ns0:SyncEmployeeEBM/ns0:DataArea/ns0:EmployeeList/ns0:Employee/ns0:EmployeeIdentification/ns0:EmployeeID"/>
      </db:P_EMPLID>
    </db:InputParameters> -->
    <xsl:for-each select="/ns0:SyncEmployeeEBM/ns0:DataArea/ns0:EmployeeList/ns0:Employee[position() = $EmpCount/ns1:counter/ns1:value]">
      <db:InputParameters>
        <db:P_EMPLID>
          <xsl:value-of select="ns0:EmployeeIdentification/ns0:EmployeeID"/>
        </db:P_EMPLID>
        <db:P_BADGE_NBR>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:BadgeNumber"/>
        </db:P_BADGE_NBR>
        <db:P_FIRST_NAME>
          <xsl:value-of select="ns0:PersonDetails/comm:Person/comm:PersonName/comm:FirstName"/>
        </db:P_FIRST_NAME>
        <db:P_MIDDLE_NAME>
          <xsl:choose>
            <xsl:when test="ns0:PersonDetails/comm:Person/comm:PersonName/comm:MiddleName  ne ''">
              <xsl:value-of select="ns0:PersonDetails/comm:Person/comm:PersonName/comm:MiddleName"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text disable-output-escaping="no">&nbsp;</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
        </db:P_MIDDLE_NAME>
        <db:P_LAST_NAME>
          <xsl:value-of select="ns0:PersonDetails/comm:Person/comm:PersonName/comm:FamilyName"/>
        </db:P_LAST_NAME>
        <db:P_SECOND_LAST_NAME>
          <xsl:choose>
            <xsl:when test="ns0:PersonDetails/comm:Person/comm:PersonName/comm:Custom/commcust:SecondLastName  ne ''">
              <xsl:value-of select="ns0:PersonDetails/comm:Person/comm:PersonName/comm:Custom/commcust:SecondLastName"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text disable-output-escaping="no">&nbsp;</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
        </db:P_SECOND_LAST_NAME>
        <db:P_NAME_PREFIX>
           <xsl:choose>
            <xsl:when test="ns0:PersonDetails/comm:Person/comm:PersonName/comm:Prefix  ne ''">
              <xsl:value-of select="ns0:PersonDetails/comm:Person/comm:PersonName/comm:Prefix"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text disable-output-escaping="no">&nbsp;</xsl:text>
            </xsl:otherwise>
          </xsl:choose> 
        </db:P_NAME_PREFIX>
        <db:P_NAME_SUFFIX>
          <xsl:choose>
          <xsl:when test="ns0:PersonDetails/comm:Person/comm:PersonName/comm:Suffix  ne ''">
            <xsl:value-of select="ns0:PersonDetails/comm:Person/comm:PersonName/comm:Suffix"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text disable-output-escaping="no">&nbsp;</xsl:text>
          </xsl:otherwise>
          </xsl:choose>
        </db:P_NAME_SUFFIX>
        <db:P_OD_ADDEFFDT>
          <xsl:if test="ns0:PersonDetails/ns0:PersonCommunication/comm:AddressCommunication/comm:EffectiveTimePeriod/comm:StartDateTime ne ''">
            <xsl:value-of select='xp20:format-dateTime(ns0:PersonDetails/ns0:PersonCommunication/comm:AddressCommunication/comm:EffectiveTimePeriod/comm:StartDateTime,"[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]")'/>
          </xsl:if>
        </db:P_OD_ADDEFFDT>
        <db:P_SEX>
          <xsl:value-of select="ns0:PersonDetails/comm:Person/comm:GenderCode"/>
        </db:P_SEX>
        <db:P_ADDRESS1>
          <xsl:value-of select="ns0:PersonDetails/ns0:PersonCommunication/comm:AddressCommunication/comm:Address/comm:LineOne"/>
        </db:P_ADDRESS1>
        <db:P_ADDRESS2>
          <xsl:value-of select="ns0:PersonDetails/ns0:PersonCommunication/comm:AddressCommunication/comm:Address/comm:LineTwo"/>
        </db:P_ADDRESS2>
        <db:P_ADDRESS3>
          <xsl:value-of select="ns0:PersonDetails/ns0:PersonCommunication/comm:AddressCommunication/comm:Address/comm:LineThree"/>
        </db:P_ADDRESS3>
        <db:P_CITY>
          <xsl:value-of select="ns0:PersonDetails/ns0:PersonCommunication/comm:AddressCommunication/comm:Address/comm:CityName"/>
        </db:P_CITY>
        <db:P_POSTAL>
          <xsl:value-of select="ns0:PersonDetails/ns0:PersonCommunication/comm:AddressCommunication/comm:Address/comm:PostalCode"/>
        </db:P_POSTAL>
        <db:P_COUNTY>
          <xsl:value-of select="ns0:PersonDetails/ns0:PersonCommunication/comm:AddressCommunication/comm:Address/comm:CountyName"/>
        </db:P_COUNTY>
        <db:P_STATE>
          <xsl:value-of select="ns0:PersonDetails/ns0:PersonCommunication/comm:AddressCommunication/comm:Address/comm:StateName"/>
        </db:P_STATE>
        <db:P_COUNTRY>
          <xsl:value-of select="ns0:PersonDetails/ns0:PersonCommunication/comm:AddressCommunication/comm:Address/comm:CountryCode"/>
        </db:P_COUNTRY>
        <db:P_PER_ORG>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:PersonRelationWithOrganisation"/>
        </db:P_PER_ORG>
        <db:P_EMPL_STATUS>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:Status"/>
        </db:P_EMPL_STATUS>
        <db:P_OD_JOBEFFDT>
          <xsl:if test="ns0:EmploymentDetails/ns0:EffectiveDate ne ''">
            <xsl:value-of select='xp20:format-dateTime(ns0:EmploymentDetails/ns0:EffectiveDate,"[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]")'/>
          </xsl:if>
        </db:P_OD_JOBEFFDT>
        <db:P_HIRE_DT>
          <xsl:if test="ns0:EmploymentDetails/ns0:HireDate ne ''">
            <xsl:value-of select='xp20:format-dateTime(ns0:EmploymentDetails/ns0:HireDate,"[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]")'/>
          </xsl:if>
        </db:P_HIRE_DT>
        <db:P_ACTION>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:Action"/>
        </db:P_ACTION>
        <db:P_SETID_JOBCODE>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:JobDetail/ns0:SetIDJobCode"/>
        </db:P_SETID_JOBCODE>
        <db:P_JOBCODE>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:JobDetail/ns0:JobCode"/>
        </db:P_JOBCODE>
        <db:P_BUSINESS_UNIT>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:BusinessUnitReference/comm:BusinessUnitIdentification/comm:ID"/>
        </db:P_BUSINESS_UNIT>
        <db:P_SETID_LOCATION>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:LocationReference/comm:Custom/commcust:LocationSetID"/>
        </db:P_SETID_LOCATION>
        <db:P_LOCATION>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:LocationReference/comm:Custom/commcust:LocationID"/>
        </db:P_LOCATION>
        <db:P_COMPANY>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:Company"/>
        </db:P_COMPANY>
        <db:P_SETID_DEPT>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:DepartmentReference/comm:Custom/commcust:DepartmentSetID"/>
        </db:P_SETID_DEPT>
        <db:P_DEPTID>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:DepartmentReference/comm:Custom/commcust:DepartmentID"/>
        </db:P_DEPTID>
        <db:P_REG_REGION>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:RegulatoryRegion"/>
        </db:P_REG_REGION>
        <db:P_LAST_DATE_WORKED>
          <xsl:if test="ns0:EmploymentDetails/ns0:LastWorkedDate ne ''">
            <xsl:value-of select='xp20:format-dateTime(ns0:EmploymentDetails/ns0:LastWorkedDate,"[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]")'/>
          </xsl:if>
        </db:P_LAST_DATE_WORKED>
        <db:P_GRADE>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:JobDetail/ns0:JobGrade/ns0:Grade"/>
        </db:P_GRADE>
        <db:P_SAL_ADMIN_PLAN>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:JobDetail/ns0:SalaryAdminPlan"/>
        </db:P_SAL_ADMIN_PLAN>
        <db:P_SUPERVISOR_ID>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:JobDetail/ns0:JobAssignmentSupervision/ns0:SupervisorID"/>
        </db:P_SUPERVISOR_ID>
        <db:P_MANAGER_LEVEL>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:JobDetail/ns0:JobAssignmentSupervision/ns0:ManagerLevel"/>
        </db:P_MANAGER_LEVEL>
        <db:P_JOB_ENTRY_DT>
          <xsl:if test="ns0:EmploymentDetails/ns0:JobDetail/ns0:JobTimePeriod/comm:StartDateTime ne ''">
            <xsl:value-of select='xp20:format-dateTime(ns0:EmploymentDetails/ns0:JobDetail/ns0:JobTimePeriod/comm:StartDateTime,"[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]")'/>
          </xsl:if>
        </db:P_JOB_ENTRY_DT>
        <db:P_JOB_FUNCTION>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:JobDetail/ns0:JobFunction"/>
        </db:P_JOB_FUNCTION>
        <db:P_DESCR>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:JobDetail/ns0:JobCodeDescription"/>
        </db:P_DESCR>
        <db:P_EMAILID>
          <xsl:value-of select="ns0:PersonDetails/ns0:PersonCommunication/ns0:EmailCommunication/comm:URI"/>
        </db:P_EMAILID>
        <db:P_VENDOR_ID>
          <xsl:value-of select="ns0:EmploymentDetails/ns0:VendorID"/>
        </db:P_VENDOR_ID>
        <xsl:for-each select="ns0:PersonDetails/ns0:PersonCommunication/ns0:PhoneCommunication">
          <xsl:if test="comm:UseCode eq 'Business' and comm:TypeCode eq 'Landline'">
            <db:P_OD_PHONE_BUSN>
              <xsl:value-of select="comm:CompleteNumber"/>
            </db:P_OD_PHONE_BUSN>
            <db:P_PREF_PHONE_BUSN_FG>
              <xsl:value-of select="comm:Preference/comm:PreferredIndicator"/>
            </db:P_PREF_PHONE_BUSN_FG>
          </xsl:if>
        </xsl:for-each>
        <xsl:for-each select="ns0:PersonDetails/ns0:PersonCommunication/ns0:FaxCommunication">
          <xsl:if test="comm:UseCode eq 'Business'">
            <db:P_OD_PHONE_FAX>
              <xsl:value-of select="comm:CompleteNumber"/>
            </db:P_OD_PHONE_FAX>
            <db:P_PREF_PHONE_FAX_FG>
              <xsl:value-of select="comm:Preference/comm:PreferredIndicator"/>
            </db:P_PREF_PHONE_FAX_FG>
          </xsl:if>
          <xsl:if test="comm:UseCode eq 'Personal'">
            <db:P_OD_PHONE_FAXP>
              <xsl:value-of select="comm:CompleteNumber"/>
            </db:P_OD_PHONE_FAXP>
            <db:P_PREF_PHONE_FAXP_FG>
              <xsl:value-of select="comm:Preference/comm:PreferredIndicator"/>
            </db:P_PREF_PHONE_FAXP_FG>
          </xsl:if>
        </xsl:for-each>
        <xsl:for-each select="ns0:PersonDetails/ns0:PersonCommunication/ns0:PhoneCommunication">
          <xsl:if test="comm:UseCode eq 'Main' and comm:TypeCode eq 'Landline'">
            <db:P_OD_PHONE_MAIN>
              <xsl:value-of select="comm:CompleteNumber"/>
            </db:P_OD_PHONE_MAIN>
            <db:P_PREF_PHONE_MAIN_FG>
              <xsl:value-of select="comm:Preference/comm:PreferredIndicator"/>
            </db:P_PREF_PHONE_MAIN_FG>
          </xsl:if>
          <xsl:if test="comm:UseCode eq 'Business' and comm:TypeCode eq 'Mobile'">
            <db:P_OD_PHONE_MOBB>
              <xsl:value-of select="comm:CompleteNumber"/>
            </db:P_OD_PHONE_MOBB>
            <db:P_PREF_PHONE_MOBB_FG>
              <xsl:value-of select="comm:Preference/comm:PreferredIndicator"/>
            </db:P_PREF_PHONE_MOBB_FG>
          </xsl:if>
          <xsl:if test="comm:UseCode eq 'Personal' and comm:TypeCode eq 'Mobile'">
            <db:P_OD_PHONE_MOBP>
              <xsl:value-of select="comm:CompleteNumber"/>
            </db:P_OD_PHONE_MOBP>
            <db:P_PREF_PHONE_MOBP_FG>
              <xsl:value-of select="comm:Preference/comm:PreferredIndicator"/>
            </db:P_PREF_PHONE_MOBP_FG>
          </xsl:if>
          <xsl:if test="comm:UseCode eq 'Business' and comm:TypeCode eq 'Pager'">
            <db:P_OD_PHONE_PGR1>
              <xsl:value-of select="comm:CompleteNumber"/>
            </db:P_OD_PHONE_PGR1>
            <db:P_PREF_PHONE_PGR1_FG>
              <xsl:value-of select="comm:Preference/comm:PreferredIndicator"/>
            </db:P_PREF_PHONE_PGR1_FG>
          </xsl:if>
        </xsl:for-each>
      </db:InputParameters>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
