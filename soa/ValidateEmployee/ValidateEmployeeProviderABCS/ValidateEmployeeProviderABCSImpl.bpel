<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Oct 12 16:48:31 IST 2011
  Author:  pkalvala
  Type: BPEL 1.1 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ValidateEmployeeProviderABCSImpl"
               targetNamespace="http://xmlns.officedepot.com/ValidateEmployee/ValidateEmployeeProviderABCS/ValidateEmployeeProviderABCSImpl"
               xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
               xmlns:client="http://xmlns.officedepot.com/ValidateEmployee/ValidateEmployeeProviderABCS/ValidateEmployeeProviderABCSImpl"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns1="http://xmlns.oracle.com/Enterprise/Tools/services/CI_OD_CI_EMP_PWD_VAL.1"
         xmlns:ns2="http://xmlns.officedepot.com/ValidateEmployee/ValidateEmployeeProviderABCS/ValidateEmployeeRequestEBM"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns3="http://xmlns.officedepot.com/ValidateEmployee/ValidateEmployeeProviderABCS/ValidateEmployeeResponseEBM"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/jms/ValidateEmployee/ValidateEmployeeProviderABCS/CommonErrorLoggingService"
         xmlns:ns5="http://xmlns.officedepot.com/ValidateEmployee/ValidateEmployeeProviderABCS/ValidateEmployeeFaultEBM"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns6="http://www.officedepot.com/officedepot/ODComnErrorStructure/1.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns7="http://xmlns.oracle.com/Enterprise/Tools/schemas/M1068738.V1"
         xmlns:ns8="http://xmlns.oracle.com/Enterprise/Tools/schemas/M974361.V1">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="validateemployeeproviderabcsimpl_client" partnerLinkType="client:ValidateEmployeeProviderABCSImpl" myRole="ValidateEmployeeProviderABCSImplProvider"/>
    <partnerLink name="CommonErrorLoggingService"
                 partnerLinkType="ns4:Produce_Message_plt"
                 partnerRole="Produce_Message_role"/>
    <partnerLink name="EmployeeValidationService"
                 partnerLinkType="ns1:CI_OD_CI_EMP_PWD_VAL_PartnerLinkType"
                 partnerRole="CI_OD_CI_EMP_PWD_VAL_Provider"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:ValidateEmployeeProviderABCSImplRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:ValidateEmployeeProviderABCSImplResponseMessage"/>
    <variable messageType="ns1:M241439.V1" name="EmployeeValidationBusinessFault"/>
    <variable name="invokeCommonErrorLoggerInputData"
              messageType="ns4:Produce_Message_msg"/>
    <variable name="EmployeeValidationServiceInputVariable"
              messageType="ns1:M1068738.V1"/>
    <variable name="EmployeeValidationServiceOutputVariable"
              messageType="ns1:M974361.V1"/>
    <variable name="messagePayload" type="xsd:string"/>
    <variable name="errorText" type="xsd:string"/>
    <variable name="emailSubject" type="xsd:string"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="SequenceCatchAll">
        <scope name="Scope4">
          <bpelx:annotation>
            <bpelx:general>
              <bpelx:property name="userLabel">ScopePopulateFaultErrorMessageAndReplyBack</bpelx:property>
            </bpelx:general>
          </bpelx:annotation>
          <variables>
            <variable name="employeeValidationFault"
                      messageType="client:EmployeeValidationFault"/>
          </variables>
          <sequence name="SequencePopulateAndReplyFaultDetails">
            <switch name="DetermineErrorType">
              <case condition="contains(ora:getFaultAsString(),ora:getPreference('DATA_NOT_FOUND_PEOPLESOFT_RESPONSE')) ">
                <bpelx:annotation>
                  <bpelx:general>
                    <bpelx:property name="userLabel">InCaseOfDataNotFound</bpelx:property>
                  </bpelx:general>
                </bpelx:annotation>
                <sequence name="SequencePopulateDataNotFoundErrorMessage">
                  <assign name="AssignDataNotFoundFault">
                    <copy>
                      <from expression="ora:getPreference('EMPLOYEE_DATA_NOT_FOUND_FAULT_RESPONSE')"/>
                      <to variable="outputVariable" part="payload"
                          query="/ns3:ValidateEmployeeResponseEBM/ns3:ValidateEmployeeResponseEBO/ns3:Result"/>
                    </copy>
                    <copy>
                      <from expression="concat(ora:getPreference('EMPLOYEE_DATA_NOT_FOUND_FAULT_ERROR_TEXT'),bpws:getVariableData('inputVariable','payload','/ns2:ValidateEmployeeRequestEBM/ns2:ValidateEmployeeRequestEBO/ns2:ODEmployeeID'))"/>
                      <to variable="errorText"/>
                    </copy>
                    <copy>
                      <from expression="concat(ora:getPreference('EMPLOYEE_DATA_NOT_FOUND_FAULT_ERROR_TEXT'),bpws:getVariableData('inputVariable','payload','/ns2:ValidateEmployeeRequestEBM/ns2:ValidateEmployeeRequestEBO/ns2:ODEmployeeID'))"/>
                      <to variable="emailSubject"/>
                    </copy>
                  </assign>
                  <reply name="ReplyDataNotFound" variable="outputVariable"
                         partnerLink="validateemployeeproviderabcsimpl_client"
                         portType="client:ValidateEmployeeProviderABCSImpl"
                         operation="validateEmployeeDetails"/>
                </sequence>
              </case>
              <otherwise>
                <sequence name="SequencePopulateOtherFaultErrorMessage">
                  <assign name="AssignOtherFaultDetails">
                    <copy>
                      <from expression="ora:getPreference('OTHER_FAULT_ERROR')"/>
                      <to variable="employeeValidationFault" part="payload"
                          query="/ns3:ValidateEmployeeResponseEBM/ns3:ValidateEmployeeResponseEBO/ns3:Result"/>
                    </copy>
                    <copy>
                      <from expression="concat(ora:getPreference('ERROR_DESCRIPTION_TEXT'),bpws:getVariableData('inputVariable','payload','/ns2:ValidateEmployeeRequestEBM/ns2:ValidateEmployeeRequestEBO/ns2:ODEmployeeID'))"/>
                      <to variable="emailSubject"/>
                    </copy>
                    <copy>
                      <from expression="ora:getFaultAsString()"/>
                      <to variable="errorText"/>
                    </copy>
                  </assign>
                  <reply name="ReplyBackWithFaultsDetails"
                         faultName="client:EmployeeValidationFault"
                         variable="employeeValidationFault"
                         partnerLink="validateemployeeproviderabcsimpl_client"
                         portType="client:ValidateEmployeeProviderABCSImpl"
                         operation="validateEmployeeDetails"/>
                </sequence>
              </otherwise>
            </switch>
            <assign name="AssignPopulateCommonErrorLoggingData">
              <copy>
                <from expression="ora:getProcessId()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:ProcessInfo/ns6:ProcessName"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('ERROR_TYPE')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:ErrorDetails/ns6:ErrorType"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('ERROR_SEVERITY')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:ErrorDetails/ns6:ErrorSeverity"/>
              </copy>
              <copy>
                <from expression="bpws:getVariableData('errorText')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:ErrorDetails/ns6:ErrorText"/>
              </copy>
              <copy>
                <from expression="ora:getCurrentDateTime()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:ErrorDetails/ns6:ErrorDateTime"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('CATCH_ALL_PROCESS_STEP')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:ErrorDetails/ns6:ProcessStep"/>
              </copy>
              <copy>
                <from expression="ora:getFaultName()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:ErrorDetails/ns6:ErrorCode"/>
              </copy>
              <copy>
                <from expression="ora:getDomainId()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:ProcessInfo/ns6:Domain"/>
              </copy>
              <copy>
                <from expression="ora:getCompositeInstanceId()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:MessageDetails/ns6:MessageID"/>
              </copy>
              <copy>
                <from expression="ora:getCurrentDateTime()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:MessageDetails/ns6:MessageDateTime"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('MESSAGE_TYPE')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:MessageDetails/ns6:MessageType"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('MESSAGE_VERSION')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:MessageDetails/ns6:MessageVersion"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('MESSAGE_OPERATION')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:MessageDetails/ns6:MessageOperation"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('SOURCE_SYSTEM_NAME')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:MessageDetails/ns6:MessageSourceSystem"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('SYSTEM_NAME')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:ProcessInfo/ns6:SystemName"/>
              </copy>
              <copy>
                <from expression="bpws:getVariableData('emailSubject')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns6:ODComnErrorStructure/ns6:ODComnErrorStructureList/ns6:ErrorDetails/ns6:ErrorDescription"/>
              </copy>
            </assign>
            <invoke name="InvokeCommonErrorLoggerToSendErrorData"
                    partnerLink="CommonErrorLoggingService"
                    portType="ns4:Produce_Message_ptt"
                    operation="Produce_Message" bpelx:invokeAsDetail="no"
                    inputVariable="invokeCommonErrorLoggerInputData"/>
          </sequence>
        </scope>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ValidateEmployeeProviderABCSImpl.wsdl) -->
    <receive name="receiveInput" partnerLink="validateemployeeproviderabcsimpl_client" portType="client:ValidateEmployeeProviderABCSImpl" operation="validateEmployeeDetails" variable="inputVariable" createInstance="yes"/>

    <!-- Generate reply to synchronous request -->
    <assign name="AssignEmployeeValidationServiceInput">
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns2:ValidateEmployeeRequestEBM/ns2:ValidateEmployeeRequestEBO/ns2:ODEmployeeID"/>
        <to variable="EmployeeValidationServiceInputVariable" part="parameter"
            query="/ns7:Get__CompIntfc__OD_CI_EMP_PWD_VAL/ns7:EMPLID"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns2:ValidateEmployeeRequestEBM/ns2:ValidateEmployeeRequestEBO/ns2:ODEmployeePassword"/>
        <to variable="EmployeeValidationServiceInputVariable" part="parameter"
            query="/ns7:Get__CompIntfc__OD_CI_EMP_PWD_VAL/ns7:OD_EMP_PWD"/>
      </copy>
    </assign>
    <scope name="Scope1">
      <bpelx:annotation>
        <bpelx:general>
          <bpelx:property name="userLabel">ScopeInvokeEmployeeValidationService</bpelx:property>
        </bpelx:general>
      </bpelx:annotation>
      <invoke name="invokeEmployeeValidationService"
              inputVariable="EmployeeValidationServiceInputVariable"
              outputVariable="EmployeeValidationServiceOutputVariable"
              partnerLink="EmployeeValidationService"
              portType="ns1:CI_OD_CI_EMP_PWD_VAL_PortType"
              operation="CI_OD_CI_EMP_PWD_VAL_G" bpelx:invokeAsDetail="no"/>
    </scope>
    <assign name="AssignEmployeeValidationServiceOutput">
      <copy>
        <from variable="EmployeeValidationServiceOutputVariable"
              part="parameter"
              query="/ns8:Get__CompIntfc__OD_CI_EMP_PWD_VALResponse/ns8:VAL_SOURCE_CHAR"/>
        <to variable="outputVariable" part="payload"
            query="/ns3:ValidateEmployeeResponseEBM/ns3:ValidateEmployeeResponseEBO/ns3:Result"/>
      </copy>
    </assign>
    <reply name="replySuccess" partnerLink="validateemployeeproviderabcsimpl_client" portType="client:ValidateEmployeeProviderABCSImpl" operation="validateEmployeeDetails" variable="outputVariable"/>
  </sequence>
</process>