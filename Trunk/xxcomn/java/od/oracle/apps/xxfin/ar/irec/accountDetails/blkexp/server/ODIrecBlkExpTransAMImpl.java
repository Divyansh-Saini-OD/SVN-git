/*===========================================================================+
 |   Copyright (c) 2001, 2005 Oracle Corporation, Redwood Shores, CA, USA    |
 |                         All rights reserved.                              |
 +===========================================================================+
 |  HISTORY                                                                  |
 | 1.0 12-Apr-17  Madhu Bolli     Defect#41464 - Bulk Export                 |
 +===========================================================================*/
 
package od.oracle.apps.xxfin.ar.irec.accountDetails.blkexp.server;

import java.sql.CallableStatement;
import java.sql.Types;
import java.text.SimpleDateFormat;

import oracle.apps.ar.irec.framework.IROAApplicationModuleImpl;
import oracle.apps.ar.irec.homepage.server.CPTemplateListingVOImpl;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OADBTransactionImpl;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;
import java.sql.Date;
import java.sql.SQLException;
import oracle.apps.fnd.cp.request.ConcurrentRequest;
import java.util.Vector;
import oracle.apps.fnd.cp.request.RequestSubmissionException;
import oracle.apps.fnd.framework.server.OADBTransaction;


import oracle.jbo.domain.Number;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ODIrecBlkExpTransAMImpl extends IROAApplicationModuleImpl
{
  /**This is the default constructor (do not remove)
   */
  public ODIrecBlkExpTransAMImpl()
  {
  }

  /**Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxfin.ar.irec.accountDetails.blkexp.server", /* package name */
      "ODIrecBlkExpTransAMLocal" /* Configuration Name */);
  }


  public void handleTrxTypeChangeEvent(String trxType) {
    String dataSourceCode = null;
    if (null == trxType || "INVOICES".equals(trxType))
        dataSourceCode = "ARI_INV_SEARCH";
    else if ("ALL_DEBIT_TRX".equals(trxType))
        dataSourceCode = "ARI_ADB_SEARCH";                                 
    else if ("ALL_TRX".equals(trxType))
        dataSourceCode = "ARI_ALLTRX_SEARCH";
        
    ((CPTemplateListingVOImpl)this.findViewObject("CPTemplateListingVO")).initQuery(dataSourceCode);            
  }

  public String submitBulkExport( String customerNumber, String customerId, String trxStatus, String trxType, String trxTemplate, String toEmail, String sAmtFrom, String sAmtTo, String sTrxDateFrom, String sTrxDateTo, String sDueDateFrom, String sDueDateTo)   
  {
  
    String result = "Default";
    try {
    OADBTransaction dbTrx = (OADBTransaction)getDBTransaction();
    java.sql.Connection Conn = dbTrx.getJdbcConnection();
    ConcurrentRequest concReq = new ConcurrentRequest(Conn);

    String pAppName = "XXFIN"; //Application that contains the concurrent program
    String pCpShortName = "XXARIRECTRXBULKEXPORT"; //Concurrent program name
    String pCpDesc = "BOD: AR iReceivables Transactions Bulk Export"; // concurrent Program description

    // Pass the Arguments using vector
      Vector pArgs = new Vector(); 
      pArgs.addElement(sTrxDateFrom); 
      pArgs.addElement(sTrxDateTo); 
      pArgs.addElement(sDueDateFrom); 
      pArgs.addElement(sDueDateTo);    
  

      pArgs.addElement(sAmtFrom);         
      pArgs.addElement(sAmtTo);         
        
      String nullValue = null;      
      pArgs.addElement(nullValue);  // session Id - currently sending as NULL
      pArgs.addElement(nullValue);  // Ship To Site Use Id - currently sending as NULL

      pArgs.addElement(customerNumber);
      pArgs.addElement(customerId);
      pArgs.addElement(trxStatus);
      pArgs.addElement(trxType);
      pArgs.addElement(trxTemplate);
      pArgs.addElement(toEmail);

      // Calling the Concurrent Program
      int xRequestId = concReq.submitRequest(pAppName, pCpShortName, pCpDesc, null, false, pArgs);
      dbTrx.commit();

      Number numRequestId = new Number(xRequestId);
      this.getOADBTransaction().putValue("BULK_EXP_REQUEST_ID",numRequestId);      
      result = "0";
    }
    catch (RequestSubmissionException e) {
           this.writeDiagnostics(this, "ODIrecBlkExpTransAMImpl.submitBulkExport() - XXARIRECTRXBULKEXPORT - CP Invocation faied with error "+e.getMessage(), 1);
           result = e.getMessage();
          // throw new OAException("Error in Bulk Export for Customer "+e.getMessage());
         }  
    return result;
    
  }
  
  /**Container's getter for ODIrecBlkExpStatusListVO
   */
  public OAViewObjectImpl getODIrecBlkExpStatusListVO()
  {
    return (OAViewObjectImpl)findViewObject("ODIrecBlkExpStatusListVO");
  }

  /**Container's getter for ODIrecBlkExpTrxTypeListVO
   */
  public OAViewObjectImpl getODIrecBlkExpTrxTypeListVO()
  {
    return (OAViewObjectImpl)findViewObject("ODIrecBlkExpTrxTypeListVO");
  }

  /**Container's getter for CPTemplateListingVO
   */
  public CPTemplateListingVOImpl getCPTemplateListingVO()
  {
    return (CPTemplateListingVOImpl)findViewObject("CPTemplateListingVO");
  }

  /**Container's getter for ODIrecBlkExpSrchVO
   */
  public OAViewObjectImpl getODIrecBlkExpSrchVO()
  {
    return (OAViewObjectImpl)findViewObject("ODIrecBlkExpSrchVO");
  }
}
