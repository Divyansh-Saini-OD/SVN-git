/*===========================================================================+
 |      		       Office Depot - Project Simplify                           |
 |                            Office Depot                                   | 
 +===========================================================================+
 |  FILENAME                                                                 |
 |             PODAMImpl.java                                                |
 |                                                                           |
 |  DESCRIPTION                                                              |
 |    Part of Proof of Deliver extension E0059 OA Framework screen           |
 |                                                                           |
 |  NOTES                                                                    |
 |                                                                           |
 |                                                                           |
 |  DEPENDENCIES                                                             |
 |    This class file is called from PODCO.java                              |
 |                                                                           |
 |  HISTORY                                                                  |
 |                                                                           |
 |    11/29/2006 Bushrod Thomas   Created                                    |
 |    1/3/2014   Sridevi K        Modified for Defect28643                   |
 +===========================================================================*/


package od.oracle.apps.xxfin.ar.pod.server;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
import java.sql.CallableStatement;
import java.sql.Types;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.OAFwkConstants;


//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class PODAMImpl extends OAApplicationModuleImpl 
{

  String sDevUrl = null;
  String sUrl = null;
  String sErrMsg = null;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public PODAMImpl()
  {
  }

  /**
   * 
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxfin.ar.pod.server", "PODAMLocal");
  }

  /**
   * 
   * Verifies user has responsibility needed to access POD
   * @return boolean true if logged in user has necessary access
   */
  public boolean ValidateSecurity()
  {
    OADBTransaction txn = getOADBTransaction();
    CallableStatement s = null;
    String sAuth = "N";
    try
    {
      s = txn.createCallableStatement("call XX_AR_POD_PKG.VALIDATE_POD_AUTH(?,?)",0);
      s.setInt(1,txn.getUserId());
      s.registerOutParameter(2,Types.VARCHAR);
      s.execute();

      if (s != null) {
        sAuth = s.getString(2);
        s.close();
      }
    }
    catch(Exception ex)
    {
      try {if (s != null) s.close();}
      catch(Exception ex2) {};
    }
    return (sAuth.equals("Y"));
  }

  /**
   * 
   * Retrieves relevant information about the sale needed to find the POD
   * @param sInvoiceID the id used to locate the order
   * @return  concatenation of spc number and document reference info, with pipe delimiter
   */
  public String GetSaleInfo(String sInvoiceID)
  {
    OADBTransaction txn = getOADBTransaction();
    CallableStatement s = null;
    String sSPC = "";
    String sDocRef = "";
    try
    {
      s = txn.createCallableStatement("call XX_AR_POD_PKG.GET_ORDER_INFO(?,?,?)",0);
      //s.setInt(1,txn.getUserId());
      s.setString(1,sInvoiceID);
      s.registerOutParameter(2,Types.VARCHAR);
      s.registerOutParameter(3,Types.VARCHAR);

      s.execute();

      if (s != null) {
        sSPC = s.getString(2);
        sDocRef = s.getString(3);
        s.close();
      }
    }
    catch(Exception ex)
    {
      try {if (s != null) s.close();}
      catch(Exception ex2) {};
    }
    return (sSPC.trim() + "|" + sDocRef.trim());
  }

  /**
   * 
   * Logs error message in XX_COM_ERROR_LOG and returns translated fnd error message
   * @param sMessageName the fnd message name
   * @param sLocation name of procedure where error happened
   * @param sInvoiceID the id used to locate the order
   * @param sSeverity how serious was the error (eg, warning, error, fatal, etc)
   * @return translated error message
   */
  public String GetErrorMessage(String sMessageName, String sLocation, String sInvoiceID, String sSeverity, String sFallback)
  {
    OADBTransaction txn = getOADBTransaction();
    CallableStatement s = null;
    String sMessage = sFallback;
    try
    {
      s = txn.createCallableStatement("call XX_AR_POD_PKG.LOG_ERROR(?,?,?,?,?,?)",0);
      s.setString(1,sMessageName);
      s.setInt(2,txn.getUserId());
      s.setString(3,sLocation);
      s.setString(4,sInvoiceID);
      s.setString(5,sSeverity);
      s.registerOutParameter(6,Types.VARCHAR);

      s.execute();

      if (s != null) {
        sMessage = s.getString(6);
        if (sMessage.equals(sMessageName) && sFallback!=null) sMessage = sFallback;
        s.close();
      }
    }
    catch(Exception ex)
    {
      try {if (s != null) s.close();}
      catch(Exception ex2) {};
    }
    return sMessage;
  }


 /**
   * 
   * For fetching POD url
   * 
   */
  public void getPODURL()
  {
    OADBTransaction txn = getOADBTransaction();
	txn.writeDiagnostics(this, "Start getPODURL", 
                               OAFwkConstants.STATEMENT);

    CallableStatement s = null;
    try
    {
   	 txn.writeDiagnostics(this, "calling XX_AR_POD_PKG.GET_PODURL", 
                               OAFwkConstants.STATEMENT);

	  s = txn.createCallableStatement("call XX_AR_POD_PKG.GET_PODURL(?,?,?)",0);
      s.registerOutParameter(1,Types.VARCHAR);
	  s.registerOutParameter(2,Types.VARCHAR);
	  s.registerOutParameter(3,Types.VARCHAR);
      s.execute();
	  txn.writeDiagnostics(this, "after execute", 
                               OAFwkConstants.STATEMENT);


      if (s != null) {

        txn.writeDiagnostics(this, "s not null", 
                               OAFwkConstants.STATEMENT);
	    this.sDevUrl = s.getString(1);
        this.sUrl = s.getString(2);
		this.sErrMsg = s.getString(3);

		
        s.close();
      }

	  txn.writeDiagnostics(this, "after getting "+sDevUrl+":"+sUrl+":"+sErrMsg, 
                               OAFwkConstants.STATEMENT);
    }
    catch(Exception e)
    {
      throw OAException.wrapperException(e);
    }
    finally
    {
     try
      {
       s.close();
      }
      catch(Exception e)
      {
       throw OAException.wrapperException(e);
      }
    }

  }

  public String getDevUrl()
  {
	  return this.sDevUrl;
  }

 public String getUrl()
  {
	  return this.sUrl;
  }

   public String getErrMsg()
  {
	  return this.sErrMsg;
  }


}