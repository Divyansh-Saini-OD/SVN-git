package od.oracle.apps.xxfin.ap.oie.server;
import oracle.apps.ap.oie.server.ExpenseReportHeadersVORowImpl;
import oracle.apps.ap.oie.server.ExpensesAMImpl;
import oracle.apps.ap.oie.utility.OIEUtil;
import oracle.apps.fnd.framework.OAException;

import oracle.apps.fnd.framework.server.OADBTransactionImpl;

import oracle.apps.fnd.framework.webui.OAPageContext;
import oracle.apps.fnd.framework.webui.beans.OAWebBean;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODExpenseReportHeadersVORowImpl extends ExpenseReportHeadersVORowImpl
{
;


  protected static final int MAXATTRCONST = oracle.jbo.server.ViewDefImpl.getMaxAttrConst("oracle.apps.ap.oie.server.ExpenseReportHeadersVO");;
  protected static final int SMISSINGRECEIPTS = MAXATTRCONST;
  protected static final int BMISSINGRECEIPTS = MAXATTRCONST + 1;


  public ODExpenseReportHeadersVORowImpl()
  {
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute sMissingReceipts
   */
  public String getsMissingReceipts()
  {
    return (String)getAttributeInternal(SMISSINGRECEIPTS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute sMissingReceipts
   */
  public void setsMissingReceipts(String value)
  {
    setAttributeInternal(SMISSINGRECEIPTS, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute bMissingReceipts
   */
  public Boolean getbMissingReceipts()
  {
    if (getsMissingReceipts().equals("Y")) return Boolean.TRUE;
    else return Boolean.FALSE;
  }

  public void setbMissingReceipts(Boolean value)
  {
    setAttributeInternal(BMISSINGRECEIPTS, value);
  }

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    if (index == SMISSINGRECEIPTS)
    {
      return getsMissingReceipts();
    }
    if (index == BMISSINGRECEIPTS)
    {
      return getbMissingReceipts();
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    super.setAttrInvokeAccessor(index, value, attrDef);
    return;
  }

    public void defaultApproverDetails(Number number)
    {
        super.defaultApproverDetails(number);
        Number setApprId = getOverrideApproverId();
        ExpensesAMImpl expensesamimpl = (ExpensesAMImpl)getApplicationModule();
        OADBTransactionImpl trxnImpl = (OADBTransactionImpl)expensesamimpl.getOADBTransaction();
        Number loggedInEmpId = OIEUtil.getEmployeeId(trxnImpl);
        putLog(trxnImpl, "ODExpenseReportHeadersVORowImpl.defaultApproverDetails() - setApprId is "+setApprId, 3);
        putLog(trxnImpl, "ODExpenseReportHeadersVORowImpl.defaultApproverDetails() - loggedInEmpId is "+loggedInEmpId, 3);
        if(setApprId != null && loggedInEmpId != null) {
            if (loggedInEmpId.intValue() == setApprId.intValue()) {
                super.defaultApproverDetails(loggedInEmpId);
                putLog(trxnImpl, "ODExpenseReportHeadersVORowImpl.defaultApproverDetails() - New Approver Id is s"+getOverrideApproverId(), 3);
            }
        }       
    }  

    public void putLog(OADBTransactionImpl trxn, Object o,
                       int i) {
        String msg = "";
        if (o != null) {
            msg = o.toString();
        }
        if(trxn.isLoggingEnabled(i)) {
            trxn.writeDiagnostics(this, msg, i);
        }
    }      
}