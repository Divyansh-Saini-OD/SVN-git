package od.oracle.apps.xxfin.icx.server;

import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Number;
import java.sql.CallableStatement;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.jbo.server.ApplicationModuleImpl;
//import java.sql.PreparedStatement;
//import java.sql.ResultSet;
//import oracle.apps.fnd.framework.OAException;
//import java.sql.Connection;
//import java.sql.DriverManager;


//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ICXCatsAMImpl extends OAApplicationModuleImpl 
{
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ICXCatsAMImpl()
  {
  }

  /**
   * 
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxfin.icx.server", "ICXCatsAMLocal");
  }



  public void apply()
  {
    CategoryAttributesVOImpl vo = getCategoryAttributesVO1();
    if (vo.isDirty()) {
      int fetchedRowCount = vo.getFetchedRowCount();
      if (fetchedRowCount>0) 
      {
        CategoryAttributesVORowImpl row = null;
        RowSetIterator rowIter = vo.createRowSetIterator("saveIter");
        rowIter.setRangeStart(0);
        rowIter.setRangeSize(fetchedRowCount);


        OADBTransaction txn = getOADBTransaction();
        int userId = txn.getUserId();
        int loginId = txn.getLoginId();
        
        try 
        {
          for (int i = 0; i < fetchedRowCount; i++) 
          {
            row = (CategoryAttributesVORowImpl)rowIter.getRowAtRangeIndex(i);
            if (row.isDirty())
            {
              String buyer = row.getBuyername();
              String approver = row.getApprovername();
              Number org = row.getOrganizationId();
              Number cat = row.getCategoryId();
              updateCatAtts(org,cat,buyer,approver,userId,loginId);
            }
          }
        }
        finally
        {
           rowIter.closeRowSetIterator();          
        }
      }
      vo.executeQuery();
    }
    //getTransaction().commit();
  }

  private void updateCatAtts(Number org, Number cat, String buyer, String approver, int userId, int loginId) 
  {
    OADBTransaction txn = getOADBTransaction();
    CallableStatement s = null;
    try
    {
      s = txn.createCallableStatement("call xx_icx_cat_atts_pkg.load_row(?,?,?,?,?,?)",0);
      s.setLong(1,org.longValue());
      s.setLong(2,cat.longValue());
      s.setString(3,buyer);
      s.setString(4,approver);
      s.setInt(5,userId);
      s.setInt(6,loginId);
      s.execute();

      if (s != null) s.close();
    }
    catch(Exception ex)
    {
      try {if (s != null) s.close();}
      catch(Exception ex2) {};
    }
  }

  /**
   * 
   * Container's getter for CategoryAttributesVO1
   */
  public CategoryAttributesVOImpl getCategoryAttributesVO1()
  {
    return (CategoryAttributesVOImpl)findViewObject("CategoryAttributesVO1");
  }



/*
  private void updateCatAttsX(Number org, Number cat, String buyer, String approver, int userId, int loginId) 
  {
    String dbname = "gsidev02"; //request.getParameter("database");
    String user = "apps";   //request.getParameter("username");
    String pswd = "Dev02apps";   //request.getParameter("password");
    String host = "choldbr13d";   //request.getParameter("host");
    String port = "1541";   //request.getParameter("port");
    String connStr="jdbc:oracle:thin:"+user+"/"+pswd+"@"+host+":"+port+":"+dbname;
    try
    {
      DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
      Connection conn = DriverManager.getConnection (connStr, user, pswd);
      CallableStatement s = null;      
      if (conn != null)
      {
//            PreparedStatement stmt = null;
//            ResultSet rs = null;
            try
            {
//              stmt = conn.prepareStatement("xx_icx_cat_atts_pkg.load_row(" + org + "," + cat + ",441,445)");
//              stmt = conn.prepareStatement("xx_icx_cat_atts_pkg.load_row(141,167,441,445)");
              //stmt.setString(1,user.toUpperCase());
              //rs = stmt.executeQuery();
  //            stmt.execute

//              String sql = "xx_icx_cat_atts_pkg.load_row(" + org.toString() + "," + cat.toString() + ",441,445)";
//              stmt = conn.prepareCall(sql);
//              rs = stmt.executeQuery();

//              CallableStatement s = conn.prepareCall("call xx_icx_cat_atts_pkg.load_row(" + org.toString() + "," + cat.toString() + ",'" + buyer + "','" + approver + "'");
              s = conn.prepareCall("call xx_icx_cat_atts_pkg.load_row(?,?,?,?,?,?)");
              s.setLong(1,org.longValue());
              s.setLong(2,cat.longValue());
              s.setString(3,buyer);
              s.setString(4,approver);
              s.setInt(5,userId);
              s.setInt(6,loginId);
              s.execute();

              if (s != null) s.close();
              //conn.commit();
              //if(rs != null) rs.close();
              //stmt.close();
            }
            catch(Exception ex)
            {
              if (s != null) s.close();
//            if(rs != null) rs.close();
//            if(stmt != null) stmt.close();
            }
            conn.close();
            return;

//        String sql = "select lower(host_name) || '_' || lower(instance_name) from v$instance";
//        stmt = conn.prepareCall(sql);
//        rs = stmt.executeQuery();
//        if(rs.next()) {
//          out.println("JDBC driver version: " + conn.getMetaData().getDriverVersion() + "<br>");
//          out.println("DATABASE_ID: " + rs.getString(1) + "<p>");
//        }

      }
    }
    catch(Exception ex)
    {
    }
  }
*/

}

