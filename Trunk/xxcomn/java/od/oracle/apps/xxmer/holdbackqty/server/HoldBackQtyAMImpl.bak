package od.oracle.apps.xxmer.holdbackqty.server;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.common.MessageToken;       //added
import oracle.apps.fnd.framework.OAViewObject;    //added
import oracle.jbo.Row;   //added


//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class HoldBackQtyAMImpl extends OAApplicationModuleImpl 
{
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public HoldBackQtyAMImpl()
  {
  }

  /**
   * 
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxmer.holdbackqty.server", "HoldBackQtyAMLocal");
  }

  /**
   * 
   * Container's getter for HoldBackQtyListVO1
   */
  public HoldBackQtyListVOImpl getHoldBackQtyListVO1()
  {
    return (HoldBackQtyListVOImpl)findViewObject("HoldBackQtyListVO1");
  }
  public void initHoldBackQtyList()
  {
    HoldBackQtyListVOImpl vo = getHoldBackQtyListVO1();
    if (vo==null)
    {
      MessageToken[] errTokens = {new MessageToken("OBJECT_NAME","HoldBackQtyListVO1")};
      throw new
      OAException("XXMER","XXMER_HB_OBJECT_NOT_FOUND",errTokens);
    }
    vo.initQuery();
  }

  /**
   * 
   * Container's getter for HoldBackQtyVO1
   */
  public HoldBackQtyVOImpl getHoldBackQtyVO1()
  {
    return (HoldBackQtyVOImpl)findViewObject("HoldBackQtyVO1");
  }

  public void createHoldBackQty()
  {

   System.out.println("createHoldBackQty called");
    OAViewObject vo = (OAViewObject)getHoldBackQtyListVO1();
   if(vo.getFetchedRowCount()==0){
      vo.executeQuery();
     }

    Row row = vo.createRow();
    vo.insertRow(row);

    // Required per OA Framework Model Coding Standard M69
    row.setNewRowState(Row.STATUS_INITIALIZED);

  } // end createHoldBackQty()

  public void apply()
  {
    getTransaction().commit();
  }//end apply()

}