package od.oracle.apps.xxmer.holdbackqty.server;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class HoldBackQtyListVORowImpl extends OAViewRowImpl 
{


  protected static final int ITEM = 0;
  protected static final int DESCRIPTION = 1;
  protected static final int DEPT = 2;
  protected static final int CLASSS = 3;
  protected static final int SUBCLASS = 4;
  protected static final int SOURCELOCATION = 5;
  protected static final int HOLDQUANTITY = 6;
  protected static final int QTYONHAND = 7;
  protected static final int STARTDATE = 8;
  protected static final int ENDDATE = 9;
  protected static final int LASTUPDATEDATE = 10;
  protected static final int LASTUPDATEDBY = 11;
  protected static final int CREATIONDATE = 12;
  protected static final int CREATEDBY = 13;
  protected static final int LASTUPDATELOGIN = 14;
  protected static final int WAREHOUSELOCATION = 15;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public HoldBackQtyListVORowImpl()
  {
  }

  /**
   * 
   * Gets OdHoldBackQtyEO entity object.
   */
  public od.oracle.apps.xxmer.schema.server.OdHoldBackQtyEOImpl getOdHoldBackQtyEO()
  {
    return (od.oracle.apps.xxmer.schema.server.OdHoldBackQtyEOImpl)getEntity(0);
  }

  /**
   * 
   * Gets the attribute value for ITEM using the alias name Item
   */
  public String getItem()
  {
    return (String)getAttributeInternal(ITEM);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ITEM using the alias name Item
   */
  public void setItem(String value)
  {
    setAttributeInternal(ITEM, value);
  }

  /**
   * 
   * Gets the attribute value for WAREHOUSE_LOCATION using the alias name WarehouseLocation
   */
  public String getWarehouseLocation()
  {
    return (String)getAttributeInternal(WAREHOUSELOCATION);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for WAREHOUSE_LOCATION using the alias name WarehouseLocation
   */
  public void setWarehouseLocation(String value)
  {
    setAttributeInternal(WAREHOUSELOCATION, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Dept
   */
  public String getDept()
  {
    return (String)getAttributeInternal(DEPT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Dept
   */
  public void setDept(String value)
  {
    setAttributeInternal(DEPT, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Classs
   */
  public String getClasss()
  {
    return (String)getAttributeInternal(CLASSS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Classs
   */
  public void setClasss(String value)
  {
    setAttributeInternal(CLASSS, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Subclass
   */
  public String getSubclass()
  {
    return (String)getAttributeInternal(SUBCLASS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Subclass
   */
  public void setSubclass(String value)
  {
    setAttributeInternal(SUBCLASS, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute SourceLocation
   */
  public String getSourceLocation()
  {
    return (String)getAttributeInternal(SOURCELOCATION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute SourceLocation
   */
  public void setSourceLocation(String value)
  {
    setAttributeInternal(SOURCELOCATION, value);
  }

  /**
   * 
   * Gets the attribute value for HOLD_QUANTITY using the alias name HoldQuantity
   */
  public Number getHoldQuantity()
  {
    return (Number)getAttributeInternal(HOLDQUANTITY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for HOLD_QUANTITY using the alias name HoldQuantity
   */
  public void setHoldQuantity(Number value)
  {
    setAttributeInternal(HOLDQUANTITY, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute QtyOnHand
   */
  public String getQtyOnHand()
  {
    return (String)getAttributeInternal(QTYONHAND);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute QtyOnHand
   */
  public void setQtyOnHand(String value)
  {
    setAttributeInternal(QTYONHAND, value);
  }

  /**
   * 
   * Gets the attribute value for START_DATE using the alias name StartDate
   */
  public Date getStartDate()
  {
    return (Date)getAttributeInternal(STARTDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for START_DATE using the alias name StartDate
   */
  public void setStartDate(Date value)
  {
    setAttributeInternal(STARTDATE, value);
  }

  /**
   * 
   * Gets the attribute value for END_DATE using the alias name EndDate
   */
  public Date getEndDate()
  {
    return (Date)getAttributeInternal(ENDDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for END_DATE using the alias name EndDate
   */
  public void setEndDate(Date value)
  {
    setAttributeInternal(ENDDATE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }


  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ITEM:
        return getItem();
      case DESCRIPTION:
        return getDescription();
      case DEPT:
        return getDept();
      case CLASSS:
        return getClasss();
      case SUBCLASS:
        return getSubclass();
      case SOURCELOCATION:
        return getSourceLocation();
      case HOLDQUANTITY:
        return getHoldQuantity();
      case QTYONHAND:
        return getQtyOnHand();
      case STARTDATE:
        return getStartDate();
      case ENDDATE:
        return getEndDate();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case WAREHOUSELOCATION:
        return getWarehouseLocation();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ITEM:
        setItem((String)value);
        return;
      case HOLDQUANTITY:
        setHoldQuantity((Number)value);
        return;
      case STARTDATE:
        setStartDate((Date)value);
        return;
      case ENDDATE:
        setEndDate((Date)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case WAREHOUSELOCATION:
        setWarehouseLocation((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Description
   */
  public String getDescription()
  {
    return (String)getAttributeInternal(DESCRIPTION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Description
   */
  public void setDescription(String value)
  {
    setAttributeInternal(DESCRIPTION, value);
  }



}