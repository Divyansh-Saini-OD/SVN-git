package od.oracle.apps.ar.hz.components.party.relationship.server;

import oracle.apps.ar.hz.components.party.relationship.server.HzPuiRelationshipTableVORowImpl;
import oracle.apps.ar.hz.components.party.relationship.server.HzPuiRelationshipsEOImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ODHzPuiRelationshipTableVORowImpl extends HzPuiRelationshipTableVORowImpl {


    public static final int MAXATTRCONST = oracle.jbo.server.ViewDefImpl.getMaxAttrConst("oracle.apps.ar.hz.components.party.relationship.server.HzPuiRelationshipTableVO");
    public static final int XXREADONLY = MAXATTRCONST;
    public static final int XXRENDERED = MAXATTRCONST + 1;

    /**This is the default constructor (do not remove)
     */
    public ODHzPuiRelationshipTableVORowImpl() {
    }

    /**Gets HzPuiRelationshipsEO entity object.
     */
    public HzPuiRelationshipsEOImpl getHzPuiRelationshipsEO() {
        return (HzPuiRelationshipsEOImpl)getEntity(0);
    }

    /**Gets the attribute value for the calculated attribute IsPrivilegeChecked
     */
    public String getIsPrivilegeChecked() {
        return super.getIsPrivilegeChecked();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute IsPrivilegeChecked
     */
    public void setIsPrivilegeChecked(String value) {
        super.setIsPrivilegeChecked(value);
    }

    /**Gets the attribute value for the calculated attribute UpdateImage
     */
    public String getUpdateImage() {
        return super.getUpdateImage();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute UpdateImage
     */
    public void setUpdateImage(String value) {
        super.setUpdateImage(value);
    }

    /**Gets the attribute value for the calculated attribute DeleteImage
     */
    public String getDeleteImage() {
        return super.getDeleteImage();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DeleteImage
     */
    public void setDeleteImage(String value) {
        super.setDeleteImage(value);
    }

    /**Gets the attribute value for the calculated attribute RestoreImage
     */
    public String getRestoreImage() {
        return super.getRestoreImage();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute RestoreImage
     */
    public void setRestoreImage(String value) {
        super.setRestoreImage(value);
    }

    /**Gets the attribute value for the calculated attribute IsFormatted
     */
    public String getIsFormatted() {
        return super.getIsFormatted();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute IsFormatted
     */
    public void setIsFormatted(String value) {
        super.setIsFormatted(value);
    }

    /**Gets the attribute value for the calculated attribute FormattedPhone
     */
    public String getFormattedPhone() {
        return super.getFormattedPhone();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute FormattedPhone
     */
    public void setFormattedPhone(String value) {
        super.setFormattedPhone(value);
    }

    /**Gets the attribute value for the calculated attribute FormattedAddress
     */
    public String getFormattedAddress() {
        return super.getFormattedAddress();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute FormattedAddress
     */
    public void setFormattedAddress(String value) {
        super.setFormattedAddress(value);
    }

    /**Gets the attribute value for the calculated attribute OrgContactRoles
     */
    public String getOrgContactRoles() {
        return super.getOrgContactRoles();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute OrgContactRoles
     */
    public void setOrgContactRoles(String value) {
        super.setOrgContactRoles(value);
    }

    /**Gets the attribute value for the calculated attribute SelectFlag
     */
    public String getSelectFlag() {
        return super.getSelectFlag();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SelectFlag
     */
    public void setSelectFlag(String value) {
        super.setSelectFlag(value);
    }

    /**Gets the attribute value for the calculated attribute ActContactRoles
     */
    public String getActContactRoles() {
        return super.getActContactRoles();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ActContactRoles
     */
    public void setActContactRoles(String value) {
        super.setActContactRoles(value);
    }

    /**Gets the attribute value for the calculated attribute DoNotCallIndicator
     */
    public String getDoNotCallIndicator() {
        return super.getDoNotCallIndicator();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DoNotCallIndicator
     */
    public void setDoNotCallIndicator(String value) {
        super.setDoNotCallIndicator(value);
    }

    /**Gets the attribute value for the calculated attribute IsRoleInRelationshipGroup
     */
    public String getIsRoleInRelationshipGroup() {
        return super.getIsRoleInRelationshipGroup();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute IsRoleInRelationshipGroup
     */
    public void setIsRoleInRelationshipGroup(String value) {
        super.setIsRoleInRelationshipGroup(value);
    }

    /**Gets the attribute value for the calculated attribute BillTo_primary
     */
    public String getBillTo_primary() {
        return super.getBillTo_primary();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute BillTo_primary
     */
    public void setBillTo_primary(String value) {
        super.setBillTo_primary(value);
    }

    /**Gets the attribute value for RELATIONSHIP_ID using the alias name RelationshipId
     */
    public Number getRelationshipId() {
        return super.getRelationshipId();
    }

    /**Sets <code>value</code> as attribute value for RELATIONSHIP_ID using the alias name RelationshipId
     */
    public void setRelationshipId(Number value) {
        super.setRelationshipId(value);
    }

    /**Gets the attribute value for DIRECTIONAL_FLAG using the alias name DirectionalFlag
     */
    public String getDirectionalFlag() {
        return super.getDirectionalFlag();
    }

    /**Sets <code>value</code> as attribute value for DIRECTIONAL_FLAG using the alias name DirectionalFlag
     */
    public void setDirectionalFlag(String value) {
        super.setDirectionalFlag(value);
    }

    /**Gets the attribute value for SUBJECT_ID using the alias name SubjectId
     */
    public Number getSubjectId() {
        return super.getSubjectId();
    }

    /**Sets <code>value</code> as attribute value for SUBJECT_ID using the alias name SubjectId
     */
    public void setSubjectId(Number value) {
        super.setSubjectId(value);
    }

    /**Gets the attribute value for SUBJECT_TYPE using the alias name SubjectType
     */
    public String getSubjectType() {
        return super.getSubjectType();
    }

    /**Sets <code>value</code> as attribute value for SUBJECT_TYPE using the alias name SubjectType
     */
    public void setSubjectType(String value) {
        super.setSubjectType(value);
    }

    /**Gets the attribute value for SUBJECT_TABLE_NAME using the alias name SubjectTableName
     */
    public String getSubjectTableName() {
        return super.getSubjectTableName();
    }

    /**Sets <code>value</code> as attribute value for SUBJECT_TABLE_NAME using the alias name SubjectTableName
     */
    public void setSubjectTableName(String value) {
        super.setSubjectTableName(value);
    }

    /**Gets the attribute value for OBJECT_ID using the alias name ObjectId
     */
    public Number getObjectId() {
        return super.getObjectId();
    }

    /**Sets <code>value</code> as attribute value for OBJECT_ID using the alias name ObjectId
     */
    public void setObjectId(Number value) {
        super.setObjectId(value);
    }

    /**Gets the attribute value for OBJECT_TYPE using the alias name ObjectType
     */
    public String getObjectType() {
        return super.getObjectType();
    }

    /**Sets <code>value</code> as attribute value for OBJECT_TYPE using the alias name ObjectType
     */
    public void setObjectType(String value) {
        super.setObjectType(value);
    }

    /**Gets the attribute value for OBJECT_TABLE_NAME using the alias name ObjectTableName
     */
    public String getObjectTableName() {
        return super.getObjectTableName();
    }

    /**Sets <code>value</code> as attribute value for OBJECT_TABLE_NAME using the alias name ObjectTableName
     */
    public void setObjectTableName(String value) {
        super.setObjectTableName(value);
    }

    /**Gets the attribute value for PARTY_ID using the alias name RelationshipPartyId
     */
    public Number getRelationshipPartyId() {
        return super.getRelationshipPartyId();
    }

    /**Sets <code>value</code> as attribute value for PARTY_ID using the alias name RelationshipPartyId
     */
    public void setRelationshipPartyId(Number value) {
        super.setRelationshipPartyId(value);
    }

    /**Gets the attribute value for RELATIONSHIP_TYPE using the alias name RelationshipType
     */
    public String getRelationshipType() {
        return super.getRelationshipType();
    }

    /**Sets <code>value</code> as attribute value for RELATIONSHIP_TYPE using the alias name RelationshipType
     */
    public void setRelationshipType(String value) {
        super.setRelationshipType(value);
    }

    /**Gets the attribute value for RELATIONSHIP_CODE using the alias name RelationshipCode
     */
    public String getRelationshipCode() {
        return super.getRelationshipCode();
    }

    /**Sets <code>value</code> as attribute value for RELATIONSHIP_CODE using the alias name RelationshipCode
     */
    public void setRelationshipCode(String value) {
        super.setRelationshipCode(value);
    }

    /**Gets the attribute value for START_DATE using the alias name StartDate
     */
    public Date getStartDate() {
        return super.getStartDate();
    }

    /**Sets <code>value</code> as attribute value for START_DATE using the alias name StartDate
     */
    public void setStartDate(Date value) {
        super.setStartDate(value);
    }

    /**Gets the attribute value for END_DATE using the alias name EndDate
     */
    public Date getEndDate() {
        return super.getEndDate();
    }

    /**Sets <code>value</code> as attribute value for END_DATE using the alias name EndDate
     */
    public void setEndDate(Date value) {
        super.setEndDate(value);
    }

    /**Gets the attribute value for COMMENTS using the alias name Comments
     */
    public String getComments() {
        return super.getComments();
    }

    /**Sets <code>value</code> as attribute value for COMMENTS using the alias name Comments
     */
    public void setComments(String value) {
        super.setComments(value);
    }

    /**Gets the attribute value for STATUS using the alias name Status
     */
    public String getStatus() {
        return super.getStatus();
    }

    /**Sets <code>value</code> as attribute value for STATUS using the alias name Status
     */
    public void setStatus(String value) {
        super.setStatus(value);
    }

    /**Gets the attribute value for ACTUAL_CONTENT_SOURCE using the alias name ActualContentSource
     */
    public String getActualContentSource() {
        return super.getActualContentSource();
    }

    /**Sets <code>value</code> as attribute value for ACTUAL_CONTENT_SOURCE using the alias name ActualContentSource
     */
    public void setActualContentSource(String value) {
        super.setActualContentSource(value);
    }

    /**Gets the attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return super.getObjectVersionNumber();
    }

    /**Sets <code>value</code> as attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber
     */
    public void setObjectVersionNumber(Number value) {
        super.setObjectVersionNumber(value);
    }

    /**Gets the attribute value for CREATED_BY_MODULE using the alias name CreatedByModule
     */
    public String getCreatedByModule() {
        return super.getCreatedByModule();
    }

    /**Sets <code>value</code> as attribute value for CREATED_BY_MODULE using the alias name CreatedByModule
     */
    public void setCreatedByModule(String value) {
        super.setCreatedByModule(value);
    }

    /**Gets the attribute value for APPLICATION_ID using the alias name ApplicationId
     */
    public Number getApplicationId() {
        return super.getApplicationId();
    }

    /**Sets <code>value</code> as attribute value for APPLICATION_ID using the alias name ApplicationId
     */
    public void setApplicationId(Number value) {
        super.setApplicationId(value);
    }

    /**Gets the attribute value for the calculated attribute SubjectPartyName
     */
    public String getSubjectPartyName() {
        return super.getSubjectPartyName();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SubjectPartyName
     */
    public void setSubjectPartyName(String value) {
        super.setSubjectPartyName(value);
    }

    /**Gets the attribute value for the calculated attribute SubjectPartyNumber
     */
    public String getSubjectPartyNumber() {
        return super.getSubjectPartyNumber();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SubjectPartyNumber
     */
    public void setSubjectPartyNumber(String value) {
        super.setSubjectPartyNumber(value);
    }

    /**Gets the attribute value for the calculated attribute SubjectPartyKnownAs
     */
    public String getSubjectPartyKnownAs() {
        return super.getSubjectPartyKnownAs();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SubjectPartyKnownAs
     */
    public void setSubjectPartyKnownAs(String value) {
        super.setSubjectPartyKnownAs(value);
    }

    /**Gets the attribute value for the calculated attribute ObjectPartyName
     */
    public String getObjectPartyName() {
        return super.getObjectPartyName();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ObjectPartyName
     */
    public void setObjectPartyName(String value) {
        super.setObjectPartyName(value);
    }

    /**Gets the attribute value for the calculated attribute ObjectPartyNumber
     */
    public String getObjectPartyNumber() {
        return super.getObjectPartyNumber();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ObjectPartyNumber
     */
    public void setObjectPartyNumber(String value) {
        super.setObjectPartyNumber(value);
    }

    /**Gets the attribute value for the calculated attribute ObjectPartyKnownAs
     */
    public String getObjectPartyKnownAs() {
        return super.getObjectPartyKnownAs();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ObjectPartyKnownAs
     */
    public void setObjectPartyKnownAs(String value) {
        super.setObjectPartyKnownAs(value);
    }

    /**Gets the attribute value for the calculated attribute RelationshipTypeId
     */
    public Number getRelationshipTypeId() {
        return super.getRelationshipTypeId();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute RelationshipTypeId
     */
    public void setRelationshipTypeId(Number value) {
        super.setRelationshipTypeId(value);
    }

    /**Gets the attribute value for the calculated attribute RelationshipRole
     */
    public String getRelationshipRole() {
        return super.getRelationshipRole();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute RelationshipRole
     */
    public void setRelationshipRole(String value) {
        super.setRelationshipRole(value);
    }

    /**Gets the attribute value for the calculated attribute SubjectTypeMeaning
     */
    public String getSubjectTypeMeaning() {
        return super.getSubjectTypeMeaning();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SubjectTypeMeaning
     */
    public void setSubjectTypeMeaning(String value) {
        super.setSubjectTypeMeaning(value);
    }

    /**Gets the attribute value for the calculated attribute ObjectTypeMeaning
     */
    public String getObjectTypeMeaning() {
        return super.getObjectTypeMeaning();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ObjectTypeMeaning
     */
    public void setObjectTypeMeaning(String value) {
        super.setObjectTypeMeaning(value);
    }

    /**Gets the attribute value for the calculated attribute RelationshipRoleMeaning
     */
    public String getRelationshipRoleMeaning() {
        return super.getRelationshipRoleMeaning();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute RelationshipRoleMeaning
     */
    public void setRelationshipRoleMeaning(String value) {
        super.setRelationshipRoleMeaning(value);
    }

    /**Gets the attribute value for the calculated attribute PartyNameSwitcher
     */
    public String getPartyNameSwitcher() {
        return super.getPartyNameSwitcher();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute PartyNameSwitcher
     */
    public void setPartyNameSwitcher(String value) {
        super.setPartyNameSwitcher(value);
    }

    /**Gets the attribute value for the calculated attribute RelationshipRoleSwitcher
     */
    public String getRelationshipRoleSwitcher() {
        return super.getRelationshipRoleSwitcher();
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute RelationshipRoleSwitcher
     */
    public void setRelationshipRoleSwitcher(String value) {
        super.setRelationshipRoleSwitcher(value);
    }

    /**Gets the attribute value for PARTY_OBJECT_VER_NUM using the alias name PartyObjectVerNum
     */
    public Number getPartyObjectVerNum() {
        return super.getPartyObjectVerNum();
    }

    /**Sets <code>value</code> as attribute value for PARTY_OBJECT_VER_NUM using the alias name PartyObjectVerNum
     */
    public void setPartyObjectVerNum(Number value) {
        super.setPartyObjectVerNum(value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if (index == XXREADONLY) {
            return getXXReadOnly();
        }
        if (index == XXRENDERED) {
            return getXXRendered();
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if (index == XXREADONLY) {
            setXXReadOnly((Boolean)value);
            return;
        }
        if (index == XXRENDERED) {
            setXXRendered((Boolean)value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
    }

    /**Gets the attribute value for the calculated attribute XXReadOnly
     */
    public Boolean getXXReadOnly() {
        //return (Boolean) getAttributeInternal(XXREADONLY);
         if("Group Sub Parent".equals(this.getRelationshipRoleMeaning()) || "Group Sub Member".equals(this.getRelationshipRoleMeaning()))
         {
             setXXReadOnly(Boolean.TRUE);
             return Boolean.TRUE;
         }
         else
         {
             setXXReadOnly(Boolean.FALSE);
             return Boolean.FALSE;
         }
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute XXReadOnly
     */
    public void setXXReadOnly(Boolean value) {
        setAttributeInternal(XXREADONLY, value);
    }

    /**Gets the attribute value for the calculated attribute XXRendered
     */
    public Boolean getXXRendered() {
        //return (Boolean) getAttributeInternal(XXRENDERED);
         if("Group Sub Parent".equals(this.getRelationshipRoleMeaning()) || "Group Sub Member".equals(this.getRelationshipRoleMeaning()))
         {
             setXXRendered(Boolean.FALSE);
             return Boolean.FALSE;
         }
         else
         {
             setXXRendered(Boolean.TRUE);
             return Boolean.TRUE;
         }
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute XXRendered
     */
    public void setXXRendered(Boolean value) {
        setAttributeInternal(XXRENDERED, value);
    }
}
