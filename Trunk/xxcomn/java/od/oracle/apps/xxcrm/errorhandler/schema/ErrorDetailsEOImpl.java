package od.oracle.apps.xxcrm.errorhandler.schema;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ErrorDetailsEOImpl extends OAEntityImpl 
{
  protected static final int ERRORLOGID = 0;
  protected static final int APPLICATIONNAME = 1;
  protected static final int PROGRAMTYPE = 2;
  protected static final int PROGRAMNAME = 3;
  protected static final int PROGRAMID = 4;
  protected static final int MODULENAME = 5;
  protected static final int ERRORLOCATION = 6;
  protected static final int ERRORMESSAGECOUNT = 7;
  protected static final int ERRORMESSAGECODE = 8;
  protected static final int ERRORMESSAGE = 9;
  protected static final int ERRORMESSAGESEVERITY = 10;
  protected static final int ERRORSTATUSFLAG = 11;
  protected static final int NOTIFYFLAG = 12;
  protected static final int RECIPIENT = 13;
  protected static final int OBJECTTYPE = 14;
  protected static final int OBJECTID = 15;
  protected static final int ATTRIBUTE1 = 16;
  protected static final int ATTRIBUTE2 = 17;
  protected static final int ATTRIBUTE3 = 18;
  protected static final int ATTRIBUTE4 = 19;
  protected static final int ATTRIBUTE5 = 20;
  protected static final int ATTRIBUTE6 = 21;
  protected static final int ATTRIBUTE7 = 22;
  protected static final int ATTRIBUTE8 = 23;
  protected static final int ATTRIBUTE9 = 24;
  protected static final int ATTRIBUTE10 = 25;
  protected static final int ATTRIBUTE11 = 26;
  protected static final int ATTRIBUTE12 = 27;
  protected static final int ATTRIBUTE13 = 28;
  protected static final int ATTRIBUTE14 = 29;
  protected static final int ATTRIBUTE15 = 30;
  protected static final int ATTRIBUTE16 = 31;
  protected static final int ATTRIBUTE17 = 32;
  protected static final int ATTRIBUTE18 = 33;
  protected static final int ATTRIBUTE19 = 34;
  protected static final int ATTRIBUTE20 = 35;
  protected static final int CREATIONDATE = 36;
  protected static final int CREATEDBY = 37;
  protected static final int LASTUPDATEDATE = 38;
  protected static final int LASTUPDATELOGIN = 39;
  protected static final int LASTUPDATEDBY = 40;
  protected static final int ROWID = 41;

  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ErrorDetailsEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxcrm.errorhandler.schema.ErrorDetailsEO");
    }
    return mDefinitionObject;
  }


  /**
   * 
   * Gets the attribute value for ErrorLogId, using the alias name ErrorLogId
   */
  public Number getErrorLogId()
  {
    return (Number)getAttributeInternal(ERRORLOGID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ErrorLogId
   */
  public void setErrorLogId(Number value)
  {
    setAttributeInternal(ERRORLOGID, value);
  }

  /**
   * 
   * Gets the attribute value for ApplicationName, using the alias name ApplicationName
   */
  public String getApplicationName()
  {
    return (String)getAttributeInternal(APPLICATIONNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ApplicationName
   */
  public void setApplicationName(String value)
  {
    setAttributeInternal(APPLICATIONNAME, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramType, using the alias name ProgramType
   */
  public String getProgramType()
  {
    return (String)getAttributeInternal(PROGRAMTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramType
   */
  public void setProgramType(String value)
  {
    setAttributeInternal(PROGRAMTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramName, using the alias name ProgramName
   */
  public String getProgramName()
  {
    return (String)getAttributeInternal(PROGRAMNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramName
   */
  public void setProgramName(String value)
  {
    setAttributeInternal(PROGRAMNAME, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramId, using the alias name ProgramId
   */
  public Number getProgramId()
  {
    return (Number)getAttributeInternal(PROGRAMID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramId
   */
  public void setProgramId(Number value)
  {
    setAttributeInternal(PROGRAMID, value);
  }

  /**
   * 
   * Gets the attribute value for ModuleName, using the alias name ModuleName
   */
  public String getModuleName()
  {
    return (String)getAttributeInternal(MODULENAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ModuleName
   */
  public void setModuleName(String value)
  {
    setAttributeInternal(MODULENAME, value);
  }

  /**
   * 
   * Gets the attribute value for ErrorLocation, using the alias name ErrorLocation
   */
  public String getErrorLocation()
  {
    return (String)getAttributeInternal(ERRORLOCATION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ErrorLocation
   */
  public void setErrorLocation(String value)
  {
    setAttributeInternal(ERRORLOCATION, value);
  }

  /**
   * 
   * Gets the attribute value for ErrorMessageCount, using the alias name ErrorMessageCount
   */
  public Number getErrorMessageCount()
  {
    return (Number)getAttributeInternal(ERRORMESSAGECOUNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ErrorMessageCount
   */
  public void setErrorMessageCount(Number value)
  {
    setAttributeInternal(ERRORMESSAGECOUNT, value);
  }

  /**
   * 
   * Gets the attribute value for ErrorMessageCode, using the alias name ErrorMessageCode
   */
  public String getErrorMessageCode()
  {
    return (String)getAttributeInternal(ERRORMESSAGECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ErrorMessageCode
   */
  public void setErrorMessageCode(String value)
  {
    setAttributeInternal(ERRORMESSAGECODE, value);
  }

  /**
   * 
   * Gets the attribute value for ErrorMessage, using the alias name ErrorMessage
   */
  public String getErrorMessage()
  {
    return (String)getAttributeInternal(ERRORMESSAGE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ErrorMessage
   */
  public void setErrorMessage(String value)
  {
    setAttributeInternal(ERRORMESSAGE, value);
  }

  /**
   * 
   * Gets the attribute value for ErrorMessageSeverity, using the alias name ErrorMessageSeverity
   */
  public String getErrorMessageSeverity()
  {
    return (String)getAttributeInternal(ERRORMESSAGESEVERITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ErrorMessageSeverity
   */
  public void setErrorMessageSeverity(String value)
  {
    setAttributeInternal(ERRORMESSAGESEVERITY, value);
  }

  /**
   * 
   * Gets the attribute value for ErrorStatusFlag, using the alias name ErrorStatusFlag
   */
  public String getErrorStatusFlag()
  {
    return (String)getAttributeInternal(ERRORSTATUSFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ErrorStatusFlag
   */
  public void setErrorStatusFlag(String value)
  {
    setAttributeInternal(ERRORSTATUSFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for NotifyFlag, using the alias name NotifyFlag
   */
  public String getNotifyFlag()
  {
    return (String)getAttributeInternal(NOTIFYFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NotifyFlag
   */
  public void setNotifyFlag(String value)
  {
    setAttributeInternal(NOTIFYFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for Recipient, using the alias name Recipient
   */
  public String getRecipient()
  {
    return (String)getAttributeInternal(RECIPIENT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Recipient
   */
  public void setRecipient(String value)
  {
    setAttributeInternal(RECIPIENT, value);
  }

  /**
   * 
   * Gets the attribute value for ObjectType, using the alias name ObjectType
   */
  public String getObjectType()
  {
    return (String)getAttributeInternal(OBJECTTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ObjectType
   */
  public void setObjectType(String value)
  {
    setAttributeInternal(OBJECTTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for ObjectId, using the alias name ObjectId
   */
  public String getObjectId()
  {
    return (String)getAttributeInternal(OBJECTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ObjectId
   */
  public void setObjectId(String value)
  {
    setAttributeInternal(OBJECTID, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute1, using the alias name Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute2, using the alias name Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute3, using the alias name Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute4, using the alias name Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute5, using the alias name Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute6, using the alias name Attribute6
   */
  public String getAttribute6()
  {
    return (String)getAttributeInternal(ATTRIBUTE6);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute6
   */
  public void setAttribute6(String value)
  {
    setAttributeInternal(ATTRIBUTE6, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute7, using the alias name Attribute7
   */
  public String getAttribute7()
  {
    return (String)getAttributeInternal(ATTRIBUTE7);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute7
   */
  public void setAttribute7(String value)
  {
    setAttributeInternal(ATTRIBUTE7, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute8, using the alias name Attribute8
   */
  public String getAttribute8()
  {
    return (String)getAttributeInternal(ATTRIBUTE8);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute8
   */
  public void setAttribute8(String value)
  {
    setAttributeInternal(ATTRIBUTE8, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute9, using the alias name Attribute9
   */
  public String getAttribute9()
  {
    return (String)getAttributeInternal(ATTRIBUTE9);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute9
   */
  public void setAttribute9(String value)
  {
    setAttributeInternal(ATTRIBUTE9, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute10, using the alias name Attribute10
   */
  public String getAttribute10()
  {
    return (String)getAttributeInternal(ATTRIBUTE10);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute10
   */
  public void setAttribute10(String value)
  {
    setAttributeInternal(ATTRIBUTE10, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute11, using the alias name Attribute11
   */
  public String getAttribute11()
  {
    return (String)getAttributeInternal(ATTRIBUTE11);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute11
   */
  public void setAttribute11(String value)
  {
    setAttributeInternal(ATTRIBUTE11, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute12, using the alias name Attribute12
   */
  public String getAttribute12()
  {
    return (String)getAttributeInternal(ATTRIBUTE12);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute12
   */
  public void setAttribute12(String value)
  {
    setAttributeInternal(ATTRIBUTE12, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute13, using the alias name Attribute13
   */
  public String getAttribute13()
  {
    return (String)getAttributeInternal(ATTRIBUTE13);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute13
   */
  public void setAttribute13(String value)
  {
    setAttributeInternal(ATTRIBUTE13, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute14, using the alias name Attribute14
   */
  public String getAttribute14()
  {
    return (String)getAttributeInternal(ATTRIBUTE14);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute14
   */
  public void setAttribute14(String value)
  {
    setAttributeInternal(ATTRIBUTE14, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute15, using the alias name Attribute15
   */
  public String getAttribute15()
  {
    return (String)getAttributeInternal(ATTRIBUTE15);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute15
   */
  public void setAttribute15(String value)
  {
    setAttributeInternal(ATTRIBUTE15, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute16, using the alias name Attribute16
   */
  public String getAttribute16()
  {
    return (String)getAttributeInternal(ATTRIBUTE16);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute16
   */
  public void setAttribute16(String value)
  {
    setAttributeInternal(ATTRIBUTE16, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute17, using the alias name Attribute17
   */
  public String getAttribute17()
  {
    return (String)getAttributeInternal(ATTRIBUTE17);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute17
   */
  public void setAttribute17(String value)
  {
    setAttributeInternal(ATTRIBUTE17, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute18, using the alias name Attribute18
   */
  public String getAttribute18()
  {
    return (String)getAttributeInternal(ATTRIBUTE18);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute18
   */
  public void setAttribute18(String value)
  {
    setAttributeInternal(ATTRIBUTE18, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute19, using the alias name Attribute19
   */
  public String getAttribute19()
  {
    return (String)getAttributeInternal(ATTRIBUTE19);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute19
   */
  public void setAttribute19(String value)
  {
    setAttributeInternal(ATTRIBUTE19, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute20, using the alias name Attribute20
   */
  public String getAttribute20()
  {
    return (String)getAttributeInternal(ATTRIBUTE20);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute20
   */
  public void setAttribute20(String value)
  {
    setAttributeInternal(ATTRIBUTE20, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for RowID, using the alias name RowID
   */
  public RowID getRowID()
  {
    return (RowID)getAttributeInternal(ROWID);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ERRORLOGID:
        return getErrorLogId();
      case APPLICATIONNAME:
        return getApplicationName();
      case PROGRAMTYPE:
        return getProgramType();
      case PROGRAMNAME:
        return getProgramName();
      case PROGRAMID:
        return getProgramId();
      case MODULENAME:
        return getModuleName();
      case ERRORLOCATION:
        return getErrorLocation();
      case ERRORMESSAGECOUNT:
        return getErrorMessageCount();
      case ERRORMESSAGECODE:
        return getErrorMessageCode();
      case ERRORMESSAGE:
        return getErrorMessage();
      case ERRORMESSAGESEVERITY:
        return getErrorMessageSeverity();
      case ERRORSTATUSFLAG:
        return getErrorStatusFlag();
      case NOTIFYFLAG:
        return getNotifyFlag();
      case RECIPIENT:
        return getRecipient();
      case OBJECTTYPE:
        return getObjectType();
      case OBJECTID:
        return getObjectId();
      case ATTRIBUTE1:
        return getAttribute1();
      case ATTRIBUTE2:
        return getAttribute2();
      case ATTRIBUTE3:
        return getAttribute3();
      case ATTRIBUTE4:
        return getAttribute4();
      case ATTRIBUTE5:
        return getAttribute5();
      case ATTRIBUTE6:
        return getAttribute6();
      case ATTRIBUTE7:
        return getAttribute7();
      case ATTRIBUTE8:
        return getAttribute8();
      case ATTRIBUTE9:
        return getAttribute9();
      case ATTRIBUTE10:
        return getAttribute10();
      case ATTRIBUTE11:
        return getAttribute11();
      case ATTRIBUTE12:
        return getAttribute12();
      case ATTRIBUTE13:
        return getAttribute13();
      case ATTRIBUTE14:
        return getAttribute14();
      case ATTRIBUTE15:
        return getAttribute15();
      case ATTRIBUTE16:
        return getAttribute16();
      case ATTRIBUTE17:
        return getAttribute17();
      case ATTRIBUTE18:
        return getAttribute18();
      case ATTRIBUTE19:
        return getAttribute19();
      case ATTRIBUTE20:
        return getAttribute20();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case ROWID:
        return getRowID();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ERRORLOGID:
        setErrorLogId((Number)value);
        return;
      case APPLICATIONNAME:
        setApplicationName((String)value);
        return;
      case PROGRAMTYPE:
        setProgramType((String)value);
        return;
      case PROGRAMNAME:
        setProgramName((String)value);
        return;
      case PROGRAMID:
        setProgramId((Number)value);
        return;
      case MODULENAME:
        setModuleName((String)value);
        return;
      case ERRORLOCATION:
        setErrorLocation((String)value);
        return;
      case ERRORMESSAGECOUNT:
        setErrorMessageCount((Number)value);
        return;
      case ERRORMESSAGECODE:
        setErrorMessageCode((String)value);
        return;
      case ERRORMESSAGE:
        setErrorMessage((String)value);
        return;
      case ERRORMESSAGESEVERITY:
        setErrorMessageSeverity((String)value);
        return;
      case ERRORSTATUSFLAG:
        setErrorStatusFlag((String)value);
        return;
      case NOTIFYFLAG:
        setNotifyFlag((String)value);
        return;
      case RECIPIENT:
        setRecipient((String)value);
        return;
      case OBJECTTYPE:
        setObjectType((String)value);
        return;
      case OBJECTID:
        setObjectId((String)value);
        return;
      case ATTRIBUTE1:
        setAttribute1((String)value);
        return;
      case ATTRIBUTE2:
        setAttribute2((String)value);
        return;
      case ATTRIBUTE3:
        setAttribute3((String)value);
        return;
      case ATTRIBUTE4:
        setAttribute4((String)value);
        return;
      case ATTRIBUTE5:
        setAttribute5((String)value);
        return;
      case ATTRIBUTE6:
        setAttribute6((String)value);
        return;
      case ATTRIBUTE7:
        setAttribute7((String)value);
        return;
      case ATTRIBUTE8:
        setAttribute8((String)value);
        return;
      case ATTRIBUTE9:
        setAttribute9((String)value);
        return;
      case ATTRIBUTE10:
        setAttribute10((String)value);
        return;
      case ATTRIBUTE11:
        setAttribute11((String)value);
        return;
      case ATTRIBUTE12:
        setAttribute12((String)value);
        return;
      case ATTRIBUTE13:
        setAttribute13((String)value);
        return;
      case ATTRIBUTE14:
        setAttribute14((String)value);
        return;
      case ATTRIBUTE15:
        setAttribute15((String)value);
        return;
      case ATTRIBUTE16:
        setAttribute16((String)value);
        return;
      case ATTRIBUTE17:
        setAttribute17((String)value);
        return;
      case ATTRIBUTE18:
        setAttribute18((String)value);
        return;
      case ATTRIBUTE19:
        setAttribute19((String)value);
        return;
      case ATTRIBUTE20:
        setAttribute20((String)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }
}