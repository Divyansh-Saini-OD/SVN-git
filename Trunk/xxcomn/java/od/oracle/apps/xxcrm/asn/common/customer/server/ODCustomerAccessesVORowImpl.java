package od.oracle.apps.xxcrm.asn.common.customer.server;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODCustomerAccessesVORowImpl extends OAViewRowImpl 
{


  protected static final int SALESFORCEID = 0;
  protected static final int ACCESSID = 1;
  protected static final int CUSTOMERID = 2;
  protected static final int SALESGROUPID = 3;
  protected static final int TEAMLEADERFLAG = 4;
  protected static final int FREEZEFLAG = 5;
  protected static final int SOURCEJOBTITLE = 6;
  protected static final int SOURCEPHONE = 7;
  protected static final int SOURCEEMAIL = 8;
  protected static final int RESOURCENAME = 9;
  protected static final int ATTRIBUTECATEGORY = 10;
  protected static final int ATTRIBUTE1 = 11;
  protected static final int ATTRIBUTE2 = 12;
  protected static final int ATTRIBUTE3 = 13;
  protected static final int ATTRIBUTE4 = 14;
  protected static final int ATTRIBUTE5 = 15;
  protected static final int ATTRIBUTE6 = 16;
  protected static final int ATTRIBUTE7 = 17;
  protected static final int ATTRIBUTE8 = 18;
  protected static final int ATTRIBUTE9 = 19;
  protected static final int ATTRIBUTE10 = 20;
  protected static final int ATTRIBUTE11 = 21;
  protected static final int ATTRIBUTE12 = 22;
  protected static final int ATTRIBUTE13 = 23;
  protected static final int ATTRIBUTE14 = 24;
  protected static final int ATTRIBUTE15 = 25;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODCustomerAccessesVORowImpl()
  {
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute AccessId
   */
  public Number getAccessId()
  {
    return (Number)getAttributeInternal(ACCESSID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute AccessId
   */
  public void setAccessId(Number value)
  {
    setAttributeInternal(ACCESSID, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute CustomerId
   */
  public Number getCustomerId()
  {
    return (Number)getAttributeInternal(CUSTOMERID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute CustomerId
   */
  public void setCustomerId(Number value)
  {
    setAttributeInternal(CUSTOMERID, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute SalesforceId
   */
  public Number getSalesforceId()
  {
    return (Number)getAttributeInternal(SALESFORCEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute SalesforceId
   */
  public void setSalesforceId(Number value)
  {
    setAttributeInternal(SALESFORCEID, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute SalesGroupId
   */
  public Number getSalesGroupId()
  {
    return (Number)getAttributeInternal(SALESGROUPID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute SalesGroupId
   */
  public void setSalesGroupId(Number value)
  {
    setAttributeInternal(SALESGROUPID, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute TeamLeaderFlag
   */
  public String getTeamLeaderFlag()
  {
    return (String)getAttributeInternal(TEAMLEADERFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute TeamLeaderFlag
   */
  public void setTeamLeaderFlag(String value)
  {
    setAttributeInternal(TEAMLEADERFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute FreezeFlag
   */
  public String getFreezeFlag()
  {
    return (String)getAttributeInternal(FREEZEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute FreezeFlag
   */
  public void setFreezeFlag(String value)
  {
    setAttributeInternal(FREEZEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute SourceJobTitle
   */
  public String getSourceJobTitle()
  {
    return (String)getAttributeInternal(SOURCEJOBTITLE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute SourceJobTitle
   */
  public void setSourceJobTitle(String value)
  {
    setAttributeInternal(SOURCEJOBTITLE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute SourcePhone
   */
  public String getSourcePhone()
  {
    return (String)getAttributeInternal(SOURCEPHONE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute SourcePhone
   */
  public void setSourcePhone(String value)
  {
    setAttributeInternal(SOURCEPHONE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute SourceEmail
   */
  public String getSourceEmail()
  {
    return (String)getAttributeInternal(SOURCEEMAIL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute SourceEmail
   */
  public void setSourceEmail(String value)
  {
    setAttributeInternal(SOURCEEMAIL, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ResourceName
   */
  public String getResourceName()
  {
    return (String)getAttributeInternal(RESOURCENAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ResourceName
   */
  public void setResourceName(String value)
  {
    setAttributeInternal(RESOURCENAME, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute AttributeCategory
   */
  public String getAttributeCategory()
  {
    return (String)getAttributeInternal(ATTRIBUTECATEGORY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute AttributeCategory
   */
  public void setAttributeCategory(String value)
  {
    setAttributeInternal(ATTRIBUTECATEGORY, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute6
   */
  public String getAttribute6()
  {
    return (String)getAttributeInternal(ATTRIBUTE6);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute6
   */
  public void setAttribute6(String value)
  {
    setAttributeInternal(ATTRIBUTE6, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute7
   */
  public String getAttribute7()
  {
    return (String)getAttributeInternal(ATTRIBUTE7);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute7
   */
  public void setAttribute7(String value)
  {
    setAttributeInternal(ATTRIBUTE7, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute8
   */
  public String getAttribute8()
  {
    return (String)getAttributeInternal(ATTRIBUTE8);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute8
   */
  public void setAttribute8(String value)
  {
    setAttributeInternal(ATTRIBUTE8, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute9
   */
  public String getAttribute9()
  {
    return (String)getAttributeInternal(ATTRIBUTE9);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute9
   */
  public void setAttribute9(String value)
  {
    setAttributeInternal(ATTRIBUTE9, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute10
   */
  public String getAttribute10()
  {
    return (String)getAttributeInternal(ATTRIBUTE10);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute10
   */
  public void setAttribute10(String value)
  {
    setAttributeInternal(ATTRIBUTE10, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute11
   */
  public String getAttribute11()
  {
    return (String)getAttributeInternal(ATTRIBUTE11);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute11
   */
  public void setAttribute11(String value)
  {
    setAttributeInternal(ATTRIBUTE11, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute12
   */
  public String getAttribute12()
  {
    return (String)getAttributeInternal(ATTRIBUTE12);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute12
   */
  public void setAttribute12(String value)
  {
    setAttributeInternal(ATTRIBUTE12, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute13
   */
  public String getAttribute13()
  {
    return (String)getAttributeInternal(ATTRIBUTE13);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute13
   */
  public void setAttribute13(String value)
  {
    setAttributeInternal(ATTRIBUTE13, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute14
   */
  public String getAttribute14()
  {
    return (String)getAttributeInternal(ATTRIBUTE14);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute14
   */
  public void setAttribute14(String value)
  {
    setAttributeInternal(ATTRIBUTE14, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Attribute15
   */
  public String getAttribute15()
  {
    return (String)getAttributeInternal(ATTRIBUTE15);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Attribute15
   */
  public void setAttribute15(String value)
  {
    setAttributeInternal(ATTRIBUTE15, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case SALESFORCEID:
        return getSalesforceId();
      case ACCESSID:
        return getAccessId();
      case CUSTOMERID:
        return getCustomerId();
      case SALESGROUPID:
        return getSalesGroupId();
      case TEAMLEADERFLAG:
        return getTeamLeaderFlag();
      case FREEZEFLAG:
        return getFreezeFlag();
      case SOURCEJOBTITLE:
        return getSourceJobTitle();
      case SOURCEPHONE:
        return getSourcePhone();
      case SOURCEEMAIL:
        return getSourceEmail();
      case RESOURCENAME:
        return getResourceName();
      case ATTRIBUTECATEGORY:
        return getAttributeCategory();
      case ATTRIBUTE1:
        return getAttribute1();
      case ATTRIBUTE2:
        return getAttribute2();
      case ATTRIBUTE3:
        return getAttribute3();
      case ATTRIBUTE4:
        return getAttribute4();
      case ATTRIBUTE5:
        return getAttribute5();
      case ATTRIBUTE6:
        return getAttribute6();
      case ATTRIBUTE7:
        return getAttribute7();
      case ATTRIBUTE8:
        return getAttribute8();
      case ATTRIBUTE9:
        return getAttribute9();
      case ATTRIBUTE10:
        return getAttribute10();
      case ATTRIBUTE11:
        return getAttribute11();
      case ATTRIBUTE12:
        return getAttribute12();
      case ATTRIBUTE13:
        return getAttribute13();
      case ATTRIBUTE14:
        return getAttribute14();
      case ATTRIBUTE15:
        return getAttribute15();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case SALESFORCEID:
        setSalesforceId((Number)value);
        return;
      case ACCESSID:
        setAccessId((Number)value);
        return;
      case CUSTOMERID:
        setCustomerId((Number)value);
        return;
      case SALESGROUPID:
        setSalesGroupId((Number)value);
        return;
      case TEAMLEADERFLAG:
        setTeamLeaderFlag((String)value);
        return;
      case FREEZEFLAG:
        setFreezeFlag((String)value);
        return;
      case SOURCEJOBTITLE:
        setSourceJobTitle((String)value);
        return;
      case SOURCEPHONE:
        setSourcePhone((String)value);
        return;
      case SOURCEEMAIL:
        setSourceEmail((String)value);
        return;
      case RESOURCENAME:
        setResourceName((String)value);
        return;
      case ATTRIBUTECATEGORY:
        setAttributeCategory((String)value);
        return;
      case ATTRIBUTE1:
        setAttribute1((String)value);
        return;
      case ATTRIBUTE2:
        setAttribute2((String)value);
        return;
      case ATTRIBUTE3:
        setAttribute3((String)value);
        return;
      case ATTRIBUTE4:
        setAttribute4((String)value);
        return;
      case ATTRIBUTE5:
        setAttribute5((String)value);
        return;
      case ATTRIBUTE6:
        setAttribute6((String)value);
        return;
      case ATTRIBUTE7:
        setAttribute7((String)value);
        return;
      case ATTRIBUTE8:
        setAttribute8((String)value);
        return;
      case ATTRIBUTE9:
        setAttribute9((String)value);
        return;
      case ATTRIBUTE10:
        setAttribute10((String)value);
        return;
      case ATTRIBUTE11:
        setAttribute11((String)value);
        return;
      case ATTRIBUTE12:
        setAttribute12((String)value);
        return;
      case ATTRIBUTE13:
        setAttribute13((String)value);
        return;
      case ATTRIBUTE14:
        setAttribute14((String)value);
        return;
      case ATTRIBUTE15:
        setAttribute15((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }
}