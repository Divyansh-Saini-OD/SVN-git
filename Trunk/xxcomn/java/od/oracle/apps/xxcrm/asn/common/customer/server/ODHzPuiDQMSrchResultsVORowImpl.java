package od.oracle.apps.xxcrm.asn.common.customer.server;

import java.util.Vector;

import oracle.jbo.ViewObject;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.common.Diagnostic;

import oracle.apps.fnd.framework.OAApplicationModule;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.apps.fnd.framework.server.OADBTransactionImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;

import oracle.apps.ar.hz.components.search.webui.HzPuiDQMPersonSearchCO;
import oracle.apps.ar.hz.components.util.server.HzPuiServerUtil;

//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODHzPuiDQMSrchResultsVORowImpl extends OAViewRowImpl
{
  protected static final int PARTYID = 0;
  protected static final int PARTYNAME = 1;
  protected static final int PARTYTYPE = 2;
  protected static final int TYPELOOKUP = 3;
  protected static final int PARTYNUMBER = 4;
  protected static final int TAXREGISTRATION = 5;
  protected static final int TAXPAYERID = 6;
  protected static final int DUNSNUMBER = 7;
  protected static final int KNOWNAS = 8;
  protected static final int KNOWNAS2 = 9;
  protected static final int KNOWNAS3 = 10;
  protected static final int KNOWNAS4 = 11;
  protected static final int KNOWNAS5 = 12;
  protected static final int ORGANIZATIONNAMEPHONETIC = 13;
  protected static final int PERSONFIRSTNAMEPHONETIC = 14;
  protected static final int PERSONLASTNAMEPHONETIC = 15;
  protected static final int LOCATIONID = 16;
  protected static final int COUNTRY = 17;
  protected static final int PRIMARYPHONECOUNTRYCODE = 18;
  protected static final int PRIMARYPHONEAREACODE = 19;
  protected static final int PRIMARYPHONENUMBER = 20;
  protected static final int PRIMARYPHONELINETYPE = 21;
  protected static final int PRIMARYPHONEEXTENSION = 22;
  protected static final int EMAIL = 23;
  protected static final int PRIMARYURL = 24;
  protected static final int CERTIFICATIONLEVELMEANING = 25;
  protected static final int SCORE = 26;
  protected static final int PERCENTAGE = 27;
  protected static final int SELECTFLAG = 28;
  protected static final int DISABLEHGRIDFLAG = 29;
  protected static final int ENABLEHGRIDFLAG = 30;
  protected static final int RELPARTYID = 31;
  protected static final int ADDRESS = 32;
  protected static final int PARTYSITENUMBER = 33;
  protected static final int SUBJECTID = 34;
  protected static final int PRIMARYPHONE = 35;
  protected static final int ISFUNCTIONCALLED = 36;
  protected static final int UPDATEIMAGE = 37;
  protected static final int ISPRIVILEGECHECKED = 38;
  protected static final int HZPUIPERSNSRCHDTLVO = 39;

  /**
   *
   * This is the default constructor (do not remove)
   */
  public ODHzPuiDQMSrchResultsVORowImpl()
  {
  }

  public static final String RCS_ID="$Header: ODHzPuiDQMSrchResultsVORowImpl.java 115.11 2005/03/25 09:20:40 jhuang noship $";

  protected Object getAttributeInternal(int index)
  {

    boolean isVLAccessor = (index == HZPUIPERSNSRCHDTLVO);
    StringBuffer whereClause = new StringBuffer(500);
    Vector parameters = new Vector(1);

    if (isVLAccessor)
    {
        RowSet rset = (RowSet)super.getAttributeInternal(index);
        OADBTransactionImpl txImpl = (OADBTransactionImpl)getApplicationModule().getTransaction();
        if (txImpl != null)
        {
            String HzPuiRelatedOrgId = (String)txImpl.getTransientValue("HzPuiRelatedOrgId");
            String HzPuiRelatedOrg = (String)txImpl.getTransientValue("HzPuiRelatedOrg");
            String HzPuiSearchComponentMode = (String)txImpl.getTransientValue("HzPuiSearchComponentMode");
            String HzPuiSearchAttributeVisited = (String)txImpl.getTransientValue("HzPuiSearchAttributeVisited");
            txImpl.putTransientValue("HzPuiSearchAttributeVisited", "Y");

            ViewObject vo = rset.getViewObject();
            String originalWhereClause = vo.getWhereClause();
            originalWhereClause = " SUBJECT_ID = :1";

            Diagnostic.println("Original: " + originalWhereClause);

            StringBuffer newOrigWhereClause = new StringBuffer(500);

            if (((HzPuiSearchComponentMode == null) || (HzPuiSearchComponentMode.equals("SEARCH"))))
//            && ((HzPuiSearchAttributeVisited == null) || (!HzPuiSearchAttributeVisited.equals("Y"))))
            {
              Diagnostic.println("********CASE 1");
              newOrigWhereClause.append(originalWhereClause);
              newOrigWhereClause.append(" and exists ");
              newOrigWhereClause.append("(select r.relationship_id, r.relationship_type, r.relationship_code, r.subject_type, r.object_type, ");
              newOrigWhereClause.append("        c.class_category, c.class_code ");
              newOrigWhereClause.append(" from hz_relationships r, ");
              newOrigWhereClause.append("      hz_relationship_types t, ");
              newOrigWhereClause.append("      hz_code_assignments c ");
              newOrigWhereClause.append(" where r.party_id = R_PARTY_ID ");
              newOrigWhereClause.append(" and r.directional_flag = 'F' ");
              newOrigWhereClause.append(" and r.relationship_type = t.relationship_type ");
              newOrigWhereClause.append(" and r.relationship_code = t.forward_rel_code ");
              newOrigWhereClause.append(" and r.subject_type = t.subject_type ");
              newOrigWhereClause.append(" and r.object_type = t.object_type ");
              newOrigWhereClause.append(" and t.relationship_type_id = c.owner_table_id (+) ");
              newOrigWhereClause.append(" and c.owner_table_name (+) = 'HZ_RELATIONSHIP_TYPES' ");
              newOrigWhereClause.append(" and c.class_category (+) = 'RELATIONSHIP_TYPE_GROUP' ");
              newOrigWhereClause.append(" and c.class_code = 'PARTY_REL_GRP_CONTACTS')");
              originalWhereClause = newOrigWhereClause.toString();
            }

            if ((HzPuiRelatedOrg != null) && (!("".equals(HzPuiRelatedOrg.trim()))))
            {
                Diagnostic.println("********CASE 2");

                Diagnostic.println("HzPuiRelatedOrg: " + HzPuiRelatedOrg);

//                if (!(originalWhereClause.startsWith("OBJECT_ID")))
//                if ((HzPuiSearchAttributeVisited == null) || (!HzPuiSearchAttributeVisited.equals("Y")))
//                {
                  Diagnostic.println("********CASE 2A");
                  OADBTransaction tx = (OADBTransaction)getApplicationModule().getTransaction();
                  String subString = HzPuiDQMPersonSearchCO.getAppendedString(tx, HzPuiRelatedOrg);

                  whereClause.append(" OBJECT_ID IN ((select party_id from hz_staged_parties where contains(concat_col, '");
                  whereClause.append(subString);
                  whereClause.append(" AND ORGANIZATION')>0)) AND ");
                  whereClause.append(originalWhereClause);
                  vo.setWhereClause(whereClause.toString());
//                }
            }
            else if ((HzPuiRelatedOrgId != null) && (!("".equals(HzPuiRelatedOrgId.trim()))))
            {
                Diagnostic.println("********CASE 3");
//                if (!(originalWhereClause.startsWith("OBJECT_ID")))
//                if ((HzPuiSearchAttributeVisited == null) || (!HzPuiSearchAttributeVisited.equals("Y")))
//                {
                  Diagnostic.println("********CASE 3A");
                  whereClause.append(" OBJECT_ID =:1 AND ");
                  whereClause.append(originalWhereClause);
                  vo.setWhereClause(whereClause.toString());
//                }
                rset.setWhereClauseParam(0, HzPuiRelatedOrgId);
            }
            else
            {
                Diagnostic.println("None passed, reset to original");
                Diagnostic.println("********CASE 4");
                vo.setWhereClause(originalWhereClause);
//                vo.setWhereClause(":2 = SUBJECT_ID");
            }
//
            //... bind any number of non-VL based parameters here
            String finalWhereClause = vo.getWhereClause();
            Diagnostic.println("Final: " + finalWhereClause);
        }
        return rset;
    }


    return super.getAttributeInternal(index);
  }

  /**
   *
   * Overrides setAttribute().
   */
  public void setAttribute(int index, Object val)
  {
    int selectIndex = getAttributeIndexOf("SelectFlag");
    if (index == selectIndex)
      populateAttribute(index, val);
    else
      super.setAttribute(index, val);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute IsFunctionCalled
   */
  public String getIsFunctionCalled()
  {
    String isFunctionCalled = (String)getAttributeInternal(ISFUNCTIONCALLED);

    if ( isFunctionCalled == null )
    {
      OADBTransactionImpl tx = (OADBTransactionImpl)((OAApplicationModule)getApplicationModule()).getOADBTransaction();
      String[] param = new String[7], value = new String[3];

      // set IN or IN-OUT params, if any
      // we don't have org contact id
      param[0] = null;
      param[1] = getPrimaryPhoneCountryCode();
      param[2] = getPrimaryPhoneAreaCode();
      param[3] = getPrimaryPhoneNumber();
      param[4] = getPrimaryPhoneExtension();
      param[5] = getPrimaryPhoneLineType();

      Number locationId = getLocationId();
      if (locationId != null)
      {
        param[6] = locationId.toString();
      }
      else param[6] = null;

      HzPuiServerUtil.getValueForPostQuery(tx, param, value);

      // get return
      this.populateAttribute(PRIMARYPHONE, value[1]);
      this.populateAttribute(ADDRESS, value[2]);

      isFunctionCalled = "Y";
      this.populateAttribute(ISFUNCTIONCALLED, isFunctionCalled);
    }

    return isFunctionCalled;
  }

 /* public String getPartySiteNumber()
  {
    String address = null;

    if ( "Y".equals(getIsFunctionCalled()))
    {
      address = (String)getAttributeInternal(PARTYSITENUMBER);
    }

    return address;
  }*/

 public String getPartySiteNumber()
  {
      return (String)getAttributeInternal(PARTYSITENUMBER);
  }



  /**
   *
   * Gets the attribute value for the calculated attribute Address
   */
  public String getAddress()
  {
    String address = null;

    if ( "Y".equals(getIsFunctionCalled()))
    {
      address = (String)getAttributeInternal(ADDRESS);
    }

    return address;
  }

  /**
   *
   * Gets the attribute value for the calculated attribute Phone
   */
  public String getPrimaryPhone()
  {
    String phone = null;

    if ( "Y".equals(getIsFunctionCalled()))
    {
      phone = (String)getAttributeInternal(PRIMARYPHONE);
    }

    return phone;
  }

  /**
   *
   * Gets the attribute value for the calculated attribute IsPrivilegeChecked
   */
  public String getIsPrivilegeChecked()
  {
    String IsPrivilegeChecked = (String)getAttributeInternal(ISPRIVILEGECHECKED);

    if (IsPrivilegeChecked == null)
    {
      OADBTransactionImpl tx = (OADBTransactionImpl)((OAApplicationModule)getApplicationModule()).getOADBTransaction();
      String[] param = new String[4], value = new String[2];

      // set IN or IN-OUT params, if any
      param[0] = "HZ_PARTIES";
      param[1] = "";
      param[2] = getPartyId().toString();
      param[3] = "";

      HzPuiServerUtil.getPrivilegeForPostQuery(tx, param, value);

      // get return
      String updateable = ("Y".equals(value[0])) ?
                          "Update" : "UpdateDisabled";

      this.populateAttribute(UPDATEIMAGE, updateable);

      IsPrivilegeChecked = "Y";
      this.populateAttribute(ISPRIVILEGECHECKED, IsPrivilegeChecked);
    }

    return IsPrivilegeChecked;
  }

  /**
   *
   * Gets the attribute value for the calculated attribute UpdateIconStatus
   */
  public String getUpdateImage()
  {
    String update = null;

    if ("Y".equals(getIsPrivilegeChecked()))
    {
      update = (String)getAttributeInternal(UPDATEIMAGE);
    }

    return update;
  }

  /**
   *
   * Gets the associated <code>RowIterator</code> using master-detail link HzPuiPersnSrchDtlVO
   */
  public oracle.jbo.RowIterator getHzPuiPersnSrchDtlVO()
  {
    return (oracle.jbo.RowIterator)getAttributeInternal(HZPUIPERSNSRCHDTLVO);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute PartyId
   */
  public Number getPartyId()
  {
    return (Number)getAttributeInternal(PARTYID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PartyId
   */
  public void setPartyId(Number value)
  {
    setAttributeInternal(PARTYID, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute SubjectId
   */
  public Number getSubjectId()
  {
    return (Number)getAttributeInternal(SUBJECTID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute SubjectId
   */
  public void setSubjectId(Number value)
  {
    setAttributeInternal(SUBJECTID, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute PartyName
   */
  public String getPartyName()
  {
    return (String)getAttributeInternal(PARTYNAME);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PartyName
   */
  public void setPartyName(String value)
  {
    setAttributeInternal(PARTYNAME, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute PartyType
   */
  public String getPartyType()
  {
    return (String)getAttributeInternal(PARTYTYPE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PartyType
   */
  public void setPartyType(String value)
  {
    setAttributeInternal(PARTYTYPE, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute PartyNumber
   */
  public String getPartyNumber()
  {
    return (String)getAttributeInternal(PARTYNUMBER);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PartyNumber
   */
  public void setPartyNumber(String value)
  {
    setAttributeInternal(PARTYNUMBER, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute TaxRegistration
   */
  public String getTaxRegistration()
  {
    return (String)getAttributeInternal(TAXREGISTRATION);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute TaxRegistration
   */
  public void setTaxRegistration(String value)
  {
    setAttributeInternal(TAXREGISTRATION, value);
  }



  /**
   *
   * Gets the attribute value for the calculated attribute Score
   */
  public Number getScore()
  {
    return (Number)getAttributeInternal(SCORE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute Score
   */
  public void setScore(Number value)
  {
    setAttributeInternal(SCORE, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute TaxPayerId
   */
  public String getTaxPayerId()
  {
    return (String)getAttributeInternal(TAXPAYERID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute TaxPayerId
   */
  public void setTaxPayerId(String value)
  {
    setAttributeInternal(TAXPAYERID, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute TypeLookup
   */
  public String getTypeLookup()
  {
    return (String)getAttributeInternal(TYPELOOKUP);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute TypeLookup
   */
  public void setTypeLookup(String value)
  {
    setAttributeInternal(TYPELOOKUP, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute Percentage
   */
  public String getPercentage()
  {
    return (String)getAttributeInternal(PERCENTAGE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute Percentage
   */
  public void setPercentage(String value)
  {
    setAttributeInternal(PERCENTAGE, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute Country
   */
  public String getCountry()
  {
    return (String)getAttributeInternal(COUNTRY);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute Country
   */
  public void setCountry(String value)
  {
    setAttributeInternal(COUNTRY, value);
  }



  /**
   *
   * Gets the attribute value for the calculated attribute DunsNumber
   */
  public String getDunsNumber()
  {
    return (String)getAttributeInternal(DUNSNUMBER);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute DunsNumber
   */
  public void setDunsNumber(String value)
  {
    setAttributeInternal(DUNSNUMBER, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute KnownAs
   */
  public String getKnownAs()
  {
    return (String)getAttributeInternal(KNOWNAS);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute KnownAs
   */
  public void setKnownAs(String value)
  {
    setAttributeInternal(KNOWNAS, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute Email
   */
  public String getEmail()
  {
    return (String)getAttributeInternal(EMAIL);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute Email
   */
  public void setEmail(String value)
  {
    setAttributeInternal(EMAIL, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute OrganizationNamePhonetic
   */
  public String getOrganizationNamePhonetic()
  {
    return (String)getAttributeInternal(ORGANIZATIONNAMEPHONETIC);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute OrganizationNamePhonetic
   */
  public void setOrganizationNamePhonetic(String value)
  {
    setAttributeInternal(ORGANIZATIONNAMEPHONETIC, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute PersonFirstNamePhonetic
   */
  public String getPersonFirstNamePhonetic()
  {
    return (String)getAttributeInternal(PERSONFIRSTNAMEPHONETIC);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PersonFirstNamePhonetic
   */
  public void setPersonFirstNamePhonetic(String value)
  {
    setAttributeInternal(PERSONFIRSTNAMEPHONETIC, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute PersonLastNamePhonetic
   */
  public String getPersonLastNamePhonetic()
  {
    return (String)getAttributeInternal(PERSONLASTNAMEPHONETIC);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PersonLastNamePhonetic
   */
  public void setPersonLastNamePhonetic(String value)
  {
    setAttributeInternal(PERSONLASTNAMEPHONETIC, value);
  }



  /**
   *
   * Gets the attribute value for the calculated attribute PrimaryUrl
   */
  public String getPrimaryUrl()
  {
    return (String)getAttributeInternal(PRIMARYURL);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PrimaryUrl
   */
  public void setPrimaryUrl(String value)
  {
    setAttributeInternal(PRIMARYURL, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute SelectFlag
   */
  public String getSelectFlag()
  {
    return (String)getAttributeInternal(SELECTFLAG);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute SelectFlag
   */
  public void setSelectFlag(String value)
  {
    setAttributeInternal(SELECTFLAG, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute DisableHgridFlag
   */
  public String getDisableHgridFlag()
  {
    return (String)getAttributeInternal(DISABLEHGRIDFLAG);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute DisableHgridFlag
   */
  public void setDisableHgridFlag(String value)
  {
    setAttributeInternal(DISABLEHGRIDFLAG, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PARTYID:
        return getPartyId();
      case PARTYNAME:
        return getPartyName();
      case PARTYTYPE:
        return getPartyType();
      case TYPELOOKUP:
        return getTypeLookup();
      case PARTYNUMBER:
        return getPartyNumber();
      case TAXREGISTRATION:
        return getTaxRegistration();
      case TAXPAYERID:
        return getTaxPayerId();
      case DUNSNUMBER:
        return getDunsNumber();
      case KNOWNAS:
        return getKnownAs();
      case KNOWNAS2:
        return getKnownAs2();
      case KNOWNAS3:
        return getKnownAs3();
      case KNOWNAS4:
        return getKnownAs4();
      case KNOWNAS5:
        return getKnownAs5();
      case ORGANIZATIONNAMEPHONETIC:
        return getOrganizationNamePhonetic();
      case PERSONFIRSTNAMEPHONETIC:
        return getPersonFirstNamePhonetic();
      case PERSONLASTNAMEPHONETIC:
        return getPersonLastNamePhonetic();
      case LOCATIONID:
        return getLocationId();
      case COUNTRY:
        return getCountry();
      case PRIMARYPHONECOUNTRYCODE:
        return getPrimaryPhoneCountryCode();
      case PRIMARYPHONEAREACODE:
        return getPrimaryPhoneAreaCode();
      case PRIMARYPHONENUMBER:
        return getPrimaryPhoneNumber();
      case PRIMARYPHONELINETYPE:
        return getPrimaryPhoneLineType();
      case PRIMARYPHONEEXTENSION:
        return getPrimaryPhoneExtension();
      case EMAIL:
        return getEmail();
      case PRIMARYURL:
        return getPrimaryUrl();
      case CERTIFICATIONLEVELMEANING:
        return getCertificationLevelMeaning();
      case SCORE:
        return getScore();
      case PERCENTAGE:
        return getPercentage();
      case SELECTFLAG:
        return getSelectFlag();
      case DISABLEHGRIDFLAG:
        return getDisableHgridFlag();
      case ENABLEHGRIDFLAG:
        return getEnableHgridFlag();
      case RELPARTYID:
        return getRelPartyId();
      case ADDRESS:
        return getAddress();
      case PARTYSITENUMBER:
        return getPartySiteNumber();
      case PRIMARYPHONE:
        return getPrimaryPhone();
      case ISFUNCTIONCALLED:
        return getIsFunctionCalled();
      case UPDATEIMAGE:
        return getUpdateImage();
      case ISPRIVILEGECHECKED:
        return getIsPrivilegeChecked();
      case HZPUIPERSNSRCHDTLVO:
        return getHzPuiPersnSrchDtlVO();
	  case SUBJECTID:
        return getSubjectId();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PARTYID:
        setPartyId((Number)value);
        return;
      case PARTYNAME:
        setPartyName((String)value);
        return;
      case PARTYTYPE:
        setPartyType((String)value);
        return;
      case TYPELOOKUP:
        setTypeLookup((String)value);
        return;
      case PARTYNUMBER:
        setPartyNumber((String)value);
        return;
      case TAXREGISTRATION:
        setTaxRegistration((String)value);
        return;
      case TAXPAYERID:
        setTaxPayerId((String)value);
        return;
      case DUNSNUMBER:
        setDunsNumber((String)value);
        return;
      case KNOWNAS:
        setKnownAs((String)value);
        return;
      case ORGANIZATIONNAMEPHONETIC:
        setOrganizationNamePhonetic((String)value);
        return;
      case PERSONFIRSTNAMEPHONETIC:
        setPersonFirstNamePhonetic((String)value);
        return;
      case PERSONLASTNAMEPHONETIC:
        setPersonLastNamePhonetic((String)value);
        return;
      case LOCATIONID:
        setLocationId((Number)value);
        return;
      case COUNTRY:
        setCountry((String)value);
        return;
      case EMAIL:
        setEmail((String)value);
        return;
      case PRIMARYURL:
        setPrimaryUrl((String)value);
        return;
      case CERTIFICATIONLEVELMEANING:
        setCertificationLevelMeaning((String)value);
        return;
      case SCORE:
        setScore((Number)value);
        return;
      case PERCENTAGE:
        setPercentage((String)value);
        return;
      case SELECTFLAG:
        setSelectFlag((String)value);
        return;
      case DISABLEHGRIDFLAG:
        setDisableHgridFlag((String)value);
        return;
      case ENABLEHGRIDFLAG:
        setEnableHgridFlag((String)value);
        return;
      case RELPARTYID:
        setRelPartyId((String)value);
        return;
      case ADDRESS:
        setAddress((String)value);
        return;
      case PARTYSITENUMBER:
        setPartySiteNumber((String)value);
        return;
      case PRIMARYPHONE:
        setPrimaryPhone((String)value);
        return;
      case ISFUNCTIONCALLED:
        setIsFunctionCalled((String)value);
        return;
      case UPDATEIMAGE:
        setUpdateImage((String)value);
        return;
      case ISPRIVILEGECHECKED:
        setIsPrivilegeChecked((String)value);
        return;
      case SUBJECTID:
        setSubjectId((Number)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   *
   * Gets the attribute value for the calculated attribute EnableHgridFlag
   */
  public String getEnableHgridFlag()
  {
    return (String)getAttributeInternal(ENABLEHGRIDFLAG);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute EnableHgridFlag
   */
  public void setEnableHgridFlag(String value)
  {
    setAttributeInternal(ENABLEHGRIDFLAG, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute RelPartyId
   */
  public String getRelPartyId()
  {
    return (String)getAttributeInternal(RELPARTYID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute RelPartyId
   */
  public void setRelPartyId(String value)
  {
    setAttributeInternal(RELPARTYID, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute CertificationLevelMeaning
   */
  public String getCertificationLevelMeaning()
  {
    return (String)getAttributeInternal(CERTIFICATIONLEVELMEANING);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute CertificationLevelMeaning
   */
  public void setCertificationLevelMeaning(String value)
  {
    setAttributeInternal(CERTIFICATIONLEVELMEANING, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute KnownAs2
   */
  public String getKnownAs2()
  {
    return (String)getAttributeInternal(KNOWNAS2);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute KnownAs2
   */
  public void setKnownAs2(String value)
  {
    setAttributeInternal(KNOWNAS2, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute KnownAs3
   */
  public String getKnownAs3()
  {
    return (String)getAttributeInternal(KNOWNAS3);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute KnownAs3
   */
  public void setKnownAs3(String value)
  {
    setAttributeInternal(KNOWNAS3, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute KnownAs4
   */
  public String getKnownAs4()
  {
    return (String)getAttributeInternal(KNOWNAS4);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute KnownAs4
   */
  public void setKnownAs4(String value)
  {
    setAttributeInternal(KNOWNAS4, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute KnownAs5
   */
  public String getKnownAs5()
  {
    return (String)getAttributeInternal(KNOWNAS5);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute KnownAs5
   */
  public void setKnownAs5(String value)
  {
    setAttributeInternal(KNOWNAS5, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute LocationId
   */
  public Number getLocationId()
  {
    return (Number)getAttributeInternal(LOCATIONID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute LocationId
   */
  public void setLocationId(Number value)
  {
    setAttributeInternal(LOCATIONID, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute PrimaryPhoneCountryCode
   */
  public String getPrimaryPhoneCountryCode()
  {
    return (String)getAttributeInternal(PRIMARYPHONECOUNTRYCODE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PrimaryPhoneCountryCode
   */
  public void setPrimaryPhoneCountryCode(String value)
  {
    setAttributeInternal(PRIMARYPHONECOUNTRYCODE, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute PrimaryPhoneAreaCode
   */
  public String getPrimaryPhoneAreaCode()
  {
    return (String)getAttributeInternal(PRIMARYPHONEAREACODE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PrimaryPhoneAreaCode
   */
  public void setPrimaryPhoneAreaCode(String value)
  {
    setAttributeInternal(PRIMARYPHONEAREACODE, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute PrimaryPhoneNumber
   */
  public String getPrimaryPhoneNumber()
  {
    return (String)getAttributeInternal(PRIMARYPHONENUMBER);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PrimaryPhoneNumber
   */
  public void setPrimaryPhoneNumber(String value)
  {
    setAttributeInternal(PRIMARYPHONENUMBER, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute PrimaryPhoneLineType
   */
  public String getPrimaryPhoneLineType()
  {
    return (String)getAttributeInternal(PRIMARYPHONELINETYPE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PrimaryPhoneLineType
   */
  public void setPrimaryPhoneLineType(String value)
  {
    setAttributeInternal(PRIMARYPHONELINETYPE, value);
  }

  /**
   *
   * Gets the attribute value for the calculated attribute PrimaryPhoneExtension
   */
  public String getPrimaryPhoneExtension()
  {
    return (String)getAttributeInternal(PRIMARYPHONEEXTENSION);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PrimaryPhoneExtension
   */
  public void setPrimaryPhoneExtension(String value)
  {
    setAttributeInternal(PRIMARYPHONEEXTENSION, value);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute Address
   */
  public void setAddress(String value)
  {
    setAttributeInternal(ADDRESS, value);
  }


  public void setPartySiteNumber(String value)
  {
    setAttributeInternal(PARTYSITENUMBER, value);
  }


  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute PrimaryPhone
   */
  public void setPrimaryPhone(String value)
  {
    setAttributeInternal(PRIMARYPHONE, value);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute IsFunctionCalled
   */
  public void setIsFunctionCalled(String value)
  {
    setAttributeInternal(ISFUNCTIONCALLED, value);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute UpdateImage
   */
  public void setUpdateImage(String value)
  {
    setAttributeInternal(UPDATEIMAGE, value);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute IsPrivilegeChecked
   */
  public void setIsPrivilegeChecked(String value)
  {
    setAttributeInternal(ISPRIVILEGECHECKED, value);
  }







}
