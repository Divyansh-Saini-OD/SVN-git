/*===========================================================================+
 |                       Office Depot - Project Simplify                     |
 |            Oracle NAIO/WIPRO/Office Depot/Consulting Organization         |
 +===========================================================================+
 |  FILENAME                                                                 |
 |             ODTasksVOImpl.java                                            |
 |                                                                           |
 |  DESCRIPTION                                                              |
 |     Tasks VO                                                              | 
 |                                                                           |
 |  NOTES                                                                    |
 |                                                                           |
 |                                                                           |
 |  DEPENDENCIES                                                             |
 |    No dependencies.                                                       |
 |                                                                           |
 |  HISTORY                                                                  |
 |                                                                           |
 |    01/OCT/2007 Sudeept Maharana   Created  / Generated                    |
 |                                                                           |
 +===========================================================================*/
package od.oracle.apps.xxcrm.asn.partysite.server;
import com.sun.java.util.collections.HashMap;
import java.sql.SQLException;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;
import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.apps.fnd.framework.OAFwkConstants;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODTasksVOImpl extends OAViewObjectImpl 
{
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODTasksVOImpl()
  {
  }

  /**
       *  method to initialize and execute the query
       * @param partyId  - Party Id
       * @param partySiteId - Party Site ID
       * @return none	   
       */  
  
  public void initQuery(String partyId, String partySiteId)
  {
	if (((OADBTransaction)getDBTransaction()).isLoggingEnabled(OAFwkConstants.PROCEDURE))
		this.writeDiagnostics(this , "initQuery.begin", OAFwkConstants.PROCEDURE);

	try
	{
		setWhereClauseParam(0, new Number(partyId));
		setWhereClauseParam(1, new Number(partySiteId));    
		executeQuery();
	}
	catch(SQLException e)
	{
		this.writeDiagnostics(this , "SQL Exception in ODTasksVOImpl.initQuery"+e, OAFwkConstants.PROCEDURE);
	}

	if (((OADBTransaction)getDBTransaction()).isLoggingEnabled(OAFwkConstants.PROCEDURE))
		this.writeDiagnostics(this , "initQuery.end", OAFwkConstants.PROCEDURE);
  
  }

  /**
       *  method to create a new row to insert into the VO
       * @param custId  - Party Id
       * @param addrId - Party Site ID
       * @param ouId - Org ID
       * @param hashMap - hashmap containing Owner Details
       * @return none	   
       */  
  
  public ODTasksVORowImpl createNewRow(String custId , String addrId, String ouId,HashMap hashMap)
  {
	if (((OADBTransaction)getDBTransaction()).isLoggingEnabled(OAFwkConstants.PROCEDURE))
		this.writeDiagnostics(this , "createNewRow.begin", OAFwkConstants.PROCEDURE);

	ODTasksVORowImpl row = (ODTasksVORowImpl)super.createRow();
    OAApplicationModuleImpl am  =(OAApplicationModuleImpl) getApplicationModule();;
    OADBTransaction txn = (OADBTransaction)am.getTransaction();
    Number taskId = txn.getSequenceValue("JTF_TASKS_S");

    try
    {
        row.setTaskId(taskId);
		row.setCustomerId(new Number(custId));
		row.setAddressId(new Number (addrId));
        row.setOwnerId((Number)hashMap.get("OwnerId"));
        row.setOwnerTypeCode((String)hashMap.get("OwnerTypeCode"));
        row.setDeletedFlag("N");
        row.setDeletededd("DD");
        row.setUpdateueud("UD");
        row.setViewvevd("VD");
        row.setTaskNumber(String.valueOf(txn.getSequenceValue("JTF_TASK_NUMBER_S")));
        row.setEntity("TASK");
        row.setSourceObjectTypeCode("OD_PARTY_SITES");
        row.setSourceObjectId(new Number(addrId));
        row.setTaskPriorityId(new Number(8));
        row.setOwnername((String)hashMap.get("OwnerName"));
        
    }
    catch( SQLException e)
    {
		this.writeDiagnostics(this , "SQL Exception in ODTasksVO.createNewRow"+e, OAFwkConstants.PROCEDURE);
    }

    // Initialize row state as INITIALIZED...
    row.setNewRowState(Row.STATUS_INITIALIZED);

  	if (((OADBTransaction)getDBTransaction()).isLoggingEnabled(OAFwkConstants.PROCEDURE))
    	this.writeDiagnostics(this , "createNewRow.end", OAFwkConstants.PROCEDURE);

    return row;

  }

         
        
  
}