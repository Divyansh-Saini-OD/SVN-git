/*===========================================================================+
 |                       Office Depot - Project Simplify                     |
 |            Oracle NAIO/WIPRO/Office Depot/Consulting Organization         |
 +===========================================================================+
 |  FILENAME                                                                 |
 |             ODSiteBusActOpenLeadsAMImpl.java                              |
 |                                                                           |
 |  DESCRIPTION                                                              |
 |    Application Module for open leads business activities at the party     |
 |    site level.                                                            |
 |                                                                           |
 |  NOTES                                                                    |
 |                                                                           |
 |                                                                           |
 |  DEPENDENCIES                                                             |
 |    This class file is called from ODSiteBusActOpenLeadsCOImpl.java        |
 |                                                                           |
 |  HISTORY                                                                  |
 |                                                                           |
 |    04/09/2007 Ashok Kumar   Created                                       |
 |                                                                           |
 +===========================================================================*/
package od.oracle.apps.xxcrm.asn.partysite.common.server;
import oracle.apps.asn.common.customer.server.BusActOpenLeadsPVOImpl;
import oracle.apps.asn.common.customer.server.BusActOpenLeadsPVORowImpl;
import od.oracle.apps.xxcrm.asn.common.fwk.server.ODASNApplicationModuleImpl;
import oracle.apps.fnd.common.MessageToken;
import oracle.apps.fnd.common.VersionInfo;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.OAFwkConstants;
import oracle.apps.fnd.framework.server.OADBTransaction;

//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODSiteBusActOpenLeadsAMImpl extends ODASNApplicationModuleImpl 
{
  /**
  * Oracle Applications internal source control identifier.
  */
  public static final String RCS_ID="$Header: ODSiteBusActOpenLeadsAMImpl.java 115.01 2007/09/04 18:25:36 Ashokuma noship $";

  /**
  * Oracle Applications internal source control identifier.
  */
  public static final boolean RCS_ID_RECORDED =
    VersionInfo.recordClassVersion(RCS_ID, "od.oracle.apps.xxcrm.asn.partysite.common.server");

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODSiteBusActOpenLeadsAMImpl()
  {
  }

  /**
   * 
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxcrm.asn.partysite.common.server", "ODSiteBusActOpenLeadsAMLocal");
  }


  /**
   * 
   * Container's getter for BusActOpenLeadsPVO
   */
  public BusActOpenLeadsPVOImpl getBusActOpenLeadsPVO()
  {
    return (BusActOpenLeadsPVOImpl)findViewObject("BusActOpenLeadsPVO");
  }

  /**
   *
   * Method to initialize the leads transient VO
   */

  public void initOpenLeadsPVO(String lookupCode)
  {
    final String METHOD_NAME = "xxcrm.asn.partysite.common.server.ODSiteBusActOpenLeadsAMImpl.initOpenLeadsPVO";
    OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();
    boolean isProcLogEnabled = dbTrx.isLoggingEnabled(OAFwkConstants.PROCEDURE);

    if (isProcLogEnabled)
    {
      dbTrx.writeDiagnostics(METHOD_NAME, "Begin", OAFwkConstants.PROCEDURE);
    }

    BusActOpenLeadsPVOImpl voChild = getBusActOpenLeadsPVO();
    if (voChild == null)
    {
       MessageToken[] tokens = { new MessageToken("OBJECT_NAME", "BusActOpenLeadsPVOImpl") };
       throw new OAException("ASN", "ASN_CMMN_OBJ_MISS_ERR", tokens);
    }
      int fetchedRowCount = voChild.getFetchedRowCount();
      if(fetchedRowCount <= 0)
      {
        voChild.setMaxFetchSize(0);
        voChild.insertRow(voChild.createRow());
      }
      BusActOpenLeadsPVORowImpl rowChild = (BusActOpenLeadsPVORowImpl)voChild.first();

       if("XX_SITE_OPEN_LEAD".equals(lookupCode))
       {
          rowChild.setRenderLead(Boolean.TRUE);
       }else
       {
          rowChild.setRenderLead(Boolean.FALSE);          
       }

      if (isProcLogEnabled)
      {
        dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);
      }
  }

  /**
   *
   * Method to initialize the leads VO
   */

  public void initOpenLeadsVO(String partySiteId, String lookupCode)
  {
    final String METHOD_NAME = "xxcrm.asn.partysite.common.server.ODSiteBusActOpenLeadsAMImpl.initOpenLeadsVO";
    OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();
    boolean isProcLogEnabled = dbTrx.isLoggingEnabled(OAFwkConstants.PROCEDURE);

    if (isProcLogEnabled)
    {
      dbTrx.writeDiagnostics(METHOD_NAME, "Begin", OAFwkConstants.PROCEDURE);
    }
    if(partySiteId != null && "XX_SITE_OPEN_LEAD".equals(lookupCode))
    {
       ODSiteOpenLeadsVOImpl vo = getODSiteOpenLeadsVO();
        if (vo == null)
        {
          MessageToken[] tokens = { new MessageToken("OBJECT_NAME", "ODSiteOpenLeadsVOImpl") };
          throw new OAException("ASN", "ASN_CMMN_OBJ_MISS_ERR", tokens);
        }
        vo.setMaxFetchSize(-1);
        vo.initQuery(partySiteId);
    }
    
    if (isProcLogEnabled)
    {
       dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);
    }

  }

  /**
   *
   * Method to reset the Leads VO
   */

  public void resetQuery()
  {
    final String METHOD_NAME = "xxcrm.asn.partysite.common.server.ODSiteBusActOpenLeadsAMImpl.resetQuery";
    OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();
    boolean isProcLogEnabled = dbTrx.isLoggingEnabled(OAFwkConstants.PROCEDURE);

    if (isProcLogEnabled)
    {
      dbTrx.writeDiagnostics(METHOD_NAME, "Begin", OAFwkConstants.PROCEDURE);
    }
      ODSiteOpenLeadsVOImpl vo1 = getODSiteOpenLeadsVO();
      if (vo1 == null)
      {
        MessageToken[] tokens = { new MessageToken("OBJECT_NAME", "ODSiteOpenLeadsVOImpl") };
        throw new OAException("ASN", "ASN_CMMN_OBJ_MISS_ERR", tokens);
      }
      if(vo1.isPreparedForExecution())
      {
        vo1.setPreparedForExecution(false);
      }

      if (isProcLogEnabled)
      {
        dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);
      }

  }

  /**
   * 
   * Container's getter for ODSiteOpenLeadsVO
   */
  public ODSiteOpenLeadsVOImpl getODSiteOpenLeadsVO()
  {
    return (ODSiteOpenLeadsVOImpl)findViewObject("ODSiteOpenLeadsVO");
  }

}