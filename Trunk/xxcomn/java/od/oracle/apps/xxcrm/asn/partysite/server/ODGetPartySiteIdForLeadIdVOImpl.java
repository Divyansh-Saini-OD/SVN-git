package od.oracle.apps.xxcrm.asn.partysite.server;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;
import oracle.apps.asn.common.schema.server.ASNUtil;
import oracle.apps.fnd.common.MessageToken;
import oracle.apps.fnd.common.VersionInfo;
import oracle.apps.fnd.framework.OAFwkConstants;
import oracle.apps.fnd.framework.server.OADBTransaction;

import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODGetPartySiteIdForLeadIdVOImpl extends OAViewObjectImpl 
{
 /**
  * Oracle Applications internal source control identifier.
  */
  public static final String RCS_ID="$Header: ODGetPartySiteIdForLeadIdVOImpl.java 115.01 2007/09/04 18:25:36 Ashokuma noship $";

 /**
  * Oracle Applications internal source control identifier.
  */
  public static final boolean RCS_ID_RECORDED =
    VersionInfo.recordClassVersion(RCS_ID, "od.oracle.apps.xxcrm.asn.partysite.server");

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODGetPartySiteIdForLeadIdVOImpl()
  {
  }

  /**
   * Initializes and executes the query.
   *
   * @param salesLeadId   Opportunity Identifier
   * @param customerId    Party Identifier   
   **/

  public void initQuery(String salesLeadId, String customerId)
  {
    final String METHOD_NAME = "xxcrm.asn.partysite.server.ODGetPartySiteIdForLeadIdVOImpl.initQuery";
    OADBTransaction dbTrx = (OADBTransaction)getDBTransaction();
    boolean isProcLogEnabled = dbTrx.isLoggingEnabled(OAFwkConstants.PROCEDURE);
    if (isProcLogEnabled)  {
      dbTrx.writeDiagnostics(METHOD_NAME, "Begin", OAFwkConstants.PROCEDURE);
      StringBuffer buf = new StringBuffer();
      buf.append("Input Parameters: salesLeadId = ");
      buf.append(salesLeadId);
      buf.append(" and customerId = ");
      buf.append(customerId);      
      dbTrx.writeDiagnostics(METHOD_NAME,buf.toString(), OAFwkConstants.PROCEDURE);
    }

    Number salesId = null;
    Number custId = null;    

    setWhereClauseParams(null); // Always reset

    if ((salesLeadId != null) && (!("".equals(salesLeadId.trim()))) && 
        (customerId != null) && (!("".equals(customerId.trim())))
       )
    {
        MessageToken[] token1 = { new MessageToken("IDNAME", salesLeadId) };
        salesId = ASNUtil.stringToJboNumber
                           (salesLeadId, "ASN_CMMN_STR_TO_JBONUM_ERR", token1);

        MessageToken[] token2 = { new MessageToken("IDNAME", customerId) };
        custId = ASNUtil.stringToJboNumber
                           (customerId, "ASN_CMMN_STR_TO_JBONUM_ERR", token2);

        setWhereClauseParam(0, salesId);
        setWhereClauseParam(1, custId);        
    }
    executeQuery();
  }  
}