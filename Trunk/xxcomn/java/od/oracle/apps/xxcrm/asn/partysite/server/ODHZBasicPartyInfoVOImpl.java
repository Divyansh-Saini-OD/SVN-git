package od.oracle.apps.xxcrm.asn.partysite.server;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;
import oracle.apps.asn.common.schema.server.ASNUtil;
import oracle.apps.fnd.common.MessageToken;
import oracle.apps.fnd.common.VersionInfo;
import oracle.apps.fnd.framework.OAFwkConstants;
import oracle.apps.fnd.framework.server.OADBTransaction;

import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODHZBasicPartyInfoVOImpl extends OAViewObjectImpl 
{
 /**
  * Oracle Applications internal source control identifier.
  */
  public static final String RCS_ID="$Header: ODHZBasicPartyInfoVOImpl.java 115.01 2007/09/04 18:25:36 Ashokuma noship $";

 /**
  * Oracle Applications internal source control identifier.
  */
  public static final boolean RCS_ID_RECORDED =
    VersionInfo.recordClassVersion(RCS_ID, "od.oracle.apps.xxcrm.asn.partysite.server");
    
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODHZBasicPartyInfoVOImpl()
  {
  }

  /** Initializes and executes the query.
   *
   * @param partyId    Party Identifier
   */
  public void initQuery(String partyId)
  { 
    final String METHOD_NAME = "xxcrm.asn.partysite.server.ODHZBasicPartyInfoVOImpl.initQuery";
    OADBTransaction dbTrx = (OADBTransaction)getDBTransaction();
    boolean isProcLogEnabled = dbTrx.isLoggingEnabled(OAFwkConstants.PROCEDURE);
    if (isProcLogEnabled)  {
      dbTrx.writeDiagnostics(METHOD_NAME, "Begin", OAFwkConstants.PROCEDURE);
      StringBuffer buf = new StringBuffer();
      buf.append("Input Parameters: partyId = ");
      buf.append(partyId);
      dbTrx.writeDiagnostics(METHOD_NAME,buf.toString(), OAFwkConstants.PROCEDURE);
    }

    Number custId = null;

    setWhereClauseParams(null); // Always reset

    if ((partyId != null) && (!("".equals(partyId.trim()))))
    {
        MessageToken[] tokens = { new MessageToken("IDNAME", partyId) };
        custId = ASNUtil.stringToJboNumber
                           (partyId, "ASN_CMMN_STR_TO_JBONUM_ERR", tokens);
        setWhereClauseParam(0, custId);
    }
    executeQuery();
  }
  
}