package od.oracle.apps.xxcrm.customer.account.server;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODCustAcctSetupDocumentVORowImpl extends OAViewRowImpl 
{


  protected static final int ACCOUNTREQUESTID = 0;
  protected static final int DOCUMENTID = 1;
  protected static final int DOCUMENTTYPE = 2;
  protected static final int DOCUMENTNAME = 3;
  protected static final int CREATEDBY = 4;
  protected static final int CREATIONDATE = 5;
  protected static final int LASTUPDATEDBY = 6;
  protected static final int LASTUPDATEDATE = 7;
  protected static final int LASTUPDATELOGIN = 8;
  protected static final int DETAIL = 9;
  protected static final int FREQUENCY = 10;
  protected static final int INDIRECT = 11;
  protected static final int INCLBACKUPINV = 12;
  protected static final int SELECTFLAG = 13;
  protected static final int TOTALSIMAGE = 14;
  protected static final int PAGEBREAKIMAGE = 15;
  protected static final int SORTIMAGE = 16;
  protected static final int DELETEFLAG = 17;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODCustAcctSetupDocumentVORowImpl()
  {
  }

  /**
   * 
   * Gets ODCustAcctSetupDocumentEO entity object.
   */
  public od.oracle.apps.xxcrm.customer.account.schema.server.ODCustAcctSetupDocumentEOImpl getODCustAcctSetupDocumentEO()
  {
    return (od.oracle.apps.xxcrm.customer.account.schema.server.ODCustAcctSetupDocumentEOImpl)getEntity(0);
  }

  /**
   * 
   * Gets the attribute value for ACCOUNT_REQUEST_ID using the alias name AccountRequestId
   */
  public Number getAccountRequestId()
  {
    return (Number)getAttributeInternal(ACCOUNTREQUESTID);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ACCOUNT_REQUEST_ID using the alias name AccountRequestId
   */
  public void setAccountRequestId(Number value)
  {
    setAttributeInternal(ACCOUNTREQUESTID, value);
  }

  /**
   * 
   * Gets the attribute value for DOCUMENT_ID using the alias name DocumentId
   */
  public Number getDocumentId()
  {
    return (Number)getAttributeInternal(DOCUMENTID);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DOCUMENT_ID using the alias name DocumentId
   */
  public void setDocumentId(Number value)
  {
    setAttributeInternal(DOCUMENTID, value);
  }

  /**
   * 
   * Gets the attribute value for DOCUMENT_TYPE using the alias name DocumentType
   */
  public String getDocumentType()
  {
    return (String)getAttributeInternal(DOCUMENTTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DOCUMENT_TYPE using the alias name DocumentType
   */
  public void setDocumentType(String value)
  {
    setAttributeInternal(DOCUMENTTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for DOCUMENT_NAME using the alias name DocumentName
   */
  public String getDocumentName()
  {
    return (String)getAttributeInternal(DOCUMENTNAME);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DOCUMENT_NAME using the alias name DocumentName
   */
  public void setDocumentName(String value)
  {
    setAttributeInternal(DOCUMENTNAME, value);
  }

  /**
   * 
   * Gets the attribute value for CREATED_BY using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CREATION_DATE using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for DETAIL using the alias name Detail
   */
  public String getDetail()
  {
    return (String)getAttributeInternal(DETAIL);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DETAIL using the alias name Detail
   */
  public void setDetail(String value)
  {
    setAttributeInternal(DETAIL, value);
  }

  /**
   * 
   * Gets the attribute value for FREQUENCY using the alias name Frequency
   */
  public String getFrequency()
  {
    return (String)getAttributeInternal(FREQUENCY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for FREQUENCY using the alias name Frequency
   */
  public void setFrequency(String value)
  {
    setAttributeInternal(FREQUENCY, value);
  }

  /**
   * 
   * Gets the attribute value for INDIRECT using the alias name Indirect
   */
  public String getIndirect()
  {
    return (String)getAttributeInternal(INDIRECT);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for INDIRECT using the alias name Indirect
   */
  public void setIndirect(String value)
  {
    setAttributeInternal(INDIRECT, value);
  }

  /**
   * 
   * Gets the attribute value for INCL_BACKUP_INV using the alias name InclBackupInv
   */
  public String getInclBackupInv()
  {
    return (String)getAttributeInternal(INCLBACKUPINV);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for INCL_BACKUP_INV using the alias name InclBackupInv
   */
  public void setInclBackupInv(String value)
  {
    setAttributeInternal(INCLBACKUPINV, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ACCOUNTREQUESTID:
        return getAccountRequestId();
      case DOCUMENTID:
        return getDocumentId();
      case DOCUMENTTYPE:
        return getDocumentType();
      case DOCUMENTNAME:
        return getDocumentName();
      case CREATEDBY:
        return getCreatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case DETAIL:
        return getDetail();
      case FREQUENCY:
        return getFrequency();
      case INDIRECT:
        return getIndirect();
      case INCLBACKUPINV:
        return getInclBackupInv();
      case SELECTFLAG:
        return getSelectFlag();
      case TOTALSIMAGE:
        return getTotalsImage();
      case PAGEBREAKIMAGE:
        return getPageBreakImage();
      case SORTIMAGE:
        return getSortImage();
      case DELETEFLAG:
        return getDeleteFlag();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ACCOUNTREQUESTID:
        setAccountRequestId((Number)value);
        return;
      case DOCUMENTID:
        setDocumentId((Number)value);
        return;
      case DOCUMENTTYPE:
        setDocumentType((String)value);
        return;
      case DOCUMENTNAME:
        setDocumentName((String)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case DETAIL:
        setDetail((String)value);
        return;
      case FREQUENCY:
        setFrequency((String)value);
        return;
      case INDIRECT:
        setIndirect((String)value);
        return;
      case INCLBACKUPINV:
        setInclBackupInv((String)value);
        return;
      case SELECTFLAG:
        setSelectFlag((String)value);
        return;
      case TOTALSIMAGE:
        setTotalsImage((String)value);
        return;
      case PAGEBREAKIMAGE:
        setPageBreakImage((String)value);
        return;
      case SORTIMAGE:
        setSortImage((String)value);
        return;
      case DELETEFLAG:
        setDeleteFlag((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute SelectFlag
   */
  public String getSelectFlag()
  {
    return (String)getAttributeInternal(SELECTFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute SelectFlag
   */
  public void setSelectFlag(String value)
  {
    setAttributeInternal(SELECTFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute TotalsImage
   */
  public String getTotalsImage()
  {
    return (String)getAttributeInternal(TOTALSIMAGE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute TotalsImage
   */
  public void setTotalsImage(String value)
  {
    setAttributeInternal(TOTALSIMAGE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute PageBreakImage
   */
  public String getPageBreakImage()
  {
    return (String)getAttributeInternal(PAGEBREAKIMAGE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute PageBreakImage
   */
  public void setPageBreakImage(String value)
  {
    setAttributeInternal(PAGEBREAKIMAGE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute SortImage
   */
  public String getSortImage()
  {
    return (String)getAttributeInternal(SORTIMAGE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute SortImage
   */
  public void setSortImage(String value)
  {
    setAttributeInternal(SORTIMAGE, value);
  }

  /**
   * 
   * Gets the attribute value for DELETE_FLAG using the alias name DeleteFlag
   */
  public String getDeleteFlag()
  {
    return (String)getAttributeInternal(DELETEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DELETE_FLAG using the alias name DeleteFlag
   */
  public void setDeleteFlag(String value)
  {
    setAttributeInternal(DELETEFLAG, value);
  }
}