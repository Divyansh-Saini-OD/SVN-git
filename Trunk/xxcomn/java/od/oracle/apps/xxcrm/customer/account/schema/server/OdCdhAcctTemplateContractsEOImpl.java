package od.oracle.apps.xxcrm.customer.account.schema.server;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class OdCdhAcctTemplateContractsEOImpl extends OAEntityImpl 
{
  protected static final int SETUPCONTRACTTEMPLATEID = 0;
  protected static final int CONTRACTTEMPLATEID = 1;
  protected static final int ACCOUNTREQUESTID = 2;
  protected static final int CONTRACTNUMBER = 3;
  protected static final int CONTRACTDESCRIPTION = 4;
  protected static final int PRIORITY = 5;
  protected static final int CUSTOM = 6;
  protected static final int CREATEDBY = 7;
  protected static final int CREATIONDATE = 8;
  protected static final int LASTUPDATEDBY = 9;
  protected static final int LASTUPDATEDATE = 10;
  protected static final int LASTUPDATELOGIN = 11;
  protected static final int DELETEFLAG = 12;
  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public OdCdhAcctTemplateContractsEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxcrm.customer.account.schema.server.OdCdhAcctTemplateContractsEO");
    }
    return mDefinitionObject;
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**
   * 
   * Add locking logic here.
   */
  public void lock()
  {
    super.lock();
  }

  /**
   * 
   * Custom DML update/insert/delete logic here.
   */
  protected void doDML(int operation, TransactionEvent e)
  {
    super.doDML(operation, e);
  }

  /**
   * 
   * Gets the attribute value for SetupContractTemplateId, using the alias name SetupContractTemplateId
   */
  public Number getSetupContractTemplateId()
  {
    return (Number)getAttributeInternal(SETUPCONTRACTTEMPLATEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SetupContractTemplateId
   */
  public void setSetupContractTemplateId(Number value)
  {
    setAttributeInternal(SETUPCONTRACTTEMPLATEID, value);
  }

  /**
   * 
   * Gets the attribute value for ContractTemplateId, using the alias name ContractTemplateId
   */
  public Number getContractTemplateId()
  {
    return (Number)getAttributeInternal(CONTRACTTEMPLATEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ContractTemplateId
   */
  public void setContractTemplateId(Number value)
  {
    setAttributeInternal(CONTRACTTEMPLATEID, value);
  }

  /**
   * 
   * Gets the attribute value for AccountRequestId, using the alias name AccountRequestId
   */
  public Number getAccountRequestId()
  {
    return (Number)getAttributeInternal(ACCOUNTREQUESTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AccountRequestId
   */
  public void setAccountRequestId(Number value)
  {
    setAttributeInternal(ACCOUNTREQUESTID, value);
  }

  /**
   * 
   * Gets the attribute value for ContractNumber, using the alias name ContractNumber
   */
  public String getContractNumber()
  {
    return (String)getAttributeInternal(CONTRACTNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ContractNumber
   */
  public void setContractNumber(String value)
  {
    setAttributeInternal(CONTRACTNUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for ContractDescription, using the alias name ContractDescription
   */
  public String getContractDescription()
  {
    return (String)getAttributeInternal(CONTRACTDESCRIPTION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ContractDescription
   */
  public void setContractDescription(String value)
  {
    setAttributeInternal(CONTRACTDESCRIPTION, value);
  }

  /**
   * 
   * Gets the attribute value for Priority, using the alias name Priority
   */
  public String getPriority()
  {
    return (String)getAttributeInternal(PRIORITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Priority
   */
  public void setPriority(String value)
  {
    setAttributeInternal(PRIORITY, value);
  }

  /**
   * 
   * Gets the attribute value for Custom, using the alias name Custom
   */
  public String getCustom()
  {
    return (String)getAttributeInternal(CUSTOM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Custom
   */
  public void setCustom(String value)
  {
    setAttributeInternal(CUSTOM, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for DeleteFlag, using the alias name DeleteFlag
   */
  public String getDeleteFlag()
  {
    return (String)getAttributeInternal(DELETEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DeleteFlag
   */
  public void setDeleteFlag(String value)
  {
    setAttributeInternal(DELETEFLAG, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case SETUPCONTRACTTEMPLATEID:
        return getSetupContractTemplateId();
      case CONTRACTTEMPLATEID:
        return getContractTemplateId();
      case ACCOUNTREQUESTID:
        return getAccountRequestId();
      case CONTRACTNUMBER:
        return getContractNumber();
      case CONTRACTDESCRIPTION:
        return getContractDescription();
      case PRIORITY:
        return getPriority();
      case CUSTOM:
        return getCustom();
      case CREATEDBY:
        return getCreatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case DELETEFLAG:
        return getDeleteFlag();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case SETUPCONTRACTTEMPLATEID:
        setSetupContractTemplateId((Number)value);
        return;
      case CONTRACTTEMPLATEID:
        setContractTemplateId((Number)value);
        return;
      case ACCOUNTREQUESTID:
        setAccountRequestId((Number)value);
        return;
      case CONTRACTNUMBER:
        setContractNumber((String)value);
        return;
      case CONTRACTDESCRIPTION:
        setContractDescription((String)value);
        return;
      case PRIORITY:
        setPriority((String)value);
        return;
      case CUSTOM:
        setCustom((String)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case DELETEFLAG:
        setDeleteFlag((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number setupContractTemplateId)
  {
    return new Key(new Object[] {setupContractTemplateId});
  }
}