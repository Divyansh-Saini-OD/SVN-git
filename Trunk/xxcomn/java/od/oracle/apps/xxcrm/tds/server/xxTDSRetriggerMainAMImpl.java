package od.oracle.apps.xxcrm.tds.server;

import java.sql.Types;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OADBTransactionImpl;

import oracle.jdbc.OracleCallableStatement;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class xxTDSRetriggerMainAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public xxTDSRetriggerMainAMImpl() {
    }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("od.oracle.apps.xxcrm.tds.server", /* package name */
      "xxTDSRetriggerMainAMLocal" /* Configuration Name */);
    }

    /**Container's getter for xxTDSRetriggerActionListVO1
     */
    public xxTDSRetriggerActionListVOImpl getxxTDSRetriggerActionListVO1() {
        return (xxTDSRetriggerActionListVOImpl)findViewObject("xxTDSRetriggerActionListVO1");
    }

    /**Container's getter for xxTDSRetriggerReprocessActionVO1
     */
    public xxTDSRetriggerReprocessActionVOImpl getxxTDSRetriggerReprocessActionVO1() {
        return (xxTDSRetriggerReprocessActionVOImpl)findViewObject("xxTDSRetriggerReprocessActionVO1");
    }

    /**Container's getter for xxTDSRetriggerNoConnectVO1
     */
    public xxTDSRetriggerNoConnectVOImpl getxxTDSRetriggerNoConnectVO1() {
        return (xxTDSRetriggerNoConnectVOImpl)findViewObject("xxTDSRetriggerNoConnectVO1");
    }
    
    public void getSearchResults(String actionValue,String dateFrom){
    
        if (actionValue.equals("NC")) {
            xxTDSRetriggerNoConnectVOImpl vo =  getxxTDSRetriggerNoConnectVO1();
            vo.executeNoConnectQuery(dateFrom);
        }
        if (actionValue.equals("NT")) {
            xxTDSRetriggerNoTasksVOImpl vo = getxxTDSRetriggerNoTasksVO1() ;
            //vo.executeQuery();
            vo.executeNoTaskQuery(dateFrom);
        }
                
    } // end of listing of results from the serach criteria of main page

    /**Container's getter for xxTDSRetriggerNoTasksVO1
     */
    public xxTDSRetriggerNoTasksVOImpl getxxTDSRetriggerNoTasksVO1() {
        return (xxTDSRetriggerNoTasksVOImpl)findViewObject("xxTDSRetriggerNoTasksVO1");
    }
    
    public String executeDateDisplay(){
        xxGetDateDisplayVOImpl vo=getxxGetDateDisplayVO1();
        vo.executeQuery();
        String text = vo.first().getAttribute("Datedisplay").toString(); 
        System.out.println("Text ="+text);
        return text;
    }

    /**Container's getter for xxGetDateDisplayVO1
     */
    public xxGetDateDisplayVOImpl getxxGetDateDisplayVO1() {
        return (xxGetDateDisplayVOImpl)findViewObject("xxGetDateDisplayVO1");
    }
    

        public String reprocessOneNC(String fromDate, String incNum, String taskId, 
                                     String taskDesc, String taskObjNum) {
            OADBTransaction oadbtransaction = (OADBTransaction)getTransaction();
            OADBTransactionImpl oadbtransactionimpl = 
                (OADBTransactionImpl)getTransaction();

            String retValues;
            int taskObjNumber = Integer.valueOf(taskObjNum).intValue();

            StringBuffer str = new StringBuffer();
            str.append(" BEGIN ");
            str.append("  XX_TDS_AUTO_REPROCESS_PKG.REPROCESS_NC_ONE( ");
            str.append("        P_FROM_DATE           => :1, ");
            str.append("        P_INCIDENT_NUMBER           => :2, ");
            str.append("       P_TASK_ID   => :3,  ");
            str.append("       P_TASK_DESC   => :4 , ");
            str.append("       P_TASK_OBJ_NUM  => :5 , ");
            str.append("       X_RETURN_VAL    => :6  ");
            str.append("    ); ");
            str.append(" END; ");
            System.out.println("str=" + str);
            System.out.println("fromDate=" + fromDate);
            System.out.println("taskid=" + taskId);
            System.out.println("taskDesc=" + taskDesc);
            System.out.println("taskObjNum=" + taskObjNumber);

            OracleCallableStatement oraclecallablestatement = 
                (OracleCallableStatement)oadbtransaction.createCallableStatement(str.toString(), 
                                                                                 1);

            try {
                oraclecallablestatement.setString(1, fromDate);
                oraclecallablestatement.setString(2, incNum);
                oraclecallablestatement.setString(3, taskId);
                oraclecallablestatement.setString(4, taskDesc);
                oraclecallablestatement.setInt(5, taskObjNumber);

                oraclecallablestatement.registerOutParameter(6, Types.VARCHAR);

                oraclecallablestatement.execute();
                retValues = oraclecallablestatement.getString(6);

            } catch (Exception e) {
                throw OAException.wrapperException(e);
            }
			finally {
               try {
				   if (oraclecallablestatement!=null)
				     oraclecallablestatement.close();
				   }
               catch(Exception e) {
				   throw OAException.wrapperException(e);
			   }
			}
            return retValues;

        }

        public String reprocessOneNT(String fromDate, String incNum) {
            OADBTransaction oadbtransaction = (OADBTransaction)getTransaction();
            OADBTransactionImpl oadbtransactionimpl = 
                (OADBTransactionImpl)getTransaction();

            String retValues;

            StringBuffer str = new StringBuffer();
            str.append(" BEGIN ");
            str.append("  XX_TDS_AUTO_REPROCESS_PKG.REPROCESS_NT_ONE( ");
            str.append("        P_FROM_DATE           => :1, ");
            str.append("        P_INCIDENT_NUM           => :2, ");
            str.append("       X_RETURN_VAL    => :3  ");
            str.append("    ); ");
            str.append(" END; ");
            System.out.println("str=" + str);
            System.out.println("fromDate=" + fromDate);
            System.out.println("incNum=" + incNum);

            OracleCallableStatement oraclecallablestatement = 
                (OracleCallableStatement)oadbtransaction.createCallableStatement(str.toString(), 
                                                                                 1);

            try {
                oraclecallablestatement.setString(1, fromDate);
                oraclecallablestatement.setString(2, incNum);

         
                oraclecallablestatement.registerOutParameter(3, Types.VARCHAR);

                oraclecallablestatement.execute();
                retValues = oraclecallablestatement.getString(3);

            } catch (Exception e) {
                throw OAException.wrapperException(e);
            }
			finally {
            try {
			   if (oraclecallablestatement!=null)
			     oraclecallablestatement.close();
			   }
               catch(Exception e) {}
			}
            return retValues;

        }

}
