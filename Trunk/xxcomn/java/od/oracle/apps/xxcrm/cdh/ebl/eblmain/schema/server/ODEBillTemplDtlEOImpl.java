package od.oracle.apps.xxcrm.cdh.ebl.eblmain.schema.server;

/*
  -- +===========================================================================+
  -- |                  Office Depot - eBilling Project                          |
  -- |                         WIPRO/Office Depot                                |
  -- +===========================================================================+
  -- | Name        :  ODEBillTemplDtlEOImpl                                      |
  -- | Description :                                                             |
  -- | This is the Entity Object for eBill Template Details                      |
  -- |                                                                           |
  -- |                                                                           |
  -- |                                                                           |
  -- |Change Record:                                                             |
  -- |===============                                                            |
  -- |Version  Date        Author               Remarks                          |
  -- |======== =========== ================     ================================ |
  -- |DRAFT 1A 15-JAN-2010 Devi Viswanathan     Initial draft version            |
  -- |1.1      12-Aug-2013 Darshini             I2186 - Modified for R12 Upgrade |
  -- |                                          Retrofit                         |
  -- |1.2      16-FEB-2017 Havish Kasina        Closing the leaked connection/   |
  -- |                                          statement                        | 
  -- |                                                                           |
  -- |===========================================================================|
  -- | Subversion Info:                                                          |
  -- | $HeadURL: http://svn.na.odcorp.net/svn/od/common/trunk/xxcomn/java/od/oracle/apps/xxcrm/cdh/ebl/eblmain/schema/server/ODEBillTemplDtlEOImpl.java $                                                               |
  -- | $Rev: 269043 $                                                                   |
  -- | $Date: 2017-04-17 08:39:04 -0400 (Mon, 17 Apr 2017) $                                                                  |
  -- |                                                                           |
  -- +===========================================================================+
*/



import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
import oracle.jbo.Key;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------
import oracle.apps.fnd.framework.server.OAPlsqlEntityImpl;
import java.sql.Types;
import java.sql.SQLException;
/*Commented and added by Darshini for R12 Upgrade Retrofit
import oracle.jdbc.driver.OracleCallableStatement;*/
import oracle.jdbc.OracleCallableStatement;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OADBTransactionImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
/*Commented and added by Darshini for R12 Upgrade Retrofit
import oracle.jdbc.driver.OraclePreparedStatement;*/
import oracle.jdbc.OraclePreparedStatement;
import oracle.apps.fnd.framework.OAAttrValException;
import oracle.jdbc.OracleResultSet;
import od.oracle.apps.xxcrm.cdh.ebl.server.ODUtil;
import com.sun.java.util.collections.ArrayList;
import java.sql.ResultSet;
import oracle.jbo.Key;
import oracle.apps.fnd.framework.OARowValException;


public class ODEBillTemplDtlEOImpl extends OAPlsqlEntityImpl {
    public static final int EBLTEMPLID = 0;
    public static final int CUSTDOCID = 1;
    public static final int RECORDTYPE = 2;
    public static final int SEQ = 3;
    public static final int FIELDID = 4;
    public static final int LABEL = 5;
    public static final int STARTPOS = 6;
    public static final int FIELDLEN = 7;
    public static final int DATAFORMAT = 8;
    public static final int STRINGFUN = 9;
    public static final int SORTORDER = 10;
    public static final int SORTTYPE = 11;
    public static final int MANDATORY = 12;
    public static final int SEQSTARTVAL = 13;
    public static final int SEQINCVAL = 14;
    public static final int SEQRESETFIELD = 15;
    public static final int CONSTANTVALUE = 16;
    public static final int ALIGNMENT = 17;
    public static final int PADDINGCHAR = 18;
    public static final int DEFAULTIFNULL = 19;
    public static final int COMMENTS = 20;
    public static final int ATTRIBUTE1 = 21;
    public static final int ATTRIBUTE2 = 22;
    public static final int ATTRIBUTE3 = 23;
    public static final int ATTRIBUTE4 = 24;
    public static final int ATTRIBUTE5 = 25;
    public static final int ATTRIBUTE6 = 26;
    public static final int ATTRIBUTE7 = 27;
    public static final int ATTRIBUTE8 = 28;
    public static final int ATTRIBUTE9 = 29;
    public static final int ATTRIBUTE10 = 30;
    public static final int ATTRIBUTE11 = 31;
    public static final int ATTRIBUTE12 = 32;
    public static final int ATTRIBUTE13 = 33;
    public static final int ATTRIBUTE14 = 34;
    public static final int ATTRIBUTE15 = 35;
    public static final int ATTRIBUTE16 = 36;
    public static final int ATTRIBUTE17 = 37;
    public static final int ATTRIBUTE18 = 38;
    public static final int ATTRIBUTE19 = 39;
    public static final int ATTRIBUTE20 = 40;
    public static final int LASTUPDATEDATE = 41;
    public static final int LASTUPDATEDBY = 42;
    public static final int CREATIONDATE = 43;
    public static final int CREATEDBY = 44;
    public static final int LASTUPDATELOGIN = 45;
    public static final int REQUESTID = 46;
    public static final int PROGRAMAPPLICATIONID = 47;
    public static final int PROGRAMID = 48;
    public static final int PROGRAMUPDATEDATE = 49;
    public static final int WHUPDATEDATE = 50;
    public static final int CONCATENATE = 51;
    public static final int SPLIT = 52;
    public static final int BASEFIELDID = 53;
    public static final int SPLITFIELDID = 54;
    public static final int REPEATTOTALFLAG = 55;


    private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODEBillTemplDtlEOImpl()
  {
  }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxcrm.cdh.ebl.eblmain.schema.server.ODEBillTemplDtlEO");
        }
        return mDefinitionObject;
    }

    /**
     * 
     * Add attribute defaulting logic in this method.
     */
    public void create(AttributeList attributeList)
  {
    super.create(attributeList);
  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**
   * 
   * Add locking logic here.
   */
  public void lock()
  {
  //  super.lock();
  }

    /**
   *
   * Custom DML update/insert/delete logic here.
   */
/*  protected void doDML(int operation, TransactionEvent e)
  {
    super.doDML(operation, e);
  }*/

  /**
   * 
   * Gets the attribute value for EblTemplId, using the alias name EblTemplId
   */
  public Number getEblTemplId()
  {
    return (Number)getAttributeInternal(EBLTEMPLID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EblTemplId
   */
  public void setEblTemplId(Number value)
  {
    setAttributeInternal(EBLTEMPLID, value);
  }

  /**
   * 
   * Gets the attribute value for CustDocId, using the alias name CustDocId
   */
  public Number getCustDocId()
  {
    return (Number)getAttributeInternal(CUSTDOCID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CustDocId
   */
  public void setCustDocId(Number value)
  {
    setAttributeInternal(CUSTDOCID, value);
  }

  /**
   * 
   * Gets the attribute value for RecordType, using the alias name RecordType
   */
  public String getRecordType()
  {
    return (String)getAttributeInternal(RECORDTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RecordType
   */
  public void setRecordType(String value)
  {
    setAttributeInternal(RECORDTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for Seq, using the alias name Seq
   */
  public Number getSeq()
  {
    return (Number)getAttributeInternal(SEQ);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Seq
   */
  public void setSeq(Number value)
  {
    setAttributeInternal(SEQ, value);
  }

  /**
   * 
   * Gets the attribute value for FieldId, using the alias name FieldId
   */
  public Number getFieldId()
  {
    return (Number)getAttributeInternal(FIELDID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FieldId
   */
  public void setFieldId(Number value)
  {
    setAttributeInternal(FIELDID, value);
  }

  /**
   * 
   * Gets the attribute value for Label, using the alias name Label
   */
  public String getLabel()
  {
    return (String)getAttributeInternal(LABEL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Label
   */
  public void setLabel(String value)
  {
    setAttributeInternal(LABEL, value);
  }

  /**
   * 
   * Gets the attribute value for StartPos, using the alias name StartPos
   */
  public Number getStartPos()
  {
    return (Number)getAttributeInternal(STARTPOS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for StartPos
   */
  public void setStartPos(Number value)
  {
    setAttributeInternal(STARTPOS, value);
  }

  /**
   * 
   * Gets the attribute value for FieldLen, using the alias name FieldLen
   */
  public Number getFieldLen()
  {
    return (Number)getAttributeInternal(FIELDLEN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FieldLen
   */
  public void setFieldLen(Number value)
  {
    setAttributeInternal(FIELDLEN, value);
  }

  /**
   * 
   * Gets the attribute value for DataFormat, using the alias name DataFormat
   */
  public String getDataFormat()
  {
    return (String)getAttributeInternal(DATAFORMAT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DataFormat
   */
  public void setDataFormat(String value)
  {
    setAttributeInternal(DATAFORMAT, value);
  }

  /**
   * 
   * Gets the attribute value for StringFun, using the alias name StringFun
   */
  public String getStringFun()
  {
    return (String)getAttributeInternal(STRINGFUN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for StringFun
   */
  public void setStringFun(String value)
  {
    setAttributeInternal(STRINGFUN, value);
  }

  /**
   * 
   * Gets the attribute value for SortOrder, using the alias name SortOrder
   */
  public Number getSortOrder()
  {
    return (Number)getAttributeInternal(SORTORDER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SortOrder
   */
  public void setSortOrder(Number value)
  {
    setAttributeInternal(SORTORDER, value);
  }

  /**
   * 
   * Gets the attribute value for SortType, using the alias name SortType
   */
  public String getSortType()
  {
    return (String)getAttributeInternal(SORTTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SortType
   */
  public void setSortType(String value)
  {
    setAttributeInternal(SORTTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for Mandatory, using the alias name Mandatory
   */
  public String getMandatory()
  {
    return (String)getAttributeInternal(MANDATORY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Mandatory
   */
  public void setMandatory(String value)
  {
    setAttributeInternal(MANDATORY, value);
  }

  /**
   * 
   * Gets the attribute value for SeqStartVal, using the alias name SeqStartVal
   */
  public Number getSeqStartVal()
  {
    return (Number)getAttributeInternal(SEQSTARTVAL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SeqStartVal
   */
  public void setSeqStartVal(Number value)
  {
    setAttributeInternal(SEQSTARTVAL, value);
  }

  /**
   * 
   * Gets the attribute value for SeqIncVal, using the alias name SeqIncVal
   */
  public Number getSeqIncVal()
  {
    return (Number)getAttributeInternal(SEQINCVAL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SeqIncVal
   */
  public void setSeqIncVal(Number value)
  {
    setAttributeInternal(SEQINCVAL, value);
  }

  /**
   * 
   * Gets the attribute value for SeqResetField, using the alias name SeqResetField
   */
  public Number getSeqResetField()
  {
    return (Number)getAttributeInternal(SEQRESETFIELD);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SeqResetField
   */
  public void setSeqResetField(Number value)
  {
    setAttributeInternal(SEQRESETFIELD, value);
  }

  /**
   * 
   * Gets the attribute value for ConstantValue, using the alias name ConstantValue
   */
  public String getConstantValue()
  {
    return (String)getAttributeInternal(CONSTANTVALUE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ConstantValue
   */
  public void setConstantValue(String value)
  {
    setAttributeInternal(CONSTANTVALUE, value);
  }

  /**
   * 
   * Gets the attribute value for Alignment, using the alias name Alignment
   */
  public String getAlignment()
  {
    return (String)getAttributeInternal(ALIGNMENT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Alignment
   */
  public void setAlignment(String value)
  {
    setAttributeInternal(ALIGNMENT, value);
  }

  /**
   * 
   * Gets the attribute value for PaddingChar, using the alias name PaddingChar
   */
  public String getPaddingChar()
  {
    return (String)getAttributeInternal(PADDINGCHAR);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PaddingChar
   */
  public void setPaddingChar(String value)
  {
    setAttributeInternal(PADDINGCHAR, value);
  }

  /**
   * 
   * Gets the attribute value for DefaultIfNull, using the alias name DefaultIfNull
   */
  public String getDefaultIfNull()
  {
    return (String)getAttributeInternal(DEFAULTIFNULL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DefaultIfNull
   */
  public void setDefaultIfNull(String value)
  {
    setAttributeInternal(DEFAULTIFNULL, value);
  }

  /**
   * 
   * Gets the attribute value for Comments, using the alias name Comments
   */
  public String getComments()
  {
    return (String)getAttributeInternal(COMMENTS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Comments
   */
  public void setComments(String value)
  {
    setAttributeInternal(COMMENTS, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute1, using the alias name Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute2, using the alias name Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute3, using the alias name Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute4, using the alias name Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute5, using the alias name Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute6, using the alias name Attribute6
   */
  public String getAttribute6()
  {
    return (String)getAttributeInternal(ATTRIBUTE6);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute6
   */
  public void setAttribute6(String value)
  {
    setAttributeInternal(ATTRIBUTE6, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute7, using the alias name Attribute7
   */
  public String getAttribute7()
  {
    return (String)getAttributeInternal(ATTRIBUTE7);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute7
   */
  public void setAttribute7(String value)
  {
    setAttributeInternal(ATTRIBUTE7, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute8, using the alias name Attribute8
   */
  public String getAttribute8()
  {
    return (String)getAttributeInternal(ATTRIBUTE8);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute8
   */
  public void setAttribute8(String value)
  {
    setAttributeInternal(ATTRIBUTE8, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute9, using the alias name Attribute9
   */
  public String getAttribute9()
  {
    return (String)getAttributeInternal(ATTRIBUTE9);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute9
   */
  public void setAttribute9(String value)
  {
    setAttributeInternal(ATTRIBUTE9, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute10, using the alias name Attribute10
   */
  public String getAttribute10()
  {
    return (String)getAttributeInternal(ATTRIBUTE10);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute10
   */
  public void setAttribute10(String value)
  {
    setAttributeInternal(ATTRIBUTE10, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute11, using the alias name Attribute11
   */
  public String getAttribute11()
  {
    return (String)getAttributeInternal(ATTRIBUTE11);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute11
   */
  public void setAttribute11(String value)
  {
    setAttributeInternal(ATTRIBUTE11, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute12, using the alias name Attribute12
   */
  public String getAttribute12()
  {
    return (String)getAttributeInternal(ATTRIBUTE12);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute12
   */
  public void setAttribute12(String value)
  {
    setAttributeInternal(ATTRIBUTE12, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute13, using the alias name Attribute13
   */
  public String getAttribute13()
  {
    return (String)getAttributeInternal(ATTRIBUTE13);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute13
   */
  public void setAttribute13(String value)
  {
    setAttributeInternal(ATTRIBUTE13, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute14, using the alias name Attribute14
   */
  public String getAttribute14()
  {
    return (String)getAttributeInternal(ATTRIBUTE14);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute14
   */
  public void setAttribute14(String value)
  {
    setAttributeInternal(ATTRIBUTE14, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute15, using the alias name Attribute15
   */
  public String getAttribute15()
  {
    return (String)getAttributeInternal(ATTRIBUTE15);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute15
   */
  public void setAttribute15(String value)
  {
    setAttributeInternal(ATTRIBUTE15, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute16, using the alias name Attribute16
   */
  public String getAttribute16()
  {
    return (String)getAttributeInternal(ATTRIBUTE16);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute16
   */
  public void setAttribute16(String value)
  {
    setAttributeInternal(ATTRIBUTE16, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute17, using the alias name Attribute17
   */
  public String getAttribute17()
  {
    return (String)getAttributeInternal(ATTRIBUTE17);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute17
   */
  public void setAttribute17(String value)
  {
    setAttributeInternal(ATTRIBUTE17, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute18, using the alias name Attribute18
   */
  public String getAttribute18()
  {
    return (String)getAttributeInternal(ATTRIBUTE18);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute18
   */
  public void setAttribute18(String value)
  {
    setAttributeInternal(ATTRIBUTE18, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute19, using the alias name Attribute19
   */
  public String getAttribute19()
  {
    return (String)getAttributeInternal(ATTRIBUTE19);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute19
   */
  public void setAttribute19(String value)
  {
    setAttributeInternal(ATTRIBUTE19, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute20, using the alias name Attribute20
   */
  public String getAttribute20()
  {
    return (String)getAttributeInternal(ATTRIBUTE20);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute20
   */
  public void setAttribute20(String value)
  {
    setAttributeInternal(ATTRIBUTE20, value);
  }

  
  /**
   * 
   * Gets the attribute value for Attribute20, using the alias name Attribute20
   */
  public String getConcatenate()
  {
    return (String)getAttributeInternal(CONCATENATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute20
   */
  public void setConcatenate(String value)
  {
    setAttributeInternal(CONCATENATE, value);
  }
  
  
  /**
   * 
   * Gets the attribute value for Attribute20, using the alias name Attribute20
   */
  public String getSplit()
  {
    return (String)getAttributeInternal(SPLIT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute20
   */
  public void setSplit(String value)
  {
    setAttributeInternal(SPLIT, value);
  }
  
  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for RequestId, using the alias name RequestId
   */
  public Number getRequestId()
  {
    return (Number)getAttributeInternal(REQUESTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RequestId
   */
  public void setRequestId(Number value)
  {
    setAttributeInternal(REQUESTID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramApplicationId, using the alias name ProgramApplicationId
   */
  public Number getProgramApplicationId()
  {
    return (Number)getAttributeInternal(PROGRAMAPPLICATIONID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramApplicationId
   */
  public void setProgramApplicationId(Number value)
  {
    setAttributeInternal(PROGRAMAPPLICATIONID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramId, using the alias name ProgramId
   */
  public Number getProgramId()
  {
    return (Number)getAttributeInternal(PROGRAMID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramId
   */
  public void setProgramId(Number value)
  {
    setAttributeInternal(PROGRAMID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramUpdateDate, using the alias name ProgramUpdateDate
   */
  public Date getProgramUpdateDate()
  {
    return (Date)getAttributeInternal(PROGRAMUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramUpdateDate
   */
  public void setProgramUpdateDate(Date value)
  {
    setAttributeInternal(PROGRAMUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for WhUpdateDate, using the alias name WhUpdateDate
   */
  public Date getWhUpdateDate()
  {
    return (Date)getAttributeInternal(WHUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WhUpdateDate
   */
  public void setWhUpdateDate(Date value)
  {
    setAttributeInternal(WHUPDATEDATE, value);
  }


/**
   * 
   * Gets the attribute value for FieldId, using the alias name FieldId
   */
  public Number getBaseFieldId()
  {
    return (Number)getAttributeInternal(BASEFIELDID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FieldId
   */
 public void setBaseFieldId(Number value)
  {
    setAttributeInternal(BASEFIELDID, value);
  }


/**
   * 
   * Gets the attribute value for FieldId, using the alias name FieldId
   */
  public Number getSplitFieldId()
  {
    return (Number)getAttributeInternal(SPLITFIELDID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FieldId
   */
 public void setSplitFieldId(Number value)
  {
    setAttributeInternal(SPLITFIELDID, value);
  }



  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        switch (index) {
        case EBLTEMPLID:
            return getEblTemplId();
        case CUSTDOCID:
            return getCustDocId();
        case RECORDTYPE:
            return getRecordType();
        case SEQ:
            return getSeq();
        case FIELDID:
            return getFieldId();
        case LABEL:
            return getLabel();
        case STARTPOS:
            return getStartPos();
        case FIELDLEN:
            return getFieldLen();
        case DATAFORMAT:
            return getDataFormat();
        case STRINGFUN:
            return getStringFun();
        case SORTORDER:
            return getSortOrder();
        case SORTTYPE:
            return getSortType();
        case MANDATORY:
            return getMandatory();
        case SEQSTARTVAL:
            return getSeqStartVal();
        case SEQINCVAL:
            return getSeqIncVal();
        case SEQRESETFIELD:
            return getSeqResetField();
        case CONSTANTVALUE:
            return getConstantValue();
        case ALIGNMENT:
            return getAlignment();
        case PADDINGCHAR:
            return getPaddingChar();
        case DEFAULTIFNULL:
            return getDefaultIfNull();
        case COMMENTS:
            return getComments();
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        case ATTRIBUTE6:
            return getAttribute6();
        case ATTRIBUTE7:
            return getAttribute7();
        case ATTRIBUTE8:
            return getAttribute8();
        case ATTRIBUTE9:
            return getAttribute9();
        case ATTRIBUTE10:
            return getAttribute10();
        case ATTRIBUTE11:
            return getAttribute11();
        case ATTRIBUTE12:
            return getAttribute12();
        case ATTRIBUTE13:
            return getAttribute13();
        case ATTRIBUTE14:
            return getAttribute14();
        case ATTRIBUTE15:
            return getAttribute15();
        case ATTRIBUTE16:
            return getAttribute16();
        case ATTRIBUTE17:
            return getAttribute17();
        case ATTRIBUTE18:
            return getAttribute18();
        case ATTRIBUTE19:
            return getAttribute19();
        case ATTRIBUTE20:
            return getAttribute20();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case CREATIONDATE:
            return getCreationDate();
        case CREATEDBY:
            return getCreatedBy();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        case REQUESTID:
            return getRequestId();
        case PROGRAMAPPLICATIONID:
            return getProgramApplicationId();
        case PROGRAMID:
            return getProgramId();
        case PROGRAMUPDATEDATE:
            return getProgramUpdateDate();
        case WHUPDATEDATE:
            return getWhUpdateDate();
        case CONCATENATE:
            return getConcatenate();
        case SPLIT:
            return getSplit();
        case BASEFIELDID:
            return getBaseFieldId();
        case SPLITFIELDID:
            return getSplitFieldId();
        case REPEATTOTALFLAG:
            return getRepeatTotalFlag();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        switch (index) {
        case EBLTEMPLID:
            setEblTemplId((Number)value);
            return;
        case CUSTDOCID:
            setCustDocId((Number)value);
            return;
        case RECORDTYPE:
            setRecordType((String)value);
            return;
        case SEQ:
            setSeq((Number)value);
            return;
        case FIELDID:
            setFieldId((Number)value);
            return;
        case LABEL:
            setLabel((String)value);
            return;
        case STARTPOS:
            setStartPos((Number)value);
            return;
        case FIELDLEN:
            setFieldLen((Number)value);
            return;
        case DATAFORMAT:
            setDataFormat((String)value);
            return;
        case STRINGFUN:
            setStringFun((String)value);
            return;
        case SORTORDER:
            setSortOrder((Number)value);
            return;
        case SORTTYPE:
            setSortType((String)value);
            return;
        case MANDATORY:
            setMandatory((String)value);
            return;
        case SEQSTARTVAL:
            setSeqStartVal((Number)value);
            return;
        case SEQINCVAL:
            setSeqIncVal((Number)value);
            return;
        case SEQRESETFIELD:
            setSeqResetField((Number)value);
            return;
        case CONSTANTVALUE:
            setConstantValue((String)value);
            return;
        case ALIGNMENT:
            setAlignment((String)value);
            return;
        case PADDINGCHAR:
            setPaddingChar((String)value);
            return;
        case DEFAULTIFNULL:
            setDefaultIfNull((String)value);
            return;
        case COMMENTS:
            setComments((String)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        case ATTRIBUTE6:
            setAttribute6((String)value);
            return;
        case ATTRIBUTE7:
            setAttribute7((String)value);
            return;
        case ATTRIBUTE8:
            setAttribute8((String)value);
            return;
        case ATTRIBUTE9:
            setAttribute9((String)value);
            return;
        case ATTRIBUTE10:
            setAttribute10((String)value);
            return;
        case ATTRIBUTE11:
            setAttribute11((String)value);
            return;
        case ATTRIBUTE12:
            setAttribute12((String)value);
            return;
        case ATTRIBUTE13:
            setAttribute13((String)value);
            return;
        case ATTRIBUTE14:
            setAttribute14((String)value);
            return;
        case ATTRIBUTE15:
            setAttribute15((String)value);
            return;
        case ATTRIBUTE16:
            setAttribute16((String)value);
            return;
        case ATTRIBUTE17:
            setAttribute17((String)value);
            return;
        case ATTRIBUTE18:
            setAttribute18((String)value);
            return;
        case ATTRIBUTE19:
            setAttribute19((String)value);
            return;
        case ATTRIBUTE20:
            setAttribute20((String)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        case REQUESTID:
            setRequestId((Number)value);
            return;
        case PROGRAMAPPLICATIONID:
            setProgramApplicationId((Number)value);
            return;
        case PROGRAMID:
            setProgramId((Number)value);
            return;
        case PROGRAMUPDATEDATE:
            setProgramUpdateDate((Date)value);
            return;
        case WHUPDATEDATE:
            setWhUpdateDate((Date)value);
            return;
        case CONCATENATE:
            setConcatenate((String)value);
            return;
        case SPLIT:
            setSplit((String)value);
            return;
        case BASEFIELDID:
            setBaseFieldId((Number)value);
            return;
        case SPLITFIELDID:
            setSplitFieldId((Number)value);
            return;
        case REPEATTOTALFLAG:
            setRepeatTotalFlag((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
//  public static Key createPrimaryKey(Number eblTemplId)
//  {
//    return new Key(new Object[] {eblTemplId});
//  }

    //Overridden method to call custom PLSQL API
   public void insertRow()
    {
        OracleCallableStatement oraclecallablestatement = null;
        try
        {
            OADBTransaction transaction = getOADBTransaction();
                
            Number templId = transaction.getSequenceValue("XX_CDH_EBL_TEMPL_ID_S");
        
            OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getDBTransaction();
            String s= "BEGIN"
                      +" XX_CDH_EBL_TEMPL_DTL_PKG.insert_row(p_ebl_templ_id  => :1 "
                      +" ,p_cust_doc_id            => :2 "
                      +" ,p_record_type            => :3 "
                      +" ,p_seq                    => :4 " 
                      +" ,p_field_id               => :5 "
                      +" ,p_label                  => :6 "
                      +" ,p_start_pos              => :7 "
                      +" ,p_field_len              => :8 "
                      +" ,p_data_format            => :9 "
                      +" ,p_string_fun             => :10 "
                      +" ,p_sort_order             => :11 "
                      +" ,p_sort_type              => :12 "
                      +" ,p_mandatory              => :13 "
                      +" ,p_seq_start_val          => :14 "
                      +" ,p_seq_inc_val            => :15 "
                      +" ,p_seq_reset_field        => :16 "
                      +" ,p_constant_value         => :17 " 
                      +" ,p_alignment              => :18 "
                      +" ,p_padding_char           => :19 "
                      +" ,p_default_if_null        => :20 "
                      +" ,p_comments               => :21 "
                      +" ,p_attribute1             => :22 "
                      +" ,p_attribute2             => :23 "
                      +" ,p_attribute3             => :24 "
                      +" ,p_attribute4             => :25 "
                      +" ,p_attribute5             => :26 "
                      +" ,p_attribute6             => :27 "
                      +" ,p_attribute7             => :28 "
                      +" ,p_attribute8             => :29 "
                      +" ,p_attribute9             => :30 "
                      +" ,p_attribute10            => :31 "
                      +" ,p_attribute11            => :32 "
                      +" ,p_attribute12            => :33 "
                      +" ,p_attribute13            => :34 "
                      +" ,p_attribute14            => :35 "
                      +" ,p_attribute15            => :36 "
                      +" ,p_attribute16            => :37 "
                      +" ,p_attribute17            => :38 "
                      +" ,p_attribute18            => :39 "
                      +" ,p_attribute19            => :40 "
                      +" ,p_attribute20            => :41 "          
                      +" ,p_concatenate            => :42 "
                      +" ,p_split                  => :43 "
		      +" ,p_base_field_id          => :44 "
                      +" ,p_split_field_id          => :45"
                      +" ,p_repeat_total_flag       => :46);"					  
                      +" END;" ;

            oadbtransactionimpl.writeDiagnostics(this,"getBaseFieldId()"+getBaseFieldId(),1) ;
            oadbtransactionimpl.writeDiagnostics(this,"getBaseFieldId()"+getSplitFieldId(),1) ;
                      
            oraclecallablestatement = (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, -1);
            oraclecallablestatement.setNUMBER(1, templId);
            oraclecallablestatement.setNUMBER(2,  this.getCustDocId());
            oraclecallablestatement.setString(3,  this.getRecordType());
            oraclecallablestatement.setNUMBER(4,  this.getSeq());
            oraclecallablestatement.setNUMBER(5,  this.getFieldId());
            oraclecallablestatement.setString(6,  this.getLabel());
            oraclecallablestatement.setNUMBER(7,  this.getStartPos());
            oraclecallablestatement.setNUMBER(8,  this.getFieldLen());
            oraclecallablestatement.setString(9,  this.getDataFormat());
            oraclecallablestatement.setString(10, this.getStringFun());
            oraclecallablestatement.setNUMBER(11, this.getSortOrder());
            oraclecallablestatement.setString(12, this.getSortType());
            oraclecallablestatement.setString(13, this.getMandatory());
            oraclecallablestatement.setNUMBER(14, this.getSeqStartVal());
            oraclecallablestatement.setNUMBER(15, this.getSeqIncVal());
            oraclecallablestatement.setNUMBER(16, this.getSeqResetField());
            oraclecallablestatement.setString(17, this.getConstantValue());
            oraclecallablestatement.setString(18, this.getAlignment());
            oraclecallablestatement.setString(19, this.getPaddingChar());
            oraclecallablestatement.setString(20, this.getDefaultIfNull());
            oraclecallablestatement.setString(21, this.getComments());
             oraclecallablestatement.setString(22,this.getAttribute1());
            oraclecallablestatement.setString(23,this.getAttribute2());
            oraclecallablestatement.setString(24,this.getAttribute3());
            oraclecallablestatement.setString(25,this.getAttribute4());
            oraclecallablestatement.setString(26,this.getAttribute5());
            oraclecallablestatement.setString(27,this.getAttribute6());
            oraclecallablestatement.setString(28,this.getAttribute7());
            oraclecallablestatement.setString(29,this.getAttribute8());
            oraclecallablestatement.setString(30,this.getAttribute9());
            oraclecallablestatement.setString(31,this.getAttribute10());
            oraclecallablestatement.setString(32,this.getAttribute11());
            oraclecallablestatement.setString(33,this.getAttribute12());
            oraclecallablestatement.setString(34,this.getAttribute13());
            oraclecallablestatement.setString(35,this.getAttribute14());
            oraclecallablestatement.setString(36,this.getAttribute15());
            oraclecallablestatement.setString(37,this.getAttribute16());
            oraclecallablestatement.setString(38,this.getAttribute17());
            oraclecallablestatement.setString(39,this.getAttribute18());
            oraclecallablestatement.setString(40,this.getAttribute19());
            oraclecallablestatement.setString(41,this.getAttribute20()); 
	    oraclecallablestatement.setString(42,this.getConcatenate());
            oraclecallablestatement.setString(43,this.getSplit());
            oraclecallablestatement.setNUMBER(44,this.getBaseFieldId());
	    oraclecallablestatement.setNUMBER(45,this.getSplitFieldId());
            oraclecallablestatement.setString(46,this.getRepeatTotalFlag());           
            
            oraclecallablestatement.execute();
        }
        catch(SQLException sqlexception)
        {
            throw OAException.wrapperException(sqlexception);
        }
        catch(Exception exception)
        {
            throw OAException.wrapperException(exception);
        }
		finally
        {
           try{
                if(oraclecallablestatement != null)
                   oraclecallablestatement.close();
              }
		   catch(Exception e){}
        }
    }//Insert Row

    public void updateRow()
    {
		OracleCallableStatement oraclecallablestatement = null;
        try
        {
            OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getDBTransaction();
            String s= "BEGIN"
                      +" XX_CDH_EBL_TEMPL_DTL_PKG.update_row(p_ebl_templ_id  => :1 "
                      +" ,p_cust_doc_id            => :2  "
                      +" ,p_record_type            => :3  "
                      +" ,p_seq                    => :4  " 
                      +" ,p_field_id               => :5  "
                      +" ,p_label                  => :6  "
                      +" ,p_start_pos              => :7  "
                      +" ,p_field_len              => :8  "
                      +" ,p_data_format            => :9  "
                      +" ,p_string_fun             => :10 "
                      +" ,p_sort_order             => :11 "
                      +" ,p_sort_type              => :12 "
                      +" ,p_mandatory              => :13 "
                      +" ,p_seq_start_val          => :14 "
                      +" ,p_seq_inc_val            => :15 "
                      +" ,p_seq_reset_field        => :16 "
                      +" ,p_constant_value         => :17 " 
                      +" ,p_alignment              => :18 "
                      +" ,p_padding_char           => :19 "
                      +" ,p_default_if_null        => :20 "
                      +" ,p_comments               => :21 "
                      +" ,p_attribute1             => :22 "
                      +" ,p_attribute2             => :23 "
                      +" ,p_attribute3             => :24 "
                      +" ,p_attribute4             => :25 "
                      +" ,p_attribute5             => :26 "
                      +" ,p_attribute6             => :27 "
                      +" ,p_attribute7             => :28 "
                      +" ,p_attribute8             => :29 "
                      +" ,p_attribute9             => :30 "
                      +" ,p_attribute10            => :31 "
                      +" ,p_attribute11            => :32 "
                      +" ,p_attribute12            => :33 "
                      +" ,p_attribute13            => :34 "
                      +" ,p_attribute14            => :35 "
                      +" ,p_attribute15            => :36 "
                      +" ,p_attribute16            => :37 "
                      +" ,p_attribute17            => :38 "
                      +" ,p_attribute18            => :39 "
                      +" ,p_attribute19            => :40 "
                      +" ,p_attribute20            => :41 "      
                      +" ,p_concatenate            => :42 "
                      +" ,p_split                  => :43 " 
                      +" ,p_base_field_id          => :44 "
                      +" ,p_split_field_id          => :45"
                      +" ,p_repeat_total_flag       => :46);"                      
                      +" END;" ;
            oraclecallablestatement = (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, -1);
            oraclecallablestatement.setNUMBER(1,this.getEblTemplId());
            oraclecallablestatement.setNUMBER(2,this.getCustDocId());
            oraclecallablestatement.setString(3,this.getRecordType());
            oraclecallablestatement.setNUMBER(4,this.getSeq());
            oraclecallablestatement.setNUMBER(5,this.getFieldId());
            oraclecallablestatement.setString(6,this.getLabel());
            oraclecallablestatement.setNUMBER(7,this.getStartPos());
            oraclecallablestatement.setNUMBER(8,this.getFieldLen());
            oraclecallablestatement.setString(9,this.getDataFormat());
            oraclecallablestatement.setString(10,this.getStringFun());
            oraclecallablestatement.setNUMBER(11,this.getSortOrder());
            oraclecallablestatement.setString(12,this.getSortType());
            oraclecallablestatement.setString(13,this.getMandatory());
            oraclecallablestatement.setNUMBER(14,this.getSeqStartVal());
            oraclecallablestatement.setNUMBER(15,this.getSeqIncVal());
            oraclecallablestatement.setNUMBER(16,this.getSeqResetField());
            oraclecallablestatement.setString(17,this.getConstantValue());
            oraclecallablestatement.setString(18,this.getAlignment());
            oraclecallablestatement.setString(19,this.getPaddingChar());
            oraclecallablestatement.setString(20,this.getDefaultIfNull());
            oraclecallablestatement.setString(21,this.getComments());
            oraclecallablestatement.setString(22,this.getAttribute1());
            oraclecallablestatement.setString(23,this.getAttribute2());
            oraclecallablestatement.setString(24,this.getAttribute3());
            oraclecallablestatement.setString(25,this.getAttribute4());
            oraclecallablestatement.setString(26,this.getAttribute5());
            oraclecallablestatement.setString(27,this.getAttribute6());
            oraclecallablestatement.setString(28,this.getAttribute7());
            oraclecallablestatement.setString(29,this.getAttribute8());
            oraclecallablestatement.setString(30,this.getAttribute9());
            oraclecallablestatement.setString(31,this.getAttribute10());
            oraclecallablestatement.setString(32,this.getAttribute11());
            oraclecallablestatement.setString(33,this.getAttribute12());
            oraclecallablestatement.setString(34,this.getAttribute13());
            oraclecallablestatement.setString(35,this.getAttribute14());
            oraclecallablestatement.setString(36,this.getAttribute15());
            oraclecallablestatement.setString(37,this.getAttribute16());
            oraclecallablestatement.setString(38,this.getAttribute17());
            oraclecallablestatement.setString(39,this.getAttribute18());
            oraclecallablestatement.setString(40,this.getAttribute19());
            oraclecallablestatement.setString(41,this.getAttribute20());   
	    oraclecallablestatement.setString(42,this.getConcatenate());   
	    oraclecallablestatement.setString(43,this.getSplit());  
            oraclecallablestatement.setNUMBER(44,this.getBaseFieldId()); 	
            oraclecallablestatement.setNUMBER(45,this.getSplitFieldId());
            oraclecallablestatement.setString(46,this.getRepeatTotalFlag());            
            
            oraclecallablestatement.execute();
        }
        catch(SQLException sqlexception)
        {
            throw OAException.wrapperException(sqlexception);
        }
        catch(Exception exception)
        {
            throw OAException.wrapperException(exception);
        }
		finally
        {
           try{
                if(oraclecallablestatement != null)
                   oraclecallablestatement.close();
              }
		   catch(Exception e){}
        }
    }//Update Row  

  //Delete Row
   public void deleteRow()
   { 
      OracleCallableStatement oraclecallablestatement = null;
      try
      {
          OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getDBTransaction();
            
          String s= "BEGIN"
                      +" XX_CDH_EBL_TEMPL_DTL_PKG.delete_row(p_ebl_templ_id =>:1"
                      +" ,p_cust_doc_id                        =>:2);"
                      +" END;" ;
          oraclecallablestatement = (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, -1);
          oraclecallablestatement.setNUMBER(1,this.getEblTemplId());
          oraclecallablestatement.setNUMBER(2,this.getCustDocId());
          oraclecallablestatement.execute();
      }
      catch(SQLException sqlexception)
      {
          throw OAException.wrapperException(sqlexception);
      }
      catch(Exception exception)
      {
          throw OAException.wrapperException(exception);
      }
	  finally
        {
           try{
                if(oraclecallablestatement != null)
                   oraclecallablestatement.close();
              }
		   catch(Exception e){}	  

    }//Delete Row  
   }

    /**Gets the attribute value for RepeatTotalFlag, using the alias name RepeatTotalFlag
     */
    public String getRepeatTotalFlag() {
        return (String)getAttributeInternal(REPEATTOTALFLAG);
    }

    /**Sets <code>value</code> as the attribute value for RepeatTotalFlag
     */
    public void setRepeatTotalFlag(String value) {
        setAttributeInternal(REPEATTOTALFLAG, value);
    }


    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number eblTemplId) {
        return new Key(new Object[]{eblTemplId});
    }
}
