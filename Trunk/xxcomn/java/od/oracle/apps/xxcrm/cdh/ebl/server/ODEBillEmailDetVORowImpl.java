package od.oracle.apps.xxcrm.cdh.ebl.server;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODEBillEmailDetVORowImpl extends OAViewRowImpl 
{


  protected static final int SUBJECT = 0;
  protected static final int STDMESSAGE = 1;
  protected static final int CUSTMESSAGE = 2;
  protected static final int SIGNATURE = 3;
  protected static final int STDDISCLAIMER = 4;
  protected static final int LOGOREQ = 5;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODEBillEmailDetVORowImpl()
  {
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Subject
   */
  public String getSubject()
  {
    return (String)getAttributeInternal(SUBJECT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Subject
   */
  public void setSubject(String value)
  {
    setAttributeInternal(SUBJECT, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute StdMessage
   */
  public String getStdMessage()
  {
    return (String)getAttributeInternal(STDMESSAGE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute StdMessage
   */
  public void setStdMessage(String value)
  {
    setAttributeInternal(STDMESSAGE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute CustMessage
   */
  public String getCustMessage()
  {
    return (String)getAttributeInternal(CUSTMESSAGE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute CustMessage
   */
  public void setCustMessage(String value)
  {
    setAttributeInternal(CUSTMESSAGE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Signature
   */
  public String getSignature()
  {
    return (String)getAttributeInternal(SIGNATURE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Signature
   */
  public void setSignature(String value)
  {
    setAttributeInternal(SIGNATURE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute StdDisclaimer
   */
  public String getStdDisclaimer()
  {
    return (String)getAttributeInternal(STDDISCLAIMER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute StdDisclaimer
   */
  public void setStdDisclaimer(String value)
  {
    setAttributeInternal(STDDISCLAIMER, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute LogoReq
   */
  public String getLogoReq()
  {
    return (String)getAttributeInternal(LOGOREQ);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute LogoReq
   */
  public void setLogoReq(String value)
  {
    setAttributeInternal(LOGOREQ, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case SUBJECT:
        return getSubject();
      case STDMESSAGE:
        return getStdMessage();
      case CUSTMESSAGE:
        return getCustMessage();
      case SIGNATURE:
        return getSignature();
      case STDDISCLAIMER:
        return getStdDisclaimer();
      case LOGOREQ:
        return getLogoReq();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case SUBJECT:
        setSubject((String)value);
        return;
      case STDMESSAGE:
        setStdMessage((String)value);
        return;
      case CUSTMESSAGE:
        setCustMessage((String)value);
        return;
      case SIGNATURE:
        setSignature((String)value);
        return;
      case STDDISCLAIMER:
        setStdDisclaimer((String)value);
        return;
      case LOGOREQ:
        setLogoReq((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }
}