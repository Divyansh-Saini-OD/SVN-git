package od.oracle.apps.xxcrm.cdh.ebl.server;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
import oracle.apps.fnd.framework.OARowValException;

//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class EbillingParamSetupVORowImpl extends OAViewRowImpl 
{


  protected static final int PARAMVALUE = 0;
  protected static final int PARAMNAME = 1;
  protected static final int SITE = 2;
  protected static final int APPLICATIONID = 3;
  protected static final int RESPONSIBILITYID = 4;
  protected static final int USERID = 5;
  protected static final int CREATEDBY = 6;
  protected static final int CREATIONDATE = 7;
  protected static final int LASTUPDATEDBY = 8;
  protected static final int LASTUPDATEDATE = 9;
  protected static final int LASTUPDATELOGIN = 10;
  protected static final int ROWID = 11;
  protected static final int RESPONSIBILITYNAME = 12;
  protected static final int APPLICATIONNAME = 13;
  protected static final int USERNAME = 14;
  protected static final int SELECTFLAG = 15;
  protected static final int PARAMDESCRIPTION = 16;
  protected static final int RENDERUSER = 17;
  protected static final int RENDERAPPLICATION = 18;
  protected static final int RENDERRESPONSIBILITY = 19;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public EbillingParamSetupVORowImpl()
  {
  }

  /**
   * 
   * Gets EbillingParamSetupEO entity object.
   */
  public od.oracle.apps.xxcrm.cdh.ebl.schema.server.EbillingParamSetupEOImpl getEbillingParamSetupEO()
  {
    return (od.oracle.apps.xxcrm.cdh.ebl.schema.server.EbillingParamSetupEOImpl)getEntity(0);
  }

  /**
   * 
   * Gets the attribute value for PARAM_VALUE using the alias name ParamValue
   */
  public String getParamValue()
  {
    return (String)getAttributeInternal(PARAMVALUE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for PARAM_VALUE using the alias name ParamValue
   */
  public void setParamValue(String value)
  {
    setAttributeInternal(PARAMVALUE, value);
  }

  /**
   * 
   * Gets the attribute value for PARAM_NAME using the alias name ParamName
   */
  public String getParamName()
  {
    return (String)getAttributeInternal(PARAMNAME);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for PARAM_NAME using the alias name ParamName
   */
  public void setParamName(String value)
  {
    setAttributeInternal(PARAMNAME, value);
  }

  /**
   * 
   * Gets the attribute value for SITE using the alias name Site
   */
  public Number getSite()
  {
    return (Number)getAttributeInternal(SITE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for SITE using the alias name Site
   */
  public void setSite(Number value)
  {
    setAttributeInternal(SITE, value);
  }

  /**
   * 
   * Gets the attribute value for APPLICATIONID using the alias name Applicationid
   */
  public Number getApplicationid()
  {
    return (Number)getAttributeInternal(APPLICATIONID);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for APPLICATIONID using the alias name Applicationid
   */
  public void setApplicationid(Number value)
  {
    setAttributeInternal(APPLICATIONID, value);
  }

  /**
   * 
   * Gets the attribute value for RESPONSIBILITYID using the alias name Responsibilityid
   */
  public Number getResponsibilityid()
  {
    return (Number)getAttributeInternal(RESPONSIBILITYID);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for RESPONSIBILITYID using the alias name Responsibilityid
   */
  public void setResponsibilityid(Number value)
  {
    setAttributeInternal(RESPONSIBILITYID, value);
  }

  /**
   * 
   * Gets the attribute value for USERID using the alias name Userid
   */
  public Number getUserid()
  {
    return (Number)getAttributeInternal(USERID);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for USERID using the alias name Userid
   */
  public void setUserid(Number value)
  {
    setAttributeInternal(USERID, value);
  }

  /**
   * 
   * Gets the attribute value for CREATED_BY using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CREATION_DATE using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for ROWID using the alias name RowID
   */
  public RowID getRowID()
  {
    return (RowID)getAttributeInternal(ROWID);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ResponsibilityName
   */
  public String getResponsibilityName()
  {
    return (String)getAttributeInternal(RESPONSIBILITYNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ResponsibilityName
   */
  public void setResponsibilityName(String value)
  {
    setAttributeInternal(RESPONSIBILITYNAME, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ApplicationName
   */
  public String getApplicationName()
  {
    return (String)getAttributeInternal(APPLICATIONNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ApplicationName
   */
  public void setApplicationName(String value)
  {
    setAttributeInternal(APPLICATIONNAME, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute UserName
   */
  public String getUserName()
  {
    return (String)getAttributeInternal(USERNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute UserName
   */
  public void setUserName(String value)
  {
    setAttributeInternal(USERNAME, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute SelectFlag
   */
  public String getSelectFlag()
  {
    return (String)getAttributeInternal(SELECTFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute SelectFlag
   */
  public void setSelectFlag(String value)
  {
    setAttributeInternal(SELECTFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Paramdescription
   */
  public String getParamdescription()
  {
    return (String)getAttributeInternal(PARAMDESCRIPTION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Paramdescription
   */
  public void setParamdescription(String value)
  {
    setAttributeInternal(PARAMDESCRIPTION, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute RenderUser
   */
  public Boolean getRenderUser()
  {
    return (Boolean)getAttributeInternal(RENDERUSER);
  }
  
  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute RenderUser
   */
  public void setRenderUser(Boolean value)
  {
    setAttributeInternal(RENDERUSER, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute RenderApplication
   */
  public Boolean getRenderApplication()
  {
    return (Boolean)getAttributeInternal(RENDERAPPLICATION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute RenderApplication
   */
  public void setRenderApplication(Boolean value)
  {
    setAttributeInternal(RENDERAPPLICATION, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute RenderResponsibility
   */
  public Boolean getRenderResponsibility()
  {
    return (Boolean)getAttributeInternal(RENDERRESPONSIBILITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute RenderResponsibility
   */
  public void setRenderResponsibility(Boolean value)
  {
    setAttributeInternal(RENDERRESPONSIBILITY, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PARAMVALUE:
        return getParamValue();
      case PARAMNAME:
        return getParamName();
      case SITE:
        return getSite();
      case APPLICATIONID:
        return getApplicationid();
      case RESPONSIBILITYID:
        return getResponsibilityid();
      case USERID:
        return getUserid();
      case CREATEDBY:
        return getCreatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case ROWID:
        return getRowID();
      case RESPONSIBILITYNAME:
        return getResponsibilityName();
      case APPLICATIONNAME:
        return getApplicationName();
      case USERNAME:
        return getUserName();
      case SELECTFLAG:
        return getSelectFlag();
      case PARAMDESCRIPTION:
        return getParamdescription();
      case RENDERUSER:
        return getRenderUser();
      case RENDERAPPLICATION:
        return getRenderApplication();
      case RENDERRESPONSIBILITY:
        return getRenderResponsibility();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PARAMVALUE:
        setParamValue((String)value);
        return;
      case PARAMNAME:
        setParamName((String)value);
        return;
      case SITE:
        setSite((Number)value);
        return;
      case APPLICATIONID:
        setApplicationid((Number)value);
        return;
      case RESPONSIBILITYID:
        setResponsibilityid((Number)value);
        return;
      case USERID:
        setUserid((Number)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case RESPONSIBILITYNAME:
        setResponsibilityName((String)value);
        return;
      case APPLICATIONNAME:
        setApplicationName((String)value);
        return;
      case USERNAME:
        setUserName((String)value);
        return;
      case SELECTFLAG:
        setSelectFlag((String)value);
        return;
      case PARAMDESCRIPTION:
        setParamdescription((String)value);
        return;
      case RENDERUSER:
        setRenderUser((Boolean)value);
        return;
      case RENDERAPPLICATION:
        setRenderApplication((Boolean)value);
        return;
      case RENDERRESPONSIBILITY:
        setRenderResponsibility((Boolean)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  public void validate()
  {
    super.validate();
    boolean flag = false;

    
    if(this.getSite().intValue()==0 && this.getApplicationid()==null && this.getResponsibilityid()==null && this.getUserid()==null){
      throw new OARowValException (
          getViewObject().getFullName(),//View Object full usage name
          getKey(), // row primary key
          "XXCRM", // message application short name
          "XXOD_EBL_PARAM_NOLEVEL"); // message name
        
    }

    if(this.getApplicationid()!=null && this.getResponsibilityid()!=null)
      flag = true;
    else if(this.getSite().intValue()==1 && this.getUserid()!=null)
      flag = true;
    else if(this.getApplicationid()!=null &&  this.getSite().intValue()==1)
      flag = true;
    else if(this.getApplicationid()!=null &&  this.getUserid()!=null)
      flag = true;
    else if(this.getResponsibilityid()!=null &&  this.getUserid()!=null)
      flag = true;
    else if(this.getResponsibilityid()!=null &&  this.getSite().intValue()==1)
      flag = true;  
      
   if(flag){
    throw new OARowValException (
        getViewObject().getFullName(),//View Object full usage name
        getKey(), // row primary key
        "XXCRM", // message application short name
        "XXOD_EBL_PARAM_MULTILEVEL"); // message name
      }
  }
  
}