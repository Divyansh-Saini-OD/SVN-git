package od.oracle.apps.xxcrm.cdh.ebl.ebltxtmain.poplist.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ODEBillConfigDetailsFieldNamesSumPVORowImpl extends OAViewRowImpl {

    public static final int FIELDNAME = 0;
    public static final int TRANSLATIONFIELD1 = 5;
    public static final int FIELDID = 1;
    public static final int DATATYPE = 2;
    public static final int DATAFORMAT = 3;
    public static final int CUSTDOCID = 4;
    public static final int TRANSLATIONFIELD = 5;
    public static final int RECORDTYPE = 6;
    public static final int ENABLEDFLAG = 7;

    /**Gets the attribute value for the calculated attribute TranslationField1
     */
    public Boolean getTranslationField1() {
        return (Boolean) getAttributeInternal(TRANSLATIONFIELD1);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute TranslationField1
     */
    public void setTranslationField1(Boolean value) {
        setAttributeInternal(TRANSLATIONFIELD1, value);
    }


    /**Gets the attribute value for the calculated attribute Enabledflag
     */
    public String getEnabledflag() {
        return (String) getAttributeInternal(ENABLEDFLAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Enabledflag
     */
    public void setEnabledflag(String value) {
        setAttributeInternal(ENABLEDFLAG, value);
    }


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        FieldName {
            public Object get(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj) {
                return obj.getFieldName();
            }

            public void put(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj,
                            Object value) {
                obj.setFieldName((String)value);
            }
        }
        ,
        FieldId {
            public Object get(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj) {
                return obj.getFieldId();
            }

            public void put(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj,
                            Object value) {
                obj.setFieldId((String)value);
            }
        }
        ,
        DataType {
            public Object get(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj) {
                return obj.getDataType();
            }

            public void put(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj,
                            Object value) {
                obj.setDataType((String)value);
            }
        }
        ,
        DataFormat {
            public Object get(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj) {
                return obj.getDataFormat();
            }

            public void put(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj,
                            Object value) {
                obj.setDataFormat((String)value);
            }
        }
        ,
        CustDocId {
            public Object get(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj) {
                return obj.getCustDocId();
            }

            public void put(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj,
                            Object value) {
                obj.setCustDocId((Number)value);
            }
        }
        ,
        TranslationField {
            public Object get(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj) {
                return obj.getTranslationField();
            }

            public void put(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj,
                            Object value) {
                obj.setTranslationField((Boolean)value);
            }
        }
        ,
        RecordType {
            public Object get(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj) {
                return obj.getRecordType();
            }

            public void put(ODEBillConfigDetailsFieldNamesSumPVORowImpl obj,
                            Object value) {
                obj.setRecordType((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ODEBillConfigDetailsFieldNamesSumPVORowImpl object);

        public abstract void put(ODEBillConfigDetailsFieldNamesSumPVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    /**This is the default constructor (do not remove)
     */
    public ODEBillConfigDetailsFieldNamesSumPVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute FieldName
     */
    public String getFieldName() {
        return (String) getAttributeInternal(FIELDNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute FieldName
     */
    public void setFieldName(String value) {
        setAttributeInternal(FIELDNAME, value);
    }

    /**Gets the attribute value for the calculated attribute FieldId
     */
    public String getFieldId() {
        return (String) getAttributeInternal(FIELDID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute FieldId
     */
    public void setFieldId(String value) {
        setAttributeInternal(FIELDID, value);
    }

    /**Gets the attribute value for the calculated attribute DataType
     */
    public String getDataType() {
        return (String) getAttributeInternal(DATATYPE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DataType
     */
    public void setDataType(String value) {
        setAttributeInternal(DATATYPE, value);
    }

    /**Gets the attribute value for the calculated attribute DataFormat
     */
    public String getDataFormat() {
        return (String) getAttributeInternal(DATAFORMAT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DataFormat
     */
    public void setDataFormat(String value) {
        setAttributeInternal(DATAFORMAT, value);
    }

    /**Gets the attribute value for the calculated attribute CustDocId
     */
    public Number getCustDocId() {
        return (Number) getAttributeInternal(CUSTDOCID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CustDocId
     */
    public void setCustDocId(Number value) {
        setAttributeInternal(CUSTDOCID, value);
    }

    /**Gets the attribute value for the calculated attribute TranslationField
     */
    public Boolean getTranslationField() {
        return (Boolean) getAttributeInternal(TRANSLATIONFIELD);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute TranslationField
     */
    public void setTranslationField(Boolean value) {
        setAttributeInternal(TRANSLATIONFIELD, value);
    }

    /**Gets the attribute value for the calculated attribute RecordType
     */
    public String getRecordType() {
        return (String) getAttributeInternal(RECORDTYPE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute RecordType
     */
    public void setRecordType(String value) {
        setAttributeInternal(RECORDTYPE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case FIELDNAME:
            return getFieldName();
        case FIELDID:
            return getFieldId();
        case DATATYPE:
            return getDataType();
        case DATAFORMAT:
            return getDataFormat();
        case CUSTDOCID:
            return getCustDocId();
        case TRANSLATIONFIELD:
            return getTranslationField();
        case RECORDTYPE:
            return getRecordType();
        case ENABLEDFLAG:
            return getEnabledflag();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case FIELDNAME:
            setFieldName((String)value);
            return;
        case FIELDID:
            setFieldId((String)value);
            return;
        case DATATYPE:
            setDataType((String)value);
            return;
        case DATAFORMAT:
            setDataFormat((String)value);
            return;
        case CUSTDOCID:
            setCustDocId((Number)value);
            return;
        case TRANSLATIONFIELD:
            setTranslationField((Boolean)value);
            return;
        case RECORDTYPE:
            setRecordType((String)value);
            return;
        case ENABLEDFLAG:
            setEnabledflag((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
}
