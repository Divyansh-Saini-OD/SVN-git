<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Tue Apr 27 15:52:48 EDT 2010
  Author:  bala-edupuganti
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="SRexceptions"
         targetNamespace="http://xmlns.oracle.com/SRexceptions"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         queryLanguage="http://www.w3.org/TR/1999/REC-xpath-19991116"
         expressionLanguage="http://www.w3.org/TR/1999/REC-xpath-19991116"
         abstractProcess="no" enableInstanceCompensation="no"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XX_OM_SR_EXCEPTIONS_PUB/LOG_ERROR/"
         xmlns:ns7="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns5="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:client="http://xmlns.oracle.com/SRexceptions"
         xmlns:ns6="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ns11="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XX_OM_SR_EXCEPTIONS_PUB/LOG_ERROR/"
         xmlns:ns9="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ns1="ODSRExceptions"
         xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/db/EbsSRexceptionSrvc/"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/SRexceptionsSrvc/"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns10="ODError"
         xmlns:ns8="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions">
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <partnerLinks>
        <partnerLink name="client" partnerLinkType="client:SRexceptions"
                     myRole="SRexceptionsProvider"
                     partnerRole="SRexceptionsRequester"/>
        <partnerLink name="EbsSRexceptionSrvc"
                     partnerRole="EbsSRexceptionSrvc_role"
                     partnerLinkType="ns3:EbsSRexceptionSrvc_plt"/>
        <partnerLink myRole="ODErrorLoggerRequester" name="ODErrorLogger"
                     partnerRole="ODErrorLoggerProvider"
                     partnerLinkType="ns5:ODErrorLogger"/>
    </partnerLinks>
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <!-- Reference to the message that will be sent back to the requester during callback -->
        <!-- <variable name="InvokeSRexceptions_InputVariable"
                  messageType="ns2:args_in_msg"/>-->
        <variable name="inputVariable"
                  messageType="client:SRexceptionsRequestMessage"/>
        <variable name="outputVariable"
                  messageType="client:SRexceptionsResponseMessage"/>
        <variable name="EbsSRexceptionSrvc_InputVariable"
                  messageType="ns3:args_in_msg"/>
        <variable name="InvokeEbsSRexception__OutputVariable"
                  messageType="ns3:args_out_msg"/>
        <variable name="InvokeEbsSRexception_OutputVariable"
                  messageType="ns3:args_out_msg"/>
        <variable name="InvokeCatchAll_InputVariable"
                  messageType="ns5:ODErrorLoggerRequestMessage"/>
        <variable name="InvokeEbsSRexception_InputVariable"
                  messageType="ns3:args_in_msg"/>
        <variable name="InvokeEbsSRexception_Input"
                  messageType="ns3:args_in_msg"/>
        <variable name="EbsSRexceptionSrvc_Input1"
                  messageType="ns3:args_in_msg"/>
    </variables>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in SRexceptions.wsdl) -->
        <scope name="ScopeSRexceptions">
            <faultHandlers>
                <catchAll>
                    <sequence name="SequenceCatchAll">
                        <assign name="assignCatchAll">
                            <copy>
                                <from expression="concat(ora:getProcessId(),ora:getProcessVersion())"/>
                                <to variable="InvokeCatchAll_InputVariable"
                                    part="payload"
                                    query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessName"/>
                            </copy>
                            <copy>
                                <from expression="ora:getInstanceId()"/>
                                <to variable="InvokeCatchAll_InputVariable"
                                    part="payload"
                                    query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessId"/>
                            </copy>
                            <copy>
                                <from expression="ora:getDomainId()"/>
                                <to variable="InvokeCatchAll_InputVariable"
                                    part="payload"
                                    query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessDomain"/>
                            </copy>
                            <copy>
                                <from expression="ora:getCurrentDateTime()"/>
                                <to variable="InvokeCatchAll_InputVariable"
                                    part="payload"
                                    query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorDateTime"/>
                            </copy>
                            <copy>
                                <from expression="ora:doc('${server_url}/xmllib/otc/GlobalParameters.xml','/GlobalParameters/SRexceptions/FaultNotification/SendNotification')"/>
                                <to variable="InvokeCatchAll_InputVariable"
                                    part="payload"
                                    query="/ns10:ErrorData/ns10:Notification/ns10:sendNotification"/>
                            </copy>
                            <copy>
                                <from expression="'System'"/>
                                <to variable="InvokeCatchAll_InputVariable"
                                    part="payload"
                                    query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorType"/>
                            </copy>
                            <copy>
                                <from expression="'Fatal'"/>
                                <to variable="InvokeCatchAll_InputVariable"
                                    part="payload"
                                    query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorSeverity"/>
                            </copy>
                        </assign>
                        <invoke name="invokeCatchAll"
                                partnerLink="ODErrorLogger"
                                portType="ns5:ODErrorLogger"
                                operation="initiate"
                                inputVariable="InvokeCatchAll_InputVariable"/>
                        <terminate name="terminateProcess"/>
                    </sequence>
                </catchAll>
            </faultHandlers>
            <sequence name="SequenceSRexceptions">
                <receive name="receiveInput" partnerLink="client"
                         portType="client:SRexceptions" operation="initiate"
                         variable="inputVariable" createInstance="yes"/>
                <assign name="TransformSRexceptions">
                    <bpelx:annotation>
                        <bpelx:pattern>transformation</bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                        <from expression="ora:processXSLT('TransformSRexceptions6.xsl',bpws:getVariableData('inputVariable','payload'))"/>
                        <to variable="EbsSRexceptionSrvc_Input1"
                            part="InputParameters"/>
                    </copy>
                </assign>
                <invoke name="InvokeEbsSRexception"
                        partnerLink="EbsSRexceptionSrvc"
                        portType="ns3:EbsSRexceptionSrvc_ptt"
                        operation="EbsSRexceptionSrvc"
                        inputVariable="EbsSRexceptionSrvc_Input1"
                        outputVariable="InvokeEbsSRexception_OutputVariable"/>
            </sequence>
        </scope>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
    </sequence>
</process>