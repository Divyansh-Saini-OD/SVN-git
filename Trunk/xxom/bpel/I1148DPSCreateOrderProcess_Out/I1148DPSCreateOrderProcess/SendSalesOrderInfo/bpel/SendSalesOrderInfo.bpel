<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Tue May 22 08:41:27 IST 2007
  Author:  dharma
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="SendSalesOrderInfo"
         targetNamespace="http://xmlns.oracle.com/SendSalesOrderInfo"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns13="http://xmlns.oracle.com/pcbpel/adapter/aq/outbound/"
         xmlns:ns4="http://xmlns.oracle.com/ProcessNowDocsReceive"
         xmlns:ns7="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XXOD_GLOBAL_EXCEPTION_PKG/INSERT_EXCEPTION/"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns12="http://xmlns.oracle.com/SendNowDocsMsgProcess"
         xmlns:ns5="http://xmlns.oracle.com/UpdateSuccessAckProcess"
         xmlns:client="http://xmlns.oracle.com/SendSalesOrderInfo"
         xmlns:ns6="http://xmlns.oracle.com/pcbpel/adapter/db/DBErrorWrite/"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ns11="ODError"
         xmlns:ns9="http://xmlns.oracle.com/pcbpel/adapter/aq/EnqueueMessage/"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/DBRead/"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://www.openapplications.org/oagis/9"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/top/DBRead"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns8="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:ns10="http://xmlns.oracle.com/pcbpel/adapter/opaque/">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="client" partnerLinkType="client:SendSalesOrderInfo"
                 myRole="SendSalesOrderInfoProvider"/>
    <partnerLink name="DBRead" partnerRole="DBRead_role"
                 partnerLinkType="ns1:DBRead_plt"/>
    <partnerLink name="ODErrorLogger" partnerRole="ODErrorLoggerProvider"
                 partnerLinkType="ns8:ODErrorLogger"/>
    <partnerLink name="EnqueueMessage" partnerRole="Enqueue_role"
                 partnerLinkType="ns9:Enqueue_plt"/>
    <partnerLink name="SendNowDocsMsgProcess"
                 partnerRole="SendNowDocsMsgProcessProvider"
                 partnerLinkType="ns12:SendNowDocsMsgProcess"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable"
              messageType="client:SendSalesOrderInfoRequestMessage"/>
    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable"
              messageType="client:SendSalesOrderInfoResponseMessage"/>
    <variable name="InvokeDBReadIn"
              messageType="ns1:DBReadSelect_p_Parent_line_id_inparameters"/>
    <variable name="InvokeDBReadOut"
              messageType="ns1:XxOmDpslinesVCollection_msg"/>
    <variable name="TransformedMsg" element="ns3:CreateSalesOrder"/>
    <variable name="RemoteFaultVar" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="InvokeRemErrorLoggerIn"
              messageType="ns8:ODErrorLoggerRequestMessage"/>
    <variable name="BindingFaultVar" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="InvokeBindErrorLoggerIn"
              messageType="ns8:ODErrorLoggerRequestMessage"/>
    <variable name="InvokeCatchAllErrorLoggerIn"
              messageType="ns8:ODErrorLoggerRequestMessage"/>
    <variable name="InvokeNowDocsIn"
              messageType="ns12:SendNowDocsMsgProcessRequestMessage"/>
    <variable name="InvokeNowDocsOut"
              messageType="ns12:SendNowDocsMsgProcessResponseMessage"/>
    <variable name="EnqueueHeader" messageType="ns9:Header_msg"/>
    <variable name="ReplyClientRemoteOut"
              messageType="client:SendSalesOrderInfoResponseMessage"/>
    <variable name="ReplyClientBindOut"
              messageType="client:SendSalesOrderInfoResponseMessage"/>
    <variable name="ReplyClientCatchAllOut"
              messageType="client:SendSalesOrderInfoResponseMessage"/>
    <variable name="InvokeRemEnqueueIn"
              messageType="ns9:SendSalesOrderInfoProcessRequest_msg"/>
    <variable name="InvokeBindEnqueueIn"
              messageType="ns9:SendSalesOrderInfoProcessRequest_msg"/>
    <variable name="InvokeCatchAllEnqueueIn"
              messageType="ns9:SendSalesOrderInfoProcessRequest_msg"/>
    <variable name="ActivityNameVar" type="xsd:string"/>
  </variables>
  <faultHandlers>
    <catch faultName="bpelx:remoteFault" faultVariable="RemoteFaultVar">
      <sequence name="SequenceRemoteFault">
        <assign name="AssignRemEnqueueMsg">
          <bpelx:annotation>
            <bpelx:documentation>Assigns required exception variables to be
                                 logged into ErrorLogger</bpelx:documentation>
          </bpelx:annotation>
          <copy>
            <from variable="inputVariable" part="payload"
                  query="/client:SendSalesOrderInfoProcessRequest/client:input"/>
            <to variable="InvokeRemEnqueueIn"
                part="SendSalesOrderInfoProcessRequest"
                query="/client:SendSalesOrderInfoProcessRequest/client:input"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from variable="RemoteFaultVar" part="code"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorCode"/>
          </copy>
          <copy>
            <from variable="RemoteFaultVar" part="detail"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="RemoteFaultVar" part="detail"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorText"/>
          </copy>
          <copy>
            <from expression="'Fatal'"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:MessageDetails/ns11:MessageDateTime"/>
          </copy>
          <copy>
            <from expression="ids:getDefaultRealmName()"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:SystemName"/>
          </copy>
          <copy>
            <from expression="ora:generateGUID()"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessId"/>
          </copy>
          <copy>
            <from variable="ActivityNameVar"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessStep"/>
          </copy>
          <copy>
            <from variable="inputVariable" part="payload"
                  query="/client:SendSalesOrderInfoProcessRequest/client:input"/>
            <to variable="InvokeRemErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:MessageDetails/ns11:MessageData"/>
          </copy>
          <copy>
            <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/EnqueueDelay")'/>
            <to variable="EnqueueHeader" part="Header"
                query="/ns9:Header/ns9:QueueHeader/ns13:Delay"/>
          </copy>
          <copy>
            <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/ReplyException")'/>
            <to variable="ReplyClientRemoteOut" part="payload"
                query="/client:SendSalesOrderInfoProcessResponse/client:result"/>
          </copy>
        </assign>
        <invoke name="InvokeRemErrorLogger" partnerLink="ODErrorLogger"
                portType="ns8:ODErrorLogger" operation="initiate"
                inputVariable="InvokeRemErrorLoggerIn">
          <bpelx:annotation>
            <bpelx:documentation>Invokes ODErrorLogger to log exceptions</bpelx:documentation>
          </bpelx:annotation>
        </invoke>
        <invoke name="InvokeRemEnqueue" partnerLink="EnqueueMessage"
                portType="ns9:Enqueue_ptt" operation="Enqueue"
                inputVariable="InvokeRemEnqueueIn"
                bpelx:inputHeaderVariable="EnqueueHeader">
          <bpelx:annotation>
            <bpelx:documentation>Invokes the AQ adapter to enqueue the message</bpelx:documentation>
          </bpelx:annotation>
        </invoke>
        <reply name="ReplyClientRemote" partnerLink="client"
               portType="client:SendSalesOrderInfo" operation="process"
               variable="ReplyClientRemoteOut">
          <bpelx:annotation>
            <bpelx:documentation>Replying back the client</bpelx:documentation>
          </bpelx:annotation>
        </reply>
      </sequence>
    </catch>
    <catch faultName="bpelx:bindingFault" faultVariable="BindingFaultVar">
      <sequence name="SequenceBindingFault">
        <assign name="AssignBindEnqueueMsg">
          <bpelx:annotation>
            <bpelx:documentation>Assigns required exception variables to be
                                 logged into ErrorLogger</bpelx:documentation>
          </bpelx:annotation>
          <copy>
            <from variable="inputVariable" part="payload"
                  query="/client:SendSalesOrderInfoProcessRequest/client:input"/>
            <to variable="InvokeBindEnqueueIn"
                part="SendSalesOrderInfoProcessRequest"
                query="/client:SendSalesOrderInfoProcessRequest/client:input"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from variable="RemoteFaultVar" part="code"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorCode"/>
          </copy>
          <copy>
            <from variable="RemoteFaultVar" part="detail"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="RemoteFaultVar" part="detail"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorText"/>
          </copy>
          <copy>
            <from expression="'Fatal'"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:MessageDetails/ns11:MessageDateTime"/>
          </copy>
          <copy>
            <from expression="ids:getDefaultRealmName()"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:SystemName"/>
          </copy>
          <copy>
            <from expression="ora:generateGUID()"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/EnqueueDelay")'/>
            <to variable="EnqueueHeader" part="Header"
                query="/ns9:Header/ns9:QueueHeader/ns13:Delay"/>
          </copy>
          <copy>
            <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/ReplyException")'/>
            <to variable="ReplyClientBindOut" part="payload"
                query="/client:SendSalesOrderInfoProcessResponse/client:result"/>
          </copy>
          <copy>
            <from variable="ActivityNameVar"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessStep"/>
          </copy>
          <copy>
            <from variable="inputVariable" part="payload"
                  query="/client:SendSalesOrderInfoProcessRequest/client:input"/>
            <to variable="InvokeBindErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:MessageDetails/ns11:MessageData"/>
          </copy>
        </assign>
        <invoke name="InvokeBindErrorLogger" partnerLink="ODErrorLogger"
                portType="ns8:ODErrorLogger" operation="initiate"
                inputVariable="InvokeBindErrorLoggerIn">
          <bpelx:annotation>
            <bpelx:documentation>Invokes ODErrorLogger to log exceptions</bpelx:documentation>
          </bpelx:annotation>
        </invoke>
        <invoke name="InvokeBindEnqueue" partnerLink="EnqueueMessage"
                portType="ns9:Enqueue_ptt" operation="Enqueue"
                inputVariable="InvokeBindEnqueueIn"
                bpelx:inputHeaderVariable="EnqueueHeader">
          <bpelx:annotation>
            <bpelx:documentation>Invokes the AQ adapter to enqueue the message</bpelx:documentation>
          </bpelx:annotation>
        </invoke>
        <reply name="ReplyClientBind" partnerLink="client"
               portType="client:SendSalesOrderInfo" operation="process"
               variable="ReplyClientBindOut">
          <bpelx:annotation>
            <bpelx:documentation>Replying back the client</bpelx:documentation>
          </bpelx:annotation>
        </reply>
      </sequence>
    </catch>
    <catchAll>
      <sequence name="SequenceCatchAll">
        <assign name="AssignCatchAllEnqueueMsg">
          <bpelx:annotation>
            <bpelx:documentation>Assigns required exception variables to be
                                 logged into ErrorLogger</bpelx:documentation>
          </bpelx:annotation>
          <copy>
            <from variable="inputVariable" part="payload"
                  query="/client:SendSalesOrderInfoProcessRequest/client:input"/>
            <to variable="InvokeCatchAllEnqueueIn"
                part="SendSalesOrderInfoProcessRequest"
                query="/client:SendSalesOrderInfoProcessRequest/client:input"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="'Fatal'"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:MessageDetails/ns11:MessageDateTime"/>
          </copy>
          <copy>
            <from expression="ids:getDefaultRealmName()"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:SystemName"/>
          </copy>
          <copy>
            <from expression="ora:generateGUID()"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessId"/>
          </copy>
          <copy>
            <from variable="ActivityNameVar"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ProcessInfo/ns11:BusinessProcessStep"/>
          </copy>
          <copy>
            <from variable="inputVariable" part="payload"
                  query="/client:SendSalesOrderInfoProcessRequest/client:input"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:MessageDetails/ns11:MessageData"/>
          </copy>
          <copy>
            <from expression="concat('Error Occurred In This Step',ora:getContentAsString(bpws:getVariableData('ActivityNameVar')))"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorDescription"/>
          </copy>
          <copy>
            <from expression="concat('Error Occurred In This Step',ora:getContentAsString(bpws:getVariableData('ActivityNameVar')))"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorCode"/>
          </copy>
          <copy>
            <from expression="concat('Error Occurred In This Step',ora:getContentAsString(bpws:getVariableData('ActivityNameVar')))"/>
            <to variable="InvokeCatchAllErrorLoggerIn" part="payload"
                query="/ns11:ErrorData/ns11:ErrorDetails/ns11:ErrorText"/>
          </copy>
          <copy>
            <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/EnqueueDelay")'/>
            <to variable="EnqueueHeader" part="Header"
                query="/ns9:Header/ns9:QueueHeader/ns13:Delay"/>
          </copy>
          <copy>
            <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/ReplyException")'/>
            <to variable="ReplyClientCatchAllOut" part="payload"
                query="/client:SendSalesOrderInfoProcessResponse/client:result"/>
          </copy>
        </assign>
        <invoke name="InvokeCatchAllErrorLogger" partnerLink="ODErrorLogger"
                portType="ns8:ODErrorLogger" operation="initiate"
                inputVariable="InvokeCatchAllErrorLoggerIn">
          <bpelx:annotation>
            <bpelx:documentation>Invokes ODErrorLogger to log exceptions</bpelx:documentation>
          </bpelx:annotation>
        </invoke>
        <invoke name="InvokeCatchAllEnqueue" partnerLink="EnqueueMessage"
                portType="ns9:Enqueue_ptt" operation="Enqueue"
                inputVariable="InvokeCatchAllEnqueueIn"
                bpelx:inputHeaderVariable="EnqueueHeader">
          <bpelx:annotation>
            <bpelx:documentation>Invokes the AQ adapter to enqueue the message</bpelx:documentation>
          </bpelx:annotation>
        </invoke>
        <reply name="ReplyClientCatchAll" partnerLink="client"
               portType="client:SendSalesOrderInfo" operation="process"
               variable="ReplyClientCatchAllOut">
          <bpelx:annotation>
            <bpelx:documentation>Replying back the client</bpelx:documentation>
          </bpelx:annotation>
        </reply>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in SendSalesOrderInfo.wsdl) -->
    <receive name="receiveInput" partnerLink="client"
             portType="client:SendSalesOrderInfo" operation="process"
             variable="inputVariable" createInstance="yes">
      <bpelx:annotation>
        <bpelx:documentation>Receives input from the main process</bpelx:documentation>
      </bpelx:annotation>
    </receive>
    <!-- Generate reply to synchronous request -->
    <assign name="AssignParentLineID">
      <bpelx:annotation>
        <bpelx:documentation>Assigns the parent line ID to the DB Adapter input
                             variable</bpelx:documentation>
      </bpelx:annotation>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/client:SendSalesOrderInfoProcessRequest/client:input"/>
        <to variable="InvokeDBReadIn"
            part="DBReadSelect_p_Parent_line_id_inparameters"
            query="/ns2:DBReadSelect_p_Parent_line_idInputParameters/ns2:p_Parent_line_id"/>
      </copy>
      <copy>
        <from expression="'Invoking the DBRead'"/>
        <to variable="ActivityNameVar"/>
      </copy>
    </assign>
    <invoke name="InvokeDBRead" partnerLink="DBRead" portType="ns1:DBRead_ptt"
            operation="DBReadSelect_p_Parent_line_id"
            inputVariable="InvokeDBReadIn" outputVariable="InvokeDBReadOut"/>
    <assign name="AssignActivityName">
      <copy>
        <from expression="'Trasnforming EBS to Nowdocs'"/>
        <to variable="ActivityNameVar"/>
      </copy>
    </assign>
    <assign name="TransformEBSToNowDocs">
      <bpelx:annotation>
        <bpelx:pattern>transformation</bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from expression="ora:processXSLT('xformMapper.xsl',bpws:getVariableData('InvokeDBReadOut','XxOmDpslinesVCollection'))"/>
        <to variable="TransformedMsg"/>
      </copy>
    </assign>
    <assign name="AssignMsgHeaders">
      <bpelx:annotation>
        <bpelx:documentation>Assigns the message headers from the global
                             parameters file</bpelx:documentation>
      </bpelx:annotation>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/GlbAdminAuthorityCode")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:Preamble/ns3:standardName/ns3:GlobalAdministeringAuthorityCode"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/VersionIdentifier")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:Preamble/ns3:standardVersion/ns3:VersionIdentifier"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/AffirmationIndicator")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:DeliveryHeader/ns3:isSecureTransportRequired/ns3:AffirmationIndicator"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/Value_Rcv")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:DeliveryHeader/ns3:messageReceiverIdentification/ns3:PartnerIdentification/ns3:locationID/ns3:Value"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/FreeFormText_Send")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:DeliveryHeader/ns3:messageSenderIdentification/ns3:PartnerIdentification/ns3:domain/ns3:FreeFormText"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/GlbBizIdentifier_Send")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:DeliveryHeader/ns3:messageSenderIdentification/ns3:PartnerIdentification/ns3:GlobalBusinessIdentifier"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/Value_Send")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:DeliveryHeader/ns3:messageSenderIdentification/ns3:PartnerIdentification/ns3:locationID/ns3:Value"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/BusinessActivityIdentifier")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:ActivityControl/ns3:BusinessActivityIdentifier"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/GlbPartRoleClassCode_FromSvc")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:ActivityControl/ns3:MessageControl/ns3:fromRole/ns3:GlobalPartnerRoleClassificationCode"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/GlbBusinessServiceCode_FromSvc")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:ActivityControl/ns3:MessageControl/ns3:fromService/ns3:GlobalBusinessServiceCode"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/FreeFormText_Manifest")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:ActivityControl/ns3:MessageControl/ns3:Manifest/ns3:Attachment/ns3:description/ns3:FreeFormText"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/GlbMimeTypeQualCode_Manifest")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:ActivityControl/ns3:MessageControl/ns3:Manifest/ns3:Attachment/ns3:GlobalMimeTypeQualifierCode"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/UniversalResourceIdentifier_Manifest")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:ActivityControl/ns3:MessageControl/ns3:Manifest/ns3:Attachment/ns3:UniversalResourceIdentifier"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/CountableAmount_Manifest")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:ActivityControl/ns3:MessageControl/ns3:Manifest/ns3:numberOfAttachments/ns3:CountableAmount"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/GlbBusinessAcitonCode_Manifest")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:ActivityControl/ns3:MessageControl/ns3:Manifest/ns3:ServiceContentControl/ns3:ActionIdentity/ns3:GlobalBusinessActionCode"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/GlbPartRoleClassCode_ToSvc")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:ActivityControl/ns3:MessageControl/ns3:toRole/ns3:GlobalPartnerRoleClassificationCode"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/GlbUsageCode")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:GlobalUsageCode"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/GlobalProcessIndicatorCode_Pip")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:pipCode/ns3:GlobalProcessIndicatorCode"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/InstanceIdentifier_Pip")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:pipInstanceId/ns3:InstanceIdentifier"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/VersionIdentifier_Pip")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:pipVersion/ns3:VersionIdentifier"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/FreeFormText_PartnrID")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:KnownInitiatingPartner/ns3:PartnerIdentification/ns3:domain/ns3:FreeFormText"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/GlobalBusinessIdentifier_PartnrID")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:KnownInitiatingPartner/ns3:PartnerIdentification/ns3:GlobalBusinessIdentifier"/>
      </copy>
      <copy>
        <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/Value_PartnrID")'/>
        <to variable="TransformedMsg"
            query="/ns3:CreateSalesOrder/ns3:ServiceHeader/ns3:ProcessControl/ns3:KnownInitiatingPartner/ns3:PartnerIdentification/ns3:locationID/ns3:Value"/>
      </copy>
    </assign>
    <assign name="AssignNowDocsMsg">
      <bpelx:annotation>
        <bpelx:documentation>Assigns the NowDocs process input variable</bpelx:documentation>
      </bpelx:annotation>
      <copy>
        <from variable="TransformedMsg" query="/ns3:CreateSalesOrder"/>
        <to variable="InvokeNowDocsIn" part="payload"
            query="/ns3:CreateSalesOrder"/>
      </copy>
      <copy>
        <from expression="'Invoking the send Nowdocs Process'"/>
        <to variable="ActivityNameVar"/>
      </copy>
    </assign>
    <invoke name="InvokeNowDocs" partnerLink="SendNowDocsMsgProcess"
            portType="ns12:SendNowDocsMsgProcess" operation="process"
            inputVariable="InvokeNowDocsIn" outputVariable="InvokeNowDocsOut">
      <bpelx:annotation>
        <bpelx:documentation>Invokes the sub process to send order info to
                             NowDocs</bpelx:documentation>
      </bpelx:annotation>
    </invoke>
    <reply name="replyOutput" partnerLink="client"
           portType="client:SendSalesOrderInfo" operation="process"
           variable="outputVariable">
      <bpelx:annotation>
        <bpelx:documentation>Replying back the client</bpelx:documentation>
      </bpelx:annotation>
    </reply>
  </sequence>
</process>