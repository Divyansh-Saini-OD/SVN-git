<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu May 24 15:50:49 IST 2007
  Author:  gparmar
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="I1164_EBS_ROADNET_OUT"
         targetNamespace="http://xmlns.oracle.com/I1164_EBS_ROADNET_OUT"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/mq/header"
         xmlns:ns7="http://TargetNamespace.com/eis/MQ/TransOrderLoadDtl"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns5="http://www.openapplications.org/oagis/9"
         xmlns:client="http://xmlns.oracle.com/I1164_EBS_ROADNET_OUT"
         xmlns:ns6="http://TargetNamespace.com/eis/MQ/TransOrderLoad"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/mq/headerRTSCustomerLoad/"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/mq/headerRTSRN5KOrderLoadDtl/"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/mq/headerRTSRN5KOrderLoad/"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns8="http://TargetNamespace.com/eis/MQ/Trans">
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="client"
                     partnerLinkType="client:I1164_EBS_ROADNET_OUT"
                     myRole="DeliveryToRoadnetProvider"/>
        <partnerLink name="RTSCustomerLoad" partnerRole="Enqueue_role"
                     partnerLinkType="ns1:Enqueue_plt"/>
        <partnerLink name="RTSRN5KOrderLoad" partnerRole="Enqueue_role"
                     partnerLinkType="ns2:Enqueue_plt"/>
        <partnerLink name="RTSRN5KOrderLoadDtl" partnerRole="Enqueue_role"
                     partnerLinkType="ns3:Enqueue_plt"/>
    </partnerLinks>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable"
                  messageType="client:DeliveryToRoadnetRequestMessage"/>
        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="Invoke_1_Enqueue_InputVariable"
                  messageType="ns1:Root-Element_msg"/>
        <variable name="Invoke_2_Enqueue_InputVariable"
                  messageType="ns2:Root-Element_msg"/>
        <variable name="Invoke_3_Enqueue_InputVariable"
                  messageType="ns3:Root-Element_msg"/>
        <variable name="OrderLoadMQHdr" messageType="ns4:OutboundHeader_msg"/>
        <variable name="QueueName" type="xsd:string"/>
        <variable name="OrderLoadDtlMQHdr"
                  messageType="ns4:OutboundHeader_msg"/>
        <variable name="Variable_1" messageType="ns4:OutboundHeader_msg"/>
        <variable name="outputVariable"
                  messageType="client:DeliveryToRoadnetResponseMessage"/>
        <variable name="bindingFaultVar"
                  messageType="bpelx:RuntimeFaultMessage"/>
        <variable name="remoteFaultVar"
                  messageType="bpelx:RuntimeFaultMessage"/>
        <variable name="RemoteaultReply_process_OutputVariable"
                  messageType="client:DeliveryToRoadnetResponseMessage"/>
        <variable name="BindingFaultReply_process_OutputVariable"
                  messageType="client:DeliveryToRoadnetResponseMessage"/>
    </variables>
    <faultHandlers>
        <catch faultName="bpelx:bindingFault" faultVariable="bindingFaultVar">
            <sequence name="Sequence_4">
                <assign name="BindingFaultAssign">
                    <copy>
                        <from expression="'1'"/>
                        <to variable="outputVariable" part="payload"
                            query="/client:DeliveryToRoadnetProcessResponse/client:result"/>
                    </copy>
                </assign>
                <reply name="BindingFaultReply" partnerLink="client"
                       portType="client:I1164_EBS_ROADNET_OUT"
                       operation="process" variable="outputVariable"
                       faultName="client:EnqueueError"/>
            </sequence>
        </catch>
        <catch faultName="bpelx:remoteFault" faultVariable="remoteFaultVar">
            <sequence name="Sequence_3">
                <assign name="RemoteFaultAssign">
                    <copy>
                        <from expression="'1'"/>
                        <to variable="outputVariable" part="payload"
                            query="/client:DeliveryToRoadnetProcessResponse/client:result"/>
                    </copy>
                </assign>
                <reply name="RemoteaultReply" partnerLink="client"
                       portType="client:I1164_EBS_ROADNET_OUT"
                       operation="process" variable="outputVariable"
                       faultName="client:EnqueueError"/>
            </sequence>
        </catch>
    </faultHandlers>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in I1164_EBS_ROADNET_OUT.wsdl) -->
        <receive name="receiveInput" partnerLink="client"
                 portType="client:I1164_EBS_ROADNET_OUT" operation="process"
                 variable="inputVariable" createInstance="yes"/>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <assign name="TransformCustomerLoad">
            <bpelx:annotation>
                <bpelx:pattern>transformation</bpelx:pattern>
            </bpelx:annotation>
            <copy>
                <from expression="ora:processXSLT('Transformation_2.xsl',bpws:getVariableData('inputVariable','payload'))"/>
                <to variable="Invoke_1_Enqueue_InputVariable"
                    part="Root-Element"/>
            </copy>
        </assign>
        <invoke name="Invoke_CustomerLoad" partnerLink="RTSCustomerLoad"
                portType="ns1:Enqueue_ptt" operation="Enqueue"
                inputVariable="Invoke_1_Enqueue_InputVariable"/>
        <assign name="Transform_OrderLoad">
            <bpelx:annotation>
                <bpelx:pattern>transformation</bpelx:pattern>
            </bpelx:annotation>
            <copy>
                <from expression="ora:processXSLT('Transformation_3.xsl',bpws:getVariableData('inputVariable','payload'))"/>
                <to variable="Invoke_2_Enqueue_InputVariable"
                    part="Root-Element"/>
            </copy>
        </assign>
        <assign name="Assign_OrderLoad_QueueName">
            <copy>
                <from expression="concat('RTS_RN5K_ORDER_LOAD_',bpws:getVariableData('inputVariable','payload','/ns5:CarrierRoute/ns5:RegionID'))"/>
                <to variable="QueueName"/>
            </copy>
        </assign>
        <assign name="Assign_OrderLoad_QueueParams">
            <copy>
                <from variable="QueueName"/>
                <to variable="OrderLoadMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:QueueName"/>
            </copy>
            <copy>
                <from expression="'NORMAL'"/>
                <to variable="OrderLoadMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:MsgType"/>
            </copy>
            <copy>
                <from expression="'NONE'"/>
                <to variable="OrderLoadMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:Format"/>
            </copy>
            <copy>
                <from expression="'AS_Q_DEF'"/>
                <to variable="OrderLoadMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:Priority"/>
            </copy>
            <copy>
                <from expression="'NEVER'"/>
                <to variable="OrderLoadMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:Expiry"/>
            </copy>
            <copy>
                <from expression="'AS_Q_DEF'"/>
                <to variable="OrderLoadMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:Persistence"/>
            </copy>
        </assign>
        <invoke name="Invoke_OrderLoad" partnerLink="RTSRN5KOrderLoad"
                portType="ns2:Enqueue_ptt" operation="Enqueue"
                inputVariable="Invoke_2_Enqueue_InputVariable"
                bpelx:inputHeaderVariable="OrderLoadMQHdr"/>
        <assign name="Transform_OrderLoadDetails">
            <bpelx:annotation>
                <bpelx:pattern>transformation</bpelx:pattern>
            </bpelx:annotation>
            <copy>
                <from expression="ora:processXSLT('Transformation_4.xsl',bpws:getVariableData('inputVariable','payload'))"/>
                <to variable="Invoke_3_Enqueue_InputVariable"
                    part="Root-Element"/>
            </copy>
        </assign>
        <assign name="Assign_OrderLoadDetails_QueueName">
            <copy>
                <from expression="concat('RTS_RN5K_ORDER_LOAD_DTL_', bpws:getVariableData('inputVariable','payload','/ns5:CarrierRoute/ns5:RegionID'))"/>
                <to variable="QueueName"/>
            </copy>
        </assign>
        <assign name="Assign_OrderLoadDetails_QueueParams">
            <copy>
                <from variable="QueueName"/>
                <to variable="OrderLoadDtlMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:QueueName"/>
            </copy>
            <copy>
                <from expression="'NORMAL'"/>
                <to variable="OrderLoadDtlMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:MsgType"/>
            </copy>
            <copy>
                <from expression="'NONE'"/>
                <to variable="OrderLoadDtlMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:Format"/>
            </copy>
            <copy>
                <from expression="'AS_Q_DEF'"/>
                <to variable="OrderLoadDtlMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:Priority"/>
            </copy>
            <copy>
                <from expression="'AS_Q_DEF'"/>
                <to variable="OrderLoadDtlMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:Persistence"/>
            </copy>
            <copy>
                <from expression="'NEVER'"/>
                <to variable="OrderLoadDtlMQHdr" part="outboundHeader"
                    query="/ns4:MQOutboundHeaderAndProperties/ns4:MQOutboundHeader/ns4:Expiry"/>
            </copy>
        </assign>
        <invoke name="Invoke_OrderLoadDetails" partnerLink="RTSRN5KOrderLoadDtl"
                portType="ns3:Enqueue_ptt" operation="Enqueue"
                inputVariable="Invoke_3_Enqueue_InputVariable"
                bpelx:inputHeaderVariable="OrderLoadDtlMQHdr"/>
        <assign name="SuccessReplyAssign">
            <copy>
                <from expression="'0'"/>
                <to variable="outputVariable" part="payload"
                    query="/client:DeliveryToRoadnetProcessResponse/client:result"/>
            </copy>
        </assign>
        <reply name="replyOutput" partnerLink="client"
               portType="client:I1164_EBS_ROADNET_OUT" operation="process"
               variable="outputVariable"/>
    </sequence>
</process>