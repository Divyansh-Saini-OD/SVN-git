<!--
  ///////////////////////////////////////////////////////////////////////////////////////////// 
  // Oracle JDeveloper BPEL Designer 
  // 
  // Created: Mon Feb 06 18:50:35 PST 2006
  // Author:  nltan
  // Purpose: Synchronous BPEL Process
  ///////////////////////////////////////////////////////////////////////////////////////////// 
-->
<process name="XXOMWshSendDlvyToOtmService"
         targetNamespace="http://xmlns.oracle.com/apps/wsh/outbound/txn/XXOMWshSendDlvyToOtmService"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XX_OM_WSH_OTM_OUTBOUND/GET_DELIVERY_OBJECTS/"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns5="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XX_OM_WSH_OTM_OUTBOUND/GET_DELIVERY_OBJECTS/"
         xmlns:client="http://xmlns.oracle.com/apps/wsh/outbound/txn/XXOMWshSendDlvyToOtmService"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/DeliveryInformation/"
         xmlns:ns3="http://xmlns.oracle.com/apps/otm"
         xmlns:ns2="http://xmlns.oracle.com/apps/wsh/outbound/util/WshOtmGlobalOutbound"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc">
  <!-- ================================================================= -->
  <!-- PARTNERLINKS                                                      -->
  <!-- List of services participating in this BPEL process               -->
  <!-- ================================================================= -->
  <partnerLinks>
    <!-- 
    The 'client' role represents the requester of this service. It is 
    used for callback. The location and correlation information associated
    with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="client"
                 partnerLinkType="client:XXOMWshSendDlvyToOtmService"
                 myRole="WshSendDlvyToOtmServiceProvider"/>
    <partnerLink name="getDeliveryInformation"
                 partnerRole="DeliveryInformation_role"
                 partnerLinkType="ns1:DeliveryInformation_plt"/>
  </partnerLinks>
  <!-- ================================================================= -->
  <!-- VARIABLES                                                         -->
  <!-- List of messages and XML documents used within this BPEL process  -->
  <!-- ================================================================= -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable"
              messageType="client:WshSendDlvyToOtmServiceRequestMessage"/>
    <!--  
    Reference to the message that will be returned to the requester
    -->
    <variable name="outputVariable"
              messageType="client:WshSendDlvyToOtmServiceResponseMessage"/>
    <variable name="faultVariable"
              messageType="client:WshSendDlvyToOtmServiceFaultMessage"/>
    <variable name="p_InvokeDeliveryInformationInput"
              messageType="ns1:args_in_msg"/>
    <variable name="p_InvokeDeliveryInformationOutput"
              messageType="ns1:args_out_msg"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Seq_CheckRetStatus">
        <switch name="checkRetStatus">
          <case condition="string-length(string(bpws:getVariableData('p_InvokeDeliveryInformationOutput','OutputParameters','/ns4:OutputParameters/X_RETURN_STATUS'))) > 0.0">
            <bpelx:annotation>
              <bpelx:pattern>hasRetStatus
              </bpelx:pattern>
            </bpelx:annotation>
            <assign name="assignRetStatus">
              <copy>
                <from expression="'U'"/>
                <to variable="outputVariable" part="payload"
                    query="/client:WshSendDlvyToOtmServiceProcessResponse/client:result/ns2:returnStatus"/>
              </copy>
            </assign>
          </case>
          <otherwise>
            <empty name="hasRetStatus"/>
          </otherwise>
        </switch>
        <assign name="assignDeliveryError">
          <copy>
            <from variable="inputVariable" part="payload"
                  query="/client:WshSendDlvyToOtmServiceProcessRequest/client:input/ns2:entityIdList"/>
            <to variable="outputVariable" part="payload"
                query="/client:WshSendDlvyToOtmServiceProcessResponse/client:result/ns2:errorIdList"/>
          </copy>
        </assign>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- ================================================================= -->
  <!-- ORCHESTRATION LOGIC                                               -->
  <!-- Set of activities coordinating the flow of messages across the    -->
  <!-- services integrated within this business process                  -->
  <!-- ================================================================= -->
  <sequence name="main">
    <!-- Receive input from requestor. 
    Note: This maps to operation defined in XXOMWshSendDlvyToOtmService.wsdl
    -->
    <receive name="receiveInput" partnerLink="client"
             portType="client:XXOMWshSendDlvyToOtmService" operation="process"
             variable="inputVariable" createInstance="yes"/>
    <!-- Generate reply to synchronous request -->
    <assign name="transformInputToDlvy">
      <bpelx:annotation>
        <bpelx:pattern>transformation
        </bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from expression="ora:processXSLT('WshXFormOutTxnInToDlvy.xsl',bpws:getVariableData('inputVariable','payload'))"/>
        <to variable="p_InvokeDeliveryInformationInput" part="InputParameters"/>
      </copy>
    </assign>
    <invoke name="invokeDeliveryInformation"
            partnerLink="getDeliveryInformation"
            portType="ns1:DeliveryInformation_ptt"
            operation="DeliveryInformation"
            inputVariable="p_InvokeDeliveryInformationInput"
            outputVariable="p_InvokeDeliveryInformationOutput"/>
    <switch name="checkReturnStatus">
      <case condition="upper-case(string(bpws:getVariableData('p_InvokeDeliveryInformationOutput','OutputParameters','/ns4:OutputParameters/X_RETURN_STATUS')))='S'">
        <bpelx:annotation>
          <bpelx:pattern>getDeliveryInfo_Success
          </bpelx:pattern>
        </bpelx:annotation>
        <assign name="transformDlvyToRelease">
          <bpelx:annotation>
            <bpelx:pattern>transformation
            </bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from expression="ora:processXSLT('WshXFormOutTxnDlvyToRelease.xsl',bpws:getVariableData('p_InvokeDeliveryInformationOutput','OutputParameters'))"/>
            <to variable="outputVariable" part="payload"/>
          </copy>
        </assign>
      </case>
      <otherwise>
        <throw name="throwDeliveryError" faultVariable="faultVariable"
               faultName="faultError"/>
      </otherwise>
    </switch>
    <reply name="replyOutput" partnerLink="client"
           portType="client:XXOMWshSendDlvyToOtmService" operation="process"
           variable="outputVariable"/>
  </sequence>
</process>
