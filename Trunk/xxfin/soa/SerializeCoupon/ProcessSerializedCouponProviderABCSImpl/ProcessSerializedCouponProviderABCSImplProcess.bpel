<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Sat Mar 17 02:31:39 IST 2012
  Author:  pkalvala
  Type: BPEL 1.1 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ProcessSerializedCouponProviderABCSImplProcess"
               targetNamespace="http://xmlns.officedepot.com/CouponSerialization/ProcessSerializedCouponProviderABCSImpl/ProcessSerializedCouponProviderABCSImplProcess"
               xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
               xmlns:client="http://xmlns.officedepot.com/CouponSerialization/ProcessSerializedCouponProviderABCSImpl/ProcessSerializedCouponProviderABCSImplProcess"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/mq/CouponSerialization/ProcessSerializedCouponProviderABCSImpl/SerializedCouponPutMQAdapter"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/mq/CouponSerialization/ProcessSerializedCouponProviderABCSImpl/SerializedCouponGetMQAdapter"
         xmlns:ns3="http://xmlns.officedepot.com/ApplicationMessage/POS/Custom/ABM/SerializedCouponMQResponseABM/V1"
         xmlns:ns4="http://xmlns.officedepot.com/ApplicationMessage/POS/Custom/ABM/SerializedCouponMQRequestABM/V1"
         xmlns:ns5="http://xmlns.officedepot.com/CouponSerialization/ProcessSerializedCouponProviderABCSImpl/ProcessSerializedCouponProviderABCSImplProcess/correlationset"
         xmlns:ns6="http://xmlns.officedepot.com/EnterpriseMessage/POS/Custom/EBM/SerializedCouponRequestEBM/V1"
         xmlns:ns7="http://xmlns.officedepot.com/EnterpriseObjects/POS/Custom/Common/SerializedCouponCommon/V1"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns9="http://xmlns.officedepot.com/EnterpriseObjects/POS/Custom/EBO/SerializedCouponResponseEBO/V1"
         xmlns:ns8="http://xmlns.officedepot.com/EnterpriseMessage/POS/Custom/EBM/SerializedCouponResponseEBM/V1"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns10="http://xmlns.officedepot.com/EnterpriseMessage/POS/Custom/Common/SerializedCouponFaultMessage/V1"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns11="http://xmlns.oracle.com/pcbpel/adapter/jms/CouponSerialization/ProcessSerializedCouponProviderABCSImpl/CommonErrorLoggingService"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns12="http://www.officedepot.com/officedepot/ODComnErrorStructure/1.0">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="ProcessSerializedCouponProviderABCSImplService" partnerLinkType="client:ProcessSerializedCouponProviderABCSImplProcess" myRole="ProcessSerializedCouponProviderABCSImplProcessProvider"/>
    <partnerLink name="SerializedCouponPutMQAdapter"
                 partnerLinkType="ns1:Enqueue_plt" partnerRole="Enqueue_role"/>
    <partnerLink name="SerializedCouponGetMQAdapter"
                 partnerLinkType="ns2:Dequeue_plt" myRole="Dequeue_role"/>
    <partnerLink name="CommonErrorLoggingService"
                 partnerLinkType="ns11:Produce_Message_plt"
                 partnerRole="Produce_Message_role"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:ProcessSerializedCouponProviderABCSImplProcessRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:ProcessSerializedCouponProviderABCSImplProcessResponseMessage"/>
    <variable name="invoke_Enqueue_InputVariable"
              messageType="ns1:Enqueue_msg"/>
    <variable name="receive_Dequeue_InputVariable"
              messageType="ns2:Dequeue_msg"/>
    <variable name="couponCodeNotFound"
              messageType="client:CouponInformationNotFoundFault"/>
    <variable name="systemNotReachable"
              messageType="client:CouponSerializationFault"/>
    <variable name="unknownReturnCode"
              messageType="client:CouponSerializationFault"/>
    <variable name="messageSentToQueue" type="xsd:string"/>
    <variable name="invokeCommonErrorLoggerInputData"
              messageType="ns11:Produce_Message_msg"/>
    <variable name="couponCode" type="xsd:string"/>
    <variable name="agentCode" type="xsd:string"/>
    <variable name="sourceID" type="xsd:string"/>
  </variables>
  <correlationSets>
    <correlationSet name="SerializedCouponMQCorSet"
                    properties="ns5:SerializedCouponMQProperty"/>
  </correlationSets>
  <faultHandlers>
    <catchAll>
      <sequence name="SequenceLogAndSendNotification">
        
       <scope name="Scope4">
          <bpelx:annotation>
            <bpelx:general>
              <bpelx:property name="userLabel">ScopeSendNotification</bpelx:property>
            </bpelx:general>
          </bpelx:annotation>
          <variables>
            <variable name="messagePayload" type="xsd:string"/>
            <variable name="emailSubject" type="xsd:string"/>
            <variable name="errorText" type="xsd:string"/>
            <variable name="systemName" type="xsd:string"/>
            <variable name="messageOperation" type="xsd:string"/>
          </variables>
          <sequence name="SequenceSendNotification">
            <switch name="SwitchDetermineFaultType">
              <case condition='contains(ora:getFaultName(),ora:getPreference("UNKNOWN_COUPON_RETURN_CODE"))'>
                <bpelx:annotation>
                  <bpelx:general>
                    <bpelx:property name="userLabel">InCaseUnknownReturnCode</bpelx:property>
                  </bpelx:general>
                </bpelx:annotation>
                <assign name="AssignUnknownReturnCodeRelatedData">
                  <copy>
                    <from expression="concat(ora:getPreference(&quot;COUPON_CODE_UNKNOWN_MESSAGE&quot;),&quot; &quot;, bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID'))"/>
                    <to variable="emailSubject"/>
                  </copy>
                  <copy>
                    <from expression='string("")'/>
                    <to variable="messagePayload"/>
                  </copy>
                  <copy>
                    <from expression="concat(ora:getPreference(&quot;COUPON_CODE_UNKNOWN_MESSAGE&quot;),&quot; &quot;, bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID'))"/>
                    <to variable="errorText"/>
                  </copy>
                  <copy>
                    <from expression="ora:getPreference('SYSTEM_NAME')"/>
                    <to variable="systemName"/>
                  </copy>
                  <copy>
                    <from expression="ora:getPreference('MESSAGE_OPERATION_GET')"/>
                    <to variable="messageOperation"/>
                  </copy>
                </assign>
              </case>
              <case condition='contains(ora:getFaultName(),ora:getPreference("RECEIVE_MQ_TIMEOUT_FAULT"))'>
                <bpelx:annotation>
                  <bpelx:general>
                    <bpelx:property name="userLabel">InCaseReceiveActivityTimeOut</bpelx:property>
                  </bpelx:general>
                </bpelx:annotation>
                <assign name="AssignReceiveTimeoutErrorRelatedData">
                  <copy>
                    <from expression="concat(ora:getPreference(&quot;RECEIVE_MQ_TIMEOUT_FAULT_MESSAGE&quot;),&quot; &quot;, bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID'))"/>
                    <to variable="emailSubject"/>
                  </copy>
                  <copy>
                    <from expression="concat(ora:getPreference(&quot;RECEIVE_MQ_TIMEOUT_FAULT_MESSAGE&quot;),&quot; &quot;, bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID'))"/>
                    <to variable="errorText"/>
                  </copy>
                  <copy>
                    <from expression='string("")'/>
                    <to variable="messagePayload"/>
                  </copy>
                  <copy>
                    <from expression="ora:getPreference('SOA_ADMIN_APP_NAME')"/>
                    <to variable="systemName"/>
                  </copy>
                  <copy>
                    <from expression="ora:getPreference('MESSAGE_OPERATION_GET')"/>
                    <to variable="messageOperation"/>
                  </copy>
                </assign>
              </case>
              <otherwise>
                <sequence name="SequenceOtherScenarios">
                
        <assign name="AssignUnknownErrorCode">
                    <copy>
                      <from expression="concat(ora:getPreference(&quot;SOA_ADMIN_ERROR_MESSAGE&quot;),bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID'))"/>
                      <to variable="unknownReturnCode" part="payload"
                          query="/ns10:SerializedCouponFaultMessage/ns10:ErrorMessage"/>
                    </copy>
                  </assign>
          <reply name="ReplyUnknownErrorCode"
                 faultName="client:CouponSerializationFault"
                 variable="unknownReturnCode"
                 partnerLink="ProcessSerializedCouponProviderABCSImplService"
                 portType="client:ProcessSerializedCouponProviderABCSImplProcess"
                 operation="processSerializedCoupon"/>                
                  <assign name="AssignRunTimeErrorRelatedData">
                    <copy>
                      <from expression="concat(ora:getPreference(&quot;SOA_ADMIN_ERROR_MESSAGE&quot;),bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID'))"/>
                      <to variable="emailSubject"/>
                    </copy>
                    <copy>
                      <from expression="substring(ora:getFaultAsString(),1,500)"/>
                      <to variable="errorText"/>
                    </copy>
                    <copy>
                      <from expression='string("")'/>
                      <to variable="messagePayload"/>
                    </copy>
                    <copy>
                      <from expression="ora:getPreference('SOA_ADMIN_APP_NAME')"/>
                      <to variable="systemName"/>
                    </copy>
                  </assign>
                  <switch name="SwitchIfDataSentToMQ">
                    <case condition="bpws:getVariableData('messageSentToQueue') = &quot;true&quot;">
                      <bpelx:annotation>
                        <bpelx:general>
                          <bpelx:property name="userLabel">ifMessageSentToMQ</bpelx:property>
                        </bpelx:general>
                      </bpelx:annotation>
                      <assign name="AssignMessageOperationAsGetMQ">
                        <copy>
                          <from expression="ora:getPreference('MESSAGE_OPERATION_GET')"/>
                          <to variable="messageOperation"/>
                        </copy>
                      </assign>
                    </case>
                    <otherwise>
                      <assign name="AssignMessageOperationAsPutMQ">
                        <copy>
                          <from expression="ora:getPreference('MESSAGE_OPERATION_PUT')"/>
                          <to variable="messageOperation"/>
                        </copy>
                      </assign>
                    </otherwise>
                  </switch>
                </sequence>
              </otherwise>
            </switch>
            <assign name="AssignPopulateCommonErrorLoggingData">
              <copy>
                <from expression="ora:getProcessId()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:ProcessInfo/ns12:ProcessName"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('ERROR_TYPE')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:ErrorDetails/ns12:ErrorType"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('ERROR_SEVERITY')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:ErrorDetails/ns12:ErrorSeverity"/>
              </copy>
              <copy>
                <from expression="bpws:getVariableData('errorText')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:ErrorDetails/ns12:ErrorText"/>
              </copy>
              <copy>
                <from expression="ora:getCurrentDateTime()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:ErrorDetails/ns12:ErrorDateTime"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('CATCH_ALL_PROCESS_STEP')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:ErrorDetails/ns12:ProcessStep"/>
              </copy>
              <copy>
                <from expression="ora:getFaultName()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:ErrorDetails/ns12:ErrorCode"/>
              </copy>
              <copy>
                <from expression="ora:getDomainId()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:ProcessInfo/ns12:Domain"/>
              </copy>
              <copy>
                <from expression="ora:getCompositeInstanceId()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:MessageDetails/ns12:MessageID"/>
              </copy>
              <copy>
                <from expression="ora:getCurrentDateTime()"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:MessageDetails/ns12:MessageDateTime"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('MESSAGE_TYPE')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:MessageDetails/ns12:MessageType"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('MESSAGE_VERSION')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:MessageDetails/ns12:MessageVersion"/>
              </copy>
              <copy>
                <from expression="bpws:getVariableData('messageOperation')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:MessageDetails/ns12:MessageOperation"/>
              </copy>
              <copy>
                <from expression="ora:getPreference('SOURCE_SYSTEM_NAME')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:MessageDetails/ns12:MessageSourceSystem"/>
              </copy>
              <copy>
                <from expression="bpws:getVariableData('systemName')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:ProcessInfo/ns12:SystemName"/>
              </copy>
              <copy>
                <from expression="bpws:getVariableData('emailSubject')"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:ErrorDetails/ns12:ErrorDescription"/>
              </copy>
              <copy>
                <from variable="messagePayload"/>
                <to variable="invokeCommonErrorLoggerInputData" part="body"
                    query="/ns12:ODComnErrorStructure/ns12:ODComnErrorStructureList/ns12:MessageDetails/ns12:MessagePayload"/>
              </copy>
            </assign>
            <invoke name="InvokeCommonErrorLoggerToSendErrorData"
                    inputVariable="invokeCommonErrorLoggerInputData"
                    partnerLink="CommonErrorLoggingService"
                    portType="ns11:Produce_Message_ptt"
                    operation="Produce_Message" bpelx:invokeAsDetail="no"/>
          </sequence>
        </scope>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ProcessSerializedCouponProviderABCSImplProcess.wsdl) -->
    <receive name="receiveInput" partnerLink="ProcessSerializedCouponProviderABCSImplService" portType="client:ProcessSerializedCouponProviderABCSImplProcess"
             operation="processSerializedCoupon" variable="inputVariable" createInstance="yes"/>
    <assign name="Initialize">
      <copy>
        <from expression="string(bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponData/Identification/ns7:CouponCode'))"/>
        <to variable="couponCode"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID"/>
        <to variable="sourceID"/>
      </copy>
      <copy>
        <from expression="string(bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponData/Identification/ns7:AgentID'))"/>
        <to variable="agentCode"/>
      </copy>
    </assign>
    <scope name="Scope2">
      <bpelx:annotation>
        <bpelx:general>
          <bpelx:property name="userLabel">ScopeSetTitle</bpelx:property>
        </bpelx:general>
      </bpelx:annotation>
      <variables>
        <variable name="header" type="xsd:string"/>
      </variables>
      <sequence name="SequenceSetTitle">
        <assign name="setHeader">
          <copy>
            <from variable="inputVariable" part="payload"
                  query="/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID"/>
            <to variable="header"/>
          </copy>
        </assign>
        <bpelx:exec name="setTitle" version="1.5" language="java">
          <![CDATA[/* Set the Title for the process        
*/        
            
try                   
{                   
                 
  String title      = "";                   
  title = (String)getVariableData("header");                   
  setCompositeInstanceTitle(title) ;                   
                   
}                   
catch (Exception ex)                   
{                   
  addAuditTrailEntry(ex.toString());                   
 ex.printStackTrace();                   
}]]>
        </bpelx:exec>
      </sequence>
    </scope>
    <!-- Generate reply to synchronous request -->
    <bpelx:exec name="PadSpacesToCouponCodeAndAgentID" version="1.5"
                language="java">
      <![CDATA[/* Set the Title for the process         
*/         
             
try                    
{                    
                  
  String couponCodeTemp      = "";   
  String agentCodeTemp      = "";  
  String sourceIDTemp      = ""; 
  String couponCodeNew      = "";   
  String agentCodeNew      = ""; 
  String sourceIDNew      = ""; 
 
  couponCodeTemp = (String)getVariableData("couponCode");  
  agentCodeTemp = (String)getVariableData("agentCode"); 
  sourceIDTemp = (String)getVariableData("sourceID"); 
 
  //padRight 
  couponCodeNew = String.format("%1$-" + 9 + "s", couponCodeTemp); 
 
  //padLeft 
  agentCodeNew =  String.format("%1$#" + 10 + "s", agentCodeTemp);  
 
  //padLeft  
  sourceIDNew =  String.format("%1$#" + 20 + "s", sourceIDTemp);  
 
  setVariableData("couponCode", couponCodeNew);  
  setVariableData("agentCode", agentCodeNew); 
  setVariableData("sourceID", sourceIDNew);  
                    
}                    
catch (Exception ex)                    
{                    
  addAuditTrailEntry(ex.toString());                    
 ex.printStackTrace();                    
}]]>
    </bpelx:exec>
    <switch name="SwitchDetermineTypeOfRequest">
      <case condition="bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponData/MarkAsUsedIndicator') ='N'">
        <bpelx:annotation>
          <bpelx:general>
            <bpelx:property name="userLabel">ifMarkAsIndicatorN</bpelx:property>
          </bpelx:general>
        </bpelx:annotation>
        <assign name="AssignAsDelete">
          <copy>
            <from expression="ora:getPreference('DELETE_ACTION_FLAG_CODE')"/>
            <to variable="invoke_Enqueue_InputVariable" part="body"
                query="/ns4:SerializedCouponMQRequestABM/ns4:ActionFlag"/>
          </copy>
        </assign>
      </case>
      <case condition="bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponData/MarkAsUsedIndicator') ='Y'">
        <bpelx:annotation>
          <bpelx:general>
            <bpelx:property name="userLabel">ifMarkAsIndicatorY</bpelx:property>
          </bpelx:general>
        </bpelx:annotation>
        <assign name="AssignAsUpdate">
          <copy>
            <from expression="ora:getPreference('UPDATE_ACTION_FLAG_CODE')"/>
            <to variable="invoke_Enqueue_InputVariable" part="body"
                query="/ns4:SerializedCouponMQRequestABM/ns4:ActionFlag"/>
          </copy>
        </assign>
      </case>
    </switch>
    <assign name="AssignConvertEBMToABM">
      <copy>
        <from variable="sourceID"/>
        <to variable="invoke_Enqueue_InputVariable" part="body"
            query="/ns4:SerializedCouponMQRequestABM/ns4:OriginalPOSTransaction"/>
      </copy>
      <copy>
        <from variable="couponCode"/>
        <to variable="invoke_Enqueue_InputVariable" part="body"
            query="/ns4:SerializedCouponMQRequestABM/ns4:CouponId"/>
      </copy>
      <copy>
        <from variable="agentCode"/>
        <to variable="invoke_Enqueue_InputVariable" part="body"
            query="/ns4:SerializedCouponMQRequestABM/ns4:AgentId"/>
      </copy>
    </assign>
    <scope name="Scope5">
      <bpelx:annotation>
        <bpelx:general>
          <bpelx:property name="userLabel">ScopeSendMessageToQueue</bpelx:property>
        </bpelx:general>
      </bpelx:annotation>
      <variables>
        <variable name="sendMQError"
                  messageType="client:CouponSerializationFault"/>
      </variables>
      <faultHandlers>
        <catchAll>
          <sequence name="SequenceErrorSendingToMQ">
            <assign name="AssignErrorSendingToMQ">
              <copy>
                <from expression='ora:getPreference("POS_RETURN_CODE_MQ_REQUEST_ERROR_CODE")'/>
                <to variable="sendMQError" part="payload"
                    query="/ns10:SerializedCouponFaultMessage/ns10:ErrorCode"/>
              </copy>
              <copy>
                <from expression="concat(ora:getPreference(&quot;POS_RETURN_CODE_MQ_REQUEST_ERROR_DESC&quot;),&quot; &quot;,bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID'))"/>
                <to variable="sendMQError" part="payload"
                    query="/ns10:SerializedCouponFaultMessage/ns10:ErrorMessage"/>
              </copy>
            </assign>
            <reply name="ReplyErrorSendingToMQ"
                   partnerLink="ProcessSerializedCouponProviderABCSImplService"
                   portType="client:ProcessSerializedCouponProviderABCSImplProcess"
                   operation="processSerializedCoupon" variable="sendMQError"
                   faultName="client:CouponSerializationFault"/>
            <throw name="ThrowSendMQFault" faultName="bpelx:SendMQFault"/>
          </sequence>
        </catchAll>
      </faultHandlers>
      <invoke name="InvokeSerializedCouponPutMQAdapter"
              inputVariable="invoke_Enqueue_InputVariable"
              partnerLink="SerializedCouponPutMQAdapter"
              portType="ns1:Enqueue_ptt" operation="Enqueue"
              bpelx:invokeAsDetail="no">
        <correlations>
          <correlation set="SerializedCouponMQCorSet" initiate="yes"
                       pattern="out"/>
        </correlations>
      </invoke>
    </scope>
    <assign name="AssignMessageSentToQueue">
      <copy>
        <from expression="'true'"/>
        <to variable="messageSentToQueue"/>
      </copy>
    </assign>
    <scope name="Scope1">
      <bpelx:annotation>
        <bpelx:general>
          <bpelx:property name="userLabel">ScopeReceiveMessageFromQueue</bpelx:property>
        </bpelx:general>
      </bpelx:annotation>
      <faultHandlers>
        <catch faultName="bpelx:timeout">
          <sequence name="SequenceReceiveTimeOut">
            <assign name="AssignNoResponseFromSystem">
              <copy>
                <from expression='ora:getPreference("POS_RETURN_CODE_TIMEOUT_CODE")'/>
                <to variable="systemNotReachable" part="payload"
                    query="/ns10:SerializedCouponFaultMessage/ns10:ErrorCode"/>
              </copy>
              <copy>
                <from expression="concat(ora:getPreference(&quot;RECEIVE_MQ_TIMEOUT_FAULT_MESSAGE&quot;),&quot;&quot;,bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID'))"/>
                <to variable="systemNotReachable" part="payload"
                    query="/ns10:SerializedCouponFaultMessage/ns10:ErrorMessage"/>
              </copy>
            </assign>
            <reply name="ReplyTimeOut" variable="systemNotReachable"
                   partnerLink="ProcessSerializedCouponProviderABCSImplService"
                   portType="client:ProcessSerializedCouponProviderABCSImplProcess"
                   operation="processSerializedCoupon"
                   faultName="client:CouponSerializationFault"/>
            <throw name="ThrowReceiveMQFault"
                   faultName="bpelx:ReceiveActivityTimeOutFault"/>
          </sequence>
        </catch>
      </faultHandlers>
      <receive name="ReceiveDataFromMQ" createInstance="no"
               partnerLink="SerializedCouponGetMQAdapter"
               portType="ns2:Dequeue_ptt" operation="Dequeue"
               variable="receive_Dequeue_InputVariable"
               bpelx:for='ora:getPreference("RECEIVE_MQ_TIMEOUT")'>
        <correlations>
          <correlation set="SerializedCouponMQCorSet" initiate="no"/>
        </correlations>
      </receive>
    </scope>
    <switch name="SwitchDetermineReturnCode">
      <case condition="bpws:getVariableData('receive_Dequeue_InputVariable','body','/ns3:SerializedCouponMQResponseABM/ns3:POSReturnCode') = ora:getPreference(&quot;POS_RETURN_CODE_GOOD&quot;) or bpws:getVariableData('receive_Dequeue_InputVariable','body','/ns3:SerializedCouponMQResponseABM/ns3:POSReturnCode')=ora:getPreference(&quot;POS_RETURN_CODE_COUPON_ALREADY_USED&quot;) ">
        <bpelx:annotation>
          <bpelx:general>
            <bpelx:property name="userLabel">CouponGoodorCouponAlreadyUsed</bpelx:property>
          </bpelx:general>
        </bpelx:annotation>
        <sequence name="SequenceSendReply">
          <assign name="TransformABMToResponseEBM">
            <bpelx:annotation>
              <bpelx:pattern>transformation</bpelx:pattern>
            </bpelx:annotation>
            <copy>
              <from expression="ora:doXSLTransformForDoc('xsl/TransformABMToResponseEBM.xsl', $receive_Dequeue_InputVariable.body)"/>
              <to variable="outputVariable" part="payload"/>
            </copy>
          </assign>
          <reply name="replyOutput"
                 partnerLink="ProcessSerializedCouponProviderABCSImplService"
                 portType="client:ProcessSerializedCouponProviderABCSImplProcess"
                 operation="processSerializedCoupon" variable="outputVariable"/>
        </sequence>
      </case>
      <case condition="bpws:getVariableData('receive_Dequeue_InputVariable','body','/ns3:SerializedCouponMQResponseABM/ns3:POSReturnCode') = ora:getPreference(&quot;POS_RETURN_CODE_COUPON_NOT_FOUND&quot;)">
        <bpelx:annotation>
          <bpelx:general>
            <bpelx:property name="userLabel">InCaseCouponNotFound</bpelx:property>
          </bpelx:general>
        </bpelx:annotation>
        <sequence name="SequenceThrowCouponNotFound">
          <assign name="AssignCouponNotFoundMessage">
            <copy>
              <from expression='ora:getPreference("POS_RETURN_CODE_COUPON_NOT_FOUND")'/>
              <to variable="couponCodeNotFound" part="payload"
                  query="/ns10:SerializedCouponFaultMessage/ns10:ErrorCode"/>
            </copy>
            <copy>
              <from expression="concat(ora:getPreference(&quot;COUPON_CODE_NOT_FOUND_MESSAGE&quot;),&quot;&quot;,bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID'))"/>
              <to variable="couponCodeNotFound" part="payload"
                  query="/ns10:SerializedCouponFaultMessage/ns10:ErrorMessage"/>
            </copy>
          </assign>
          <reply name="ReplyCouponNotFound"
                 faultName="client:CouponInformationNotFound"
                 variable="couponCodeNotFound"
                 partnerLink="ProcessSerializedCouponProviderABCSImplService"
                 portType="client:ProcessSerializedCouponProviderABCSImplProcess"
                 operation="processSerializedCoupon"/>
        </sequence>
      </case>
      <otherwise>
        <sequence name="SequenceUnknownReturnCode">
          <assign name="AssignUnknownReturnCode">
            <copy>
              <from expression='ora:getPreference("UNKNOWN_COUPON_RETURN_CODE_ERROR_CODE")'/>
              <to variable="unknownReturnCode" part="payload"
                  query="/ns10:SerializedCouponFaultMessage/ns10:ErrorCode"/>
            </copy>
            <copy>
              <from expression="concat(ora:getPreference(&quot;COUPON_CODE_UNKNOWN_MESSAGE&quot;),&quot;&quot;,bpws:getVariableData('inputVariable','payload','/ns6:SerializedCouponRequestEBM/SerializedCouponHeader/ns7:SourceID'))"/>
              <to variable="unknownReturnCode" part="payload"
                  query="/ns10:SerializedCouponFaultMessage/ns10:ErrorMessage"/>
            </copy>
          </assign>
          <reply name="ReplyUnknownReturnCode"
                 faultName="client:CouponSerializationFault"
                 variable="unknownReturnCode"
                 partnerLink="ProcessSerializedCouponProviderABCSImplService"
                 portType="client:ProcessSerializedCouponProviderABCSImplProcess"
                 operation="processSerializedCoupon"/>
          <throw name="ThrowUnKnownReturnCode"
                 faultName="bpelx:UnknownCouponReturnCodeFault"/>
        </sequence>
      </otherwise>
    </switch>
  </sequence>
</process>