package od.tdmatch.model;

import java.math.BigDecimal;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
//import od.tdmatch.model.OrgVORowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jun 04 16:12:07 EDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VendMootDtVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        OrgId,
        Source,
        InvoiceNum,
        PoNumber,
        InvoiceDate,
        DueDate,
        SupplierName,
        SupplierNo,
        SupplierSite,
        Sku,
        VendorAssistant,
        AllPendingS,
        Discount,
        VoucherNum,
        Location,
        InvoiceAmount,
        PoType,
        FrontDoorS,
        NonCodeS,
        DropShipS,
        PriceExceptS,
        QtyExceptS,
        FrExceptS,
        QtyHoldAmt,
        PriceHoldAmt,
        FrtHold,
        PoHoldChr,
        FrontDoorc,
        NonCodec,
        DropShipc,
        InvoiceId,
        Attribute5,
        GlDate,
        SumInvAmount,
        SumQtyHoldAmt,
        SumPriceHoldAmt,
        OrgLovVO1,
        SupplierLOV1,
        SupplierLOV2,
        SupplierSiteLOV1,
        VendorAssistantLOV1,
        InvoiceSourceLovVO1,
        SKULovVO1,
        InvoiceNumLovVO1,
        PoNumberLovVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SOURCE = AttributesEnum.Source.index();
    public static final int INVOICENUM = AttributesEnum.InvoiceNum.index();
    public static final int PONUMBER = AttributesEnum.PoNumber.index();
    public static final int INVOICEDATE = AttributesEnum.InvoiceDate.index();
    public static final int DUEDATE = AttributesEnum.DueDate.index();
    public static final int SUPPLIERNAME = AttributesEnum.SupplierName.index();
    public static final int SUPPLIERNO = AttributesEnum.SupplierNo.index();
    public static final int SUPPLIERSITE = AttributesEnum.SupplierSite.index();
    public static final int SKU = AttributesEnum.Sku.index();
    public static final int VENDORASSISTANT = AttributesEnum.VendorAssistant.index();
    public static final int ALLPENDINGS = AttributesEnum.AllPendingS.index();
    public static final int DISCOUNT = AttributesEnum.Discount.index();
    public static final int VOUCHERNUM = AttributesEnum.VoucherNum.index();
    public static final int LOCATION = AttributesEnum.Location.index();
    public static final int INVOICEAMOUNT = AttributesEnum.InvoiceAmount.index();
    public static final int POTYPE = AttributesEnum.PoType.index();
    public static final int FRONTDOORS = AttributesEnum.FrontDoorS.index();
    public static final int NONCODES = AttributesEnum.NonCodeS.index();
    public static final int DROPSHIPS = AttributesEnum.DropShipS.index();
    public static final int PRICEEXCEPTS = AttributesEnum.PriceExceptS.index();
    public static final int QTYEXCEPTS = AttributesEnum.QtyExceptS.index();
    public static final int FREXCEPTS = AttributesEnum.FrExceptS.index();
    public static final int QTYHOLDAMT = AttributesEnum.QtyHoldAmt.index();
    public static final int PRICEHOLDAMT = AttributesEnum.PriceHoldAmt.index();
    public static final int FRTHOLD = AttributesEnum.FrtHold.index();
    public static final int POHOLDCHR = AttributesEnum.PoHoldChr.index();
    public static final int FRONTDOORC = AttributesEnum.FrontDoorc.index();
    public static final int NONCODEC = AttributesEnum.NonCodec.index();
    public static final int DROPSHIPC = AttributesEnum.DropShipc.index();
    public static final int INVOICEID = AttributesEnum.InvoiceId.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int GLDATE = AttributesEnum.GlDate.index();
    public static final int SUMINVAMOUNT = AttributesEnum.SumInvAmount.index();
    public static final int SUMQTYHOLDAMT = AttributesEnum.SumQtyHoldAmt.index();
    public static final int SUMPRICEHOLDAMT = AttributesEnum.SumPriceHoldAmt.index();
    public static final int ORGLOVVO1 = AttributesEnum.OrgLovVO1.index();
    public static final int SUPPLIERLOV1 = AttributesEnum.SupplierLOV1.index();
    public static final int SUPPLIERLOV2 = AttributesEnum.SupplierLOV2.index();
    public static final int SUPPLIERSITELOV1 = AttributesEnum.SupplierSiteLOV1.index();
    public static final int VENDORASSISTANTLOV1 = AttributesEnum.VendorAssistantLOV1.index();
    public static final int INVOICESOURCELOVVO1 = AttributesEnum.InvoiceSourceLovVO1.index();
    public static final int SKULOVVO1 = AttributesEnum.SKULovVO1.index();
    public static final int INVOICENUMLOVVO1 = AttributesEnum.InvoiceNumLovVO1.index();
    public static final int PONUMBERLOVVO1 = AttributesEnum.PoNumberLovVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VendMootDtVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute Source.
     * @return the Source
     */
    public String getSource() {
        return (String) getAttributeInternal(SOURCE);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceNum.
     * @return the InvoiceNum
     */
    public String getInvoiceNum() {
        return (String) getAttributeInternal(INVOICENUM);
    }

    /**
     * Gets the attribute value for the calculated attribute PoNumber.
     * @return the PoNumber
     */
    public String getPoNumber() {
        return (String) getAttributeInternal(PONUMBER);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceDate.
     * @return the InvoiceDate
     */
    public Date getInvoiceDate() {
        return (Date) getAttributeInternal(INVOICEDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute DueDate.
     * @return the DueDate
     */
    public Date getDueDate() {
        return (Date) getAttributeInternal(DUEDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute SupplierName.
     * @return the SupplierName
     */
    public String getSupplierName() {
        return (String) getAttributeInternal(SUPPLIERNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute SupplierNo.
     * @return the SupplierNo
     */
    public String getSupplierNo() {
        return (String) getAttributeInternal(SUPPLIERNO);
    }

    /**
     * Gets the attribute value for the calculated attribute SupplierSite.
     * @return the SupplierSite
     */
    public String getSupplierSite() {
        return (String) getAttributeInternal(SUPPLIERSITE);
    }

    /**
     * Gets the attribute value for the calculated attribute Sku.
     * @return the Sku
     */
    public String getSku() {
        return (String) getAttributeInternal(SKU);
    }

    /**
     * Gets the attribute value for the calculated attribute VendorAssistant.
     * @return the VendorAssistant
     */
    public String getVendorAssistant() {
        return (String) getAttributeInternal(VENDORASSISTANT);
    }

    /**
     * Gets the attribute value for the calculated attribute AllPendingS.
     * @return the AllPendingS
     */
    public Number getAllPendingS() {
        return (Number) getAttributeInternal(ALLPENDINGS);
    }

    /**
     * Gets the attribute value for the calculated attribute Discount.
     * @return the Discount
     */
    public String getDiscount() {
        return (String) getAttributeInternal(DISCOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute VoucherNum.
     * @return the VoucherNum
     */
    public String getVoucherNum() {
        return (String) getAttributeInternal(VOUCHERNUM);
    }

    /**
     * Gets the attribute value for the calculated attribute Location.
     * @return the Location
     */
    public String getLocation() {
        return (String) getAttributeInternal(LOCATION);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceAmount.
     * @return the InvoiceAmount
     */
    public Number getInvoiceAmount() {
        return (Number) getAttributeInternal(INVOICEAMOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute PoType.
     * @return the PoType
     */
    public String getPoType() {
        return (String) getAttributeInternal(POTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute FrontDoorS.
     * @return the FrontDoorS
     */
    public Number getFrontDoorS() {
        return (Number) getAttributeInternal(FRONTDOORS);
    }

    /**
     * Gets the attribute value for the calculated attribute NonCodeS.
     * @return the NonCodeS
     */
    public Number getNonCodeS() {
        return (Number) getAttributeInternal(NONCODES);
    }

    /**
     * Gets the attribute value for the calculated attribute DropShipS.
     * @return the DropShipS
     */
    public Number getDropShipS() {
        return (Number) getAttributeInternal(DROPSHIPS);
    }

    /**
     * Gets the attribute value for the calculated attribute PriceExceptS.
     * @return the PriceExceptS
     */
    public Boolean getPriceExceptS() {
        return (Boolean) getAttributeInternal(PRICEEXCEPTS);
    }

    /**
     * Gets the attribute value for the calculated attribute QtyExceptS.
     * @return the QtyExceptS
     */
    public Boolean getQtyExceptS() {
        return (Boolean) getAttributeInternal(QTYEXCEPTS);
    }

    /**
     * Gets the attribute value for the calculated attribute FrExceptS.
     * @return the FrExceptS
     */
    public Number getFrExceptS() {
        return (Number) getAttributeInternal(FREXCEPTS);
    }

    /**
     * Gets the attribute value for the calculated attribute QtyHoldAmt.
     * @return the QtyHoldAmt
     */
    public Number getQtyHoldAmt() {
        return (Number) getAttributeInternal(QTYHOLDAMT);
    }

    /**
     * Gets the attribute value for the calculated attribute PriceHoldAmt.
     * @return the PriceHoldAmt
     */
    public Number getPriceHoldAmt() {
        return (Number) getAttributeInternal(PRICEHOLDAMT);
    }

    /**
     * Gets the attribute value for the calculated attribute FrtHold.
     * @return the FrtHold
     */
    public String getFrtHold() {
        return (String) getAttributeInternal(FRTHOLD);
    }

    /**
     * Gets the attribute value for the calculated attribute PoHoldChr.
     * @return the PoHoldChr
     */
    public String getPoHoldChr() {
        return (String) getAttributeInternal(POHOLDCHR);
    }

    /**
     * Gets the attribute value for the calculated attribute FrontDoorc.
     * @return the FrontDoorc
     */
    public String getFrontDoorc() {
        return (String) getAttributeInternal(FRONTDOORC);
    }

    /**
     * Gets the attribute value for the calculated attribute NonCodec.
     * @return the NonCodec
     */
    public String getNonCodec() {
        return (String) getAttributeInternal(NONCODEC);
    }

    /**
     * Gets the attribute value for the calculated attribute DropShipc.
     * @return the DropShipc
     */
    public String getDropShipc() {
        return (String) getAttributeInternal(DROPSHIPC);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceId.
     * @return the InvoiceId
     */
    public Number getInvoiceId() {
        return (Number) getAttributeInternal(INVOICEID);
    }

    /**
     * Gets the attribute value for the calculated attribute Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Gets the attribute value for the calculated attribute GlDate.
     * @return the GlDate
     */
    public Date getGlDate() {
        return (Date) getAttributeInternal(GLDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute SumInvAmount.
     * @return the SumInvAmount
     */
    public BigDecimal getSumInvAmount() {
//        return (BigDecimal) getAttributeInternal(SUMINVAMOUNT);
        return ((VendMootDtVOImpl)getViewObject()).getSumInvoiceAmt();
    }

    /**
     * Gets the attribute value for the calculated attribute SumQtyHoldAmt.
     * @return the SumQtyHoldAmt
     */
    public BigDecimal getSumQtyHoldAmt() {
//        return (BigDecimal) getAttributeInternal(SUMQTYHOLDAMT);
        return ((VendMootDtVOImpl)getViewObject()).getSumQtyHoldAmt();
    }

    /**
     * Gets the attribute value for the calculated attribute SumPriceHoldAmt.
     * @return the SumPriceHoldAmt
     */
    public BigDecimal getSumPriceHoldAmt() {
//        return (BigDecimal) getAttributeInternal(SUMPRICEHOLDAMT);
        return ((VendMootDtVOImpl)getViewObject()).getSumPriceHoldAmt();
    }

    /**
     * Gets the view accessor <code>RowSet</code> OrgLovVO1.
     */
    public RowSet getOrgLovVO1() {
        return (RowSet) getAttributeInternal(ORGLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SupplierLOV1.
     */
    public RowSet getSupplierLOV1() {
        return (RowSet) getAttributeInternal(SUPPLIERLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SupplierLOV2.
     */
    public RowSet getSupplierLOV2() {
        return (RowSet) getAttributeInternal(SUPPLIERLOV2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SupplierSiteLOV1.
     */
    public RowSet getSupplierSiteLOV1() {
        return (RowSet) getAttributeInternal(SUPPLIERSITELOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VendorAssistantLOV1.
     */
    public RowSet getVendorAssistantLOV1() {
        return (RowSet) getAttributeInternal(VENDORASSISTANTLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InvoiceSourceLovVO1.
     */
    public RowSet getInvoiceSourceLovVO1() {
        return (RowSet) getAttributeInternal(INVOICESOURCELOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SKULovVO1.
     */
    public RowSet getSKULovVO1() {
        return (RowSet) getAttributeInternal(SKULOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InvoiceNumLovVO1.
     */
    public RowSet getInvoiceNumLovVO1() {
        return (RowSet) getAttributeInternal(INVOICENUMLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PoNumberLovVO1.
     */
    public RowSet getPoNumberLovVO1() {
        return (RowSet) getAttributeInternal(PONUMBERLOVVO1);
    }
    
    public Number getDefaultOrgId(){
        Number var = new Number(404);
        return var;
    }
    
   
}

