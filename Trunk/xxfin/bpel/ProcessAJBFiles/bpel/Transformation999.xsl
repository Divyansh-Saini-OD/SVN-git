<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="../../../../New%20Office%20Depot/BPEL/ProcessAJBFiles/bpel/AJB999_2.xsd"/>
      <rootElement name="Root-Element_AJB999" namespace="http://TargetNamespace.com/InboundService_AJB999"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="../../../../New%20Office%20Depot/BPEL/ProcessAJBFiles/bpel/AJB999TableInsert_table.xsd"/>
      <rootElement name="XxCeAjb999Collection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/AJB999TableInsert"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [WED MAY 07 15:03:35 IST 2008]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/top/AJB999TableInsert"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:tns="http://TargetNamespace.com/InboundService_AJB999"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                exclude-result-prefixes="xsl tns xsd nxsd ns0 bpws ehdr hwf xp20 xref ora ids orcl">
  <xsl:param name="AJB_File_Name"/>
  <xsl:template match="/">
    <ns0:XxCeAjb999Collection>
      <xsl:for-each select="/tns:Root-Element_AJB999/tns:AJB999">
        <ns0:XxCeAjb999>
          <ns0:recordType>
            <xsl:value-of select="normalize-space(tns:FIPayReconRecord)"/>
          </ns0:recordType>
          <ns0:storeNum>
            <xsl:value-of select="normalize-space(tns:StoreNumber)"/>
          </ns0:storeNum>
           <ns0:providerType>
            <xsl:value-of select="normalize-space(tns:TenderType)"/>
          </ns0:providerType>
          <xsl:if test="string-length(tns:SubmissionDate) != 0.0">
          	<ns0:submissionDate>
          		<xsl:call-template name="formatDatesdate">
              			<xsl:with-param name="date"
                              		select="normalize-space(tns:SubmissionDate)"/>
            		</xsl:call-template>
          	</ns0:submissionDate>
          </xsl:if>
          <ns0:countryCode>
            <xsl:value-of select="normalize-space(tns:CountryCode)"/>
          </ns0:countryCode>
          <ns0:currencyCode>
            <xsl:value-of select="normalize-space(tns:CurrencyCode)"/>
          </ns0:currencyCode>
          <ns0:processorId>
            <xsl:value-of select="normalize-space(tns:ProcessorID)"/>
          </ns0:processorId>
          <ns0:bankRecId>
            <xsl:value-of select="normalize-space(tns:BankRecId)"/>
          </ns0:bankRecId>
          <ns0:cardtype>
            <xsl:value-of select="normalize-space(tns:CardType)"/>
          </ns0:cardtype>
          <xsl:if test="string-length(normalize-space(tns:NetSalesAmount)) != 0.0">
            <ns0:netSales>
              <xsl:value-of select="normalize-space(tns:NetSalesAmount) div 100.0"/>
            </ns0:netSales>
          </xsl:if>
          <xsl:if test="string-length(normalize-space(tns:NetRejectAmount)) != 0.0">
            <ns0:netRejectAmt>
              <xsl:value-of select="normalize-space(tns:NetRejectAmount) div 100.0"/>
            </ns0:netRejectAmt>
          </xsl:if>
          <xsl:if test="string-length(normalize-space(tns:ChargeBackAdjustmentAmount)) != 0.0">
            <ns0:chargebackAmt>
              <xsl:value-of select="normalize-space(tns:ChargeBackAdjustmentAmount) div 100.0"/>
              <!--    <xsl:value-of select="concat(substring(tns:ChargeBackAdjustmentAmount,string-length(tns:ChargeBackAdjustmentAmount),1.0),substring(tns:ChargeBackAdjustmentAmount,1.0,(string-length(tns:ChargeBackAdjustmentAmount) - 1.0)))"/> -->
            </ns0:chargebackAmt>
          </xsl:if>
          <xsl:if test="string-length(normalize-space(tns:DiscountAmount)) != 0.0">
            <ns0:discountAmt>
              <xsl:value-of select="normalize-space(tns:DiscountAmount) div 100.0"/>
            </ns0:discountAmt>
          </xsl:if>
          <xsl:if test="string-length(normalize-space(tns:NetDepositAmount)) != 0.0">
            <ns0:netDepositAmt>
              <xsl:value-of select="normalize-space(tns:NetDepositAmount) div 100.0"/>
            </ns0:netDepositAmt>
          </xsl:if>
          <ns0:creationDate>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </ns0:creationDate>
          <ns0:createdBy>
            <xsl:text disable-output-escaping="no">3</xsl:text>
          </ns0:createdBy>
          <ns0:lastUpdateDate>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </ns0:lastUpdateDate>
          <ns0:lastUpdatedBy>
            <xsl:text disable-output-escaping="no">3</xsl:text>
          </ns0:lastUpdatedBy>
          <xsl:if test="string-length(normalize-space(tns:MONTHLY_DISCOUNT_AMT)) != 0.0">
            <ns0:monthlyDiscountAmt>
              <xsl:value-of select="normalize-space(tns:MONTHLY_DISCOUNT_AMT) div 100.0"/>
            </ns0:monthlyDiscountAmt>
          </xsl:if>
          <xsl:if test="string-length(normalize-space(tns:MONTHLY_ASSESSMENT_FEE)) != 0.0">
            <ns0:monthlyAssessmentFee>
              <xsl:value-of select="normalize-space(tns:MONTHLY_ASSESSMENT_FEE) div 100.0"/>
            </ns0:monthlyAssessmentFee>
          </xsl:if>
          <xsl:if test="string-length(normalize-space(tns:DEPOSIT_HOLD_AMT)) != 0.0">
            <ns0:depositHoldAmt>
              <xsl:value-of select="normalize-space(tns:DEPOSIT_HOLD_AMT) div 100.0"/>
            </ns0:depositHoldAmt>
          </xsl:if>
          <xsl:if test="string-length(normalize-space(tns:DEPOSIT_RELEASE_AMT)) != 0.0">
            <ns0:depositReleaseAmt>
              <xsl:value-of select="normalize-space(tns:DEPOSIT_RELEASE_AMT) div 100.0"/>
            </ns0:depositReleaseAmt>
          </xsl:if>
          <xsl:if test="string-length(normalize-space(tns:SERVICE_FEE)) != 0.0">
            <ns0:serviceFee>
              <xsl:value-of select="normalize-space(tns:SERVICE_FEE) div 100.0"/>
            </ns0:serviceFee>
          </xsl:if>
          <xsl:if test="string-length(normalize-space(tns:ADJ_FEE)) != 0.0">
            <ns0:adjFee>
              <xsl:value-of select="normalize-space(tns:ADJ_FEE) div 100.0"/>
            </ns0:adjFee>
          </xsl:if>
          <xsl:if test="string-length(normalize-space(tns:COST_FUNDS_AMT)) != 0.0">
            <ns0:costFundsAmt>
              <xsl:value-of select="normalize-space(tns:COST_FUNDS_AMT) div 100.0"/>
            </ns0:costFundsAmt>
          </xsl:if>

	  <ns0:costFundsAlphaCode>
            <xsl:value-of select="normalize-space(tns:COST_FUNDS_ALPHA_CODE)"/>
          </ns0:costFundsAlphaCode>
          
	  
	  <xsl:if test="normalize-space(tns:COST_FUNDS_NUM_CODE) != ''">
	  <ns0:costFundsNumCode>
            <xsl:value-of select="normalize-space(tns:COST_FUNDS_NUM_CODE)"/>
          </ns0:costFundsNumCode>
	  </xsl:if>
          
	  
	  <xsl:if test="string-length(normalize-space(tns:RESERVED_AMT)) != 0.0">
            <ns0:reservedAmt>
              <xsl:value-of select="normalize-space(tns:RESERVED_AMT) div 100.0"/>
            </ns0:reservedAmt>
          </xsl:if>
          
          <ns0:reservedAmtAlphaCode>
            <xsl:value-of select="normalize-space(tns:RESERVED_AMT_ALPHA_CODE)"/>
          </ns0:reservedAmtAlphaCode>

	  <xsl:if test="normalize-space(tns:RESERVED_AMT_NUM_CODE) != ''">
          <ns0:reservedAmtNumCode>
            <xsl:value-of select="normalize-space(tns:RESERVED_AMT_NUM_CODE)"/>
          </ns0:reservedAmtNumCode>
          </xsl:if>


          <ns0:sequenceId999>
            <xsl:value-of select='orcl:sequence-next-val("XXFIN.xx_ce_ajb999_s","jdbc/bpel_ebs_apps_ds")'/>
          </ns0:sequenceId999>
            <ns0:ajbFileName>
                <xsl:value-of select="$AJB_File_Name"/>
          </ns0:ajbFileName>
        </ns0:XxCeAjb999>
      </xsl:for-each>
    </ns0:XxCeAjb999Collection>
  </xsl:template>

  <!--  User Defined Templates  -->

      <xsl:template name="formatDatesdate">
    <xsl:param name="date"/>
   <xsl:if test="normalize-space($date) > '0'">
      <xsl:variable name="mm" select="substring($date, 1, 2)"/>
      <xsl:variable name="dd" select="substring($date, 3, 2)"/>
      <xsl:variable name="yyyy" select="substring($date, 5, 4)"/>
      <xsl:variable name="newDate" select="concat($yyyy, '-', $mm, '-', $dd, 'T00:00:00.000Z')"/>
      <xsl:value-of select="$newDate"/>
    </xsl:if>
    </xsl:template>
</xsl:stylesheet>

