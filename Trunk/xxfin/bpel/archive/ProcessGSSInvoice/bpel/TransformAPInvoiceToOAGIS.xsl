<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="APInvoiceInboundNAGSS.xsd"/>
      <rootElement name="InvoiceInbound" namespace="http://officedepot.simplify.com/FTPInvoiceInbound"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="http://chilsoa01d.na.odcorp.net:7778/orabpel/xmllib/eaixml/oagis/v91/message/bod/ProcessInvoice.xsd"/>
      <rootElement name="ProcessInvoice" namespace="http://www.openapplications.org/oagis/9"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.1.0(build 061009.0802) AT [THU JUL 05 11:12:37 EDT 2007]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:ns4="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns7="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:ns3="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:ns1="http://www.openapplications.org/oagis/9/IANAMIMEMediaTypes:2003"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ns2="http://www.openapplications.org/oagis/9/codelists"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:imp1="http://officedepot.simplify.com/FTPInvoiceInbound"
                xmlns:bt="http://www.oracle.com/XSL/Transform/java/oracle.bt.CustomExtensionFunctions"
                xmlns:ns6="http://www.openapplications.org/oagis/9/officedepot/1"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:ns0="http://www.openapplications.org/oagis/9"
                xmlns:ns5="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:ns8="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                xmlns:java="http://www.oracle.com/XSL/Transform/java"
                exclude-result-prefixes="xsl xsd nxsd imp1 ns4 ns7 ns3 ns1 ns2 ns6 ns0 ns5 ns8 bpws ehdr hwf xp20 bt ora ids orcl java">
    <xsl:template match="/">
        <ns0:ProcessInvoice>
            <xsl:attribute name="releaseID">
                <xsl:text disable-output-escaping="no">1.0</xsl:text>
            </xsl:attribute>        
            <xsl:call-template name="Header"/>
            <xsl:call-template name="DataArea"/>
        </ns0:ProcessInvoice>        
    </xsl:template>
  
    <xsl:template name="Header">
      <ns0:ApplicationArea>
        <ns0:Sender>
          <ns0:ComponentID>
            <xsl:value-of select="normalize-space(/imp1:InvoiceInbound/imp1:TrailerRecord/imp1:FileName)"/>
          </ns0:ComponentID>
        </ns0:Sender>
        <ns0:CreationDateTime>
          <xsl:value-of select="xp20:current-dateTime()"/>
        </ns0:CreationDateTime>
        <ns0:VendorEmailAddress>
            <xsl:value-of select="normalize-space(/imp1:InvoiceInbound/imp1:TrailerRecord/imp1:VendorEmailAddress)"/>
        </ns0:VendorEmailAddress>
      </ns0:ApplicationArea>
    </xsl:template>
    
    <xsl:template name="DataArea">
      <ns0:DataArea>
        <ns0:Process/>
        <xsl:for-each select="/imp1:InvoiceInbound/imp1:HeaderRecord">
            <ns0:Invoice>

                <xsl:call-template name="InvoiceHeader"> 
                    <xsl:with-param name="header" select="."/> 
                </xsl:call-template>
                <xsl:for-each select="following-sibling::imp1:DetailRecord[count(preceding-sibling::imp1:HeaderRecord[1] | current()) = 1]">
                    <xsl:call-template name="InvoiceDetail">
                        <xsl:with-param name="detail" select="."/>
                    </xsl:call-template>
                </xsl:for-each>
            </ns0:Invoice>            
      </xsl:for-each>
    </ns0:DataArea>
  </xsl:template>
    <xsl:template name="InvoiceHeader">
        <xsl:param name="header"/>
      <ns0:InvoiceHeader>
        <ns0:Description>
          <xsl:value-of select="normalize-space($header/imp1:CheckDescription)"/>
        </ns0:Description>
       </ns0:InvoiceHeader>
    </xsl:template>

    <xsl:template name="InvoiceDetail">
      <xsl:param name="detail"/>
      <ns0:InvoiceLine>
        <ns0:LineNumber>
          <xsl:value-of select="normalize-space($detail/imp1:LineNumber)"/>
        </ns0:LineNumber>
       </ns0:InvoiceLine>    
    </xsl:template>

    <xsl:template name="formatDate">
        <xsl:param name="date"/>

        <xsl:variable name="currDateTime" select="xp20:current-dateTime()"/>
        
        <xsl:if test="normalize-space($date) &gt; '0'">
            <xsl:variable name="mm" select="substring($date, 1, 2)"/>
            <xsl:variable name="dd" select="substring($date, 3, 2)"/>
            <xsl:variable name="yy" select="concat(substring($currDateTime, 1, 2), substring($date, 5, 2))"/>
            <xsl:variable name="newDate" select="concat($yy,'-', $mm, '-', $dd)"/>
            <xsl:value-of select="concat($newDate, substring($currDateTime, 11))"/>
        </xsl:if>
    </xsl:template>
    
</xsl:stylesheet>
