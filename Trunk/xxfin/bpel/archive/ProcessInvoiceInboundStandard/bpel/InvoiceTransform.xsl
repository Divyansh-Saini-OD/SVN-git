<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="APInvoiceInbound_Common.xsd"/>
      <rootElement name="container" namespace="http://TargetNamespace.com/Invoiceinbound"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="http://chilsoa01d.na.odcorp.net:7778/orabpel/xmllib/eaixml/oagis/v91/message/bod/ProcessInvoice.xsd"/>
      <rootElement name="ProcessInvoice" namespace="http://www.openapplications.org/oagis/9"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.1.0(build 061009.0802) AT [WED JUL 25 11:27:54 EDT 2007]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns4="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:ns8="http://www.openapplications.org/oagis/9/officedepot/1/codelists"
                xmlns:ns6="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:ns3="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:ns1="http://www.openapplications.org/oagis/9/IANAMIMEMediaTypes:2003"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ns2="http://www.openapplications.org/oagis/9/codelists"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:tns="http://TargetNamespace.com/Invoiceinbound"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:od="http://www.openapplications.org/oagis/9/officedepot/1"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:ns0="http://www.openapplications.org/oagis/9"
                xmlns:ns5="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:ns7="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                exclude-result-prefixes="xsl xsd nxsd tns ns4 ns8 ns6 ns3 ns1 ns2 od ns0 ns5 ns7 bpws ehdr hwf xp20 ora ids orcl">
  <xsl:template match="/">
    <ns0:ProcessInvoice>
      <ns0:DataArea>
      <xsl:if test = "not(/tns:container/tns:InvoiceHeader)">
      <ns0:Invoice>
        <ns0:InvoiceHeader>
            <od:Batch>
                 <ns0:FileName>
                    <xsl:value-of select="/tns:container/tns:Trailer/tns:FileName"/>
                 </ns0:FileName>
                <ns0:CreationDateTime>
                  <xsl:value-of select="concat(/tns:container/tns:Trailer/tns:CreationDate,/tns:container/tns:Trailer/tns:CreationTime)"/>
                </ns0:CreationDateTime>
                <od:NumberOfRecords>
                  <xsl:value-of select="orcl:right-trim(orcl:left-trim(/tns:container/tns:Trailer/tns:NumberofRecords))"/>
                </od:NumberOfRecords>
                <ns0:TotalAmount>
                  <xsl:value-of select="concat(/tns:container/tns:Trailer/tns:TotalInvoiceAmountSign,orcl:right-trim(orcl:left-trim(/tns:container/tns:Trailer/tns:TotalInvoiceAmount)))"/>
                </ns0:TotalAmount>
                <ns0:Communication>
                  <ns0:URI>
                    <xsl:value-of select="/tns:container/tns:Trailer/tns:VendorEmailAddress"/>
                  </ns0:URI>
                </ns0:Communication>
              </od:Batch>
        </ns0:InvoiceHeader>
      </ns0:Invoice>
      </xsl:if>
        <xsl:for-each select="/tns:container/tns:InvoiceHeader">
          <ns0:Invoice>
            <ns0:InvoiceHeader>
              <ns0:Description>
                <xsl:value-of select="tns:CheckDescription"/>
              </ns0:Description>
              <ns0:DocumentReference>
                <ns0:DocumentID>
                  <ns0:ID>
                    <xsl:value-of select="tns:InvoiceNumber"/>
                  </ns0:ID>
                </ns0:DocumentID>
                <ns0:DocumentDateTime>
                 <xsl:call-template name="formatDate">
                   <xsl:with-param name="date"
                        select="normalize-space(tns:InvoiceDate)"/>
                 </xsl:call-template>
                </ns0:DocumentDateTime>
              </ns0:DocumentReference>
              <ns0:TotalAmount>
                <xsl:value-of select="concat(tns:GrossAmountSign,orcl:right-trim(orcl:left-trim(tns:GrossAmount)))"/>
              </ns0:TotalAmount>
              <ns0:SupplierParty>
                <ns0:PartyIDs>
                  <ns0:ID>
                    <xsl:value-of select="orcl:right-trim(orcl:left-trim(tns:ODGlobalVendorID))"/>
                  </ns0:ID>
                </ns0:PartyIDs>
              </ns0:SupplierParty>
              <ns0:PurchaseOrderReference>
                <ns0:DocumentID>
                  <ns0:ID>
                    <xsl:value-of select="tns:DefaultPO"/>
                  </ns0:ID>
                </ns0:DocumentID>
              </ns0:PurchaseOrderReference>
              <od:SpecialProcessingPayCode>
                <xsl:value-of select="tns:PayCode"/>
              </od:SpecialProcessingPayCode>
              <od:PaymentPriorityCode>
                <xsl:value-of select="tns:PaymentPriority"/>
              </od:PaymentPriorityCode>
              <od:DocumentControlNumber>
                <xsl:value-of select="orcl:right-trim(orcl:left-trim(tns:DCN))"/>
              </od:DocumentControlNumber>
              <ns0:PaymentTerm>
                <ns0:Term>
                  <ns0:Description>
                    <xsl:value-of select="tns:APTerms"/>
                  </ns0:Description>
                  <ns0:DueDateTime>
                    <xsl:call-template name="formatDate">
                      <xsl:with-param name="date"
                         select="normalize-space(tns:DueDate)"/>
                    </xsl:call-template>
                  </ns0:DueDateTime>
                </ns0:Term>
              </ns0:PaymentTerm>
                <xsl:choose>
                  <xsl:when test='orcl:right-trim(tns:GSTTaxFlag) = "N"'>
                    <ns0:Tax>
                      <xsl:attribute name="type">
                        <xsl:text disable-output-escaping="no">NGST</xsl:text>
                      </xsl:attribute> 
                    </ns0:Tax>
                  </xsl:when>
                  <xsl:when test='orcl:right-trim(tns:GSTTaxFlag) = "Y"'>
                    <ns0:Tax>
                      <xsl:attribute name="type">
                        <xsl:text disable-output-escaping="no">GST</xsl:text>
                      </xsl:attribute> 
                    </ns0:Tax>
                  </xsl:when>
                  <xsl:when test='normalize-space(tns:GSTTaxFlag) = ""'>
                    <ns0:Tax>
                      <xsl:attribute name="type">
                        <xsl:text disable-output-escaping="no">NGST</xsl:text>
                      </xsl:attribute> 
                    </ns0:Tax>
                  </xsl:when>                  
             </xsl:choose>              
              <od:SourceSystemCode>
                <xsl:value-of select="tns:DataSource"/>
              </od:SourceSystemCode>
              <od:Batch>
                 <ns0:FileName>
                    <xsl:value-of select="../tns:Trailer/tns:FileName"/>
                 </ns0:FileName>
                <ns0:CreationDateTime>
                  <xsl:value-of select="concat(../tns:Trailer/tns:CreationDate,../tns:Trailer/tns:CreationTime)"/>
                </ns0:CreationDateTime>
                <od:NumberOfRecords>
                  <xsl:value-of select="orcl:right-trim(orcl:left-trim(../tns:Trailer/tns:NumberofRecords))"/>
                </od:NumberOfRecords>
                <ns0:TotalAmount>
                  <xsl:value-of select="concat(../tns:Trailer/tns:TotalInvoiceAmountSign,orcl:right-trim(orcl:left-trim(../tns:Trailer/tns:TotalInvoiceAmount)))"/>
                </ns0:TotalAmount>
                <ns0:Communication>
                  <ns0:URI>
                    <xsl:value-of select="../tns:Trailer/tns:VendorEmailAddress"/>
                  </ns0:URI>
                </ns0:Communication>
              </od:Batch>
            </ns0:InvoiceHeader>
            <xsl:for-each select="tns:Lines/tns:Line-Invoice">
              <ns0:InvoiceLine>
                <ns0:LineNumber>
                  <xsl:value-of select="orcl:right-trim(orcl:left-trim(tns:LineNumber))"/>
                </ns0:LineNumber>
                <ns0:Description>
                  <xsl:value-of select="tns:GLDescription"/>
                </ns0:Description>
                <ns0:DocumentReference>
                  <ns0:DocumentID>
                    <xsl:value-of select="tns:InvoiceDistributionLineType"/>
                  </ns0:DocumentID>
                </ns0:DocumentReference>
                <xsl:choose>
                  <xsl:when test='xp20:upper-case(orcl:right-trim(tns:InvoiceDistributionLineType)) = "ITEM"'>
                    <ns0:TotalAmount>
                      <xsl:value-of select="concat(tns:MDSEAmountSign,orcl:right-trim(orcl:left-trim(tns:MDSEAmount)))"/>
                    </ns0:TotalAmount>
                  </xsl:when>
   
                  
                  
                  <xsl:when test='xp20:upper-case(orcl:right-trim(tns:InvoiceDistributionLineType)) = "FREIGHT"'>
                    <ns0:TotalAmount>
                      <xsl:value-of select="concat(tns:FreightAmountSign,orcl:right-trim(orcl:left-trim(tns:FreightAmount)))"/>
                    </ns0:TotalAmount>
                  </xsl:when>
                </xsl:choose>
                  
                                  
                  <xsl:if test='xp20:upper-case(orcl:right-trim(tns:InvoiceDistributionLineType)) = "TAX" and tns:TaxAmount != 0'>
                    <ns0:TotalAmount>
                      <xsl:value-of select="orcl:right-trim(orcl:left-trim(tns:TaxAmount))"/>
                    </ns0:TotalAmount>
                  </xsl:if>
            
                              
                  <xsl:if test='xp20:upper-case(orcl:right-trim(tns:InvoiceDistributionLineType)) = "TAX" and tns:CanadianTaxAmount !=0'>
                    <ns0:TotalAmount>
                      <xsl:value-of select="concat(normalize-space(tns:CanadianTaxAmountSign),orcl:right-trim(tns:CanadianTaxAmount))"/>
                    </ns0:TotalAmount>
                  </xsl:if>      
                  
                <ns0:Tax>
                  <ns0:TaxJurisdicationCodes>
                    <ns0:Code>
                      <xsl:value-of select="tns:TaxCode"/>
                    </ns0:Code>
                  </ns0:TaxJurisdicationCodes>
                </ns0:Tax>
               <ns0:Distribution>
                  <ns0:GLNominalAccount>
                    <xsl:value-of 
                          select="concat(normalize-space(tns:GLCompany),'.',
                          normalize-space(tns:GLCostCenter),'.',
                          normalize-space(tns:GLAccount),'.',
                          normalize-space(tns:GLLocation),'.',
                          '0000','.',
                          normalize-space(tns:GLLineofBusiness),'.',
                          '000000')"/>
                  </ns0:GLNominalAccount>               
                  <ns0:GLAccount>
                    <ns0:GLElement>
                        <ns0:Element>
                          <xsl:attribute name="sequenceName">
                            <xsl:text disable-output-escaping="no">Company</xsl:text>
                          </xsl:attribute>
                          <xsl:value-of select="tns:GLCompany"/>
                        </ns0:Element>
                        <ns0:Element>
                          <xsl:attribute name="sequenceName">
                             <xsl:text disable-output-escaping="no">CostCenter</xsl:text>
                          </xsl:attribute>
                          <xsl:value-of select="tns:GLCostCenter"/>
                        </ns0:Element>
                        <ns0:Element>
                          <xsl:attribute name="sequenceName">
                             <xsl:text disable-output-escaping="no">Location</xsl:text>
                          </xsl:attribute>
                          <xsl:value-of select="tns:GLLocation"/>
                        </ns0:Element>
                        <ns0:Element>
                          <xsl:attribute name="sequenceName">
                             <xsl:text disable-output-escaping="no">Account</xsl:text>
                          </xsl:attribute>
                          <xsl:value-of select="tns:GLAccount"/>
                        </ns0:Element>
                        <ns0:Element>
                          <xsl:attribute name="sequenceName">
                             <xsl:text disable-output-escaping="no">LineOfBusiness</xsl:text>
                          </xsl:attribute>
                          <xsl:value-of select="tns:GLLineOfBusiness"/>
                        </ns0:Element>
                    </ns0:GLElement>
                  </ns0:GLAccount>
                  <ns0:ProjectReference>
                    <ns0:ID>
                      <xsl:value-of select="tns:OracleProjectNumber"/>
                    </ns0:ID>
                    <ns0:ActivityID>
                      <xsl:value-of select="tns:TaskNumber"/>
                    </ns0:ActivityID>
                  </ns0:ProjectReference>
                  <od:ExpenditureOrganizationCode>
                    <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:ExpenditureORGName))"/>
                  </od:ExpenditureOrganizationCode>
                  <od:ExpenditureTypeCode>
                    <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:ExpenditureType))"/>
                  </od:ExpenditureTypeCode>
                </ns0:Distribution>
              </ns0:InvoiceLine>
            </xsl:for-each>
          </ns0:Invoice>
        </xsl:for-each>
      </ns0:DataArea>
    </ns0:ProcessInvoice>
  </xsl:template>

  <!--  User Defined Templates  -->   
  <xsl:template name="formatDate">
    <xsl:param name="date"/>
    <xsl:if test="normalize-space($date) > '0'">
      <xsl:variable name="mm" select="substring($date, 1, 2)"/>
      <xsl:variable name="dd" select="substring($date, 3, 2)"/>
      <xsl:variable name="yy" select="substring($date, 5, 4)"/>
      <xsl:variable name="newDate" select="concat('20',$yy,'-', $mm, '-', $dd)"/>
      <xsl:value-of select="$newDate"/>
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>
