<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="ExtensityInvoice.xsd"/>
      <rootElement name="Extensity" namespace="http://www.na.odcorp.com/ExtensityInvoiceRead"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="http://chilsoa01d.na.odcorp.net:7778/orabpel/xmllib/eaixml/oagis/v91/message/bod/ProcessInvoice.xsd"/>
      <rootElement name="ProcessInvoice" namespace="http://www.openapplications.org/oagis/9"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.1.0(build 061009.0802) AT [FRI AUG 10 17:45:53 EDT 2007]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns5="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:ns8="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:ns4="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:ns1="http://www.openapplications.org/oagis/9/officedepot/1/codelists"
                xmlns:ns2="http://www.openapplications.org/oagis/9/IANAMIMEMediaTypes:2003"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ns3="http://www.openapplications.org/oagis/9/codelists"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bt="http://www.oracle.com/XSL/Transform/java/oracle.bt.CustomExtensionFunctions"
                xmlns:ns7="http://www.openapplications.org/oagis/9/officedepot/1"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:ns0="http://www.openapplications.org/oagis/9"
                xmlns:ns6="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:tns="http://www.na.odcorp.com/ExtensityInvoiceRead"
                xmlns:ns9="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                exclude-result-prefixes="xsl xsd nxsd tns ns5 ns8 ns4 ns1 ns2 ns3 ns7 ns0 ns6 ns9 bpws ehdr hwf xp20 bt ora ids orcl">
  <xsl:template match="/">
    <ns0:ProcessInvoice>
      <ns0:DataArea>
   <xsl:if test = "not(/tns:container/tns:InvoiceHeader)">
      <ns0:Invoice>
        <ns0:InvoiceHeader>
		  <ns7:Batch>
                 <ns0:FileName>
                    <xsl:value-of select="'AP_EXPENSE_NA_EXTENSITY'"/>
                  </ns0:FileName>
                <ns0:CreationDateTime>
                   <xsl:value-of select="xp20:current-date()"/>
                </ns0:CreationDateTime>
              </ns7:Batch>
        </ns0:InvoiceHeader>
      </ns0:Invoice>
   </xsl:if>
      <xsl:for-each select="/tns:Extensity/tns:Invoices">
          <ns0:Invoice>
            <ns0:InvoiceHeader>
              <ns0:DocumentReference>
                <ns0:DocumentID>
                  <ns0:ID>
                    <xsl:value-of select="tns:Header/tns:Invoice"/>
                  </ns0:ID>
                </ns0:DocumentID>
                <ns0:DocumentDateTime>
                  <xsl:call-template name="formatDate">
                    <xsl:with-param name="date" select="tns:Header/tns:Date"/>
                  </xsl:call-template>
                </ns0:DocumentDateTime>
              </ns0:DocumentReference>
                <ns7:SourceSystemCode>
                    <xsl:value-of select="'US_OD_EXTENSITY'"/>
              </ns7:SourceSystemCode>
              <ns0:SupplierParty>
                <ns0:PartyIDs>
                  <ns0:ID>
                    <xsl:value-of select="concat(0,tns:Vendor)"/>
                  </ns0:ID>
                </ns0:PartyIDs>
              </ns0:SupplierParty>
              <ns7:Settlement>
                <ns0:CreditCard>
                  <ns0:Number>
                    <xsl:value-of select="tns:Header/tns:CreditCardNumber"/>
                  </ns0:Number>
                </ns0:CreditCard>
              </ns7:Settlement>
                <ns0:TotalAmount>
		       <xsl:choose>
                    <xsl:when test="normalize-space(tns:Trailer/tns:TotalSign) = '-'">
                        <xsl:value-of select="concat(tns:Trailer/tns:TotalSign,normalize-space(substring-after(tns:Trailer/tns:InvoiceAmount ,'-')) div 100)"/>
                    </xsl:when>
                    <xsl:when test="normalize-space(tns:Trailer/tns:TotalSign) = '+'">
                        <xsl:value-of select= "concat(tns:Trailer/tns:TotalSign,normalize-space(tns:Trailer/tns:InvoiceAmount div 100))"/>
                     </xsl:when>
                     </xsl:choose>
                </ns0:TotalAmount>
              <ns7:Batch>
                 <ns0:FileName>
                    <xsl:value-of select="'AP_EXPENSE_NA_EXTENSITY'"/>
                  </ns0:FileName>
                <ns0:CreationDateTime>
                   <xsl:value-of select="xp20:current-date()"/>
                </ns0:CreationDateTime>
              </ns7:Batch>
            </ns0:InvoiceHeader>
            <xsl:for-each select="tns:Header/tns:Detail">
              <ns0:InvoiceLine>
              <ns0:DocumentReference>
              <ns0:DocumentID>
              <xsl:value-of select="'ITEM'"/>
              </ns0:DocumentID>
              </ns0:DocumentReference>
                 <ns0:Description>
                    <xsl:value-of select="tns:Description"/>
                  </ns0:Description>
                <ns0:Quantity>
                  <xsl:value-of select="tns:Quantity div 100"/>
                </ns0:Quantity>
                <ns0:UnitPrice>
                  <ns0:Amount>
                  <xsl:choose>
                    <xsl:when test="normalize-space(tns:PriceSign) = '-'">
                        <xsl:value-of select="concat(tns:PriceSign,normalize-space(substring-after(tns:Price,'-')) div 100)"/>
                    </xsl:when>
                    <xsl:when test="normalize-space(tns:PriceSign) = '+'">
                        <xsl:value-of select= "concat(tns:PriceSign,normalize-space(tns:Price div 100))"/>
                     </xsl:when>
                     </xsl:choose>
                  </ns0:Amount>
                 <ns0:PerQuantity>
                    <xsl:value-of select="tns:UnitOfMeasure"/>
                  </ns0:PerQuantity>
                </ns0:UnitPrice>
                <ns0:TotalAmount>
                  <xsl:choose>
                    <xsl:when test="normalize-space(tns:PriceSign) = '+'">
                       <xsl:value-of select="concat(tns:PriceSign, ((tns:Quantity div 100) * normalize-space(tns:Price div 100))) "/>
                      </xsl:when>
                    <xsl:when test="normalize-space(tns:PriceSign) = '-'">
                       <xsl:value-of select="concat(tns:PriceSign, ((tns:Quantity div 100) * normalize-space(substring-after(tns:Price,'-')) div 100)) "/>
                      </xsl:when>
                   </xsl:choose>
                </ns0:TotalAmount>
                <ns0:Distribution>
                  <ns0:EnterpriseUnit>
                    <ns0:GLAccount>
                      <ns0:GLElement>
                          <ns0:Element>
                            <xsl:attribute name="sequence">
                              <xsl:text disable-output-escaping="no">1</xsl:text>
                            </xsl:attribute>
                            <xsl:attribute name="sequenceName">
                              <xsl:text disable-output-escaping="no">Account</xsl:text>
                            </xsl:attribute>
                            <xsl:value-of select="tns:GLNumber"/>
                          </ns0:Element>                      
                          <ns0:Element>
                            <xsl:attribute name="sequence">
                              <xsl:text disable-output-escaping="no">2</xsl:text>
                            </xsl:attribute>
                            <xsl:attribute name="sequenceName">
                              <xsl:text disable-output-escaping="no">Location</xsl:text>
                            </xsl:attribute>
                            <xsl:value-of select="tns:GLLocation"/>
                          </ns0:Element>
                          <ns0:Element>
                            <xsl:attribute name="sequence">
                              <xsl:text disable-output-escaping="no">3</xsl:text>
                            </xsl:attribute>
                            <xsl:attribute name="sequenceName">
                              <xsl:text disable-output-escaping="no">Department</xsl:text>
                            </xsl:attribute>                      
                            <xsl:value-of select="concat(0,tns:GLDepartment)"/>
                          </ns0:Element>
                          <ns0:Element>
                            <xsl:attribute name="sequence">
                              <xsl:text disable-output-escaping="no">4</xsl:text>
                            </xsl:attribute>
                            <xsl:attribute name="sequenceName">
                              <xsl:text disable-output-escaping="no">BusinessUnit</xsl:text>
                            </xsl:attribute>                      
                            <xsl:value-of select="tns:BusinessUnit"/>
                          </ns0:Element>
                          <ns0:Element>
                            <xsl:attribute name="sequence">
                              <xsl:text disable-output-escaping="no">5</xsl:text>
                            </xsl:attribute>
                            <xsl:attribute name="sequenceName">
                              <xsl:text disable-output-escaping="no">Company</xsl:text>
                            </xsl:attribute>
                            <xsl:value-of select="tns:Company"/>
                          </ns0:Element>
                      </ns0:GLElement>
                    </ns0:GLAccount>
                  </ns0:EnterpriseUnit>
                  <ns0:ProjectReference>
                    <ns0:ID>
                      <xsl:value-of select="tns:ProjectId"/>
                    </ns0:ID>
                  </ns0:ProjectReference>
                </ns0:Distribution>
              </ns0:InvoiceLine>
            </xsl:for-each>
          </ns0:Invoice>
        </xsl:for-each>
      </ns0:DataArea>
    </ns0:ProcessInvoice>
  </xsl:template>
   
  <!--  User Defined Templates  -->
    <xsl:template name="formatDate">
    <xsl:param name="date"/>
    <xsl:if test="normalize-space($date) > '0'">
      <xsl:variable name="mm" select="substring($date, 1, 2)"/>
      <xsl:variable name="dd" select="substring($date, 3, 2)"/>
      <xsl:variable name="yy" select="substring($date, 5, 4)"/>
      <xsl:variable name="newDate" select="concat($yy,'-', $mm, '-', $dd  )"/>
      <xsl:value-of select="$newDate"/>
    </xsl:if>
  </xsl:template>
   
    <xsl:template name="formatDate_old">
        <xsl:param name="date"/>
        <xsl:variable name="currDateTime" select="xp20:current-dateTime()"/>
        <xsl:if test="normalize-space($date) &gt; '0'">
            <xsl:variable name="mm" select="substring($date, 1, 2)"/>
            <xsl:variable name="dd" select="substring($date, 3, 2)"/>
            <xsl:variable name="yy" select="concat(substring($currDateTime, 1, 2), substring($date, 5, 2))"/>
            <xsl:variable name="newDate" select="concat($yy,'-', $mm, '-', $dd)"/>
            <xsl:value-of select="concat($newDate, substring($currDateTime, 11))"/>
        </xsl:if>
    </xsl:template>
</xsl:stylesheet>

