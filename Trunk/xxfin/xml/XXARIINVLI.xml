<?xml version="1.0" encoding="UTF-8"?>
<dataTemplate name="XXARIINVLI" defaultPackage="" dataSourceRef="">
	<properties>
		<property name="include_parameters" value="true"/>
		<property name="include_null_Element" value="true"/>
		<property name="db_fetch_size" value="300"/>
	</properties>
	<parameters>
		<parameter name="P_TRX_DATE_FROM" dataType="character" defaultValue=""/>
		<parameter name="P_TRX_DATE_TO" dataType="character" defaultValue=""/>
		<parameter name="P_DUE_DATE_FROM" dataType="character" defaultValue=""/>
		<parameter name="P_DUE_DATE_TO" dataType="character" defaultValue=""/>
		<parameter name="P_AMOUNT_DUE_ORIGINAL_FROM" dataType="number" defaultValue=""/>
		<parameter name="P_AMOUNT_DUE_ORIGINAL_TO" dataType="number" defaultValue=""/>
		<parameter name="P_SESSION_ID" dataType="number" defaultValue=""/>
		<parameter name="P_SHIP_TO_SITE_USE_ID" dataType="number" defaultValue=""/>
		<parameter name="P_CUSTOMER_NUMBER" dataType="varchar2" defaultValue=""/>
		<parameter name="P_CUST_ACCOUNT_ID" dataType="number" defaultValue=""/>
		<parameter name="P_STATUS" dataType="varchar2" defaultValue=""/>
		<parameter name="P_SMTP_SERVER" dataType="varchar2" defaultValue=""/>
		<parameter name="P_MAIL_FROM" dataType="varchar2" defaultValue=""/>
		<parameter name="P_MAIL_TO" dataType="varchar2" defaultValue=""/>       
        <parameter name="P_MAIL_CC" dataType="varchar2" defaultValue=""/>
	</parameters>
<dataQuery>
<sqlStatement name="Q_DATA" dataSourceRef="">
<![CDATA[ 
SELECT ArPaymentSchedulesV.TRX_NUMBER, 
	        ArPaymentSchedulesV.TRX_DATE, 
			to_char(ArPaymentSchedulesV.TRX_DATE, 'YYYY-MM-DD') StrTrxDate, 
			ArPaymentSchedulesV.INVOICE_CURRENCY_CODE, 
			ArPaymentSchedulesV.CUSTOMER_ID, 
			ArPaymentSchedulesV.CUSTOMER_SITE_USE_ID, 
			ArPaymentSchedulesV.CUSTOMER_TRX_ID, 
			ArPaymentSchedulesV.CUST_TRX_TYPE_ID, 
			ArPaymentSchedulesV.CLASS AS CLASS1, 
			ArPaymentSchedulesV.STATUS, 
			ArPaymentSchedulesV.TERM_ID, 
			ct.PURCHASE_ORDER AS CT_PURCHASE_ORDER,
			ct.previous_customer_trx_id as CT_PREVIOUS_CUSTOMER_TRX_ID, 
			ArPaymentSchedulesV.AMOUNT_DUE_ORIGINAL, 
			ArPaymentSchedulesV.AMOUNT_DUE_REMAINING,
			ArPaymentSchedulesV.PAYMENT_SCHEDULE_ID, 
			ArPaymentSchedulesV.TERMS_SEQUENCE_NUMBER,
			ArPaymentSchedulesV.DUE_DATE, 
			to_char(ArPaymentSchedulesV.DUE_DATE,'YYYY-MM-DD') StrDueDate, 
			ArPaymentSchedulesV.CLASS AS CLASS2,
			( SELECT nvl ( ( SELECT fnd_message.get_string('AR', 'ARI_STATUS_OVERDUE') FROM dual WHERE ( trunc(sysdate) > ArPaymentSchedulesV.due_date ) AND ArPaymentSchedulesV.STATUS = 'OP' ) , 
			ARI_UTILITIES.get_lookup_meaning('PAYMENT_SCHEDULE_STATUS', ArPaymentSchedulesV.STATUS) ) FROM DUAL ) as AR_LOOKUP_CODE_STATUS_MEANING, 
			ct.INTERFACE_HEADER_CONTEXT, 
			ct.INTERFACE_HEADER_ATTRIBUTE1, 
			ct.INTERFACE_HEADER_ATTRIBUTE2, 
			ct.INTERFACE_HEADER_ATTRIBUTE3, 
			ct.INTERFACE_HEADER_ATTRIBUTE4, 
			ct.INTERFACE_HEADER_ATTRIBUTE5, 
			ct.INTERFACE_HEADER_ATTRIBUTE6, 
			ct.INTERFACE_HEADER_ATTRIBUTE7, 
			ct.INTERFACE_HEADER_ATTRIBUTE8, 
			ct.INTERFACE_HEADER_ATTRIBUTE9, 
			ct.INTERFACE_HEADER_ATTRIBUTE10, 
			ct.INTERFACE_HEADER_ATTRIBUTE11, 
			ct.INTERFACE_HEADER_ATTRIBUTE12, 
			ct.INTERFACE_HEADER_ATTRIBUTE13, 
			ct.INTERFACE_HEADER_ATTRIBUTE14, 
			ct.INTERFACE_HEADER_ATTRIBUTE15, 
			ct.ATTRIBUTE_CATEGORY, 
			ct.ATTRIBUTE1, 
			ct.ATTRIBUTE2, 
			ct.ATTRIBUTE3, 
			ct.ATTRIBUTE4, 
			ct.ATTRIBUTE5, 
			ct.ATTRIBUTE6,
			ct.ATTRIBUTE7,
			ct.ATTRIBUTE8, 
			ct.ATTRIBUTE9,
			ct.ATTRIBUTE10,
			ct.ATTRIBUTE11, 
			ct.ATTRIBUTE12, 
			ct.ATTRIBUTE13,
			ct.ATTRIBUTE14, 
			ct.ATTRIBUTE15, 
			acct.account_number,
			acct.account_name, 
			null selected_flag, 
			null ERROR_EXISTS, 
			ct.printing_option PRINTING_OPTION,
			to_char(ArPaymentSchedulesV.AMOUNT_IN_DISPUTE) AMOUNT_IN_DISPUTE, 
			to_char(ArPaymentSchedulesV.AMOUNT_ADJUSTED_PENDING) AMOUNT_ADJUSTED_PENDING, 
			decode(ct.PRINTING_PENDING, 'N', fnd_message.get_string('AR', 'AR_ALL_YES'), fnd_message.get_string('AR', 'AR_ALL_NO')) PRINTED, 
			MO_GLOBAL.get_ou_name(ArPaymentSchedulesV.org_id) as ORG_NAME, 
			to_char(ct.paying_customer_id) PAYING_CUSTOMER_ID, 
			to_char(ct.paying_site_use_id) PAYING_SITE_USE_ID, 
			ct.SHIP_DATE_ACTUAL SHIP_DATE, 
			to_char(ct.SHIP_DATE_ACTUAL,'YYYY-MM-DD') StrShipDate, 
			ArPaymentSchedulesV.FREIGHT_ORIGINAL FREIGHT_AMOUNT, 
			ArPaymentSchedulesV.TAX_ORIGINAL TAX_AMOUNT, 
			ArPaymentSchedulesV.PAYMENT_APPROVAL, 
			al.meaning APPROVAL_STATUS, 
			ct.BILL_TO_SITE_USE_ID, 
			ct.SHIP_TO_SITE_USE_ID, 
			billto_uses.Location bill_to_location, 
			shipto_uses.Location ship_to_location, 
			/* ODInvoiceTableVO */ ADDRESSES.address SHIP_TO_NAME ,
			ADDRESSES.site_use_id SHIP_TO_ID ,
			oha.RELEASE_NUMBER XX_RELEASE_NUMBER ,
			oha.COST_CENTER_DEPT||' ' XX_COST_CENTER_DEPT ,
			oha.DESK_DEL_ADDR XX_DESK_DEL_ADDR ,
			NVL2(bs.batch_source_id, cbd.cons_inv_id, null) XX_CONS_INV_ID ,
			ArPaymentSchedulesV.CLASS AS CLASS 
	FROM AR_PAYMENT_SCHEDULES ArPaymentSchedulesV ,
	     ra_customer_trx ct ,
		 hz_cust_accounts acct ,
		 ar_lookups al ,
		 -- ar_irec_user_acct_sites_all auasa ,
		 hz_cust_site_uses billto_uses ,
		 hz_cust_site_uses shipto_uses ,
		 XX_AR_SHIP_ADDRESS_V ADDRESSES,
		 XX_OM_HEADER_ATTRIBUTES_V  oha,   			    --Refrofit NAIT-37762
		 XX_AR_CONSBILL_BATCH_SOURCES_V bs ,
		 XX_AR_CONSBILL_DELIVERED_V cbd 
  WHERE (ArPaymentSchedulesV.CLASS = 'INV') 
    AND ArPaymentSchedulesV.customer_trx_id = ct.customer_trx_id 
	AND billto_uses.site_use_id = ct.bill_to_site_use_id 
    AND shipto_uses.site_use_id (+)=ct.ship_to_site_use_id 
    AND shipto_uses.site_use_code(+)='SHIP_TO' 
	AND acct.cust_account_id = ArPaymentSchedulesV.customer_id 
	--AND ArPaymentSchedulesV.customer_id = auasa.customer_id 
	--AND ArPaymentSchedulesV.CUSTOMER_SITE_USE_ID = auasa.CUSTOMER_SITE_USE_ID 
	--AND auasa.USER_ID = FND_GLOBAL.USER_ID 
	AND(TRUNC(arpaymentschedulesv.trx_date)) >= trunc(decode( nvl(FND_PROFILE.VALUE('ARI_FILTER_TRXDATE_OLDER'), 0), 0, arpaymentschedulesv.trx_date, (sysdate-FND_PROFILE.VALUE('ARI_FILTER_TRXDATE_OLDER')))) 
	AND ct.printing_option = decode(nvl(FND_PROFILE.VALUE('ARI_FILTER_DONOTPRINT_TRX'), 'NOT'), 'Y', 'PRI', ct.printing_option) 
	AND trunc( ArPaymentSchedulesV.TRX_DATE) BETWEEN TRUNC(fnd_conc_date.string_to_date(NVL(:P_TRX_DATE_FROM,ArPaymentSchedulesV.TRX_DATE)))
                                                    AND TRUNC(fnd_conc_date.string_to_date(NVL(:P_TRX_DATE_TO,ArPaymentSchedulesV.TRX_DATE)))
	AND trunc( ArPaymentSchedulesV.DUE_DATE) BETWEEN TRUNC(fnd_conc_date.string_to_date(NVL(:P_DUE_DATE_FROM,ArPaymentSchedulesV.DUE_DATE)))
                                                    AND TRUNC(fnd_conc_date.string_to_date(NVL(:P_DUE_DATE_TO,ArPaymentSchedulesV.DUE_DATE)))
	AND ArPaymentSchedulesV.AMOUNT_DUE_ORIGINAL BETWEEN NVL(:P_AMOUNT_DUE_ORIGINAL_FROM,ArPaymentSchedulesV.AMOUNT_DUE_ORIGINAL)
	                                                  AND NVL(:P_AMOUNT_DUE_ORIGINAL_TO,ArPaymentSchedulesV.AMOUNT_DUE_ORIGINAL)
	AND al.lookup_type='ARI_PMT_APPROVAL_STATUS' 
	and al.lookup_code=nvl(ArPaymentSchedulesV.PAYMENT_APPROVAL,'PENDING') 
	--AND auasa.session_id = :P_SESSION_ID 
	AND ct.attribute14 = oha.header_id(+) 
	AND bs.batch_source_id (+) = ct.batch_source_id 
	AND cbd.cons_inv_id (+) = ArPaymentSchedulesV.cons_inv_id 
	AND ADDRESSES.site_use_id (+) = ct.ship_to_site_use_id 
	AND NVL(ct.ship_to_site_use_id,'-1') = NVL( :P_SHIP_TO_SITE_USE_ID , NVL(ct.ship_to_site_use_id,'-1'))
	AND ArPaymentSchedulesV.customer_id = :P_CUST_ACCOUNT_ID
    AND ArPaymentSchedulesV.invoice_currency_code = 'USD'
    AND  ArPaymentSchedulesV.status = NVL(:P_STATUS,ArPaymentSchedulesV.status)
 ORDER BY ArPaymentSchedulesV.DUE_DATE ASC, 
          ArPaymentSchedulesV.TRX_DATE ASC
]]>
</sqlStatement>
<sqlStatement name="Q_DATA1" dataSourceRef="">
<![CDATA[ 
 SELECT SEGMENT1,
        LINE_TYPE,
		ITEM_DESCRIPTION,
		QUANTITY,
		UNIT_SELLING_PRICE,
		EXTENDED_AMOUNT
   FROM 
    (SELECT lines.line_number line_number,
       /*Added for R12 upgrade retrofit
         nvl(AR_INVOICE_SQL_FUNC_PUB.get_description( lines.customer_trx_line_id ), 
           lines.description) item_description,*/
       lines.description item_description,
       lines.sales_order sales_order,
       nvl(lines.quantity_invoiced, lines.quantity_credited) quantity,
       AR_INVOICE_SQL_FUNC_PUB.get_taxyn ( lines.customer_trx_line_id ) 
           tax_exists_for_this_line_flag,
       to_char(nvl(lines.unit_selling_price,0), 
               fnd_currency.get_format_mask( fc.currency_code ,40 )) unit_selling_price_formatted,
       to_char(lines.extended_amount, 
               fnd_currency.get_format_mask( fc.currency_code ,40 )) extended_amount_formatted,
       nvl(lines.unit_selling_price,0) unit_selling_price,
       lines.customer_trx_line_id customer_trx_line_id,
       lines.extended_amount extended_amount,
       lines.attribute_category,
       lines.attribute1,
       lines.attribute2,
       lines.attribute3,
       lines.attribute4,
       lines.attribute5,
       lines.attribute6,
       lines.attribute7,
       lines.attribute8,
       lines.attribute9,
       lines.attribute10,
       lines.attribute11,
       lines.attribute12,
       lines.attribute13,
       lines.attribute14,
       lines.attribute15,
       lines.interface_line_context,
       lines.interface_line_attribute1,
       lines.interface_line_attribute2,
       lines.interface_line_attribute3,
       lines.interface_line_attribute4,
       lines.interface_line_attribute5,
       lines.interface_line_attribute6,
       lines.interface_line_attribute7,
       lines.interface_line_attribute8,
       lines.interface_line_attribute9,
       lines.interface_line_attribute10,
       lines.interface_line_attribute11,
       lines.interface_line_attribute12,
       lines.interface_line_attribute13,
       lines.interface_line_attribute14,
       lines.interface_line_attribute15,
       lines.customer_trx_id,
       fc.currency_code,
	   0 tax_amount,
       items.segment1,
       lines.uom_code     XX_UOM_CODE,
	   lines.line_type
FROM   ra_customer_trx_lines lines , fnd_currencies fc ,
   (SELECT
      L.customer_trx_line_id ,
      I.segment1
    FROM
      RA_CUSTOMER_TRX_LINES L ,
      MTL_SYSTEM_ITEMS_B I ,
      HR_ALL_ORGANIZATION_UNITS O
    WHERE L.line_type       IN ('LINE','CB')
      AND O.name             ='OD_ITEM_MASTER'
      AND O.organization_id  =I.organization_id
      AND I.inventory_item_id=L.inventory_item_id
  )  items
WHERE  line_type IN  ('LINE','CB')   /*ODInvoiceLineVO*/
AND lines.customer_trx_line_id=items.customer_trx_line_id (+)) QRSLT  
WHERE CUSTOMER_TRX_ID = :CUSTOMER_TRX_ID
  AND CURRENCY_CODE = 'USD'
]]>
</sqlStatement>
<sqlStatement name="Q_DATA2" dataSourceRef="">
<![CDATA[ SELECT :P_SMTP_SERVER    SMTP_SERVER,
                 :P_MAIL_FROM      MAIL_FROM,
                 :P_MAIL_TO        MAIL_TO,
				 :P_MAIL_CC        MAIL_CC,
                 account_name      ACCOUNT_NAME,
                 account_number    ACCOUNT_NUMBER,
				 substr(orig_system_reference,1,8) AOPS_NUMBER
            FROM hz_cust_accounts
           WHERE cust_account_id = :P_CUST_ACCOUNT_ID
]]>
</sqlStatement>
</dataQuery>
<dataStructure>
<group name="G_DATA" source="Q_DATA" groupFilter="">
	 <element name="XX_CONS_INV_ID" value="XX_CONS_INV_ID" function=""/>
     <element name="TRX_NUMBER" value="TRX_NUMBER" function=""/>
	 <element name="AR_LOOKUP_CODE_STATUS_MEANING" value="AR_LOOKUP_CODE_STATUS_MEANING" function=""/> 
     <element name="SHIP_TO_NAME" value="SHIP_TO_NAME" function=""/>
	 <element name="STRTRXDATE" value="STRTRXDATE" function=""/>
	 <element name="STRSHIPDATE" value="STRSHIPDATE" function=""/>
	 <element name="STRDUEDATE" value="STRDUEDATE" function=""/>
	 <element name="CT_PURCHASE_ORDER" value="CT_PURCHASE_ORDER" function=""/>
	 <element name="XX_RELEASE_NUMBER" value="XX_RELEASE_NUMBER" function=""/>
	 <element name="XX_COST_CENTER_DEPT" value="XX_COST_CENTER_DEPT" function=""/>
	 <element name="XX_DESK_DEL_ADDR" value="XX_DESK_DEL_ADDR" function=""/>
	 <element name="FREIGHT_AMOUNT" value="FREIGHT_AMOUNT" function=""/>
	 <element name="TAX_AMOUNT" value="TAX_AMOUNT" function=""/>
	 <element name="AMOUNT_DUE_ORIGINAL" value="AMOUNT_DUE_ORIGINAL" function=""/>
	 <element name="AMOUNT_DUE_REMAINING" value="AMOUNT_DUE_REMAINING" function=""/>
<group name="G_DATA1" source="Q_DATA1" groupFilter="">
     <element name="SEGMENT1" value="SEGMENT1" function=""/>
     <element name="LINE_TYPE" value="LINE_TYPE" function=""/>
	 <element name="ITEM_DESCRIPTION" value="ITEM_DESCRIPTION" function=""/> 
     <element name="QUANTITY" value="QUANTITY" function=""/>
	 <element name="UNIT_SELLING_PRICE" value="UNIT_SELLING_PRICE" function=""/>
	 <element name="EXTENDED_AMOUNT" value="EXTENDED_AMOUNT" function=""/>
</group>
</group>
<group name="G_DATA2" source="Q_DATA2" groupFilter="">
     <element name="SMTP_SERVER"  value="SMTP_SERVER" function=""/>
     <element name="MAIL_FROM"    value="MAIL_FROM" function=""/>
     <element name="MAIL_TO"      value="MAIL_TO" function=""/>
	 <element name="MAIL_CC"      value="MAIL_CC" function=""/>
	 <element name="ACCOUNT_NAME" value="ACCOUNT_NAME" function=""/>
     <element name="ACCOUNT_NUMBER" value="ACCOUNT_NUMBER" function=""/>
	 <element name="AOPS_NUMBER" value="AOPS_NUMBER" function=""/>
</group>
</dataStructure>
</dataTemplate>































