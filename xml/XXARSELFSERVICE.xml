<?xml version="1.0" encoding="WINDOWS-1252"?>
<dataTemplate name="XXARSELFSERVICE" defaultPackage="XX_AR_SELF_SERVICE" description="OD: AR Invalid details report" Version="1.0">
  <properties>
    <property name="scalable_mode" value="on"/>
    <property name="rtf-output-default-font">Arial:8</property>
  </properties>
  <parameters>
    <parameter name = "P_TYPE"               dataType = "character"/>
    <parameter name = "P_AS_OF_DATE"         datatype = "character"/>
    <parameter name = "P_MAIL_TO"         datatype = "character"/>
    <parameter name="P_SMTP_SERVER" dataType="character" defaultValue=""/>
    <parameter name="P_MAIL_FROM" dataType="character" defaultValue=""/>
  </parameters>
  <dataQuery>
    <sqlStatement name="Q_PARAMS">
      <![CDATA[
         SELECT INITCAP(:P_TYPE) req_type
               ,to_char(fnd_conc_date.string_to_date(:P_AS_OF_DATE),'DD-MON-RRRR') AS_OF_DATE
               ,:P_MAIL_TO MAIL_TO
               ,:P_SMTP_SERVER SMTP_SERVER
               ,:P_MAIL_FROM FROM_EMAIL
               ,XX_AR_SELF_SERVICE.get_std_message(:P_TYPE,'SUBJECT') SUBJECT
               ,XX_AR_SELF_SERVICE.get_std_message(:P_TYPE,'FILENAME') FILENAME
               ,XX_AR_SELF_SERVICE.get_std_message(:P_TYPE,'BODY') MSGBODY
         FROM   DUAL
      ]]>
    </sqlStatement>
    <sqlStatement name="Q_STATS">
    <![CDATA[
       SELECT DECODE (DIRECT_BILL_FLAG,'Y',DECODE(status,'S','Direct Success','Direct Errors')
                                      ,'N','Indirect'
                                      ,'Errored') Type
                                      ,DECODE (DIRECT_BILL_FLAG,'Y',DECODE(status,'S',1,2),'N',3,4)
              ,count(0) cnt
         FROM xx_ar_self_serv_bad_addr
        WHERE TRUNC(CREATION_DATE)     >= TRUNC(NVL(fnd_conc_date.string_to_date(:P_AS_OF_DATE),CREATION_DATE))
          AND :P_TYPE           = 'ADDRESS'
       GROUP BY DECODE (DIRECT_BILL_FLAG,'Y',DECODE(status,'S','Direct Success','Direct Errors')
                                      ,'N','Indirect'
                                      ,'Errored'),DECODE (DIRECT_BILL_FLAG,'Y',DECODE(status,'S',1,2),'N',3,4)
       order by DECODE (DIRECT_BILL_FLAG,'Y',DECODE(status,'S',1,2),'N',3,4)
    ]]>
    </sqlStatement>
    <sqlStatement name="Q_BAD_ADDRESS">
      <![CDATA[
         SELECT  CUSTOMER_NAME, 
                 AOPS_ACCOUNT, 
                 ADDRESS1, 
                 ADDRESS2, 
                 CITY, 
                 STATE, 
                 ZIP, 
                 CREATION_DATE, 
                 REQUEST_ID, 
                 DIRECT_BILL_FLAG,
                 COUNTRY, 
                 ACCOUNT_NUMBER,
                 INVOICE_DATE,
                 DECODE(DIRECT_BILL_FLAG,'Y','Direct','N','Indirect','Errored') REC_TYPE,
                 DECODE(DIRECT_BILL_FLAG,'Y',DECODE(Status,'S','Sent','Send Error'),'N','NA','Error') SentToPG
           FROM  xx_ar_self_serv_bad_addr
          WHERE  1=1 --NVL(DIRECT_BILL_FLAG,'N')  = 'N'
            AND  TRUNC(CREATION_DATE)     >= TRUNC(NVL(fnd_conc_date.string_to_date(:P_AS_OF_DATE),CREATION_DATE))
            AND  :P_TYPE           = 'ADDRESS'
            ORDER BY DECODE(DIRECT_BILL_FLAG,'Y',1,'N',2,3),8 desc,2
         ]]>
    </sqlStatement>
    <sqlStatement name="Q_BAD_EMAIL">
      <![CDATA[
         SELECT  AOPS_ACCOUNT, 
                 EMAIL_ADDRESS, 
                 CREATION_DATE, 
                 REQUEST_ID, 
                 DIRECT_BILL_FLAG, 
                 ACCOUNT_NUMBER
           FROM  XX_AR_SELF_SERV_BAD_EMAIL
          WHERE  DIRECT_BILL_FLAG  = 'N'
            AND  TRUNC(CREATION_DATE)     >= TRUNC(NVL(fnd_conc_date.string_to_date(:P_AS_OF_DATE),CREATION_DATE))
            AND  :P_TYPE           = 'EMAIL'
            ORDER BY Creation_date desc,AOPS_ACCOUNT
         ]]>
    </sqlStatement>
  </dataQuery>
    <dataStructure>
    <group name = "G_PARAMS" source = "Q_PARAMS">
      <element name = "REQ_TYPE"           value = "REQ_TYPE"/>
      <element name = "AS_OF_DATE"         value = "AS_OF_DATE"/>
      <element name = "MAIL_TO"            value = "MAIL_TO"/>
	  <element name="SMTP_SERVER"          value = "SMTP_SERVER"/>
	  <element name="FROM_EMAIL"           value = "FROM_EMAIL"/>
      <element name="SUBJECT"              value = "SUBJECT"/>
      <element name="FILENAME"             value = "FILENAME"/>
      <element name="MSGBODY"              value = "MSGBODY"/>
      <group name="G_STATS" source="Q_STATS">
        <element name = "Type"    value = "Type" />
        <element name = "Count"     value = "cnt" />
      </group>
      <group name="Q_BAD_ADDRESS" source="Q_BAD_ADDRESS">
        <element name = "CUSTOMER_NAME"    value = "CUSTOMER_NAME" />
        <element name = "AOPS_ACCOUNT"     value = "AOPS_ACCOUNT" />
        <element name = "ADDRESS1"         value = "ADDRESS1" />
        <element name = "ADDRESS2"         value = "ADDRESS2" />
        <element name = "CITY"             value = "CITY" />
        <element name = "STATE"            value = "STATE" />
        <element name = "ZIP"              value = "ZIP" />
        <element name = "COUNTRY"          value = "COUNTRY" />
        <element name = "INVOICE_DATE"     value = "INVOICE_DATE" />
        <element name = "ACCOUNT_NUMBER"   value = "ACCOUNT_NUMBER" />
        <element name = "CREATION_DATE"    value = "CREATION_DATE" />
        <element name = "REC_TYPE"         value = "REC_TYPE" />
        <element name = "SENTTOPG"         value = "SentToPG" />
      </group>
      <group name="P_BAD_EMAIL" source="Q_BAD_EMAIL">
        <element name = "AOPS_ACCOUNT"    value = "AOPS_ACCOUNT" />
        <element name = "EMAIL_ADDRESS"   value = "EMAIL_ADDRESS" />
        <element name = "ACCOUNT_NUMBER"  value = "ACCOUNT_NUMBER" />
        <element name = "CREATION_DATE"   value = "CREATION_DATE" />
      </group>
    </group>
    </dataStructure>
  <dataTrigger name="afterReportTrigger" source="xx_ar_self_service.afterreport"/>
</dataTemplate>