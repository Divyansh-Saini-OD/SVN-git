<dataTemplate name="XXODORDERRECEIPTSRPT" description="OD Order Receipts Report" Version="1.0">
<properties>
  <property name="scalable_mode" value="on" /> 
  <property name="rtf-output-default-font">Arial:8</property> 
</properties>
<parameters>
  <parameter name="P_MODE" 					datatype="character" /> 
  <parameter name="P_HIDDEN" 				datatype="character" />   
  <parameter name="P_RECEIPT_DATE_FROM" 	datatype="character" />
  <parameter name="P_RECEIPT_DATE_TO" 		datatype="character" />
  <parameter name="P_CREATION_DATE_FROM" 	datatype="character" />
  <parameter name="P_CREATION_DATE_TO" 		datatype="character" />
  <parameter name="P_CARD_TYPE" 			datatype="character" />
  <parameter name="P_RECEIPT_STATUS" 		datatype="character" />
  <parameter name="P_MATCHED_STATUS" 		datatype="character" />  
  <parameter name="P_REMITTED_STATUS" 		datatype="character" />  
  <parameter name="P_STORE_NUMBER_FROM" 	datatype="character" />    
  <parameter name="P_STORE_NUMBER_TO" 		datatype="character" /> 
  <parameter name="P_WALLET_TYPE" 		datatype="character" />
</parameters>

<dataQuery>


<sqlStatement name="Q_HEADER_DATE">
<![CDATA[ 
SELECT TO_CHAR(SYSDATE, 'DD-MON-YYYY HH24:MI:SS') AS V_DATE
from dual
]]> 
</sqlStatement>
<sqlStatement name="Q_PARAM_DATE">
<![CDATA[ 
select case when :P_RECEIPT_DATE_FROM like '%/%' then fnd_date.canonical_to_date(:P_RECEIPT_DATE_FROM)
            when :P_RECEIPT_DATE_FROM like '%-%' then to_date(:P_RECEIPT_DATE_FROM)
            END RECP_DATE_FROM,
		case when :P_RECEIPT_DATE_TO like '%/%' then fnd_date.canonical_to_date(:P_RECEIPT_DATE_TO)
            when :P_RECEIPT_DATE_TO like '%-%' then to_date(:P_RECEIPT_DATE_TO)
            END RECP_DATE_TO,
                 case when :P_CREATION_DATE_FROM like '%/%' then fnd_date.canonical_to_date(:P_CREATION_DATE_FROM)
            when :P_CREATION_DATE_FROM like '%-%' then to_date(:P_CREATION_DATE_FROM)
            END CREATION_DATE_FROM,
                 case when :P_CREATION_DATE_TO like '%/%' then fnd_date.canonical_to_date(:P_CREATION_DATE_TO)
            when :P_CREATION_DATE_TO like '%-%' then to_date(:P_CREATION_DATE_TO)
            END CREATION_DATE_TO	
            from dual
]]> 
</sqlStatement>
<sqlStatement name="Q_RESULT_DATE">
<![CDATA[ 
select TO_CHAR(:RECP_DATE_FROM,'DD-MON-YYYY HH24:MI:SS') R_RECP_DATE_FROM,
	   TO_CHAR(:RECP_DATE_TO,'DD-MON-YYYY HH24:MI:SS') R_RECP_DATE_TO,
           TO_CHAR(:CREATION_DATE_FROM,'DD-MON-YYYY HH24:MI:SS') R_CREATION_DATE_FROM,
	   TO_CHAR(:CREATION_DATE_TO,'DD-MON-YYYY HH24:MI:SS') R_CREATION_DATE_TO
            from dual
]]> 
</sqlStatement>
<sqlStatement name="Q_DETAIL">
<![CDATA[
SELECT ORDER_PAYMENT_ID,
  RECEIPT_NUMBER,
  STORE_NUMBER,
  CREDIT_CARD_CODE,
  PAYMENT_AMOUNT,
  trunc(CREATION_DATE) R_CREATION_DATE,
  REMITTED,
  MATCHED,
  RECEIPT_STATUS,
  trunc(RECEIPT_DATE) R_RECEIPT_DATE,
  trunc(PROCESS_DATE) R_PROCESS_DATE,
  SINGLE_PAY_IND,
  trunc(CLEARED_DATE) R_CLEARED_DATE,
  SETTLEMENT_ERROR_MESSAGE,
  ORIG_SYS_DOCUMENT_REF, -- Added for defect 29957
  MPL_ORDER_ID, -- Added for defect 33654
  (SELECT target_value1 
     FROM xx_fin_translatevalues xftv, 
          xx_fin_translatedefinition XFTD
    WHERE xftd.translate_id= xftv.translate_id
      AND xftd.translation_name='OD_WALLET_TYPE'
      AND xftv.source_Value1 = wallet_type) WALLET_TYPE, --Defect#37204
  WALLET_ID    --Defect#37204
FROM xx_ar_order_receipt_dtl
WHERE PAYMENT_TYPE_CODE IN  ('CREDIT_CARD','CHECK','DEBIT','CASH')
AND 'Detail' = :P_MODE
AND  (TRUNC(RECEIPT_DATE) BETWEEN NVL(:RECP_DATE_FROM,TRUNC(RECEIPT_DATE))  AND NVL(:RECP_DATE_TO,TRUNC(RECEIPT_DATE)))
AND  (TRUNC(CREATION_DATE) BETWEEN NVL(:CREATION_DATE_FROM,TRUNC(CREATION_DATE)) AND NVL(:CREATION_DATE_TO,TRUNC(CREATION_DATE)))
AND ((:P_CARD_TYPE  IS NOT NULL AND CREDIT_CARD_CODE = :P_CARD_TYPE)
      OR
     ( :P_CARD_TYPE IS NULL)
    )
AND ((:P_RECEIPT_STATUS IS NOT NULL AND RECEIPT_STATUS = :P_RECEIPT_STATUS)
     OR
     (:P_RECEIPT_STATUS IS  NULL)
    )
AND ((:P_MATCHED_STATUS IS NOT NULL AND MATCHED = :P_MATCHED_STATUS)
     OR
     (:P_MATCHED_STATUS IS  NULL)
    ) 
AND ((:P_REMITTED_STATUS IS NOT NULL AND REMITTED = :P_REMITTED_STATUS)
     OR
     (:P_REMITTED_STATUS IS  NULL)
    )
AND ((:P_STORE_NUMBER_FROM IS NOT NULL AND :P_STORE_NUMBER_TO IS NOT NULL AND (STORE_NUMBER >= :P_STORE_NUMBER_FROM AND STORE_NUMBER <= :P_STORE_NUMBER_TO))
     OR
     (:P_STORE_NUMBER_FROM IS NOT NULL AND :P_STORE_NUMBER_TO IS NULL AND STORE_NUMBER >= :P_STORE_NUMBER_FROM)
     OR
     (:P_STORE_NUMBER_FROM IS  NULL AND :P_STORE_NUMBER_TO IS NOT NULL AND STORE_NUMBER <= :P_STORE_NUMBER_TO)
     OR
     (:P_STORE_NUMBER_FROM IS NULL AND :P_STORE_NUMBER_TO IS NULL)
    )
AND ((:P_WALLET_TYPE IS NOT NULL AND WALLET_TYPE = :P_WALLET_TYPE )
      OR
     (:P_WALLET_TYPE  IS NULL)
    )
ORDER BY RECEIPT_DATE,CREDIT_CARD_CODE
]]>
</sqlStatement>
<sqlStatement name="Q_SUMMARY">
<![CDATA[
SELECT STORE_NUMBER,
  CREDIT_CARD_CODE,
  trunc(CREATION_DATE) R_CREATION_DATE,
  REMITTED,
  MATCHED,
  RECEIPT_STATUS,
  trunc(RECEIPT_DATE) R_RECEIPT_DATE,
  trunc(PROCESS_DATE) R_PROCESS_DATE,
  trunc(CLEARED_DATE) R_CLEARED_DATE,

  SUM(PAYMENT_AMOUNT) SUM_PAYMENT_AMOUNT,
  COUNT(REMITTED) CNT_REMITTED,
  COUNT(MATCHED) CNT_MATCHED,
  COUNT(RECEIPT_STATUS) CNT_RECEIPT_STATUS
FROM xx_ar_order_receipt_dtl
WHERE PAYMENT_TYPE_CODE IN  ('CREDIT_CARD','CHECK','DEBIT','CASH')
AND 'Summary' = :P_MODE
AND  (TRUNC(RECEIPT_DATE) BETWEEN NVL(:RECP_DATE_FROM,TRUNC(RECEIPT_DATE))  AND NVL(:RECP_DATE_TO,TRUNC(RECEIPT_DATE)))
AND  (TRUNC(CREATION_DATE) BETWEEN NVL(:CREATION_DATE_FROM,TRUNC(CREATION_DATE)) AND NVL(:CREATION_DATE_TO,TRUNC(CREATION_DATE)))
AND ((:P_CARD_TYPE  IS NOT NULL AND CREDIT_CARD_CODE = :P_CARD_TYPE)
      OR
     ( :P_CARD_TYPE IS NULL)
    )
AND ((:P_RECEIPT_STATUS IS NOT NULL AND RECEIPT_STATUS = :P_RECEIPT_STATUS)
     OR
     (:P_RECEIPT_STATUS IS  NULL)
    )
AND ((:P_MATCHED_STATUS IS NOT NULL AND MATCHED = :P_MATCHED_STATUS)
     OR
     (:P_MATCHED_STATUS IS  NULL)
    ) 
AND ((:P_REMITTED_STATUS IS NOT NULL AND REMITTED = :P_REMITTED_STATUS)
     OR
     (:P_REMITTED_STATUS IS  NULL)
    )
AND ((:P_WALLET_TYPE  IS NOT NULL AND WALLET_TYPE = :P_WALLET_TYPE)
      OR
     (:P_WALLET_TYPE IS NULL)
    )    
GROUP BY STORE_NUMBER, CREDIT_CARD_CODE, CREATION_DATE, REMITTED, MATCHED, RECEIPT_STATUS, RECEIPT_DATE, PROCESS_DATE, CLEARED_DATE
ORDER BY RECEIPT_DATE,CREDIT_CARD_CODE
]]>
</sqlStatement>
</dataQuery>

<dataStructure>
<group name="G_HEADER_DATE" source="Q_HEADER_DATE">
	<element name="V_DATE" value="v_date" function="" /> 
</group>
<group name="G_PARAM_DATE" source="Q_PARAM_DATE">
	<element name="RECP_DATE_FROM" value="RECP_DATE_FROM" function="" /> 
	<element name="RECP_DATE_TO" value="RECP_DATE_TO" function="" /> 
        <element name="CREATION_DATE_FROM" value="CREATION_DATE_FROM" function="" /> 
	<element name="CREATION_DATE_TO" value="CREATION_DATE_TO" function="" /> 		
</group>
<group name="G_RESULT_DATE" source="Q_RESULT_DATE">
	<element name="R_RECP_DATE_FROM" value="R_RECP_DATE_FROM" function="" /> 
	<element name="R_RECP_DATE_TO" value="R_RECP_DATE_TO" function="" /> 	
        <element name="R_CREATION_DATE_FROM" value="R_CREATION_DATE_FROM" function="" /> 
	<element name="R_CREATION_DATE_TO" value="R_CREATION_DATE_TO" function="" /> 
</group>
<group name="G_DETAIL" source="Q_DETAIL">
	<element name="STORE_NUMBER" 			value="STORE_NUMBER"  		function="" />
	<element name="CREDIT_CARD_CODE" 		value="CREDIT_CARD_CODE"  	function="" />
	<element name="CREATION_DATE" 			value="R_CREATION_DATE"  		function="" />	
	<element name="REMITTED" 				value="REMITTED"  			function="" />	
	<element name="MATCHED" 				value="MATCHED"  			function="" />	
	<element name="RECEIPT_STATUS" 			value="RECEIPT_STATUS"  	function="" />
	<element name="RECEIPT_DATE" 			value="R_RECEIPT_DATE"  		function="" />
	<element name="PROCESS_DATE" 			value="R_PROCESS_DATE"  		function="" />		
	<element name="CLEARED_DATE" 			value="R_CLEARED_DATE"  		function="" />		
    <element name="ORIG_SYS_DOCUMENT_REF"  	        value="ORIG_SYS_DOCUMENT_REF"  		function="" />	-- Added for defect 29957
	<element name="MPL_ORDER_ID"  	        	value="MPL_ORDER_ID"  		function="" />	-- Added for defect 33654
	<element name="WALLET_TYPE"  	        	value="WALLET_TYPE"  		function="" />	-- Added for defect 37204
	<element name="WALLET_ID"  	        	value="WALLET_ID"  		function="" />	-- Added for defect 37204
	<element name="PAYMENT_AMOUNT" 			value="PAYMENT_AMOUNT"  	function="" />		
	<element name="ORDER_PAYMENT_ID" 		value="ORDER_PAYMENT_ID"  	function="" />		
	<element name="RECEIPT_NUMBER" 			value="RECEIPT_NUMBER"  	function="" />			
	<element name="SINGLE_PAY_IND" 			value="SINGLE_PAY_IND"  	function="" />
	<element name="SETTLEMENT_ERROR_MESSAGE" 	value="SETTLEMENT_ERROR_MESSAGE"  	function="" />
</group>
<group name="G_SUMMARY" source="Q_SUMMARY">
	<element name="STORE_NUMBER" 			value="STORE_NUMBER"  		function="" />
	<element name="CREDIT_CARD_CODE" 		value="CREDIT_CARD_CODE"  	function="" />
	<element name="CREATION_DATE" 			value="R_CREATION_DATE"  		function="" />	
	<element name="REMITTED" 				value="REMITTED"  			function="" />	
	<element name="MATCHED" 				value="MATCHED"  			function="" />	
	<element name="RECEIPT_STATUS" 			value="RECEIPT_STATUS"  	function="" />
	<element name="RECEIPT_DATE" 			value="R_RECEIPT_DATE"  		function="" />
	<element name="PROCESS_DATE" 			value="R_PROCESS_DATE"  		function="" />		
	<element name="CLEARED_DATE" 			value="R_CLEARED_DATE"  		function="" />		

	<element name="SUM_PAYMENT_AMOUNT" 		value="SUM_PAYMENT_AMOUNT"  function="" />		
	<element name="CNT_REMITTED" 			value="CNT_REMITTED"  		function="" />		
	<element name="CNT_MATCHED" 			value="CNT_MATCHED"  		function="" />			
	<element name="CNT_RECEIPT_STATUS" 		value="CNT_RECEIPT_STATUS"  function="" />
</group>
</dataStructure>
</dataTemplate>