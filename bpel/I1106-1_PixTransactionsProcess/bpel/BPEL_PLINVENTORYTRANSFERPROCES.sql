-- Declare the SQL type for the PL/SQL type XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_HDR_TYPE
CREATE OR REPLACE TYPE XX_GI_TRANSFER_PKG_XX_GI_XFER AS OBJECT (
      SOURCE_SYSTEM VARCHAR2(30),
      TRANSFER_NUMBER VARCHAR2(15),
      FROM_LOC_NBR VARCHAR2(15),
      TO_LOC_NBR VARCHAR2(15),
      TRANS_TYPE_CD VARCHAR2(30),
      DOC_TYPE_CD VARCHAR2(10),
      SOURCE_CREATION_DATE DATE,
      SOURCE_CREATED_BY VARCHAR2(15),
      BUYBACK_NUMBER VARCHAR2(30),
      CARTON_COUNT NUMBER,
      TRANSFER_COST NUMBER,
      SHIP_DATE DATE,
      SHIPPED_QTY NUMBER,
      COMMENTS VARCHAR2(240),
      SOURCE_SUBINV_CD VARCHAR2(30),
      SOURCE_VENDOR_ID VARCHAR2(10),
      HEADER_ID NUMBER,
      ACTION VARCHAR2(30),
      ATTRIBUTE_CATEGORY VARCHAR2(30),
      ATTRIBUTE1 VARCHAR2(240),
      ATTRIBUTE2 VARCHAR2(240),
      ATTRIBUTE3 VARCHAR2(240),
      ATTRIBUTE4 VARCHAR2(240),
      ATTRIBUTE5 VARCHAR2(240),
      ATTRIBUTE6 VARCHAR2(240),
      ATTRIBUTE7 VARCHAR2(240),
      ATTRIBUTE8 VARCHAR2(240),
      ATTRIBUTE9 VARCHAR2(240),
      ATTRIBUTE10 VARCHAR2(240),
      ATTRIBUTE11 VARCHAR2(240),
      ATTRIBUTE12 VARCHAR2(240),
      ATTRIBUTE13 VARCHAR2(240),
      ATTRIBUTE14 VARCHAR2(240),
      ATTRIBUTE15 VARCHAR2(240)
);
/
show errors
-- Declare the SQL type for the PL/SQL type XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TYPE
CREATE OR REPLACE TYPE XX_GI_TRANSFER_PKG_XX_GI_XFE2 AS OBJECT (
      ITEM VARCHAR2(40),
      SHIPPED_QTY NUMBER,
      REQUESTED_QTY NUMBER,
      FROM_LOC_UOM VARCHAR2(15),
      FROM_LOC_UNIT_COST NUMBER,
      LINE_ID NUMBER,
      ATTRIBUTE_CATEGORY VARCHAR2(30),
      ATTRIBUTE1 VARCHAR2(240),
      ATTRIBUTE2 VARCHAR2(240),
      ATTRIBUTE3 VARCHAR2(240),
      ATTRIBUTE4 VARCHAR2(240),
      ATTRIBUTE5 VARCHAR2(240),
      ATTRIBUTE6 VARCHAR2(240),
      ATTRIBUTE7 VARCHAR2(240),
      ATTRIBUTE8 VARCHAR2(240),
      ATTRIBUTE9 VARCHAR2(240),
      ATTRIBUTE10 VARCHAR2(240),
      ATTRIBUTE11 VARCHAR2(240),
      ATTRIBUTE12 VARCHAR2(240),
      ATTRIBUTE13 VARCHAR2(240),
      ATTRIBUTE14 VARCHAR2(240),
      ATTRIBUTE15 VARCHAR2(240)
);
/
show errors
CREATE OR REPLACE TYPE XX_GI_TRANSFER_PKG_XX_GI_XFE1 AS TABLE OF XX_GI_TRANSFER_PKG_XX_GI_XFE2; 
/
show errors
-- Declare package containing conversion functions between SQL and PL/SQL types
CREATE OR REPLACE PACKAGE BPEL_PLINVENTORYTRANSFERPROCES AS
	-- Declare the conversion functions the PL/SQL type XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_HDR_TYPE
	FUNCTION PL_TO_SQL0(aPlsqlItem XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_HDR_TYPE)
 	RETURN XX_GI_TRANSFER_PKG_XX_GI_XFER;
	FUNCTION SQL_TO_PL0(aSqlItem XX_GI_TRANSFER_PKG_XX_GI_XFER)
	RETURN XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_HDR_TYPE;
	-- Declare the conversion functions the PL/SQL type XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TYPE
	FUNCTION PL_TO_SQL1(aPlsqlItem XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TYPE)
 	RETURN XX_GI_TRANSFER_PKG_XX_GI_XFE2;
	FUNCTION SQL_TO_PL2(aSqlItem XX_GI_TRANSFER_PKG_XX_GI_XFE2)
	RETURN XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TYPE;
	-- Declare the conversion functions the PL/SQL type XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TBL_TYPE
	FUNCTION PL_TO_SQL2(aPlsqlItem XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TBL_TYPE)
 	RETURN XX_GI_TRANSFER_PKG_XX_GI_XFE1;
	FUNCTION SQL_TO_PL1(aSqlItem XX_GI_TRANSFER_PKG_XX_GI_XFE1)
	RETURN XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TBL_TYPE;
   PROCEDURE XX_GI_TRANSFER_PKG$CREATE_MAI (P_IN_HDR_REC XX_GI_TRANSFER_PKG_XX_GI_XFER,P_IN_LINE_TBL XX_GI_TRANSFER_PKG_XX_GI_XFE1,X_RETURN_STATUS OUT VARCHAR2,X_ERROR_MESSAGE OUT VARCHAR2);
END BPEL_PLINVENTORYTRANSFERPROCES;
/
show errors
CREATE OR REPLACE PACKAGE BODY BPEL_PLINVENTORYTRANSFERPROCES IS
	FUNCTION PL_TO_SQL0(aPlsqlItem XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_HDR_TYPE)
 	RETURN XX_GI_TRANSFER_PKG_XX_GI_XFER IS 
	aSqlItem XX_GI_TRANSFER_PKG_XX_GI_XFER; 
	BEGIN 
		-- initialize the object
		aSqlItem := XX_GI_TRANSFER_PKG_XX_GI_XFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.SOURCE_SYSTEM := aPlsqlItem.SOURCE_SYSTEM;
		aSqlItem.TRANSFER_NUMBER := aPlsqlItem.TRANSFER_NUMBER;
		aSqlItem.FROM_LOC_NBR := aPlsqlItem.FROM_LOC_NBR;
		aSqlItem.TO_LOC_NBR := aPlsqlItem.TO_LOC_NBR;
		aSqlItem.TRANS_TYPE_CD := aPlsqlItem.TRANS_TYPE_CD;
		aSqlItem.DOC_TYPE_CD := aPlsqlItem.DOC_TYPE_CD;
		aSqlItem.SOURCE_CREATION_DATE := aPlsqlItem.SOURCE_CREATION_DATE;
		aSqlItem.SOURCE_CREATED_BY := aPlsqlItem.SOURCE_CREATED_BY;
		aSqlItem.BUYBACK_NUMBER := aPlsqlItem.BUYBACK_NUMBER;
		aSqlItem.CARTON_COUNT := aPlsqlItem.CARTON_COUNT;
		aSqlItem.TRANSFER_COST := aPlsqlItem.TRANSFER_COST;
		aSqlItem.SHIP_DATE := aPlsqlItem.SHIP_DATE;
		aSqlItem.SHIPPED_QTY := aPlsqlItem.SHIPPED_QTY;
		aSqlItem.COMMENTS := aPlsqlItem.COMMENTS;
		aSqlItem.SOURCE_SUBINV_CD := aPlsqlItem.SOURCE_SUBINV_CD;
		aSqlItem.SOURCE_VENDOR_ID := aPlsqlItem.SOURCE_VENDOR_ID;
		aSqlItem.HEADER_ID := aPlsqlItem.HEADER_ID;
		aSqlItem.ACTION := aPlsqlItem.ACTION;
		aSqlItem.ATTRIBUTE_CATEGORY := aPlsqlItem.ATTRIBUTE_CATEGORY;
		aSqlItem.ATTRIBUTE1 := aPlsqlItem.ATTRIBUTE1;
		aSqlItem.ATTRIBUTE2 := aPlsqlItem.ATTRIBUTE2;
		aSqlItem.ATTRIBUTE3 := aPlsqlItem.ATTRIBUTE3;
		aSqlItem.ATTRIBUTE4 := aPlsqlItem.ATTRIBUTE4;
		aSqlItem.ATTRIBUTE5 := aPlsqlItem.ATTRIBUTE5;
		aSqlItem.ATTRIBUTE6 := aPlsqlItem.ATTRIBUTE6;
		aSqlItem.ATTRIBUTE7 := aPlsqlItem.ATTRIBUTE7;
		aSqlItem.ATTRIBUTE8 := aPlsqlItem.ATTRIBUTE8;
		aSqlItem.ATTRIBUTE9 := aPlsqlItem.ATTRIBUTE9;
		aSqlItem.ATTRIBUTE10 := aPlsqlItem.ATTRIBUTE10;
		aSqlItem.ATTRIBUTE11 := aPlsqlItem.ATTRIBUTE11;
		aSqlItem.ATTRIBUTE12 := aPlsqlItem.ATTRIBUTE12;
		aSqlItem.ATTRIBUTE13 := aPlsqlItem.ATTRIBUTE13;
		aSqlItem.ATTRIBUTE14 := aPlsqlItem.ATTRIBUTE14;
		aSqlItem.ATTRIBUTE15 := aPlsqlItem.ATTRIBUTE15;
		RETURN aSqlItem;
	END PL_TO_SQL0;
	FUNCTION SQL_TO_PL0(aSqlItem XX_GI_TRANSFER_PKG_XX_GI_XFER) 
	RETURN XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_HDR_TYPE IS 
	aPlsqlItem XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_HDR_TYPE; 
	BEGIN 
		aPlsqlItem.SOURCE_SYSTEM := aSqlItem.SOURCE_SYSTEM;
		aPlsqlItem.TRANSFER_NUMBER := aSqlItem.TRANSFER_NUMBER;
		aPlsqlItem.FROM_LOC_NBR := aSqlItem.FROM_LOC_NBR;
		aPlsqlItem.TO_LOC_NBR := aSqlItem.TO_LOC_NBR;
		aPlsqlItem.TRANS_TYPE_CD := aSqlItem.TRANS_TYPE_CD;
		aPlsqlItem.DOC_TYPE_CD := aSqlItem.DOC_TYPE_CD;
		aPlsqlItem.SOURCE_CREATION_DATE := aSqlItem.SOURCE_CREATION_DATE;
		aPlsqlItem.SOURCE_CREATED_BY := aSqlItem.SOURCE_CREATED_BY;
		aPlsqlItem.BUYBACK_NUMBER := aSqlItem.BUYBACK_NUMBER;
		aPlsqlItem.CARTON_COUNT := aSqlItem.CARTON_COUNT;
		aPlsqlItem.TRANSFER_COST := aSqlItem.TRANSFER_COST;
		aPlsqlItem.SHIP_DATE := aSqlItem.SHIP_DATE;
		aPlsqlItem.SHIPPED_QTY := aSqlItem.SHIPPED_QTY;
		aPlsqlItem.COMMENTS := aSqlItem.COMMENTS;
		aPlsqlItem.SOURCE_SUBINV_CD := aSqlItem.SOURCE_SUBINV_CD;
		aPlsqlItem.SOURCE_VENDOR_ID := aSqlItem.SOURCE_VENDOR_ID;
		aPlsqlItem.HEADER_ID := aSqlItem.HEADER_ID;
		aPlsqlItem.ACTION := aSqlItem.ACTION;
		aPlsqlItem.ATTRIBUTE_CATEGORY := aSqlItem.ATTRIBUTE_CATEGORY;
		aPlsqlItem.ATTRIBUTE1 := aSqlItem.ATTRIBUTE1;
		aPlsqlItem.ATTRIBUTE2 := aSqlItem.ATTRIBUTE2;
		aPlsqlItem.ATTRIBUTE3 := aSqlItem.ATTRIBUTE3;
		aPlsqlItem.ATTRIBUTE4 := aSqlItem.ATTRIBUTE4;
		aPlsqlItem.ATTRIBUTE5 := aSqlItem.ATTRIBUTE5;
		aPlsqlItem.ATTRIBUTE6 := aSqlItem.ATTRIBUTE6;
		aPlsqlItem.ATTRIBUTE7 := aSqlItem.ATTRIBUTE7;
		aPlsqlItem.ATTRIBUTE8 := aSqlItem.ATTRIBUTE8;
		aPlsqlItem.ATTRIBUTE9 := aSqlItem.ATTRIBUTE9;
		aPlsqlItem.ATTRIBUTE10 := aSqlItem.ATTRIBUTE10;
		aPlsqlItem.ATTRIBUTE11 := aSqlItem.ATTRIBUTE11;
		aPlsqlItem.ATTRIBUTE12 := aSqlItem.ATTRIBUTE12;
		aPlsqlItem.ATTRIBUTE13 := aSqlItem.ATTRIBUTE13;
		aPlsqlItem.ATTRIBUTE14 := aSqlItem.ATTRIBUTE14;
		aPlsqlItem.ATTRIBUTE15 := aSqlItem.ATTRIBUTE15;
		RETURN aPlsqlItem;
	END SQL_TO_PL0;
	FUNCTION PL_TO_SQL1(aPlsqlItem XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TYPE)
 	RETURN XX_GI_TRANSFER_PKG_XX_GI_XFE2 IS 
	aSqlItem XX_GI_TRANSFER_PKG_XX_GI_XFE2; 
	BEGIN 
		-- initialize the object
		aSqlItem := XX_GI_TRANSFER_PKG_XX_GI_XFE2(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.ITEM := aPlsqlItem.ITEM;
		aSqlItem.SHIPPED_QTY := aPlsqlItem.SHIPPED_QTY;
		aSqlItem.REQUESTED_QTY := aPlsqlItem.REQUESTED_QTY;
		aSqlItem.FROM_LOC_UOM := aPlsqlItem.FROM_LOC_UOM;
		aSqlItem.FROM_LOC_UNIT_COST := aPlsqlItem.FROM_LOC_UNIT_COST;
		aSqlItem.LINE_ID := aPlsqlItem.LINE_ID;
		aSqlItem.ATTRIBUTE_CATEGORY := aPlsqlItem.ATTRIBUTE_CATEGORY;
		aSqlItem.ATTRIBUTE1 := aPlsqlItem.ATTRIBUTE1;
		aSqlItem.ATTRIBUTE2 := aPlsqlItem.ATTRIBUTE2;
		aSqlItem.ATTRIBUTE3 := aPlsqlItem.ATTRIBUTE3;
		aSqlItem.ATTRIBUTE4 := aPlsqlItem.ATTRIBUTE4;
		aSqlItem.ATTRIBUTE5 := aPlsqlItem.ATTRIBUTE5;
		aSqlItem.ATTRIBUTE6 := aPlsqlItem.ATTRIBUTE6;
		aSqlItem.ATTRIBUTE7 := aPlsqlItem.ATTRIBUTE7;
		aSqlItem.ATTRIBUTE8 := aPlsqlItem.ATTRIBUTE8;
		aSqlItem.ATTRIBUTE9 := aPlsqlItem.ATTRIBUTE9;
		aSqlItem.ATTRIBUTE10 := aPlsqlItem.ATTRIBUTE10;
		aSqlItem.ATTRIBUTE11 := aPlsqlItem.ATTRIBUTE11;
		aSqlItem.ATTRIBUTE12 := aPlsqlItem.ATTRIBUTE12;
		aSqlItem.ATTRIBUTE13 := aPlsqlItem.ATTRIBUTE13;
		aSqlItem.ATTRIBUTE14 := aPlsqlItem.ATTRIBUTE14;
		aSqlItem.ATTRIBUTE15 := aPlsqlItem.ATTRIBUTE15;
		RETURN aSqlItem;
	END PL_TO_SQL1;
	FUNCTION SQL_TO_PL2(aSqlItem XX_GI_TRANSFER_PKG_XX_GI_XFE2) 
	RETURN XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TYPE IS 
	aPlsqlItem XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TYPE; 
	BEGIN 
		aPlsqlItem.ITEM := aSqlItem.ITEM;
		aPlsqlItem.SHIPPED_QTY := aSqlItem.SHIPPED_QTY;
		aPlsqlItem.REQUESTED_QTY := aSqlItem.REQUESTED_QTY;
		aPlsqlItem.FROM_LOC_UOM := aSqlItem.FROM_LOC_UOM;
		aPlsqlItem.FROM_LOC_UNIT_COST := aSqlItem.FROM_LOC_UNIT_COST;
		aPlsqlItem.LINE_ID := aSqlItem.LINE_ID;
		aPlsqlItem.ATTRIBUTE_CATEGORY := aSqlItem.ATTRIBUTE_CATEGORY;
		aPlsqlItem.ATTRIBUTE1 := aSqlItem.ATTRIBUTE1;
		aPlsqlItem.ATTRIBUTE2 := aSqlItem.ATTRIBUTE2;
		aPlsqlItem.ATTRIBUTE3 := aSqlItem.ATTRIBUTE3;
		aPlsqlItem.ATTRIBUTE4 := aSqlItem.ATTRIBUTE4;
		aPlsqlItem.ATTRIBUTE5 := aSqlItem.ATTRIBUTE5;
		aPlsqlItem.ATTRIBUTE6 := aSqlItem.ATTRIBUTE6;
		aPlsqlItem.ATTRIBUTE7 := aSqlItem.ATTRIBUTE7;
		aPlsqlItem.ATTRIBUTE8 := aSqlItem.ATTRIBUTE8;
		aPlsqlItem.ATTRIBUTE9 := aSqlItem.ATTRIBUTE9;
		aPlsqlItem.ATTRIBUTE10 := aSqlItem.ATTRIBUTE10;
		aPlsqlItem.ATTRIBUTE11 := aSqlItem.ATTRIBUTE11;
		aPlsqlItem.ATTRIBUTE12 := aSqlItem.ATTRIBUTE12;
		aPlsqlItem.ATTRIBUTE13 := aSqlItem.ATTRIBUTE13;
		aPlsqlItem.ATTRIBUTE14 := aSqlItem.ATTRIBUTE14;
		aPlsqlItem.ATTRIBUTE15 := aSqlItem.ATTRIBUTE15;
		RETURN aPlsqlItem;
	END SQL_TO_PL2;
	FUNCTION PL_TO_SQL2(aPlsqlItem XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TBL_TYPE)
 	RETURN XX_GI_TRANSFER_PKG_XX_GI_XFE1 IS 
	aSqlItem XX_GI_TRANSFER_PKG_XX_GI_XFE1; 
	BEGIN 
		-- initialize the table 
		aSqlItem := XX_GI_TRANSFER_PKG_XX_GI_XFE1();
		aSqlItem.EXTEND(aPlsqlItem.COUNT);
		FOR I IN aPlsqlItem.FIRST..aPlsqlItem.LAST LOOP
			aSqlItem(I + 1 - aPlsqlItem.FIRST) := PL_TO_SQL1(aPlsqlItem(I));
		END LOOP; 
		RETURN aSqlItem;
	END PL_TO_SQL2;
	FUNCTION SQL_TO_PL1(aSqlItem XX_GI_TRANSFER_PKG_XX_GI_XFE1) 
	RETURN XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TBL_TYPE IS 
	aPlsqlItem XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TBL_TYPE; 
	BEGIN 
		aPlsqlItem := XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TBL_TYPE();
		aPlsqlItem.EXTEND(aSqlItem.COUNT);
		FOR I IN 1..aSqlItem.COUNT LOOP
			aPlsqlItem(I) := SQL_TO_PL2(aSqlItem(I));
		END LOOP; 
		RETURN aPlsqlItem;
	END SQL_TO_PL1;

   PROCEDURE XX_GI_TRANSFER_PKG$CREATE_MAI (P_IN_HDR_REC XX_GI_TRANSFER_PKG_XX_GI_XFER,P_IN_LINE_TBL XX_GI_TRANSFER_PKG_XX_GI_XFE1,X_RETURN_STATUS OUT VARCHAR2,X_ERROR_MESSAGE OUT VARCHAR2) IS
      P_IN_HDR_REC_ APPS.XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_HDR_TYPE;
      P_IN_LINE_TBL_ APPS.XX_GI_TRANSFER_PKG.XX_GI_XFER_INPUT_LINE_TBL_TYPE;
   BEGIN
      P_IN_HDR_REC_ := BPEL_PLINVENTORYTRANSFERPROCES.SQL_TO_PL0(P_IN_HDR_REC);
      P_IN_LINE_TBL_ := BPEL_PLINVENTORYTRANSFERPROCES.SQL_TO_PL1(P_IN_LINE_TBL);
      APPS.XX_GI_TRANSFER_PKG.CREATE_MAINTAIN_TRANSFER(P_IN_HDR_REC_,P_IN_LINE_TBL_,X_RETURN_STATUS,X_ERROR_MESSAGE);
   END XX_GI_TRANSFER_PKG$CREATE_MAI;

END BPEL_PLINVENTORYTRANSFERPROCES;
/
show errors
exit
