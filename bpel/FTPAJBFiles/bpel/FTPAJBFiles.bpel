<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Tue May 06 11:07:40 IST 2008
  Author:  Cecilia Maceam
  Purpose: Empty BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="FTPAJBFiles"
         targetNamespace="http://xmlns.oracle.com/FTPAJBFiles"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns4="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns7="ODError"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns12="http://xmlns.oracle.com/TransactionData"
         xmlns:ns5="http://xmlns.oracle.com/ODTransactionLogger"
         xmlns:ns18="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XX_CE_AJB_CC_RECON_PKG/BPEL_CHECK_DUP_FILE/"
         xmlns:ns6="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ns11="http://xmlns.oracle.com/pcbpel/adapter/file/"
         xmlns:ns9="http://xmlns.oracle.com/PostJournalEntry"
         xmlns:ns17="http://xmlns.oracle.com/pcbpel/adapter/db/ServiceXX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK/"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/ftp/AJBFileGet/"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/ftp/"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/file/attachment/"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns10="http://xmlns.oracle.com/pcbpel/adapter/file/AJBFilePut/"
         xmlns:ns8="http://xmlns.oracle.com/ProcessAJBFiles">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <partnerLinks>
    <partnerLink myRole="Get_role" name="AJBFileGet"
                 partnerLinkType="ns1:Get_plt"/>
    <partnerLink myRole="ODErrorLoggerRequester" name="ODErrorLogger"
                 partnerRole="ODErrorLoggerProvider"
                 partnerLinkType="ns6:ODErrorLogger"/>
    <partnerLink myRole="ProcessAJBFilesRequester" name="ProcessAJBFiles"
                 partnerRole="ProcessAJBFilesProvider"
                 partnerLinkType="ns8:ProcessAJBFiles"/>
    <partnerLink name="AJBFilePut" partnerRole="Write_role"
                 partnerLinkType="ns10:Write_plt"/>
    <partnerLink name="ServiceXX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK"
                 partnerRole="ServiceXX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_role"
                 partnerLinkType="ns17:ServiceXX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_plt"/>
    <partnerLink myRole="ODTransactionLoggerRequester"
                 name="ODTransactionLogger"
                 partnerRole="ODTransactionLoggerProvider"
                 partnerLinkType="ns5:ODTransactionLogger"/>
  </partnerLinks>
  <variables>
    <variable name="ReceiveAJBFileGet" messageType="ns1:attachmentElement_msg"/>
    <variable name="File_Name_in" messageType="ns3:InboundHeader_msg"/>
    <variable name="Substring_File_Name" type="xsd:string"/>
    <variable name="invkCatchAll_initiate"
              messageType="ns6:ODErrorLoggerRequestMessage"/>
    <variable name="ErrorMessageText" type="xsd:string"/>
    <variable name="ThreadInfoText" type="xsd:string"/>
    <variable name="Invoke_Process_AJB998"
              messageType="ns8:ProcessAJBFilesRequestMessage"/>
    <variable name="Invoke_AJB998FilePut"
              messageType="ns10:attachmentElement_msg"/>
    <variable name="File_Name_out" messageType="ns11:OutboundHeader_msg"/>
    <variable name="InvokeAJB998FilePut_OutputVariable"
              messageType="ns11:OutboundHeader_msg"/>
    <variable name="TableName" type="xsd:string"/>
    <variable name="Invoke_XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_In"
              messageType="ns17:args_in_msg"/>
    <variable name="Invoke_XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_Out"
              messageType="ns17:args_out_msg"/>
    <variable name="Sub_File_Name" type="xsd:string"/>
    <variable name="AJBPrefixFileName" type="xsd:string"/>
    <variable name="ProcessHeader" type="xsd:string"/>
    <variable name="Exception" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="logTransactionInput"
              messageType="ns5:ODTransactionLoggerRequestMessage"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence_4">
        <assign name="asnCatchAll">
          <copy>
            <from expression="concat(&quot;Error encountered in FTPAJBFiles, while processing file &quot;,bpws:getVariableData('File_Name_in','inboundHeader','/ns3:InboundFTPHeaderType/ns3:fileName'))"/>
            <to variable="ErrorMessageText"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:ProcessInfo/ns7:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:ProcessInfo/ns7:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:ProcessInfo/ns7:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:ProcessInfo/ns7:SystemName"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:ErrorDetails/ns7:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'Catch All on the Main Sequence'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:ProcessInfo/ns7:BusinessProcessStep"/>
          </copy>
          <copy>
            <from expression="ora:getFaultName()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:ErrorDetails/ns7:ErrorCode"/>
          </copy>
          <copy>
            <from variable="ErrorMessageText"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:ErrorDetails/ns7:ErrorDescription"/>
          </copy>
          <copy>
            <from expression="ora:getFaultAsString()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:ErrorDetails/ns7:ErrorText"/>
          </copy>
          <copy>
            <from expression="'system'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:ErrorDetails/ns7:ErrorType"/>
          </copy>
          <copy>
            <from expression="'fatal'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:ErrorDetails/ns7:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns7:ErrorData/ns7:Notification/ns7:sendNotification"/>
          </copy>
        </assign>
        <assign name="copyTransactionData">
          <copy>
            <from expression="'Error'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:ProcessInfo/ns12:ProcessStatus"/>
          </copy>
        </assign>
        <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                portType="ns5:ODTransactionLogger" operation="initiate"
                inputVariable="logTransactionInput"/>
        <invoke name="invkCatchAll" partnerLink="ODErrorLogger"
                portType="ns6:ODErrorLogger" operation="initiate"
                inputVariable="invkCatchAll_initiate"/>
        <terminate name="Terminate"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <receive name="ReceiveAJBFileGet" partnerLink="AJBFileGet"
             portType="ns1:Get_ptt" operation="Get" variable="ReceiveAJBFileGet"
             createInstance="yes" bpelx:headerVariable="File_Name_in"/>
    <scope name="logTransactionStart">
      <variables>
        <variable name="xmlFragment" type="xsd:string"/>
      </variables>
      <sequence name="Sequence_6">
        <assign name="copyTransactionData">
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:ProcessInfo/ns12:Domain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:ProcessInfo/ns12:ProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:ProcessInfo/ns12:InstanceId"/>
          </copy>
          <copy>
            <from expression="'Start'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:ProcessInfo/ns12:ProcessStatus"/>
          </copy>
          <copy>
            <from expression="'FTP'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:MessageDetails/ns12:MessageOperation"/>
          </copy>
          <copy>
            <from expression="'Credit Providers/AJB'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:MessageDetails/ns12:MessageSourceSystem"/>
          </copy>
          <copy>
            <from expression="'Attachment'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:MessageDetails/ns12:MessageType"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:MessageDetails/ns12:MessageDateTime"/>
          </copy>
          <copy>
            <from>
              <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                <EntityID EntityType="SourceFileName"/>
              </EntiltyList>
            </from>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:EntiltyList"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>', bpws:getVariableData('File_Name_in','inboundHeader','/ns3:InboundFTPHeaderType/ns3:fileName'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:EntiltyList/ns12:EntityID[1]"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:ProcessInfo/ns12:transactionStartTime"/>
          </copy>
          <copy>
            <from expression="'I0032_Bank and AJB CM Inbound Interface'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:ProcessInfo/ns12:SystemName"/>
          </copy>
          <copy>
            <from expression="'AJB'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:ProcessInfo/ns12:TradingPartnerDetails/ns12:TPFrom"/>
          </copy>
          <copy>
            <from expression="'EBS'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:ProcessInfo/ns12:TradingPartnerDetails/ns12:TPTo"/>
          </copy>
        </assign>
        <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                portType="ns5:ODTransactionLogger" operation="initiate"
                inputVariable="logTransactionInput"/>
      </sequence>
    </scope>
    <scope name="setProcessHeader">
      <sequence name="Sequence_2">
        <assign name="initializeInstanceTitle">
          <copy>
            <from expression="substring( concat( &quot;Moving &quot;, bpws:getVariableData('File_Name_in','inboundHeader','/ns3:InboundFTPHeaderType/ns3:fileName')),1,50)"/>
            <to variable="ProcessHeader"/>
          </copy>
        </assign>
        <bpelx:exec name="setTitle" language="java" version="1.5">
          <![CDATA[try {             
  String title = (String)getVariableData("ProcessHeader");             
  setTitle(title);             
  addAuditTrailEntry(title) ;             
} catch (Exception ex) {             
  addAuditTrailEntry(ex.toString());             
  ex.printStackTrace();             
}]]>
        </bpelx:exec>
      </sequence>
    </scope>
    <scope name="GetTableName">
      <faultHandlers>
        <catch faultName="bpws:selectionFailure" faultVariable="Exception">
          <assign name="EmptyTableName">
            <copy>
              <from expression="''"/>
              <to variable="Invoke_XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_In"
                  part="InputParameters"
                  query="/ns18:InputParameters/P_TABLE_NAME"/>
            </copy>
          </assign>
        </catch>
      </faultHandlers>
      <assign name="AJBTableName">
        <copy>
          <from expression="substring(bpws:getVariableData('File_Name_in','inboundHeader','/ns3:InboundFTPHeaderType/ns3:fileName'), 1, 6)"/>
          <to variable="AJBPrefixFileName"/>
        </copy>
        <copy>
          <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FTPAJBFiles/Interface[@name=bpws:getVariableData(&amp;quot;AJBPrefixFileName&amp;quot;)]/TableName')"/>
          <to variable="Invoke_XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_In"
              part="InputParameters"
              query="/ns18:InputParameters/P_TABLE_NAME"/>
        </copy>
      </assign>
    </scope>
    <switch name="Switch_3">
      <case condition="bpws:getVariableData('Invoke_XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_In','InputParameters','/ns18:InputParameters/P_TABLE_NAME') = ''">
        <bpelx:annotation>
          <bpelx:pattern>Invalid File Name</bpelx:pattern>
        </bpelx:annotation>
        <sequence name="Sequence_5">
          <assign name="InvalidFileName">
            <copy>
              <from expression="'Invalid File Name Exception'"/>
              <to variable="Exception" part="summary"/>
            </copy>
            <copy>
              <from expression="concat(&quot;Invalid File Name: &quot;, bpws:getVariableData('File_Name_in','inboundHeader','/ns3:InboundFTPHeaderType/ns3:fileName'))"/>
              <to variable="Exception" part="detail"/>
            </copy>
            <copy>
              <from expression='"UnknownFileName"'/>
              <to variable="Exception" part="code"/>
            </copy>
          </assign>
          <throw name="ThrowInvalidFileNameException"
                 faultName="bpelx:remoteFault" faultVariable="Exception"/>
        </sequence>
      </case>
      <otherwise>
        <assign name="InitializeDuplicateFileRequest">
          <copy>
            <from variable="File_Name_in" part="inboundHeader"
                  query="/ns3:InboundFTPHeaderType/ns3:fileName"/>
            <to variable="Invoke_XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_In"
                part="InputParameters"
                query="/ns18:InputParameters/P_FILE_NAME"/>
          </copy>
        </assign>
      </otherwise>
    </switch>
    <invoke name="InvokeDuplicateFileService"
            partnerLink="ServiceXX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK"
            portType="ns17:ServiceXX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_ptt"
            operation="ServiceXX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK"
            inputVariable="Invoke_XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_In"
            outputVariable="Invoke_XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_Out"/>
    <switch name="Switch_2">
      <case condition="bpws:getVariableData('Invoke_XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_Out','OutputParameters','/ns18:OutputParameters/BPEL_CHECK_DUP_FILE')='F'">
        <bpelx:annotation>
          <bpelx:pattern>File Not Found In AJB* Table</bpelx:pattern>
        </bpelx:annotation>
        <sequence name="Sequence_2">
          <assign name="InitializeOutputFileName">
            <copy>
              <from variable="File_Name_in" part="inboundHeader"
                    query="/ns3:InboundFTPHeaderType/ns3:fileName"/>
              <to variable="Invoke_Process_AJB998" part="payload"
                  query="/ns9:fileHeader/ns9:fileName"/>
            </copy>
            <copy>
              <from variable="ReceiveAJBFileGet" part="attachmentElement"
                    query="/ns2:attachmentElement"/>
              <to variable="Invoke_AJB998FilePut" part="attachmentElement"
                  query="/ns2:attachmentElement"/>
            </copy>
            <copy>
              <from variable="File_Name_in" part="inboundHeader"
                    query="/ns3:InboundFTPHeaderType/ns3:fileName"/>
              <to variable="File_Name_out" part="outboundHeader"
                  query="/ns11:OutboundFileHeaderType/ns11:fileName"/>
            </copy>
          </assign>
          <invoke name="InvokeAJBFilePut" partnerLink="AJBFilePut"
                  portType="ns10:Write_ptt" operation="Write"
                  inputVariable="Invoke_AJB998FilePut"
                  outputVariable="InvokeAJB998FilePut_OutputVariable"
                  bpelx:inputHeaderVariable="File_Name_out"/>
          <assign name="InitializeProcessAJBFilesRequest">
            <copy>
              <from variable="InvokeAJB998FilePut_OutputVariable"
                    part="outboundHeader"
                    query="/ns11:OutboundFileHeaderType/ns11:directory"/>
              <to variable="Invoke_Process_AJB998" part="payload"
                  query="/ns9:fileHeader/ns9:directory"/>
            </copy>
          </assign>
          <invoke name="InvokeProcessAJBFiles" partnerLink="ProcessAJBFiles"
                  portType="ns8:ProcessAJBFiles" operation="initiate"
                  inputVariable="Invoke_Process_AJB998"/>
        </sequence>
      </case>
      <otherwise>
        <bpelx:annotation>
          <bpelx:pattern>Duplicate File</bpelx:pattern>
        </bpelx:annotation>
        <sequence name="Sequence_3">
          <scope name="logTransactionDupplicateFile">
            <variables>
              <variable name="xmlFragment" type="xsd:string"/>
            </variables>
            <sequence name="Sequence_71">
              <assign name="logTransactionInput">
                <copy>
                  <from>
                    <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                      <EntityID EntityType="SourceFileName"/>
                      <EntityID EntityType="DuplicateFileName"/>
                    </EntiltyList>
                  </from>
                  <to variable="logTransactionInput" part="payload"
                      query="/ns12:TransactionData/ns12:EntiltyList"/>
                </copy>
                <copy>
                  <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>', bpws:getVariableData('File_Name_in','inboundHeader','/ns3:InboundFTPHeaderType/ns3:fileName'), '&lt;/EntityID>')"/>
                  <to variable="xmlFragment"/>
                </copy>
                <copy>
                  <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                  <to variable="logTransactionInput" part="payload"
                      query="/ns12:TransactionData/ns12:EntiltyList/ns12:EntityID[1]"/>
                </copy>
                <copy>
                  <from expression="concat('&lt;EntityID EntityType=&quot;DuplicateFileName&quot;>', bpws:getVariableData('Invoke_XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_Out','OutputParameters','/ns18:OutputParameters/BPEL_CHECK_DUP_FILE'), '&lt;/EntityID>')"/>
                  <to variable="xmlFragment"/>
                </copy>
                <copy>
                  <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                  <to variable="logTransactionInput" part="payload"
                      query="/ns12:TransactionData/ns12:EntiltyList/ns12:EntityID[2]"/>
                </copy>
              </assign>
            </sequence>
          </scope>
          <assign name="InitializeDuplicateFileException">
            <copy>
              <from expression="string('Duplicate File Exception')"/>
              <to variable="Exception" part="summary"/>
            </copy>
            <copy>
              <from expression="concat(&quot;The file &quot;, bpws:getVariableData('File_Name_in','inboundHeader','/ns3:InboundFTPHeaderType/ns3:fileName'),&quot; has already been processed.&quot;)"/>
              <to variable="Exception" part="detail"/>
            </copy>
            <copy>
              <from expression="string('XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK.DuplicateFileName')"/>
              <to variable="Exception" part="code"/>
            </copy>
          </assign>
          <throw name="ThrowDuplicateFileException"
                 faultName="bpelx:bindingFault" faultVariable="Exception"/>
        </sequence>
      </otherwise>
    </switch>
    <scope name="logTransactionEnd">
      <variables>
        <variable name="xmlFragment" type="xsd:string"/>
      </variables>
      <sequence name="Sequence_7">
        <assign name="logTransactionInput">
          <copy>
            <from expression="'Success'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:ProcessInfo/ns12:ProcessStatus"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:ProcessInfo/ns12:transactionEndTime"/>
          </copy>
          <copy>
            <from>
              <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                <EntityID EntityType="SourceFileName"/>
                <EntityID EntityType="TargetFileName"/>
                <EntityID EntityType="DuplicateFileName"/>
                <EntityID EntityType="ReleaseESPJob"/>
              </EntiltyList>
            </from>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:EntiltyList"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>', bpws:getVariableData('File_Name_in','inboundHeader','/ns3:InboundFTPHeaderType/ns3:fileName'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:EntiltyList/ns12:EntityID[1]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;TargetFileName&quot;>', bpws:getVariableData('InvokeAJB998FilePut_OutputVariable','outboundHeader','/ns11:OutboundFileHeaderType/ns11:directory'), '/',  bpws:getVariableData('File_Name_out','outboundHeader','/ns11:OutboundFileHeaderType/ns11:fileName'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:EntiltyList/ns12:EntityID[2]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;DuplicateFileName&quot;>', bpws:getVariableData('Invoke_XX_CE_AJB_CC_RECON_PKG_FILENAME_CHECK_Out','OutputParameters','/ns18:OutputParameters/BPEL_CHECK_DUP_FILE'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:EntiltyList/ns12:EntityID[3]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;ReleaseESPJob&quot;>', 'NO', '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns12:TransactionData/ns12:EntiltyList/ns12:EntityID[4]"/>
          </copy>
        </assign>
        <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                portType="ns5:ODTransactionLogger" operation="initiate"
                inputVariable="logTransactionInput"/>
      </sequence>
    </scope>
  </sequence>
</process>