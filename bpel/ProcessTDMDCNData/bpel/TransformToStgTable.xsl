<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="TDMDCNData.xsd"/>
      <rootElement name="TDMDCN" namespace="http://TargetNamespace.com/FTPDCNFiles"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="TDMDCNInsert_table.xsd"/>
      <rootElement name="XxApDcnStgCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/TDMDCNInsert"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.1.0(build 061009.0802) AT [WED AUG 15 00:55:16 EDT 2007]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/top/TDMDCNInsert"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bt="http://www.oracle.com/XSL/Transform/java/oracle.bt.CustomExtensionFunctions"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:tns="http://TargetNamespace.com/FTPDCNFiles"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                exclude-result-prefixes="xsl xsd nxsd tns ns0 bpws ehdr hwf xp20 bt ora ids orcl">
  <xsl:template match="/">
    <ns0:XxApDcnStgCollection>
      <xsl:for-each select="/tns:TDMDCN/tns:Data">
        <ns0:XxApDcnStg>
          <ns0:dcn>
            <xsl:value-of select="normalize-space(tns:DCN)"/>
          </ns0:dcn>
          <ns0:vendorNum>
            <xsl:value-of select="normalize-space(tns:VendorNumber)"/>
          </ns0:vendorNum>
          <ns0:invoiceNum>
            <xsl:value-of select="normalize-space(tns:InvoiceNumber)"/>
          </ns0:invoiceNum>
          <ns0:invoiceDate>
            <xsl:call-template name="formatDate">
                <xsl:with-param name="date" select="normalize-space(tns:InvoiceDate)"/>
            </xsl:call-template>
          </ns0:invoiceDate>
        </ns0:XxApDcnStg>
      </xsl:for-each>
    </ns0:XxApDcnStgCollection>
  </xsl:template>

  <xsl:template name="formatDate">
    <xsl:param name="date"/>
    <xsl:if test="normalize-space($date) > '0'">
      <xsl:variable name="mm" select="substring($date, 1, 2)"/>
      <xsl:variable name="dd" select="substring($date, 4, 2)"/>
      <xsl:variable name="yyyy" select="substring($date, 7, 4)"/>
      <xsl:variable name="newDate" select="concat($yyyy,'-', $mm, '-', $dd)"/>
      <xsl:value-of select="$newDate"/>
    </xsl:if>
  </xsl:template>  
</xsl:stylesheet>
