<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Oct 15 09:56:51 IST 2008
  Author:  hemagsnm
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ProcessTDMDCNData"
         targetNamespace="http://xmlns.oracle.com/ProcessTDMDCNData"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns4="http://schemas.oracle.com/service/bpel/common"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns16="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:ns5="http://xmlns.oracle.com/pcbpel/adapter/file/SyncFileRead/"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ns9="http://xmlns.oracle.com/pcbpel/adapter/db/TDMDCNInsert/"
         xmlns:ns1="http://xmlns.oracle.com/PostJournalEntry"
         xmlns:ns2="http://xmlns.oracle.com/ODTransactionLogger"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns15="ODError"
         xmlns:ns10="http://xmlns.oracle.com/pcbpel/adapter/db/top/TDMDCNInsert"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns13="http://TargetNamespace.com/FTPDCNFiles"
         xmlns:ns7="http://xmlns.oracle.com/pcbpel/adapter/db/CallConProgramGLReceiver/"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns12="http://xmlns.oracle.com/ConcurrentProgramStatus"
         xmlns:client="http://xmlns.oracle.com/ProcessTDMDCNData"
         xmlns:ns6="http://xmlns.oracle.com/pcbpel/adapter/file/"
         xmlns:ns11="http://xmlns.oracle.com/BPELInvokeESP"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://xmlns.oracle.com/TransactionData"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns8="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XX_BPEL_INTEGRATION_PKG/SUBMIT_CONCURRENT_PROGRAM/">
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="client" partnerLinkType="client:ProcessTDMDCNData"
                     myRole="ProcessTDMDCNDataProvider"
                     partnerRole="ProcessTDMDCNDataRequester"/>
        <partnerLink myRole="ODTransactionLoggerRequester"
                     name="ODTransactionLogger"
                     partnerRole="ODTransactionLoggerProvider"
                     partnerLinkType="ns2:ODTransactionLogger"/>
        <partnerLink name="SyncFileRead" partnerRole="SynchChunkedRead_role"
                     partnerLinkType="ns5:SynchChunkedRead_plt"/>
        <partnerLink name="CallConProgramGLReceiver"
                     partnerRole="CallConProgramGLReceiver_role"
                     partnerLinkType="ns7:CallConProgramGLReceiver_plt"/>
        <partnerLink name="TDMDCNInsert" partnerRole="TDMDCNInsert_role"
                     partnerLinkType="ns9:TDMDCNInsert_plt"/>
        <partnerLink myRole="BPELInvokeESPRequester" name="BPELInvokeESP"
                     partnerRole="BPELInvokeESPProvider"
                     partnerLinkType="ns11:BPELInvokeESP"/>
        <partnerLink myRole="ConcurrentProgramStatusRequester"
                     name="ConcurrentProgramStatus"
                     partnerRole="ConcurrentProgramStatusProvider"
                     partnerLinkType="ns12:ConcurrentProgramStatus"/>
        <partnerLink name="ODErrorLogger" partnerRole="ODErrorLoggerProvider"
                     partnerLinkType="ns16:ODErrorLogger"
                     myRole="ODErrorLoggerRequester"/>
    </partnerLinks>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable"
                  messageType="client:ProcessTDMDCNDataRequestMessage"/>
        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable"
                  messageType="client:ProcessTDMDCNDataResponseMessage"/>
        <variable name="invkTransactionLogger_initiate_InputVariable"
                  messageType="ns2:ODTransactionLoggerRequestMessage"/>
        <variable name="xmlFragment" type="xsd:string"/>
        <variable name="XSLT_PARAM" element="ns4:parameters"/>
        <variable name="ProcessHeader" type="xsd:string"/>
        <variable name="InvokeSyncFileRead_In" messageType="ns5:Empty_msg"/>
        <variable name="InvokeSyncFileRead_Out" messageType="ns5:TDMDCN_msg"/>
        <variable name="SyncChunkReadInboundHeader"
                  messageType="ns6:OutboundHeader_msg"/>
        <variable name="counter" type="xsd:int"/>
        <variable name="SyncChunkReadOutboundHeader"
                  messageType="ns6:OutboundHeader_msg"/>
        <variable name="ConcurrentProgram_In" messageType="ns7:args_in_msg"/>
        <variable name="ConcurrentProgram_Out" messageType="ns7:args_out_msg"/>
        <variable name="InvokeDCNInsert_Param_In"
                  messageType="ns9:XxApDcnStgCollection_msg"/>
        <variable name="NumberOfRecords" type="xsd:int"/>
        <variable name="TotalNoOfRecs" type="xsd:int"/>
        <variable name="invkESPProcess_initiate_InputVariable"
                  messageType="ns11:BPELInvokeESPRequestMessage"/>
        <variable name="GetConcurrentProgStatus_Initiate"
                  messageType="ns12:ConcurrentProgramStatusRequestMessage"/>
        <variable name="ReceiveConcurrentProgStatus_In"
                  messageType="ns12:ConcurrentProgramStatusResponseMessage"/>
        <variable name="Exception" messageType="bpelx:RuntimeFaultMessage"/>
        <variable name="invkCatchAll_initiate"
                  messageType="ns16:ODErrorLoggerRequestMessage"/>
        <variable name="ErrorMsgText" type="xsd:string"/>
        <variable name="FileName" type="xsd:string"/>
    </variables>
    <faultHandlers>
        <catchAll>
            <sequence name="Sequence_7">
                <assign name="asnCatchAll">
                    <copy>
                        <from expression="concat(&quot;Error encountered in ProcessTDMDCNData, while copying file &quot;,bpws:getVariableData('inputVariable','payload','/payload/ns1:fileName'))"/>
                        <to variable="ErrorMsgText"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getInstanceId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessId"/>
                    </copy>
                    <copy>
                        <from expression="ora:getDomainId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessDomain"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessURL()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ProcessInfo/ns15:SystemName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getCurrentDateTime()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorDateTime"/>
                    </copy>
                    <copy>
                        <from expression="'Catch All on the Main Sequence'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessStep"/>
                    </copy>
                    <copy>
                        <from expression="ora:getFaultName()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorCode"/>
                    </copy>
                    <copy>
                        <from variable="ErrorMsgText"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorDescription"/>
                    </copy>
                    <copy>
                        <from expression="ora:getFaultAsString()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorText"/>
                    </copy>
                    <copy>
                        <from expression="'system'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorType"/>
                    </copy>
                    <copy>
                        <from expression="'fatal'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorSeverity"/>
                    </copy>
                    <copy>
                        <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:Notification/ns15:sendNotification"/>
                    </copy>
                </assign>
                <scope name="logTransactionErrorLogger">
                    <sequence name="Sequence_8">
                        <assign name="logTrnData">
                            <copy>
                                <from expression="'Error'"/>
                                <to variable="invkTransactionLogger_initiate_InputVariable"
                                    part="payload"
                                    query="/ns3:TransactionData/ns3:ProcessInfo/ns3:ProcessStatus"/>
                            </copy>
                        </assign>
                        <invoke name="InvokeTrnLogger"
                                partnerLink="ODTransactionLogger"
                                portType="ns2:ODTransactionLogger"
                                operation="initiate"
                                inputVariable="invkTransactionLogger_initiate_InputVariable"/>
                    </sequence>
                </scope>
                <invoke name="invkCatchAll" partnerLink="ODErrorLogger"
                        portType="ns16:ODErrorLogger" operation="initiate"
                        inputVariable="invkCatchAll_initiate"/>
                <terminate name="Terminate"/>
            </sequence>
        </catchAll>
    </faultHandlers>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in ProcessTDMDCNData.wsdl) -->
        <receive name="receiveInput" partnerLink="client"
                 portType="client:ProcessTDMDCNData" operation="initiate"
                 variable="inputVariable" createInstance="yes"/>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <scope name="LogTransactionStart">
            <sequence name="Sequence_1">
                <assign name="copyTransactionData">
                    <copy>
                        <from expression="ora:getDomainId()"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:ProcessInfo/ns3:Domain"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessId()"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:ProcessInfo/ns3:ProcessName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getInstanceId()"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:ProcessInfo/ns3:InstanceId"/>
                    </copy>
                    <copy>
                        <from expression="'Start'"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:ProcessInfo/ns3:ProcessStatus"/>
                    </copy>
                    <copy>
                        <from expression="'Insert Data into Table'"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:MessageDetails/ns3:MessageOperation"/>
                    </copy>
                    <copy>
                        <from expression="'TDM DCN Data'"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:MessageDetails/ns3:MessageSourceSystem"/>
                    </copy>
                    <copy>
                        <from expression="'Payload'"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:MessageDetails/ns3:MessageType"/>
                    </copy>
                    <copy>
                        <from expression="ora:getCurrentDateTime()"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:MessageDetails/ns3:MessageDateTime"/>
                    </copy>
                    <copy>
                        <from>
                            <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                                <EntityID EntityType="SourceFileName"/>
                            </EntiltyList>
                        </from>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:EntiltyList"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>', bpws:getVariableData('inputVariable','payload','/payload/ns1:fileName'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:EntiltyList/ns3:EntityID[1]"/>
                    </copy>
                    <copy>
                        <from expression="'I1358_DCN_Update_from_TDM_to_AP'"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:ProcessInfo/ns3:SystemName"/>
                    </copy>
                    <copy>
                        <from expression="'EBS'"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:ProcessInfo/ns3:TradingPartnerDetails/ns3:TPFrom"/>
                    </copy>
                    <copy>
                        <from expression="'XX_AP_DCN_STG'"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:ProcessInfo/ns3:TradingPartnerDetails/ns3:TPTo"/>
                    </copy>
                </assign>
                <invoke name="invkTransactionLogger"
                        partnerLink="ODTransactionLogger"
                        portType="ns2:ODTransactionLogger" operation="initiate"
                        inputVariable="invkTransactionLogger_initiate_InputVariable"/>
            </sequence>
        </scope>
        <scope name="SetProcessHeader">
            <sequence name="Sequence_5">
                <assign name="initializeInstanceTitle">
                    <copy>
                        <from expression="substring(concat('Processing ',bpws:getVariableData('inputVariable','payload','/payload/ns1:fileName')),1,50)"/>
                        <to variable="ProcessHeader"/>
                    </copy>
                </assign>
                <bpelx:exec name="setTitle" language="java" version="1.5">
                    <![CDATA[try {              
                         String title = (String)getVariableData("ProcessHeader");              
                         setTitle(title);              
                         addAuditTrailEntry(title) ;              
                       } catch (Exception ex) {              
                         addAuditTrailEntry(ex.toString());              
                         ex.printStackTrace();              
          }]]>
                </bpelx:exec>
            </sequence>
        </scope>
        <assign name="AssignChunkReadHeaders">
            <copy>
                <from expression="''"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns6:OutboundFileHeaderType/ns6:lineNumber"/>
            </copy>
            <copy>
                <from expression="''"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns6:OutboundFileHeaderType/ns6:columnNumber"/>
            </copy>
            <copy>
                <from expression="''"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns6:OutboundFileHeaderType/ns6:recordNumber"/>
            </copy>
            <copy>
                <from expression="'false'"/>
                <to variable="SyncChunkReadOutboundHeader" part="outboundHeader"
                    query="/ns6:OutboundFileHeaderType/ns6:isEOF"/>
            </copy>
            <copy>
                <from expression="0"/>
                <to variable="counter"/>
            </copy>
            <copy>
                <from variable="inputVariable" part="payload"
                      query="/payload/ns1:directory"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns6:OutboundFileHeaderType/ns6:directory"/>
            </copy>
            <copy>
                <from variable="inputVariable" part="payload"
                      query="/payload/ns1:fileName"/>
                <to variable="SyncChunkReadInboundHeader" part="outboundHeader"
                    query="/ns6:OutboundFileHeaderType/ns6:fileName"/>
            </copy>
            <copy>
                <from expression="'TDM DCN File Name'"/>
                <to variable="XSLT_PARAM"
                    query="/ns4:parameters/ns4:item/ns4:name"/>
            </copy>
            <copy>
                <from expression="bpws:getVariableData('inputVariable','payload','/payload/ns1:fileName')"/>
                <to variable="XSLT_PARAM"
                    query="/ns4:parameters/ns4:item/ns4:value"/>
            </copy>
            <copy>
                <from expression="0"/>
                <to variable="TotalNoOfRecs"/>
            </copy>
        </assign>
        <while name="While_1"
               condition="bpws:getVariableData('SyncChunkReadInboundHeader','outboundHeader','/ns6:OutboundFileHeaderType/ns6:isEOF')!= 'true'">
            <sequence name="Sequence_2">
                <invoke name="InvokeSyncFileRead" partnerLink="SyncFileRead"
                        portType="ns5:SynchChunkedRead_ptt"
                        operation="SynchChunkedRead"
                        inputVariable="InvokeSyncFileRead_In"
                        outputVariable="InvokeSyncFileRead_Out"
                        bpelx:outputHeaderVariable="SyncChunkReadOutboundHeader"
                        bpelx:inputHeaderVariable="SyncChunkReadInboundHeader"/>
                <assign name="AssignINOUTHeader">
                    <copy>
                        <from variable="SyncChunkReadOutboundHeader"/>
                        <to variable="SyncChunkReadInboundHeader"/>
                    </copy>
                    <copy>
                        <from expression="bpws:getVariableData('counter')+1"/>
                        <to variable="counter"/>
                    </copy>
                </assign>
                <switch name="Switch_2">
                    <case condition="bpws:getVariableData('SyncChunkReadOutboundHeader','outboundHeader','/ns6:OutboundFileHeaderType/ns6:isMessageRejected') = 'true'">
                        <sequence name="SeqInvalidMessage">
                            <assign name="AssignInvalidDataMessage">
                                <copy>
                                    <from variable="SyncChunkReadOutboundHeader"
                                          part="outboundHeader"
                                          query="/ns6:OutboundFileHeaderType/ns6:rejectionReason"/>
                                    <to variable="Exception" part="detail"/>
                                </copy>
                                <copy>
                                    <from expression="'ChunkRead.InvalidMessageException'"/>
                                    <to variable="Exception" part="code"/>
                                </copy>
                                <copy>
                                    <from variable="SyncChunkReadOutboundHeader"
                                          part="outboundHeader"
                                          query="/ns6:OutboundFileHeaderType/ns6:rejectionReason"/>
                                    <to variable="Exception" part="summary"/>
                                </copy>
                            </assign>
                            <throw name="ThrowInvalidMessage"
                                   faultName="bpelx:bindingFault"
                                   faultVariable="Exception"/>
                        </sequence>
                    </case>
                    <otherwise>
                        <switch name="Switch_3">
                            <case condition="bpws:getVariableData('SyncChunkReadOutboundHeader','outboundHeader','/ns6:OutboundFileHeaderType/ns6:NoDataFound') = 'true'">
                                <sequence name="SeqNoDataFound">
                                    <assign name="AssignNoDataMessage">
                                        <copy>
                                            <from variable="SyncChunkReadOutboundHeader"
                                                  part="outboundHeader"
                                                  query="/ns6:OutboundFileHeaderType/ns6:rejectionReason"/>
                                            <to variable="Exception"
                                                part="detail"/>
                                        </copy>
                                        <copy>
                                            <from expression="'ChunkRead.NoDataFoundException'"/>
                                            <to variable="Exception"
                                                part="code"/>
                                        </copy>
                                        <copy>
                                            <from variable="SyncChunkReadOutboundHeader"
                                                  part="outboundHeader"
                                                  query="/ns6:OutboundFileHeaderType/ns6:rejectionReason"/>
                                            <to variable="Exception"
                                                part="summary"/>
                                        </copy>
                                    </assign>
                                    <throw name="ThrowNoDataFound"
                                           faultName="bpelx:bindingFault"
                                           faultVariable="Exception"/>
                                </sequence>
                            </case>
                            <otherwise>
                                <empty name="ChunkReadSuccessful"/>
                            </otherwise>
                        </switch>
                    </otherwise>
                </switch>
                <assign name="TransformToSTGTable">
                    <bpelx:annotation>
                        <bpelx:pattern>transformation</bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                        <from expression="ora:processXSLT('Transformation_TDMDCN.xsl',bpws:getVariableData('InvokeSyncFileRead_Out','TDMDCN'))"/>
                        <to variable="InvokeDCNInsert_Param_In"
                            part="XxApDcnStgCollection"/>
                    </copy>
                </assign>
                <assign name="NumberOfRecords">
                    <copy>
                        <from expression="ora:countNodes('InvokeDCNInsert_Param_In','XxApDcnStgCollection','/ns10:XxApDcnStgCollection/ns10:XxApDcnStg')"/>
                        <to variable="NumberOfRecords"/>
                    </copy>
                    <copy>
                        <from expression="substring(bpws:getVariableData('inputVariable','payload','/payload/ns1:fileName'),1,10)"/>
                        <to variable="FileName"/>
                    </copy>
                </assign>
                <invoke name="InvokeDCNInsert" partnerLink="TDMDCNInsert"
                        portType="ns9:TDMDCNInsert_ptt" operation="insert"
                        inputVariable="InvokeDCNInsert_Param_In"/>
                <assign name="TotalNumberOfRecords">
                    <copy>
                        <from expression="ora:countNodes('InvokeDCNInsert_Param_In','XxApDcnStgCollection','/ns10:XxApDcnStgCollection/ns10:XxApDcnStg')"/>
                        <to variable="NumberOfRecords"/>
                    </copy>
                    <copy>
                        <from expression="ora:countNodes('InvokeDCNInsert_Param_In','XxApDcnStgCollection','/ns10:XxApDcnStgCollection/ns10:XxApDcnStg')+bpws:getVariableData('TotalNoOfRecs')"/>
                        <to variable="TotalNoOfRecs"/>
                    </copy>
                </assign>
            </sequence>
        </while>
        <assign name="AssignConProgramParam">
            <copy>
                <from expression="substring(bpws:getVariableData('inputVariable','payload','/payload/ns1:fileName'), 1, 10)"/>
                <to variable="FileName"/>
            </copy>
            <copy>
                <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/ProcessTDMDCNData/Interface[@name=bpws:getVariableData(&quot;FileName&quot;)]/UserName')"/>
                <to variable="ConcurrentProgram_In" part="InputParameters"
                    query="/ns8:InputParameters/P_USER_NAME"/>
            </copy>
            <copy>
                <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/ProcessTDMDCNData/Interface[@name=bpws:getVariableData(&quot;FileName&quot;)]/Responsibility')"/>
                <to variable="ConcurrentProgram_In" part="InputParameters"
                    query="/ns8:InputParameters/P_RESP_NAME"/>
            </copy>
            <copy>
                <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/ProcessTDMDCNData/Interface[@name=bpws:getVariableData(&quot;FileName&quot;)]/ApplicationName')"/>
                <to variable="ConcurrentProgram_In" part="InputParameters"
                    query="/ns8:InputParameters/P_APPL_SHORT_NAME"/>
            </copy>
            <copy>
                <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/ProcessTDMDCNData/Interface[@name=bpws:getVariableData(&quot;FileName&quot;)]/ShortName')"/>
                <to variable="ConcurrentProgram_In" part="InputParameters"
                    query="/ns8:InputParameters/P_CONC_SHORT_NAME"/>
            </copy>
        </assign>
        <invoke name="InvokeConcurrentProgram"
                partnerLink="CallConProgramGLReceiver"
                portType="ns7:CallConProgramGLReceiver_ptt"
                operation="CallConProgramGLReceiver"
                inputVariable="ConcurrentProgram_In"
                outputVariable="ConcurrentProgram_Out"/>
        <assign name="AssignConcurrentProgramId">
            <copy>
                <from variable="ConcurrentProgram_Out" part="OutputParameters"
                      query="/ns8:OutputParameters/X_REQUESTID"/>
                <to variable="GetConcurrentProgStatus_Initiate" part="payload"
                    query="/ns12:ConcurrentProgramStatusProcessRequest/ns12:Request_Id"/>
            </copy>
            <copy>
                <from expression="'F'"/>
                <to variable="GetConcurrentProgStatus_Initiate" part="payload"
                    query="/ns12:ConcurrentProgramStatusProcessRequest/ns12:Child_Request"/>
            </copy>
        </assign>
        <invoke name="GetConcurrentProgStatus"
                partnerLink="ConcurrentProgramStatus"
                portType="ns12:ConcurrentProgramStatus" operation="initiate"
                inputVariable="GetConcurrentProgStatus_Initiate"/>
        <receive name="ReceiveConcurrentProgStatus"
                 partnerLink="ConcurrentProgramStatus"
                 portType="ns12:ConcurrentProgramStatusCallback"
                 operation="onResult" variable="ReceiveConcurrentProgStatus_In"
                 createInstance="no"/>
        <switch name="Switch_1">
            <case condition="bpws:getVariableData('ReceiveConcurrentProgStatus_In','payload','/ns12:ConcurrentProgramStatusProcessResponse/ns12:result')='SUCCESS'">
                <scope name="InvokeESPProcess">
                    <sequence name="Sequence_4">
                        <assign name="CopyESPData">
                            <copy>
                                <from expression="ora:getDomainId()"/>
                                <to variable="invkESPProcess_initiate_InputVariable"
                                    part="payload"
                                    query="/ns11:BPELInvokeESPProcessRequest/ns11:processDomain"/>
                            </copy>
                            <copy>
                                <from expression="ora:getProcessId()"/>
                                <to variable="invkESPProcess_initiate_InputVariable"
                                    part="payload"
                                    query="/ns11:BPELInvokeESPProcessRequest/ns11:processName"/>
                            </copy>
                            <copy>
                                <from expression="'TDM_AP_DCN'"/>
                                <to variable="invkESPProcess_initiate_InputVariable"
                                    part="payload"
                                    query="/ns11:BPELInvokeESPProcessRequest/ns11:filePattern"/>
                            </copy>
                        </assign>
                        <invoke name="InvokeESPProcess"
                                partnerLink="BPELInvokeESP"
                                portType="ns11:BPELInvokeESP"
                                operation="initiate"
                                inputVariable="invkESPProcess_initiate_InputVariable"/>
                    </sequence>
                </scope>
            </case>
            <otherwise>
                <sequence name="Sequence_9">
                    <assign name="AssignErrorMessage">
                        <copy>
                            <from expression="concat('The Concurrent Request ID ',bpws:getVariableData('ConcurrentProgram_Out','OutputParameters','/ns8:OutputParameters/X_REQUESTID'),' has errored out')"/>
                            <to variable="Exception" part="code"/>
                        </copy>
                        <copy>
                            <from expression="concat('The Concurrent Request ID ' ,bpws:getVariableData('ConcurrentProgram_Out','OutputParameters','/ns8:OutputParameters/X_REQUESTID'), ' has errored out due to ',bpws:getVariableData('ReceiveConcurrentProgStatus_In','payload','/ns12:ConcurrentProgramStatusProcessResponse/ns12:Error_Desc')) "/>
                            <to variable="Exception" part="summary"/>
                        </copy>
                        <copy>
                            <from expression="concat('The Concurrent Request ID ' ,bpws:getVariableData('ConcurrentProgram_Out','OutputParameters','/ns8:OutputParameters/X_REQUESTID'), ' has errored out due to ',bpws:getVariableData('ReceiveConcurrentProgStatus_In','payload','/ns12:ConcurrentProgramStatusProcessResponse/ns12:Error_Desc')) "/>
                            <to variable="Exception" part="detail"/>
                        </copy>
                    </assign>
                    <throw name="Throw_1" faultName="bpws:selectionFailure"
                           faultVariable="Exception"/>
                </sequence>
            </otherwise>
        </switch>
        <scope name="LogTransactionEnd">
            <sequence name="Sequence_3">
                <assign name="LogTransactionEndData">
                    <copy>
                        <from expression="'Success'"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:ProcessInfo/ns3:ProcessStatus"/>
                    </copy>
                    <copy>
                        <from>
                            <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                                <EntityID EntityType="SourceFileName"/>
                                <EntityID EntityType="TableName"/>
                                <EntityID EntityType="TotalNoOfRecs"/>
                                <EntityID EntityType="ReleaseESPJob"/>
                            </EntiltyList>
                        </from>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:EntiltyList"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>', bpws:getVariableData('inputVariable','payload','/payload/ns1:fileName'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:EntiltyList/ns3:EntityID[1]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;TableName&quot;>', 'XX_AP_DCN_STG', '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:EntiltyList/ns3:EntityID[2]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;NumberOfRecords&quot;>', bpws:getVariableData('TotalNoOfRecs'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:EntiltyList/ns3:EntityID[3]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;ReleaseESPJob&quot;>', 'YES', '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="invkTransactionLogger_initiate_InputVariable"
                            part="payload"
                            query="/ns3:TransactionData/ns3:EntiltyList/ns3:EntityID[4]"/>
                    </copy>
                </assign>
                <invoke name="invkLogTransactionEndData"
                        partnerLink="ODTransactionLogger"
                        portType="ns2:ODTransactionLogger" operation="initiate"
                        inputVariable="invkTransactionLogger_initiate_InputVariable"/>
            </sequence>
        </scope>
    </sequence>
</process>