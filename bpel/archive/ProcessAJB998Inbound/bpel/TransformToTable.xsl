<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="../../../../Office%20Depot/BPEL_Projects/ProcessAJB998Inbound/bpel/AJB998_5.xsd"/>
      <rootElement name="Root-Element" namespace="http://TargetNamespace.com/InboundService"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="../../../../Office%20Depot/BPEL_Projects/ProcessAJB998Inbound/bpel/ServiceTableInsert_table.xsd"/>
      <rootElement name="XxCeAjb998Collection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/ServiceTableInsert"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [WED DEC 12 14:38:41 EST 2007]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/top/ServiceTableInsert"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:tns="http://TargetNamespace.com/InboundService"
                exclude-result-prefixes="xsl xsd nxsd tns ns0 bpws ehdr hwf xp20 xref ora ids orcl">
  <xsl:template match="/">
    <ns0:XxCeAjb998Collection>
      <xsl:for-each select="/tns:Root-Element/tns:AJB998">
        <ns0:XxCeAjb998>
          <ns0:recordType>
            <xsl:value-of select="tns:RecordType"/>
          </ns0:recordType>
          <ns0:vsetFile>
            <xsl:value-of select="tns:VSetFile"/>
          </ns0:vsetFile>
          <ns0:sdate>
          <xsl:call-template name="formatDatesdate">
              <xsl:with-param name="date"
                              select="normalize-space(tns:SDate)"/>
            </xsl:call-template>
          </ns0:sdate>
          <ns0:actionCode>
            <xsl:value-of select="tns:ActionCode"/>
          </ns0:actionCode>
          <ns0:attribute1>
            <xsl:value-of select="tns:Reserved1"/>
          </ns0:attribute1>
          <ns0:providerType>
            <xsl:value-of select="tns:ProviderType"/>
          </ns0:providerType>
          <ns0:attribute2>
            <xsl:value-of select="tns:Reserved2"/>
          </ns0:attribute2>
          <ns0:storeNum>
            <xsl:value-of select="tns:StoreNumber"/>
          </ns0:storeNum>
          <ns0:terminalNum>
            <xsl:value-of select="tns:TerminalNumber"/>
          </ns0:terminalNum>
          <ns0:trxType>
            <xsl:value-of select="tns:TransactionType"/>
          </ns0:trxType>
          <ns0:attribute3>
            <xsl:value-of select="tns:Reserved3"/>
          </ns0:attribute3>
          <ns0:attribute4>
            <xsl:value-of select="tns:Reserved4"/>
          </ns0:attribute4>
          <ns0:cardNum>
            <xsl:value-of select="tns:CardNumber"/>
          </ns0:cardNum>
          <ns0:attribute5>
            <xsl:value-of select="tns:Reserved5"/>
          </ns0:attribute5>
          <ns0:attribute6>
            <xsl:value-of select="tns:Reserved6"/>
          </ns0:attribute6>
        
        <xsl:if test='xp20:upper-case(tns:TransactionType) = "REFUND"'>
            <xsl:if test="string-length(tns:TrxAmount) != 0.0">
              <ns0:trxAmount>
                <xsl:value-of select="tns:TrxAmount div 100.0 * -(1.0)"/>
              </ns0:trxAmount>
            </xsl:if>
          </xsl:if>
          
          <xsl:if test='xp20:upper-case(tns:TransactionType) = "SALE"'>
            <xsl:if test="string-length(tns:TrxAmount) != 0.0">
              <ns0:trxAmount>
                <xsl:value-of select="tns:TrxAmount div 100.0"/>
              </ns0:trxAmount>
            </xsl:if>
          </xsl:if>
          
          <ns0:invoiceNum>
            <xsl:value-of select="tns:InvoiceNumber"/>
          </ns0:invoiceNum>
          <ns0:countryCode>
            <xsl:value-of select="tns:CountryCode"/>
          </ns0:countryCode>
          <ns0:currencyCode>
            <xsl:value-of select="tns:CurrencyCode"/>
          </ns0:currencyCode>
          <ns0:attribute7>
            <xsl:value-of select="tns:Reserved7"/>
          </ns0:attribute7>
          <ns0:attribute8>
            <xsl:value-of select="tns:Reserved8"/>
          </ns0:attribute8>
          <ns0:attribute9>
            <xsl:value-of select="tns:Reserved9"/>
          </ns0:attribute9>
          <ns0:attribute10>
            <xsl:value-of select="tns:Reserved10"/>
          </ns0:attribute10>
          <ns0:attribute11>
            <xsl:value-of select="tns:Reserved11"/>
          </ns0:attribute11>
          <ns0:attribute12>
            <xsl:value-of select="tns:Reserved12"/>
          </ns0:attribute12>
          <ns0:attribute13>
            <xsl:value-of select="tns:Reserved13"/>
          </ns0:attribute13>
          <ns0:attribute14>
            <xsl:value-of select="tns:Reserved14"/>
          </ns0:attribute14>
          <ns0:attribute15>
            <xsl:value-of select="tns:Reserved15"/>
          </ns0:attribute15>
          <ns0:attribute16>
            <xsl:value-of select="tns:Reserved16"/>
          </ns0:attribute16>
          <ns0:attribute17>
            <xsl:value-of select="tns:Reserved17"/>
          </ns0:attribute17>
          <ns0:attribute18>
            <xsl:value-of select="tns:Reserved18"/>
          </ns0:attribute18>
          <ns0:attribute19>
            <xsl:value-of select="tns:Reserved19"/>
          </ns0:attribute19>
          <ns0:attribute20>
            <xsl:value-of select="tns:Reserved20"/>
          </ns0:attribute20>
          <ns0:receiptNum>
            <xsl:value-of select="tns:ReceiptNum"/>
          </ns0:receiptNum>
          <ns0:attribute21>
            <xsl:value-of select="tns:Reserved21"/>
          </ns0:attribute21>
          <ns0:attribute22>
            <xsl:value-of select="tns:Reserved22"/>
          </ns0:attribute22>
          <ns0:authNum>
            <xsl:value-of select="tns:AuthorizationNumber"/>
          </ns0:authNum>
          <ns0:attribute23>
            <xsl:value-of select="tns:Reserved23"/>
          </ns0:attribute23>
          <ns0:attribute24>
            <xsl:value-of select="tns:Reserved24"/>
          </ns0:attribute24>
          <ns0:attribute25>
            <xsl:value-of select="tns:Reserved25"/>
          </ns0:attribute25>
          <ns0:attribute26>
            <xsl:value-of select="tns:Reserved26"/>
          </ns0:attribute26>
          <ns0:attribute27>
            <xsl:value-of select="tns:Reserved27"/>
          </ns0:attribute27>
          <ns0:attribute28>
            <xsl:value-of select="tns:Reserved28"/>
          </ns0:attribute28>
          <ns0:attribute29>
            <xsl:value-of select="tns:Reserved29"/>
          </ns0:attribute29>
          <ns0:attribute30>
            <xsl:value-of select="tns:Reserved30"/>
          </ns0:attribute30>
          <ns0:bankRecId>
            <xsl:value-of select="tns:BankRecId"/>
          </ns0:bankRecId>
          <ns0:attribute31>
            <xsl:value-of select="tns:Reserved31"/>
          </ns0:attribute31>
          <ns0:attribute32>
            <xsl:value-of select="tns:Reserved32"/>
          </ns0:attribute32>
          <ns0:trxDate>
                    <xsl:call-template name="formatDate">
                    <xsl:with-param name="date"
                              select="normalize-space(tns:TrxDate)"/>
            </xsl:call-template>
          </ns0:trxDate>
          <ns0:attribute33>
            <xsl:value-of select="tns:Reserved33"/>
          </ns0:attribute33>
          <ns0:attribute34>
            <xsl:value-of select="tns:Reserved34"/>
          </ns0:attribute34>
          <ns0:attribute35>
            <xsl:value-of select="tns:Reserved35"/>
          </ns0:attribute35>
          <ns0:processorId>
            <xsl:value-of select="tns:ProcessorID"/>
          </ns0:processorId>
          <xsl:if test="string-length(tns:NetworkFee) != 0.0">
            <ns0:networkFee>
              <xsl:value-of select="tns:NetworkFee div 100.0"/>
            </ns0:networkFee>
          </xsl:if>
          <xsl:if test="string-length(tns:AdjFee) != 0.0">
            <ns0:adjFee>
              <xsl:value-of select="tns:AdjFee div 100.0"/>
            </ns0:adjFee>
          </xsl:if>
          <ns0:adjDate>
            <xsl:call-template name="formatDate">
              <xsl:with-param name="date"
                              select="normalize-space(tns:AdjDate)"/>
            </xsl:call-template>
          </ns0:adjDate>
          <ns0:adjReasonCode>
            <xsl:value-of select="tns:AdjReasonCode"/>
          </ns0:adjReasonCode>
          <ns0:adjReasonDesc>
            <xsl:value-of select="tns:AdjReasonDescription"/>
          </ns0:adjReasonDesc>
          <ns0:rejReasonCode>
            <xsl:value-of select="tns:RejReasonCode"/>
          </ns0:rejReasonCode>
          <ns0:rejReasonDesc>
            <xsl:value-of select="tns:RejReasonDesc"/>
          </ns0:rejReasonDesc>
          <xsl:if test="string-length(tns:OtherFee1) != 0.0">
            <ns0:otherFee1>
              <xsl:value-of select="tns:OtherFee1 div 100.0"/>
            </ns0:otherFee1>
          </xsl:if>
          <xsl:if test="string-length(tns:OtherFee2) != 0.0">
            <ns0:otherFee2>
              <xsl:value-of select="tns:OtherFee2 div 100.0"/>
            </ns0:otherFee2>
          </xsl:if>
          
          <xsl:if test="string-length(tns:FundPercent) != 0.0">
          <ns0:fundPercent>
            <xsl:value-of select="tns:FundPercent div 100000.0"/>
          </ns0:fundPercent>
           </xsl:if>
          
          <ns0:refNum>
            <xsl:value-of select="tns:RefNumber"/>
          </ns0:refNum>
          
          <xsl:if test="string-length(tns:DisAmt) != 0.0">
          <ns0:disAmt>
            <xsl:value-of select="tns:DisAmt div 100.0"/>
          </ns0:disAmt>
          </xsl:if>
          
          <xsl:if test="string-length(tns:DisRate) != 0.0">
          <ns0:disRate>
            <xsl:value-of select="tns:DisRate div 100000.0"/>
          </ns0:disRate>
          </xsl:if>
          
          <xsl:if test="string-length(tns:ServiceRate) != 0.0">
          <ns0:serviceRate>
            <xsl:value-of select="tns:ServiceRate div 100000.0"/>
          </ns0:serviceRate>
           </xsl:if>
           
          <xsl:if test="string-length(tns:OtherRate1) != 0.0"> 
          <ns0:otherRate1>
            <xsl:value-of select="tns:OtherRate1 div 100000.0"/>
          </ns0:otherRate1>
          </xsl:if>
          
          <xsl:if test="string-length(tns:OtherRate2) != 0.0"> 
          <ns0:otherRate2>
            <xsl:value-of select="tns:OtherRate2 div 100000.0"/>
          </ns0:otherRate2>
          </xsl:if>
          
          <ns0:creationDate>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </ns0:creationDate>
          <ns0:createdBy>
            <xsl:text disable-output-escaping="no">3</xsl:text>
          </ns0:createdBy>
          <ns0:lastUpdateDate>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </ns0:lastUpdateDate>
          <ns0:lastUpdatedBy>
            <xsl:text disable-output-escaping="no">3</xsl:text>
          </ns0:lastUpdatedBy>
          <ns0:sequenceId998>
            <xsl:value-of select='orcl:sequence-next-val("XXFIN.xx_ce_ajb998_s","jdbc/bpel_ebs_apps_ds")'/>
          </ns0:sequenceId998>
          <ns0:ipayBatchNum>
            <xsl:value-of select="tns:iPaymentBatchNumber"/>
          </ns0:ipayBatchNum>

        </ns0:XxCeAjb998>
      </xsl:for-each>
    </ns0:XxCeAjb998Collection>
  </xsl:template>
   
  <!--  User Defined Templates  -->
   
  <xsl:template name="formatDate">
    <xsl:param name="date"/>
    <xsl:if test="normalize-space($date) > '0'">
      <xsl:variable name="mm" select="substring($date, 1, 2)"/>
      <xsl:variable name="dd" select="substring($date, 3, 2)"/>
      <xsl:variable name="yyyy" select="substring($date, 5, 4)"/>
      <xsl:variable name="newDate" select="concat($yyyy, '-', $mm, '-', $dd)"/>
      <xsl:value-of select="$newDate"/>
    </xsl:if>
  </xsl:template>
  
    <xsl:template name="formatDatesdate">
    <xsl:param name="date"/>
    <xsl:if test="normalize-space($date) > '0'">
      <xsl:variable name="yyyy" select="substring($date, 1, 4)"/>
      <xsl:variable name="mm" select="substring($date, 5, 2)"/>
      <xsl:variable name="dd" select="substring($date, 7, 2)"/>
      <xsl:variable name="newDate" select="concat($yyyy, '-', $mm, '-', $dd)"/>
      <xsl:value-of select="$newDate"/>
    </xsl:if>
  </xsl:template>
  
</xsl:stylesheet>

