<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="PeopleSoftHRGarnish.xsd"/>
      <rootElement name="container" namespace="http://TargetNamespace.com/HRGarnish"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="http://chilsoa01d.na.odcorp.net:7778/orabpel/xmllib/eaixml/oagis/v91/message/bod/ProcessInvoice.xsd"/>
      <rootElement name="ProcessInvoice" namespace="http://www.openapplications.org/oagis/9"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.1.0(build 061009.0802) AT [MON JUL 23 11:53:31 EDT 2007]. -->
?>
<xsl:stylesheet version="1.0" xmlns:tns="http://TargetNamespace.com/HRGarnish"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns4="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:ns8="http://www.openapplications.org/oagis/9/officedepot/1/codelists"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:ns6="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:ns3="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:ns1="http://www.openapplications.org/oagis/9/IANAMIMEMediaTypes:2003"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ns2="http://www.openapplications.org/oagis/9/codelists"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:od="http://www.openapplications.org/oagis/9/officedepot/1"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:ns0="http://www.openapplications.org/oagis/9"
                xmlns:ns5="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:ns7="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                exclude-result-prefixes="xsl tns xsd nxsd ns4 ns8 ns6 ns3 ns1 ns2 od ns0 ns5 ns7 bpws ehdr hwf xp20 ora ids orcl">
  <xsl:template match="/">
    <ns0:ProcessInvoice>
      <ns0:DataArea>
    <xsl:if test = "not(/tns:container/tns:InvoiceHeader)">
    <ns0:Invoice>
      <ns0:InvoiceHeader>
      <od:Batch>
                 <ns0:FileName>
                    <xsl:value-of select="orcl:left-trim(orcl:right-trim(/tns:container/tns:Trailer/tns:FileName))"/>
                  </ns0:FileName>
                <ns0:CreationDateTime>
                  <xsl:value-of select="concat(/tns:container/tns:Trailer/tns:CreationDate,/tns:container/tns:Trailer/tns:CreationTime)"/>
                </ns0:CreationDateTime>
                <od:NumberOfRecords>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(/tns:container/tns:Trailer/tns:TotalRecords))"/>
                </od:NumberOfRecords>
                <ns0:TotalAmount>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(/tns:container/tns:Trailer/tns:TotalAmount))"/>
                </ns0:TotalAmount>
              </od:Batch>
    </ns0:InvoiceHeader>          
    </ns0:Invoice>
      </xsl:if>
        <xsl:for-each select="/tns:container/tns:InvoiceHeader">
          <ns0:Invoice>
            <ns0:InvoiceHeader>
              <ns0:DocumentReference>
                <ns0:DocumentID>
                  <ns0:ID>
                    <xsl:value-of select="tns:InvoiceID"/>
                  </ns0:ID>
                </ns0:DocumentID>
                <ns0:DocumentDateTime>
                <xsl:call-template name="formatDate">
                   <xsl:with-param name="date" select="normalize-space(tns:WeekendDate)"/>
                 </xsl:call-template>
               </ns0:DocumentDateTime>
              </ns0:DocumentReference>
              <ns0:TotalAmount>
                <xsl:value-of select="concat(tns:AmountSign,orcl:left-trim(orcl:right-trim(tns:Amount)))"/>
              </ns0:TotalAmount>
              <ns0:SupplierParty>
                <ns0:PartyIDs>
                  <ns0:ID>
                    <xsl:value-of select="concat('0',normalize-space(tns:VendorID))"/>
                  </ns0:ID>
                </ns0:PartyIDs>
              </ns0:SupplierParty>
              <ns0:Charge>
                <ns0:CurrencyExchangeRate>
                  <ns0:SourceCurrencyCode>
                    <xsl:value-of select="tns:Lines/tns:Line-Invoice/tns:CurrencyCode"/>
                  </ns0:SourceCurrencyCode>
                </ns0:CurrencyExchangeRate>
              </ns0:Charge>
              <od:SourceSystemCode>
                <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:Source))"/>
              </od:SourceSystemCode>
              <od:Batch>
                 <ns0:FileName>
                    <xsl:value-of select="orcl:left-trim(orcl:right-trim(../tns:Trailer/tns:FileName))"/>
                  </ns0:FileName>
                <ns0:CreationDateTime>
                  <xsl:value-of select="concat(../tns:Trailer/tns:CreationDate,../tns:Trailer/tns:CreationTime)"/>
                </ns0:CreationDateTime>
                <od:NumberOfRecords>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(../tns:Trailer/tns:TotalRecords))"/>
                </od:NumberOfRecords>
                <ns0:TotalAmount>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(../tns:Trailer/tns:TotalAmount))"/>
                </ns0:TotalAmount>
              </od:Batch>
            </ns0:InvoiceHeader>
            <xsl:for-each select="tns:Lines/tns:Line-Invoice">
            <ns0:InvoiceLine>
              <ns0:Description>
                <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:AccountInfo))"/>
              </ns0:Description>
              <ns0:TotalAmount>
              <xsl:value-of select="concat(tns:AmountSign,orcl:left-trim(orcl:right-trim(tns:Amount)))"/>
              </ns0:TotalAmount>
              <ns0:Distribution>
                <ns0:GLNominalAccount>
                  <xsl:value-of select="tns:AccoutingCode"/>
                </ns0:GLNominalAccount>
                <ns0:GLAccount>
                  <ns0:GLElement>
                    <ns0:Element>
                      <xsl:attribute name="sequenceName">
                        <xsl:text disable-output-escaping="no">Company</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="substring(tns:AccoutingCode,1,4)"/>
                    </ns0:Element>
                      <ns0:Element>
                      <xsl:attribute name="sequenceName">
                        <xsl:text disable-output-escaping="no">CostCenter</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="substring(tns:AccoutingCode,6,5)"/>
                    </ns0:Element>
                    <ns0:Element>
                      <xsl:attribute name="sequenceName">
                        <xsl:text disable-output-escaping="no">Location</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="substring(tns:AccoutingCode,12,8)"/>
                    </ns0:Element> 
                     <ns0:Element>
                      <xsl:attribute name="sequenceName">
                        <xsl:text disable-output-escaping="no">Account</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="substring(tns:AccoutingCode,21,6)"/>
                    </ns0:Element> 
                     <ns0:Element>
                      <xsl:attribute name="sequenceName">
                        <xsl:text disable-output-escaping="no">LineOfBusiness</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="substring(tns:AccoutingCode,33,2)"/>
                    </ns0:Element>   
                  </ns0:GLElement>
                </ns0:GLAccount>
              </ns0:Distribution>
              <od:Garnishment>
                <od:TypeCode>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:GarnishmentType))"/>
                </od:TypeCode>
                <od:CaseID>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:CaseIdentifier))"/>
                </od:CaseID>
                <od:State>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:State))"/>
                </od:State>
                <od:NonCustodialParentSSN>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:ParentalSSN))"/>
                </od:NonCustodialParentSSN>
                <od:NonCustodialParentName>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:ParentName))"/>
                </od:NonCustodialParentName>
                <od:FIPSCode>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:FIPSCode))"/>
                </od:FIPSCode>
                <od:MedicalSupportIndicator>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:MSI))"/>
                </od:MedicalSupportIndicator>
                <od:EmploymentTerminationIndicator>
                  <xsl:value-of select="orcl:left-trim(orcl:right-trim(tns:EmpTermIndicator))"/>
                </od:EmploymentTerminationIndicator>
              </od:Garnishment>
            </ns0:InvoiceLine>
             </xsl:for-each>
          </ns0:Invoice>
        </xsl:for-each>
      </ns0:DataArea>
    </ns0:ProcessInvoice>
  </xsl:template>
  
    <xsl:template name="formatDate">
    <xsl:param name="date"/>
    <xsl:if test="normalize-space($date) > '0'">
      <xsl:variable name="yy" select="substring($date, 1, 2)"/>
      <xsl:variable name="mm" select="substring($date, 3, 2)"/>
      <xsl:variable name="dd" select="substring($date, 5, 2)"/>
      <xsl:variable name="newDate" select="concat('20',$yy,'-', $mm, '-', $dd  )"/>
      <xsl:value-of select="$newDate"/>
    </xsl:if>
  </xsl:template>
  
</xsl:stylesheet>
