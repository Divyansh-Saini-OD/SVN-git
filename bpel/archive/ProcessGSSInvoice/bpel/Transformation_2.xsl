<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="../../../../Office%20Depot/BPEL_Projects/ProcessGSSInvoice/bpel/APInvoiceInboundNAGSS.xsd"/>
      <rootElement name="container" namespace="http://officedepot.simplify.com/FTPInvoiceInbound"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="http://chilsoa01d.na.odcorp.net:7778/orabpel/xmllib/eaixml/oagis/v91/message/bod/ProcessInvoice.xsd"/>
      <rootElement name="ProcessInvoice" namespace="http://www.openapplications.org/oagis/9"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [TUE SEP 18 11:04:20 EDT 2007]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:ns5="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns8="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:ns4="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:ns1="http://www.openapplications.org/oagis/9/officedepot/1/codelists"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:ns2="http://www.openapplications.org/oagis/9/IANAMIMEMediaTypes:2003"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ns3="http://www.openapplications.org/oagis/9/codelists"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:tns="http://officedepot.simplify.com/FTPInvoiceInbound"
                xmlns:ns7="http://www.openapplications.org/oagis/9/officedepot/1"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:ns0="http://www.openapplications.org/oagis/9"
                xmlns:ns6="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:ns9="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                exclude-result-prefixes="xsl xsd nxsd tns ns5 ns8 ns4 ns1 ns2 ns3 ns7 ns0 ns6 ns9 bpws ehdr hwf xp20 xref ora ids orcl">
  <xsl:template match="/">
    <ns0:ProcessInvoice>
     <ns0:DataArea>
   <xsl:if test = "not(/tns:container/tns:InvoiceHeader)">
    <ns0:Invoice>
      	<ns0:InvoiceHeader>
            <ns7:Batch>
                <ns0:FileName>
                  <xsl:value-of select="normalize-space(/tns:container/tns:Trailer/tns:FileName)"/>
                </ns0:FileName>
                <ns0:CreationDateTime>
                  <xsl:value-of select="concat(/tns:container/tns:Trailer/tns:CreationDate,/tns:container/tns:Trailer/tns:CreationTime)"/>
                </ns0:CreationDateTime>
                <ns7:NumberOfRecords>
                  <xsl:value-of select="(/tns:container/tns:Trailer/tns:NumberOfRecords)"/>
                </ns7:NumberOfRecords>
		    <xsl:if test="normalize-space(/tns:container/tns:Trailer/tns:TotalInvoiceAmount) > '0'">
                <ns0:TotalAmount>
                  <xsl:value-of select="concat(/tns:container/tns:Trailer/tns:TotalInvoiceAmountSign,/tns:container/tns:Trailer/tns:TotalInvoiceAmount div 100)"/>
                </ns0:TotalAmount>
		    </xsl:if>
                <ns0:Communication>
                  <ns0:URI>
                    <xsl:value-of select="(/tns:container/tns:Trailer/tns:VendorEmailAddress)"/>
                  </ns0:URI>
                </ns0:Communication>
              </ns7:Batch>
       </ns0:InvoiceHeader>
     </ns0:Invoice>
   </xsl:if>
      <xsl:for-each select="/tns:container/tns:InvoiceHeader">
          <ns0:Invoice>
            <ns0:InvoiceHeader>
              <ns0:DocumentReference>
                <ns0:DocumentID>
                  <ns0:ID>
                    <xsl:value-of select="tns:InvoiceNumber"/>
                  </ns0:ID>
                </ns0:DocumentID>
                <ns0:DocumentDateTime>
                  <xsl:call-template name="formatDate">
                    <xsl:with-param name="date"
                                    select="normalize-space(tns:InvoiceDate)"/>
                  </xsl:call-template>
                </ns0:DocumentDateTime>
              </ns0:DocumentReference>

             <xsl:if test="normalize-space(tns:GrossAmount) > '0'">
              <ns0:TotalAmount>
                <xsl:value-of select="concat(normalize-space(tns:GrossAmountSign),normalize-space(tns:GrossAmount div 100))"/>
              </ns0:TotalAmount>
              </xsl:if>

              <ns0:SupplierParty>
                <ns0:PartyIDs>
                  <ns0:ID>
                    <xsl:value-of select="normalize-space(tns:ODGlobalVendorID)"/>
                  </ns0:ID>
                </ns0:PartyIDs>
              </ns0:SupplierParty>
              <ns0:CustomerParty>
                <ns0:Location>
                  <ns0:Name>
                    <xsl:value-of select="normalize-space(tns:VendorLocation)"/>
                  </ns0:Name>
                </ns0:Location>
              </ns0:CustomerParty>
              <ns7:SourceSystemCode>
                <xsl:value-of select="tns:DataSource"/>
              </ns7:SourceSystemCode>
              <ns7:Batch>
                <ns0:FileName>
                  <xsl:value-of select="normalize-space(../tns:Trailer/tns:FileName)"/>
                </ns0:FileName>
                <ns0:CreationDateTime>
                  <xsl:value-of select="concat(../tns:Trailer/tns:CreationDate,../tns:Trailer/tns:CreationTime)"/>
                </ns0:CreationDateTime>
                <ns7:NumberOfRecords>
                  <xsl:value-of select="../tns:Trailer/tns:NumberOfRecords"/>
                </ns7:NumberOfRecords>
		    
		    <xsl:if test="normalize-space(../tns:Trailer/tns:TotalInvoiceAmount) > '0'">
                <ns0:TotalAmount>
                  <xsl:value-of select="concat(../tns:Trailer/tns:TotalInvoiceAmountSign,../tns:Trailer/tns:TotalInvoiceAmount div 100)"/>
                </ns0:TotalAmount>
		    </xsl:if>
                <ns0:Communication>
                  <ns0:URI>
                    <xsl:value-of select="../tns:Trailer/tns:VendorEmailAddress"/>
                  </ns0:URI>
                </ns0:Communication>
              </ns7:Batch>
              <xsl:choose>
                  <xsl:when test='orcl:right-trim(tns:GSTTaxFlag) = "N"'>
                    <ns0:Tax>
                      <xsl:attribute name="type">
                        <xsl:text disable-output-escaping="no">NGST</xsl:text>
                      </xsl:attribute> 
                    </ns0:Tax>
                  </xsl:when>
                  <xsl:when test='orcl:right-trim(tns:GSTTaxFlag) = "Y"'>
                    <ns0:Tax>
                      <xsl:attribute name="type">
                        <xsl:text disable-output-escaping="no">GST</xsl:text>
                      </xsl:attribute> 
                    </ns0:Tax>
                  </xsl:when>
                  <xsl:when test='normalize-space(tns:GSTTaxFlag) = ""'>
                    <ns0:Tax>
                      <xsl:attribute name="type">
                        <xsl:text disable-output-escaping="no">NGST</xsl:text>
                      </xsl:attribute> 
                    </ns0:Tax>
                  </xsl:when>                  
             </xsl:choose>    
            </ns0:InvoiceHeader>
            <xsl:for-each select="tns:Lines/tns:Line-Invoice">
         <ns0:InvoiceLine>
        <ns0:LineNumber>
          <xsl:value-of select="normalize-space(tns:LineNumber)"/>
        </ns0:LineNumber>
          <ns0:DocumentReference>
          <ns0:DocumentID>
              <xsl:value-of select="normalize-space(tns:InvoiceDistributionLineType)"/>
           </ns0:DocumentID>
        </ns0:DocumentReference>        
            <ns0:Description>
              <xsl:value-of select="normalize-space(tns:GLDescription)"/>
            </ns0:Description>

        <xsl:if test="normalize-space(tns:MDSEAmount) > '0'">
        <ns0:TotalAmount>
          <xsl:value-of select="concat(normalize-space(tns:MDSEAmountSign), normalize-space(tns:MDSEAmount div 100))"/>
        </ns0:TotalAmount>
	  </xsl:if>
        <ns0:Tax>
          <ns0:TaxJurisdicationCodes>
            <ns0:Code>
              <xsl:value-of select="normalize-space(tns:TaxCode)"/>
            </ns0:Code>
          </ns0:TaxJurisdicationCodes>

         <xsl:if test="normalize-space(tns:TaxAmount) > '0'">
         <ns0:Amount>
            <xsl:value-of select="normalize-space(tns:TaxAmount div 100)"/>
          </ns0:Amount>
         </xsl:if>
        </ns0:Tax>
        
        <ns0:Distribution>
             <ns0:EnterpriseUnit>
                    <ns0:GLAccount>
                      <ns0:GLElement>
                          <ns0:Element>
                            <xsl:attribute name="sequence">
                              <xsl:text disable-output-escaping="no">1</xsl:text>
                            </xsl:attribute>
                            <xsl:attribute name="sequenceName">
                              <xsl:text disable-output-escaping="no">Account</xsl:text>
                            </xsl:attribute>
                            <xsl:value-of select="tns:GLAccount"/>
                          </ns0:Element>                      
                          <ns0:Element>
                            <xsl:attribute name="sequence">
                              <xsl:text disable-output-escaping="no">2</xsl:text>
                            </xsl:attribute>
                            <xsl:attribute name="sequenceName">
                              <xsl:text disable-output-escaping="no">Location</xsl:text>
                            </xsl:attribute>
                            <xsl:value-of select="tns:GLLocation"/>
                          </ns0:Element>
                          <ns0:Element>
                            <xsl:attribute name="sequence">
                              <xsl:text disable-output-escaping="no">3</xsl:text>
                            </xsl:attribute>
                            <xsl:attribute name="sequenceName">
                              <xsl:text disable-output-escaping="no">Department</xsl:text>
                            </xsl:attribute>                      
                            <xsl:value-of select="tns:GLDepartment"/>
                          </ns0:Element>
                          <ns0:Element>
                            <xsl:attribute name="sequence">
                              <xsl:text disable-output-escaping="no">4</xsl:text>
                            </xsl:attribute>
                            <xsl:attribute name="sequenceName">
                              <xsl:text disable-output-escaping="no">BusinessUnit</xsl:text>
                            </xsl:attribute>                      
                            <xsl:value-of select="tns:GLBusinessUnit"/>
                          </ns0:Element>
                          <ns0:Element>
                            <xsl:attribute name="sequence">
                              <xsl:text disable-output-escaping="no">5</xsl:text>
                            </xsl:attribute>
                            <xsl:attribute name="sequenceName">
                              <xsl:text disable-output-escaping="no">Company</xsl:text>
                            </xsl:attribute>
                            <xsl:value-of select="tns:GLCompany"/>
                          </ns0:Element>
                      </ns0:GLElement>
                    </ns0:GLAccount>
                  </ns0:EnterpriseUnit>
          <ns0:ProjectReference>
            <ns0:ID>
              <xsl:value-of select="normalize-space(tns:OracleProjectNumber)"/>
            </ns0:ID>
            <ns0:ActivityID>
              <xsl:value-of select="normalize-space(tns:TaskNumber)"/>
            </ns0:ActivityID>
          </ns0:ProjectReference>
          <ns6:ExpenditureOrganizationCode>
            <xsl:value-of select="/tns:InvoiceInbound/tns:DetailRecord/tns:ExpenditureORGName"/>
          </ns6:ExpenditureOrganizationCode>
          <ns6:ExpenditureTypeCode>
            <xsl:value-of select="/tns:InvoiceInbound/tns:DetailRecord/tns:ExpenditureType"/>
          </ns6:ExpenditureTypeCode>          
        </ns0:Distribution>

         <xsl:if test="normalize-space(tns:FreightAmount) > '0'">
          <ns6:FreightAdjustment>
            <xsl:value-of select="normalize-space(normalize-space(tns:FreightAmount div 100))"/>
        </ns6:FreightAdjustment>
        </xsl:if>
         </ns0:InvoiceLine>
         </xsl:for-each>
          </ns0:Invoice>
      </xsl:for-each>
     </ns0:DataArea>
    </ns0:ProcessInvoice>
  </xsl:template>
   
  <!--  User Defined Templates  -->
   
  <xsl:template name="formatDate">
    <xsl:param name="date"/>
    <xsl:variable name="currDateTime" select="xp20:current-dateTime()"/>
    <xsl:if test="normalize-space($date) > '0'">
      <xsl:variable name="mm" select="substring($date, 1, 2)"/>
      <xsl:variable name="dd" select="substring($date, 3, 2)"/>
      <xsl:variable name="yy"
                    select="concat(substring($currDateTime, 1, 2), substring($date, 5, 2))"/>
      <xsl:variable name="newDate" select="concat($yy,'-', $mm, '-', $dd)"/>
      <xsl:value-of select="concat($newDate, substring($currDateTime, 11))"/>
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>
