<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Tue Aug 12 21:06:57 IST 2008
  Author:  rajesh
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ConcurrentProgramStatus"
         targetNamespace="http://xmlns.oracle.com/ConcurrentProgramStatus"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns4="ODError"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns5="http://xmlns.oracle.com/ODTransactionLogger"
         xmlns:client="http://xmlns.oracle.com/ConcurrentProgramStatus"
         xmlns:ns6="http://xmlns.oracle.com/TransactionData"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/GetConcurrentProgramStatus/"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XX_BPEL_INTEGRATION_PKG/GET_CONCURRENT_REQUEST_STATUS/"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc">
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="client"
                     partnerLinkType="client:ConcurrentProgramStatus"
                     myRole="ConcurrentProgramStatusProvider"
                     partnerRole="ConcurrentProgramStatusRequester"/>
        <partnerLink myRole="ODErrorLoggerRequester" name="ODErrorLogger"
                     partnerRole="ODErrorLoggerProvider"
                     partnerLinkType="ns3:ODErrorLogger"/>
        <partnerLink myRole="ODTransactionLoggerRequester"
                     name="ODTransactionLogger"
                     partnerRole="ODTransactionLoggerProvider"
                     partnerLinkType="ns5:ODTransactionLogger"/>
        <partnerLink name="GetConcurrentProgramStatus"
                     partnerRole="GetConcurrentProgramStatus_role"
                     partnerLinkType="ns1:GetConcurrentProgramStatus_plt"/>
    </partnerLinks>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable"
                  messageType="client:ConcurrentProgramStatusRequestMessage"/>
        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable"
                  messageType="client:ConcurrentProgramStatusResponseMessage"/>
        <variable name="GetConcurrentProgramStatus_InputVariable"
                  messageType="ns1:args_in_msg"/>
        <variable name="GetConcurrentProgramStatus_OutputVariable"
                  messageType="ns1:args_out_msg"/>
        <variable name="TimeoutVar" type="xsd:string"/>
        <variable name="ErrorMessageText" type="xsd:string"/>
        <variable name="invkCatchAll_initiate"
                  messageType="ns3:ODErrorLoggerRequestMessage"/>
        <variable name="Cntr" type="xsd:int"/>
        <variable name="LogTransactionInput"
                  messageType="ns5:ODTransactionLoggerRequestMessage"/>
        <variable name="xmlFragment" type="xsd:string"/>
        <variable name="ProcessHeader" type="xsd:string"/>
        <variable name="LCntr" type="xsd:int"/>
        <variable name="waitTime" type="xsd:string"/>
    </variables>
    <faultHandlers>
        <catchAll>
            <sequence name="Sequence_5">
                <assign name="asnCatchAll">
                    <copy>
                        <from expression="concat('Error encountered in getting status  ConcurrentProgram  ', bpws:getVariableData('inputVariable','payload','/client:ConcurrentProgramStatusProcessRequest/client:Request_Id'))"/>
                        <to variable="ErrorMessageText"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getInstanceId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessId"/>
                    </copy>
                    <copy>
                        <from expression="ora:getDomainId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessDomain"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessURL()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:ProcessInfo/ns4:SystemName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getCurrentDateTime()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorDateTime"/>
                    </copy>
                    <copy>
                        <from expression="'Catch All on the Main Sequence'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessStep"/>
                    </copy>
                    <copy>
                        <from expression="ora:getFaultName()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorCode"/>
                    </copy>
                    <copy>
                        <from variable="ErrorMessageText"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorDescription"/>
                    </copy>
                    <copy>
                        <from expression="ora:getFaultAsString()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorText"/>
                    </copy>
                    <copy>
                        <from expression="'system'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorType"/>
                    </copy>
                    <copy>
                        <from expression="'fatal'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorSeverity"/>
                    </copy>
                    <copy>
                        <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns4:ErrorData/ns4:Notification/ns4:sendNotification"/>
                    </copy>
                </assign>
                <assign name="CopyTransactionData">
                    <copy>
                        <from expression="'Error'"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:ProcessInfo/ns6:ProcessStatus"/>
                    </copy>
                    <copy>
                        <from expression="ora:getCurrentDateTime()"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:ProcessInfo/ns6:transactionEndTime"/>
                    </copy>
                    <copy>
                        <from>
                            <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                                <EntityID EntityType="RequestID"/>
                                <EntityID EntityType="Status"/>
                                <EntityID EntityType="Phase"/>
                                <EntityID EntityType="PackageName"/>
                            </EntiltyList>
                        </from>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;RequestID&quot;>', bpws:getVariableData('inputVariable','payload','/client:ConcurrentProgramStatusProcessRequest/client:Request_Id'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList/ns6:EntityID[1]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;Status&quot;>', bpws:getVariableData('GetConcurrentProgramStatus_OutputVariable','OutputParameters','/ns2:OutputParameters/ns2:X_STATUS_CODE'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList/ns6:EntityID[2]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;Phase&quot;>', bpws:getVariableData('GetConcurrentProgramStatus_OutputVariable','OutputParameters','/ns2:OutputParameters/ns2:X_PHASE_CODE'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList/ns6:EntityID[3]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;PackageName&quot;>', ' XX_BPEL_INTEGRATION_PKG.GET_CONCURRENT_REQUEST_STATUS ', '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList/ns6:EntityID[4]"/>
                    </copy>
                </assign>
                <invoke name="LogTransaction" partnerLink="ODTransactionLogger"
                        portType="ns5:ODTransactionLogger" operation="initiate"
                        inputVariable="LogTransactionInput"/>
                <invoke name="InvOdErrorLogger" partnerLink="ODErrorLogger"
                        portType="ns3:ODErrorLogger" operation="initiate"
                        inputVariable="invkCatchAll_initiate"/>
                <invoke name="callbackClient" partnerLink="client"
                        portType="client:ConcurrentProgramStatusCallback"
                        operation="onResult" inputVariable="outputVariable"/>
                <terminate name="Terminate_1"/>
            </sequence>
        </catchAll>
    </faultHandlers>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in ConcurrentProgramStatus.wsdl) -->
        <receive name="receiveInput" partnerLink="client"
                 portType="client:ConcurrentProgramStatus" operation="initiate"
                 variable="inputVariable" createInstance="yes"/>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <scope name="LogTransactionStart">
            <variables>
                <variable name="xmlFragment" type="xsd:string"/>
            </variables>
            <sequence name="Sequence_8">
                <assign name="CopyTransactionData">
                    <copy>
                        <from expression="ora:getDomainId()"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:ProcessInfo/ns6:Domain"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessId()"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:ProcessInfo/ns6:ProcessName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getInstanceId()"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:ProcessInfo/ns6:InstanceId"/>
                    </copy>
                    <copy>
                        <from expression="'Start'"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:ProcessInfo/ns6:ProcessStatus"/>
                    </copy>
                    <copy>
                        <from expression="'Concurrent Program Status'"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:MessageDetails/ns6:MessageOperation"/>
                    </copy>
                    <copy>
                        <from expression="ora:getCurrentDateTime()"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:MessageDetails/ns6:MessageDateTime"/>
                    </copy>
                    <copy>
                        <from expression="ora:getCurrentDateTime()"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:ProcessInfo/ns6:transactionStartTime"/>
                    </copy>
                    <copy>
                        <from>
                            <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                                <EntityID EntityType="RequestID"/>
                                <EntityID EntityType="ChildRequest"/>
                            </EntiltyList>
                        </from>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;RequestID&quot;>', bpws:getVariableData('inputVariable','payload','/client:ConcurrentProgramStatusProcessRequest/client:Request_Id'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList/ns6:EntityID[1]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;ChildRequest&quot;>', bpws:getVariableData('inputVariable','payload','/client:ConcurrentProgramStatusProcessRequest/client:Child_Request'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList/ns6:EntityID[2]"/>
                    </copy>
                    <copy>
                        <from expression="'BPEL'"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:ProcessInfo/ns6:TradingPartnerDetails/ns6:TPFrom"/>
                    </copy>
                    <copy>
                        <from expression="'EBS'"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:ProcessInfo/ns6:TradingPartnerDetails/ns6:TPTo"/>
                    </copy>
                </assign>
                <invoke name="LogTransaction" partnerLink="ODTransactionLogger"
                        portType="ns5:ODTransactionLogger" operation="initiate"
                        inputVariable="LogTransactionInput"/>
            </sequence>
        </scope>
        <scope name="SetProcessHeader">
            <sequence name="Sequence_9">
                <assign name="initializeInstanceTitle">
                    <copy>
                        <from expression="substring(concat(&quot;Monitoring Request ID: &quot;, bpws:getVariableData('inputVariable','payload','/client:ConcurrentProgramStatusProcessRequest/client:Request_Id')),1,50)"/>
                        <to variable="ProcessHeader"/>
                    </copy>
                </assign>
                <bpelx:exec name="setTitleCode" language="java" version="1.5">
                    <![CDATA[try {                  
  String title = (String)getVariableData("ProcessHeader");                  
  setTitle(title);                  
  addAuditTrailEntry(title) ;                  
} catch (Exception ex) {                  
  addAuditTrailEntry(ex.toString());                  
  ex.printStackTrace();                  
}]]>
                </bpelx:exec>
            </sequence>
        </scope>
        <assign name="ConcurrentProgramStatusRequest">
            <copy>
                <from expression="'F'"/>
                <to variable="GetConcurrentProgramStatus_OutputVariable"
                    part="OutputParameters"
                    query="/ns2:OutputParameters/ns2:X_PHASE_CODE"/>
            </copy>
            <copy>
                <from variable="inputVariable" part="payload"
                      query="/client:ConcurrentProgramStatusProcessRequest/client:Request_Id"/>
                <to variable="GetConcurrentProgramStatus_InputVariable"
                    part="InputParameters"
                    query="/ns2:InputParameters/ns2:P_REQUEST_ID"/>
            </copy>
            <copy>
                <from variable="inputVariable" part="payload"
                      query="/client:ConcurrentProgramStatusProcessRequest/client:Child_Request"/>
                <to variable="GetConcurrentProgramStatus_InputVariable"
                    part="InputParameters"
                    query="/ns2:InputParameters/ns2:P_CHILD_REQUESTS"/>
            </copy>
            <copy>
                <from expression="'N'"/>
                <to variable="TimeoutVar"/>
            </copy>
            <copy>
                <from expression="0"/>
                <to variable="Cntr"/>
            </copy>
            <copy>
                <from expression='ora:doc("${server_url}/xmllib/fin/GlobalParameters.xml","/GlobalParameters/ConcurrentProgramStatus/Counter")'/>
                <to variable="LCntr"/>
            </copy>
            <copy>
                <from expression='ora:doc("${server_url}/xmllib/fin/GlobalParameters.xml","/GlobalParameters/ConcurrentProgramStatus/WaitTime")'/>
                <to variable="waitTime"/>
            </copy>
        </assign>
        <while name="While_2"
               condition="(bpws:getVariableData('GetConcurrentProgramStatus_OutputVariable','OutputParameters','/ns2:OutputParameters/ns2:X_PHASE_CODE') !='C') and (bpws:getVariableData('Cntr') &lt; bpws:getVariableData('LCntr') )">
            <sequence name="Sequence_7">
                <invoke name="GetConcurrentProgramStatus"
                        partnerLink="GetConcurrentProgramStatus"
                        portType="ns1:GetConcurrentProgramStatus_ptt"
                        operation="GetConcurrentProgramStatus"
                        inputVariable="GetConcurrentProgramStatus_InputVariable"
                        outputVariable="GetConcurrentProgramStatus_OutputVariable"/>
                <switch name="CheckStausCode">
                    <case condition="(bpws:getVariableData('GetConcurrentProgramStatus_OutputVariable','OutputParameters','/ns2:OutputParameters/ns2:X_PHASE_CODE') ='C')">
                        <empty name="Empty"/>
                    </case>
                    <otherwise>
                        <wait name="Wait_2"
                              for="bpws:getVariableData('waitTime')"/>
                    </otherwise>
                </switch>
                <assign name="AssignCntr">
                    <copy>
                        <from expression="bpws:getVariableData('Cntr') + 1"/>
                        <to variable="Cntr"/>
                    </copy>
                </assign>
            </sequence>
        </while>
        <switch name="CheckPhaseCode">
            <case condition="(bpws:getVariableData('GetConcurrentProgramStatus_OutputVariable','OutputParameters','/ns2:OutputParameters/ns2:X_PHASE_CODE')  = 'C' ) and (bpws:getVariableData('GetConcurrentProgramStatus_OutputVariable','OutputParameters','/ns2:OutputParameters/ns2:X_STATUS_CODE')='C')">
                <bpelx:annotation>
                    <bpelx:pattern>Set Success</bpelx:pattern>
                </bpelx:annotation>
                <assign name="SetSuccess">
                    <copy>
                        <from expression="'SUCCESS'"/>
                        <to variable="outputVariable" part="payload"
                            query="/client:ConcurrentProgramStatusProcessResponse/client:result"/>
                    </copy>
                </assign>
            </case>
            <otherwise>
                <sequence name="Sequence_6">
                    <switch name="Switch_1">
                        <case condition="bpws:getVariableData('GetConcurrentProgramStatus_OutputVariable','OutputParameters','/ns2:OutputParameters/ns2:X_ERROR_DESC') = ''">
                            <assign name="AssErrWaitTime">
                                <copy>
                                    <from expression="'Exceeded the maximum Wait Time'"/>
                                    <to variable="GetConcurrentProgramStatus_OutputVariable"
                                        part="OutputParameters"
                                        query="/ns2:OutputParameters/ns2:X_ERROR_DESC"/>
                                </copy>
                            </assign>
                        </case>
                        <otherwise>
                            <empty name="Empty_1"/>
                        </otherwise>
                    </switch>
                    <assign name="SetFailure">
                        <copy>
                            <from expression="'ERROR'"/>
                            <to variable="outputVariable" part="payload"
                                query="/client:ConcurrentProgramStatusProcessResponse/client:result"/>
                        </copy>
                        <copy>
                            <from expression="concat('Error Encountered :- ', bpws:getVariableData('GetConcurrentProgramStatus_OutputVariable','OutputParameters','/ns2:OutputParameters/ns2:X_ERROR_DESC'))"/>
                            <to variable="outputVariable" part="payload"
                                query="/client:ConcurrentProgramStatusProcessResponse/client:Error_Desc"/>
                        </copy>
                    </assign>
                    <throw name="Throw" faultName="bpws:selectionFailure"
                           faultVariable="GetConcurrentProgramStatus_OutputVariable"/>
                </sequence>
            </otherwise>
        </switch>
        <scope name="LogTransactionEnd">
            <variables>
                <variable name="xmlFragment" type="xsd:string"/>
            </variables>
            <sequence name="Sequence_9">
                <assign name="LogTransactionInput">
                    <copy>
                        <from expression="'Success'"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:ProcessInfo/ns6:ProcessStatus"/>
                    </copy>
                    <copy>
                        <from expression="ora:getCurrentDateTime()"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:ProcessInfo/ns6:transactionEndTime"/>
                    </copy>
                    <copy>
                        <from>
                            <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                                <EntityID EntityType="RequestID"/>
                                <EntityID EntityType="Status"/>
                                <EntityID EntityType="Phase"/>
                                <EntityID EntityType="PackageName"/>
                            </EntiltyList>
                        </from>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;RequestID&quot;>', bpws:getVariableData('inputVariable','payload','/client:ConcurrentProgramStatusProcessRequest/client:Request_Id'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList/ns6:EntityID[1]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;Status&quot;>', bpws:getVariableData('GetConcurrentProgramStatus_OutputVariable','OutputParameters','/ns2:OutputParameters/ns2:X_STATUS_CODE'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList/ns6:EntityID[2]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;Phase&quot;>', bpws:getVariableData('GetConcurrentProgramStatus_OutputVariable','OutputParameters','/ns2:OutputParameters/ns2:X_PHASE_CODE'), '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList/ns6:EntityID[3]"/>
                    </copy>
                    <copy>
                        <from expression="concat('&lt;EntityID EntityType=&quot;PackageName&quot;>', ' XX_BPEL_INTEGRATION_PKG.GET_CONCURRENT_REQUEST_STATUS ', '&lt;/EntityID>')"/>
                        <to variable="xmlFragment"/>
                    </copy>
                    <copy>
                        <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
                        <to variable="LogTransactionInput" part="payload"
                            query="/ns6:TransactionData/ns6:EntiltyList/ns6:EntityID[4]"/>
                    </copy>
                </assign>
                <invoke name="LogTransaction" partnerLink="ODTransactionLogger"
                        portType="ns5:ODTransactionLogger" operation="initiate"
                        inputVariable="LogTransactionInput"/>
            </sequence>
        </scope>
        <invoke name="callbackClient" partnerLink="client"
                portType="client:ConcurrentProgramStatusCallback"
                operation="onResult" inputVariable="outputVariable"/>
    </sequence>
</process>