// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.3.0, build 070610.1800.23513)

package servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.runtime;

import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.encoding.literal.DetailFragmentDeserializer;
import oracle.j2ee.ws.common.encoding.simpletype.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.xml.UUID;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.xml.soap.SOAPMessage;
import javax.xml.soap.AttachmentPart;

public class SearchServicerequestElement_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable {
    private static final QName ns1_pSrReqRec_inout_QNAME = new QName("http://gsidev01/ServiceStatusInquiryWS.wsdl/types/", "pSrReqRec_inout");
    private static final QName ns1_XxCsSrRecTypeUser_TYPE_QNAME = new QName("http://gsidev01/ServiceStatusInquiryWS.wsdl/types/", "XxCsSrRecTypeUser");
    private CombinedSerializer myns1_XxCsSrRecTypeUser__XxCsSrRecTypeUser_LiteralSerializer;
    private static final QName ns1_pSrReqTbl_inout_QNAME = new QName("http://gsidev01/ServiceStatusInquiryWS.wsdl/types/", "pSrReqTbl_inout");
    private static final QName ns1_pOrderTbl_inout_QNAME = new QName("http://gsidev01/ServiceStatusInquiryWS.wsdl/types/", "pOrderTbl_inout");
    private static final QName ns1_XxCsSrOrderRecTypeUser_TYPE_QNAME = new QName("http://gsidev01/ServiceStatusInquiryWS.wsdl/types/", "XxCsSrOrderRecTypeUser");
    private CombinedSerializer myns1_XxCsSrOrderRecTypeUser__XxCsSrOrderRecTypeUser_LiteralSerializer;
    private static final QName ns1_pEcomSiteKey_inout_QNAME = new QName("http://gsidev01/ServiceStatusInquiryWS.wsdl/types/", "pEcomSiteKey_inout");
    private static final QName ns1_XxGlbSitekeyRecTypeUser_TYPE_QNAME = new QName("http://gsidev01/ServiceStatusInquiryWS.wsdl/types/", "XxGlbSitekeyRecTypeUser");
    private CombinedSerializer myns1_XxGlbSitekeyRecTypeUser__XxGlbSitekeyRecTypeUser_LiteralSerializer;
    private static final QName ns1_xReturnStatus_inout_QNAME = new QName("http://gsidev01/ServiceStatusInquiryWS.wsdl/types/", "xReturnStatus_inout");
    private static final QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer myns2_string__java_lang_String_String_Serializer;
    private static final QName ns1_xMsgData_inout_QNAME = new QName("http://gsidev01/ServiceStatusInquiryWS.wsdl/types/", "xMsgData_inout");
    
    public SearchServicerequestElement_LiteralSerializer(QName type) {
        this(type,  false);
    }
    
    public SearchServicerequestElement_LiteralSerializer(QName type, boolean encodeType) {
        super(type, true, encodeType);
        setSOAPVersion(SOAPVersion.SOAP_11);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        myns1_XxCsSrRecTypeUser__XxCsSrRecTypeUser_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.XxCsSrRecTypeUser.class, ns1_XxCsSrRecTypeUser_TYPE_QNAME);
        myns1_XxCsSrOrderRecTypeUser__XxCsSrOrderRecTypeUser_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.XxCsSrOrderRecTypeUser.class, ns1_XxCsSrOrderRecTypeUser_TYPE_QNAME);
        myns1_XxGlbSitekeyRecTypeUser__XxGlbSitekeyRecTypeUser_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.XxGlbSitekeyRecTypeUser.class, ns1_XxGlbSitekeyRecTypeUser_TYPE_QNAME);
        myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.String.class, ns2_string_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.SearchServicerequestElement instance = new servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.SearchServicerequestElement();
        java.lang.Object member=null;
        QName elementName;
        List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        java.util.HashSet requiredElements = new java.util.HashSet();
        requiredElements.add("pSrReqRec_inout");
        requiredElements.add("pEcomSiteKey_inout");
        requiredElements.add("xReturnStatus_inout");
        requiredElements.add("xMsgData_inout");
        for (int memberIndex = 0; memberIndex <6; memberIndex++) {
            elementName = reader.getName();
            if ( matchQName(elementName, ns1_pSrReqRec_inout_QNAME) ) {
                myns1_XxCsSrRecTypeUser__XxCsSrRecTypeUser_LiteralSerializer.setNullable( true );
                member = myns1_XxCsSrRecTypeUser__XxCsSrRecTypeUser_LiteralSerializer.deserialize(ns1_pSrReqRec_inout_QNAME, reader, context);
                requiredElements.remove("pSrReqRec_inout");
                instance.setPSrReqRec_inout((servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.XxCsSrRecTypeUser)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_pSrReqTbl_inout_QNAME))) {
                values = new ArrayList();
                for(;;) {
                    elementName = reader.getName();
                    if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_pSrReqTbl_inout_QNAME))) {
                        myns1_XxCsSrRecTypeUser__XxCsSrRecTypeUser_LiteralSerializer.setNullable( true );
                        value = myns1_XxCsSrRecTypeUser__XxCsSrRecTypeUser_LiteralSerializer.deserialize(ns1_pSrReqTbl_inout_QNAME, reader, context);
                        requiredElements.remove("pSrReqTbl_inout");
                        values.add(value);
                        reader.nextElementContent();
                    } else {
                        break;
                    }
                }
                member = new servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.XxCsSrRecTypeUser[values.size()];
                member = values.toArray((java.lang.Object[]) member);
                instance.setPSrReqTbl_inout((servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.XxCsSrRecTypeUser[])member);
            }
            else {
                if (instance.getPSrReqTbl_inout() == null)
                instance.setPSrReqTbl_inout(new servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.XxCsSrRecTypeUser[0]);
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_pOrderTbl_inout_QNAME))) {
                values = new ArrayList();
                for(;;) {
                    elementName = reader.getName();
                    if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_pOrderTbl_inout_QNAME))) {
                        myns1_XxCsSrOrderRecTypeUser__XxCsSrOrderRecTypeUser_LiteralSerializer.setNullable( true );
                        value = myns1_XxCsSrOrderRecTypeUser__XxCsSrOrderRecTypeUser_LiteralSerializer.deserialize(ns1_pOrderTbl_inout_QNAME, reader, context);
                        requiredElements.remove("pOrderTbl_inout");
                        values.add(value);
                        reader.nextElementContent();
                    } else {
                        break;
                    }
                }
                member = new servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.XxCsSrOrderRecTypeUser[values.size()];
                member = values.toArray((java.lang.Object[]) member);
                instance.setPOrderTbl_inout((servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.XxCsSrOrderRecTypeUser[])member);
            }
            else {
                if (instance.getPOrderTbl_inout() == null)
                instance.setPOrderTbl_inout(new servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.XxCsSrOrderRecTypeUser[0]);
            }
            if ( matchQName(elementName, ns1_pEcomSiteKey_inout_QNAME) ) {
                myns1_XxGlbSitekeyRecTypeUser__XxGlbSitekeyRecTypeUser_LiteralSerializer.setNullable( true );
                member = myns1_XxGlbSitekeyRecTypeUser__XxGlbSitekeyRecTypeUser_LiteralSerializer.deserialize(ns1_pEcomSiteKey_inout_QNAME, reader, context);
                requiredElements.remove("pEcomSiteKey_inout");
                instance.setPEcomSiteKey_inout((servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.XxGlbSitekeyRecTypeUser)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ( matchQName(elementName, ns1_xReturnStatus_inout_QNAME) ) {
                myns2_string__java_lang_String_String_Serializer.setNullable( true );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_xReturnStatus_inout_QNAME, reader, context);
                requiredElements.remove("xReturnStatus_inout");
                instance.setXReturnStatus_inout((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ( matchQName(elementName, ns1_xMsgData_inout_QNAME) ) {
                myns2_string__java_lang_String_String_Serializer.setNullable( true );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_xMsgData_inout_QNAME, reader, context);
                requiredElements.remove("xMsgData_inout");
                instance.setXMsgData_inout((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
        }
        if (!requiredElements.isEmpty()) {
            throw new DeserializationException( "literal.expectedElementName" , requiredElements.iterator().next().toString(), DeserializationException.FAULT_CODE_CLIENT );
        }
        
        if( reader.getState() != XMLReader.END)
        {
            reader.skipElement();
        }
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.SearchServicerequestElement instance = (servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.SearchServicerequestElement)obj;
        
    }
    public void doSerializeAnyAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.SearchServicerequestElement instance = (servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.SearchServicerequestElement)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.SearchServicerequestElement instance = (servicestatusclient.proxy.types.gsidev01.servicestatusinquiryws_wsdl.types.SearchServicerequestElement)obj;
        
        myns1_XxCsSrRecTypeUser__XxCsSrRecTypeUser_LiteralSerializer.setNullable( true );
        myns1_XxCsSrRecTypeUser__XxCsSrRecTypeUser_LiteralSerializer.serialize(instance.getPSrReqRec_inout(), ns1_pSrReqRec_inout_QNAME, null, writer, context);
        if (instance.getPSrReqTbl_inout() != null) {
            for (int i = 0; i < instance.getPSrReqTbl_inout().length; ++i) {
                myns1_XxCsSrRecTypeUser__XxCsSrRecTypeUser_LiteralSerializer.setNullable( true );
                myns1_XxCsSrRecTypeUser__XxCsSrRecTypeUser_LiteralSerializer.serialize(instance.getPSrReqTbl_inout()[i], ns1_pSrReqTbl_inout_QNAME, null, writer, context);
            }
        }
        if (instance.getPOrderTbl_inout() != null) {
            for (int i = 0; i < instance.getPOrderTbl_inout().length; ++i) {
                myns1_XxCsSrOrderRecTypeUser__XxCsSrOrderRecTypeUser_LiteralSerializer.setNullable( true );
                myns1_XxCsSrOrderRecTypeUser__XxCsSrOrderRecTypeUser_LiteralSerializer.serialize(instance.getPOrderTbl_inout()[i], ns1_pOrderTbl_inout_QNAME, null, writer, context);
            }
        }
        myns1_XxGlbSitekeyRecTypeUser__XxGlbSitekeyRecTypeUser_LiteralSerializer.setNullable( true );
        myns1_XxGlbSitekeyRecTypeUser__XxGlbSitekeyRecTypeUser_LiteralSerializer.serialize(instance.getPEcomSiteKey_inout(), ns1_pEcomSiteKey_inout_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.setNullable( true );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getXReturnStatus_inout(), ns1_xReturnStatus_inout_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.setNullable( true );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getXMsgData_inout(), ns1_xMsgData_inout_QNAME, null, writer, context);
    }
}
