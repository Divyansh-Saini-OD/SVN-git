<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="http://chilsoa01d.na.odcorp.net:7778/orabpel/xmllib/eaixml/oagis/v91/message/bod/PostJournalEntry.xsd"/>
      <rootElement name="PostJournalEntry" namespace="http://www.openapplications.org/oagis/9"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="GLStgTableInsert_table.xsd"/>
      <rootElement name="XxGlInterfaceNaStgCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/GLStgTableInsert"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [FRI JAN 25 12:45:57 EST 2008]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:ns6="http://www.openapplications.org/oagis/9/unqualifieddatatypes/1.1"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns9="http://www.openapplications.org/oagis/9/currencycode/54217:2001"
                xmlns:ns5="http://www.openapplications.org/oagis/9/qualifieddatatypes/1.1"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:ns2="http://www.openapplications.org/oagis/9/officedepot/1/codelists"
                xmlns:ns3="http://www.openapplications.org/oagis/9/IANAMIMEMediaTypes:2003"
                xmlns:xs="http://www.w3.org/2001/XMLSchema"
                xmlns:ns4="http://www.openapplications.org/oagis/9/codelists"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/top/GLStgTableInsert"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:ns8="http://www.openapplications.org/oagis/9/officedepot/1"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:ns1="http://www.openapplications.org/oagis/9"
                xmlns:ns7="http://www.openapplications.org/oagis/9/unitcode/66411:2001"
                xmlns:ns10="http://www.openapplications.org/oagis/9/languagecode/5639:1988"
                exclude-result-prefixes="xsl ns6 ns9 ns5 ns2 ns3 xs ns4 ns8 ns1 ns7 ns10 ns0 bpws ehdr hwf xp20 xref ora ids orcl">
  <xsl:template match="/">
    <ns0:XxGlInterfaceNaStgCollection>
    <xsl:for-each select="/ns1:PostJournalEntry/ns1:DataArea/ns1:JournalEntry/ns1:JournalEntryLine">
      <ns0:XxGlInterfaceNaStg>
        <ns0:status>
          <xsl:text disable-output-escaping="no">New</xsl:text>
        </ns0:status>
          <ns0:setOfBooksId>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns1:LedgerID"/>
          </ns0:setOfBooksId>
          <ns0:accountingDate>
            <xsl:value-of select="normalize-space(../ns1:JournalEntryHeader/ns1:AccountingDate/ns1:PostDateTime)"/>
          </ns0:accountingDate>
          <ns0:currencyCode>
            <xsl:value-of select="normalize-space(../ns1:JournalEntryHeader/ns1:ExchangeRate/ns1:SourceCurrencyCode)"/>
          </ns0:currencyCode>
          <ns0:dateCreated>
            <xsl:value-of select="xp20:currentDate()"/>
          </ns0:dateCreated>
          <ns0:createdBy>
            <xsl:text disable-output-escaping="no">3</xsl:text>
            <!--xsl:value-of select="../ns1:JournalEntryHeader/ns1:EntryCreator/ns1:ID"/-->
          </ns0:createdBy>
          <ns0:actualFlag>
            <xsl:text disable-output-escaping="no">A</xsl:text>
            <!--xsl:value-of select="../ns1:JournalEntryHeader/ns8:LedgerEntryAmountTypeCode"/-->
          </ns0:actualFlag>
          <ns0:userJeCategoryName>
            <xsl:choose>
               <xsl:when test="normalize-space(../ns1:JournalEntryHeader/ns1:CategoryCodes/ns1:Code) = 'AC'">
                    <xsl:value-of select="'OD Average Cost'"/>
               </xsl:when>
               <xsl:when test="normalize-space(../ns1:JournalEntryHeader/ns1:CategoryCodes/ns1:Code) = 'DST'">
                    <xsl:value-of select="'OD Disp in Transit'"/>
               </xsl:when>
               <xsl:when test="normalize-space(../ns1:JournalEntryHeader/ns1:CategoryCodes/ns1:Code) = 'MT'">
                    <xsl:value-of select="'OD Merchandising'"/>
               </xsl:when>
               <xsl:when test="normalize-space(../ns1:JournalEntryHeader/ns1:CategoryCodes/ns1:Code) = 'PP'">
                    <xsl:value-of select="'OD Price Protection'"/>
               </xsl:when>
               <xsl:when test="normalize-space(../ns1:JournalEntryHeader/ns1:CategoryCodes/ns1:Code) = 'RA'">
                    <xsl:value-of select="'OD Receiver Adjs'"/>
               </xsl:when>
               <xsl:when test="normalize-space(../ns1:JournalEntryHeader/ns1:CategoryCodes/ns1:Code) = 'RTV'">
                    <xsl:value-of select="'OD RTV ES9000'"/>
               </xsl:when>               
               <xsl:when test="normalize-space(../ns1:JournalEntryHeader/ns1:CategoryCodes/ns1:Code) = 'TJ'">
                    <xsl:value-of select="'OD Transfer Journals'"/>
               </xsl:when>
               <xsl:when test="normalize-space(../ns1:JournalEntryHeader/ns1:CategoryCodes/ns1:Code) = 'RWO'">
                    <xsl:value-of select="'OD Receiver Write-Off'"/>
               </xsl:when>
               <xsl:when test="normalize-space(../ns1:JournalEntryHeader/ns1:CategoryCodes/ns1:Code) = 'RAC'">
                    <xsl:value-of select="'OD Receiver Accrual'"/>
               </xsl:when>
               <xsl:otherwise>
                    <xsl:value-of select="../ns1:JournalEntryHeader/ns1:CategoryCodes/ns1:Code"/> 
               </xsl:otherwise>
             </xsl:choose>
          </ns0:userJeCategoryName>
          <ns0:userJeSourceName>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns1:SourceDocumentReference/ns1:DocumentID/ns1:ID"/>
          </ns0:userJeSourceName>
          <ns0:currencyConversionDate>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns1:ExchangeRate/ns1:SetDateTime"/>
          </ns0:currencyConversionDate>
          <ns0:userCurrencyConversionType>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns1:ExchangeRate/ns1:SourceID"/>
          </ns0:userCurrencyConversionType>
          <ns0:currencyConversionRate>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns1:ExchangeRate/ns1:SourceUnitBaseNumeric"/>
          </ns0:currencyConversionRate>
        <xsl:for-each select="ns1:GLAccount">
         <xsl:if test='@chartOfAccountsID != "Legacy"'>
          <xsl:for-each select="ns1:GLElement/ns1:Element">
                <xsl:if test='(@sequence = "1") and (@sequenceName = "Company")'>
                  <ns0:segment1>
                    <xsl:value-of select="."/>
                  </ns0:segment1>
                </xsl:if>
                <xsl:if test='(@sequence = "2") and (@sequenceName = "CostCenter")'>
                    <ns0:segment2>
                      <xsl:value-of select="."/>
                    </ns0:segment2>
                </xsl:if>
                <xsl:if test='(@sequence = "3") and (@sequenceName = "Account")'>
                    <ns0:segment3>
                      <xsl:value-of select="."/>
                    </ns0:segment3>
                </xsl:if>
                <xsl:if test='(@sequence = "4") and (@sequenceName = "Location")'>
                    <ns0:segment4>
                      <xsl:value-of select="."/>
                    </ns0:segment4>
                </xsl:if>
              <xsl:if test='(@sequence = "5") and (@sequenceName = "InterCompany")'>
              <ns0:segment5>
                      <xsl:value-of select="."/>
                    </ns0:segment5>
              </xsl:if>
              <xsl:if test='(@sequence = "6") and (@sequenceName = "LineOfBusiness")'>
                    <ns0:segment6>
                      <xsl:value-of select="."/>
                    </ns0:segment6>
                </xsl:if>
              <xsl:if test='(@sequence = "7") and (@sequenceName = "Future")'>
              <ns0:segment7>
                      <xsl:value-of select="."/>
                    </ns0:segment7>
              </xsl:if>
            </xsl:for-each>
         </xsl:if> 
        </xsl:for-each> 
     <xsl:choose>
            <xsl:when test='ns1:DebitCreditCode = "D"'>
                <ns0:enteredDr>
                  <xsl:value-of select="ns1:Amount"/>
                </ns0:enteredDr>                
            </xsl:when>
            <xsl:when test='ns1:DebitCreditCode = "C"'>
                <ns0:enteredCr>
                  <xsl:value-of select="ns1:Amount"/>
                </ns0:enteredCr>                
            </xsl:when>
          </xsl:choose>
      <ns0:reference1>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns8:Batch/ns1:Name"/>
          </ns0:reference1>
          <ns0:reference2>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns8:Batch/ns1:Description"/>
          </ns0:reference2>
          <ns0:reference4>
            <xsl:value-of select="normalize-space(../ns1:JournalEntryHeader/ns1:Name)"/>
          </ns0:reference4>
          <ns0:reference5>
            <xsl:value-of select="normalize-space(../ns1:JournalEntryHeader/ns1:Description)"/>
          </ns0:reference5>
          <ns0:reference6>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns1:SourceDocumentReference/ns1:Description"/>
          </ns0:reference6>
         <xsl:choose>
             <xsl:when test="../ns1:JournalEntryHeader/ns8:LedgerEntryReversal/ns1:AccountingDate/ns1:PeriodID!=''">
              <ns0:reference7>
                  <xsl:text disable-output-escaping="no">YES</xsl:text>
              </ns0:reference7>
            </xsl:when>
          </xsl:choose>
          <xsl:choose>
             <xsl:when test="../ns1:JournalEntryHeader/ns8:LedgerEntryReversal/ns1:AccountingDate/ns1:PeriodID=''">
              <ns0:reference7>
                  <xsl:text disable-output-escaping="no">NO</xsl:text>
              </ns0:reference7>
            </xsl:when>
          </xsl:choose>
           <ns0:reference8>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns8:LedgerEntryReversal/ns1:AccountingDate/ns1:PeriodID"/>
          </ns0:reference8>
          <ns0:reference9>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns8:LedgerEntryReversal/ns8:LedgerEntryReversalMethodCode"/>
          </ns0:reference9>
          <ns0:reference10>
            <xsl:value-of select="normalize-space(ns1:Item/ns1:Description)"/>
          </ns0:reference10>
          <ns0:reference21>
            <xsl:value-of select="normalize-space(ns1:GSSLedgerEntryLineCodes/ns1:GSSLineTypeCode)"/>
          </ns0:reference21>
          <ns0:reference22>
            <xsl:value-of select="normalize-space(ns1:GSSLedgerEntryLineCodes/ns1:GSSTemplate)"/>
          </ns0:reference22>
          <ns0:reference23>
            <xsl:value-of select="normalize-space(ns1:GSSLedgerEntryLineCodes/ns1:GSSReferenceId)"/>
          </ns0:reference23>
          <ns0:reference24>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns8:Batch/ns1:FileName"/>
          </ns0:reference24>
          <ns0:periodName>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns1:AccountingDate/ns1:EffectiveTimePeriod"/>
          </ns0:periodName>
          <ns0:codeCombinationId>
            <xsl:value-of select="ns1:GLAccount/ns1:GLNominalAccount"/>
          </ns0:codeCombinationId>
          <ns0:groupId>
            <!-- xsl:value-of select="$groupId"/ -->
            <xsl:value-of select="../ns1:JournalEntryHeader/ns1:GLEntityID"/>
<!--            <xsl:text disable-output-escaping="no">111</xsl:text>GLEntityID -->
            <!--xsl:value-of select="ns1:JournalEntryLine/ns1:EntryCreator/ns1:GroupID"/-->
          </ns0:groupId>
          <ns0:referenceDate>
            <xsl:value-of select="../ns1:JournalEntryHeader/ns1:SourceDocumentReference/ns1:DocumentDateTime"/>
          </ns0:referenceDate>
          <xsl:for-each select="ns1:GLAccount">
            <xsl:if test='@chartOfAccountsID = "Legacy"'>
                <xsl:for-each select="ns1:GLElement/ns1:Element">
                  <xsl:if test='(@sequence = "1") and (@sequenceName = "Company")'>
                    <ns0:legacySegment1>
                      <xsl:value-of select="."/>
                    </ns0:legacySegment1>
                  </xsl:if>
                  <xsl:if test='(@sequence = "2") and (@sequenceName = "CostCenter")'>
                    <ns0:legacySegment2>
                      <xsl:value-of select="."/>
                    </ns0:legacySegment2>
                  </xsl:if>              
                  <xsl:if test='(@sequence = "3") and (@sequenceName = "Account")'>
                    <ns0:legacySegment3>
                      <xsl:value-of select="."/>
                    </ns0:legacySegment3>
                  </xsl:if> 
                  <xsl:if test='(@sequence = "4") and (@sequenceName = "Location")'>
                    <ns0:legacySegment4>
                      <xsl:value-of select="."/>
                    </ns0:legacySegment4>
                  </xsl:if> 
                  <xsl:if test='(@sequence = "5") and (@sequenceName = "InterCompany")'>
                    <ns0:legacySegment5>
                      <xsl:value-of select="."/>
                    </ns0:legacySegment5>
                  </xsl:if>
                  <xsl:if test='(@sequence = "6") and (@sequenceName = "LineOfBusiness")'>
                    <ns0:legacySegment6>
                      <xsl:value-of select="."/>
                    </ns0:legacySegment6>
                  </xsl:if>              
                  <xsl:if test='(@sequence = "7") and (@sequenceName = "Future")'>
                    <ns0:legacySegment7>
                      <xsl:value-of select="."/>
                    </ns0:legacySegment7>
                  </xsl:if> 
                </xsl:for-each>
            </xsl:if>
          </xsl:for-each>
      </ns0:XxGlInterfaceNaStg>
    </xsl:for-each>
    </ns0:XxGlInterfaceNaStgCollection>
    </xsl:template>
</xsl:stylesheet>
