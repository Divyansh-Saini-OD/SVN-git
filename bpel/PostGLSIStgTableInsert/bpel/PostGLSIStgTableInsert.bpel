<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Fri Apr 10 10:01:08 EST 2008
  Author:  cecilia-macean
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="PostGLSIStgTableInsert"
         targetNamespace="http://xmlns.oracle.com/PostGLSIStgTableInsert"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns13="http://xmlns.oracle.com/ODTransactionLogger"
         xmlns:ns4="http://schemas.oracle.com/service/bpel/common"
         xmlns:ns7="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns12="http://xmlns.oracle.com/pcbpel/adapter/db/top/GLStgTableInsert"
         xmlns:ns5="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XX_BPEL_INTEGRATION_PKG/SUBMIT_CONCURRENT_PROGRAM/"
         xmlns:client="http://xmlns.oracle.com/PostGLSIStgTableInsert"
         xmlns:ns6="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ns11="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:ns9="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:ns1="http://www.openapplications.org/oagis/9"
         xmlns:ns14="http://xmlns.oracle.com/TransactionData"
         xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/db/GLStgTableInsert/"
         xmlns:ns2="http://www.openapplications.org/oagis/9/officedepot/1"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns15="http://xmlns.oracle.com/BPELInvokeESP"
         xmlns:ns8="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns10="ODError">
  <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="client" partnerLinkType="client:PostGLSIStgTableInsert"
                 myRole="PostGLSIStgTableInsertProvider"
                 partnerRole="PostGLSIStgTableInsertRequester"/>
    <partnerLink myRole="ODErrorLoggerRequester" name="ODErrorLogger"
                 partnerRole="ODErrorLoggerProvider"
                 partnerLinkType="ns9:ODErrorLogger"/>
    <partnerLink myRole="ODTransactionLoggerRequester"
                 name="ODTransactionLogger"
                 partnerRole="ODTransactionLoggerProvider"
                 partnerLinkType="ns13:ODTransactionLogger"/>
    <partnerLink myRole="BPELInvokeESPRequester" name="BPELInvokeESP"
                 partnerRole="BPELInvokeESPProvider"
                 partnerLinkType="ns15:BPELInvokeESP"/>
    <partnerLink name="GLStgTableInsert" partnerRole="GLStgTableInsert_role"
                 partnerLinkType="ns3:GLStgTableInsert_plt"/>
  </partnerLinks>
  <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable"
              messageType="client:PostGLSIStgTableInsertRequestMessage"/>
    <variable name="Invoke_1_insert_InputVariable"
              messageType="ns3:XxGlInterfaceNaStgCollection_msg"/>
    <variable name="Exception" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="invkSelectionFailure_initiate"
              messageType="ns9:ODErrorLoggerRequestMessage"/>
    <variable name="invkRemoteFault_initiate"
              messageType="ns9:ODErrorLoggerRequestMessage"/>
    <variable name="invkCatchAll_initiate"
              messageType="ns9:ODErrorLoggerRequestMessage"/>
    <variable name="invkBindingFault_initiate"
              messageType="ns9:ODErrorLoggerRequestMessage"/>
    <!-- Reference to the message that will be sent back to the requester during callback -->
    <variable name="outputVariable"
              messageType="client:PostGLSIStgTableInsertResponseMessage"/>
    <variable name="ErrorMessageText" type="xsd:string"/>
    <variable name="ThreadInfoText" type="xsd:string"/>
    <variable name="ProcessHeader" type="xsd:string"/>
    <variable name="XSLT_PARAM" element="ns4:parameters"/>
    <variable name="XSLT_PARAM1" element="ns4:parameters"/>
    <variable name="logTransactionInput"
              messageType="ns13:ODTransactionLoggerRequestMessage"/>
    <variable name="InvokeServiceESPIn"
              messageType="ns15:BPELInvokeESPRequestMessage"/>
    <variable name="InvokeGLStgTableInsert"
              messageType="ns3:XxGlInterfaceNaStgCollection_msg"/>
    <variable name="GLFileName" type="xsd:string"/>
    <variable name="GLEntityID" type="xsd:string"/>
    <variable name="xmlFragment" type="xsd:string"/>
  </variables>
  <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
  <faultHandlers>
    <catch faultName="bpws:selectionFailure" faultVariable="Exception">
      <sequence name="Sequence_3">
        <bpelx:exec name="GetThreadInfo" language="java" version="1.5">
          <![CDATA[Thread t = Thread.currentThread();    
    StringBuffer sb = new StringBuffer();    
    sb.append(getVariableData("ThreadInfoText"));   
    sb.append(" Thread Group Name: " + t.getThreadGroup().getName() + " Thread Name: " + t.getName() + ".");   
    addAuditTrailEntry(sb.toString());         
    setVariableData("ThreadInfoText", sb.toString());]]>
        </bpelx:exec>
        <assign name="asnSelectionFailure">
          <copy>
            <from expression="concat(&quot;Interface I0985_GL_Import - EBS GL Journal Inbound failed while inserting data into the table. The batch ID is &quot;, bpws:getVariableData('inputVariable','payload','/ns1:PostJournalEntry/ns1:DataArea/ns1:JournalEntry/ns1:JournalEntryHeader/ns1:GLEntityID'), &quot; . &quot;, bpws:getVariableData('ThreadInfoText'))"/>
            <to variable="ErrorMessageText"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:SystemName"/>
          </copy>
          <copy>
            <from expression="xp20:current-dateTime()"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'Catch All on the Main Sequence'"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessStep"/>
          </copy>
          <copy>
            <from variable="Exception" part="code"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorCode"/>
          </copy>
          <copy>
            <from expression="concat(bpws:getVariableData('ErrorMessageText'), &quot;The error is: &quot;, bpws:getVariableData('Exception','summary'))"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="Exception" part="detail"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorText"/>
          </copy>
          <copy>
            <from expression="'system'"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorType"/>
          </copy>
          <copy>
            <from expression="'fatal'"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:Notification/ns10:sendNotification"/>
          </copy>
        </assign>
        <invoke name="invkSelectionFailure" partnerLink="ODErrorLogger"
                portType="ns9:ODErrorLogger" operation="initiate"
                inputVariable="invkSelectionFailure_initiate"/>
        <assign name="AssignGLSIResponse">
          <copy>
            <from expression="'E'"/>
            <to variable="outputVariable" part="payload"
                query="/client:PostGLSIStgTableInsertProcessResponse/client:result"/>
          </copy>
        </assign>
        <invoke name="callbackClient" partnerLink="client"
                portType="client:PostGLSIStgTableInsertCallback"
                operation="onResult" inputVariable="outputVariable"/>
        <scope name="LogTransactionError">
          <sequence name="SeqTransLog">
            <assign name="copyTransactionData">
              <copy>
                <from expression="'Error'"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns14:TransactionData/ns14:ProcessInfo/ns14:ProcessStatus"/>
              </copy>
            </assign>
            <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                    portType="ns13:ODTransactionLogger" operation="initiate"
                    inputVariable="logTransactionInput"/>
          </sequence>
        </scope>
        <!-- <reply name="replyOutput" partnerLink="client"
               portType="client:PostGLSIStgTableInsert" operation="process"
               variable="Exception" faultName="bpelx:remoteFault"/> -->
        <throw name="ThrowSelectionFailure" faultName="bpws:selectionFailure"
               faultVariable="Exception"/>
      </sequence>
    </catch>
    <catch faultName="bpelx:bindingFault" faultVariable="Exception">
      <sequence name="Sequence_2">
        <bpelx:exec name="GetThreadInfo" language="java" version="1.5">
          <![CDATA[Thread t = Thread.currentThread();    
    StringBuffer sb = new StringBuffer();    
    sb.append(getVariableData("ThreadInfoText"));   
    sb.append(" Thread Group Name: " + t.getThreadGroup().getName() + " Thread Name: " + t.getName() + ".");   
    addAuditTrailEntry(sb.toString());         
    setVariableData("ThreadInfoText", sb.toString());]]>
        </bpelx:exec>
        <assign name="asnBindingFault">
          <copy>
            <from expression="concat(&quot;Interface I0985_GL_Import - EBS GL Journal Inbound failed while inserting data into the table. The batch ID is &quot;, bpws:getVariableData('inputVariable','payload','/ns1:PostJournalEntry/ns1:DataArea/ns1:JournalEntry/ns1:JournalEntryHeader/ns1:GLEntityID'), &quot; . &quot;, bpws:getVariableData('ThreadInfoText'))"/>
            <to variable="ErrorMessageText"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:SystemName"/>
          </copy>
          <copy>
            <from expression="xp20:current-dateTime()"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'Catch All on the Main Sequence'"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessStep"/>
          </copy>
          <copy>
            <from variable="Exception" part="code"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorCode"/>
          </copy>
          <copy>
            <from expression="concat(bpws:getVariableData('ErrorMessageText'), &quot;The error is: &quot;, bpws:getVariableData('Exception','summary'))"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="Exception" part="detail"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorText"/>
          </copy>
          <copy>
            <from expression="'system'"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorType"/>
          </copy>
          <copy>
            <from expression="'fatal'"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
            <to variable="invkBindingFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:Notification/ns10:sendNotification"/>
          </copy>
        </assign>
        <invoke name="invkBindingFault" partnerLink="ODErrorLogger"
                portType="ns9:ODErrorLogger" operation="initiate"
                inputVariable="invkBindingFault_initiate"/>
        <assign name="AssignGLSIResponse">
          <copy>
            <from expression="'E'"/>
            <to variable="outputVariable" part="payload"
                query="/client:PostGLSIStgTableInsertProcessResponse/client:result"/>
          </copy>
        </assign>
        <invoke name="callbackClient" partnerLink="client"
                portType="client:PostGLSIStgTableInsertCallback"
                operation="onResult" inputVariable="outputVariable"/>
        <scope name="LogTransactionError">
          <sequence name="SeqTransLog">
            <assign name="copyTransactionData">
              <copy>
                <from expression="'Error'"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns14:TransactionData/ns14:ProcessInfo/ns14:ProcessStatus"/>
              </copy>
            </assign>
            <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                    portType="ns13:ODTransactionLogger" operation="initiate"
                    inputVariable="logTransactionInput"/>
          </sequence>
        </scope>
        <!-- <reply name="replyOutput" partnerLink="client"
               portType="client:PostGLSIStgTableInsert" operation="process"
               variable="Exception" faultName="bpelx:remoteFault"/>  -->
        <throw name="ThrowBindingFault" faultName="bpelx:bindingFault"
               faultVariable="Exception"/>
      </sequence>
    </catch>
    <catch faultName="bpelx:remoteFault" faultVariable="Exception">
      <sequence name="Sequence_5">
        <bpelx:exec name="GetThreadInfo" language="java" version="1.5">
          <![CDATA[Thread t = Thread.currentThread();    
    StringBuffer sb = new StringBuffer();    
    sb.append(getVariableData("ThreadInfoText"));   
    sb.append(" Thread Group Name: " + t.getThreadGroup().getName() + " Thread Name: " + t.getName() + ".");   
    addAuditTrailEntry(sb.toString());         
    setVariableData("ThreadInfoText", sb.toString());]]>
        </bpelx:exec>
        <assign name="asnRemoteFault">
          <copy>
            <from expression="concat(&quot;Interface I0985_GL_Import - EBS GL Journal Inbound failed while inserting data into the table. The batch ID is &quot;, bpws:getVariableData('inputVariable','payload','/ns1:PostJournalEntry/ns1:DataArea/ns1:JournalEntry/ns1:JournalEntryHeader/ns1:GLEntityID'), &quot; . &quot;, bpws:getVariableData('ThreadInfoText'))"/>
            <to variable="ErrorMessageText"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkSelectionFailure_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:SystemName"/>
          </copy>
          <copy>
            <from expression="xp20:current-dateTime()"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'Catch All on the Main Sequence'"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessStep"/>
          </copy>
          <copy>
            <from variable="Exception" part="code"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorCode"/>
          </copy>
          <copy>
            <from expression="concat(bpws:getVariableData('ErrorMessageText'), &quot;The error is: &quot;, bpws:getVariableData('Exception','summary'))"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="Exception" part="detail"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorText"/>
          </copy>
          <copy>
            <from expression="'system'"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorType"/>
          </copy>
          <copy>
            <from expression="'fatal'"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
            <to variable="invkRemoteFault_initiate" part="payload"
                query="/ns10:ErrorData/ns10:Notification/ns10:sendNotification"/>
          </copy>
        </assign>
        <invoke name="invkRemoteFault" partnerLink="ODErrorLogger"
                portType="ns9:ODErrorLogger" operation="initiate"
                inputVariable="invkRemoteFault_initiate"/>
        <assign name="AssignGLSIResponse">
          <copy>
            <from expression="'E'"/>
            <to variable="outputVariable" part="payload"
                query="/client:PostGLSIStgTableInsertProcessResponse/client:result"/>
          </copy>
        </assign>
        <invoke name="callbackClient" partnerLink="client"
                portType="client:PostGLSIStgTableInsertCallback"
                operation="onResult" inputVariable="outputVariable"/>
        <scope name="LogTransactionError">
          <sequence name="SeqTransLog">
            <assign name="copyTransactionData">
              <copy>
                <from expression="'Error'"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns14:TransactionData/ns14:ProcessInfo/ns14:ProcessStatus"/>
              </copy>
            </assign>
            <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                    portType="ns13:ODTransactionLogger" operation="initiate"
                    inputVariable="logTransactionInput"/>
          </sequence>
        </scope>
        <!-- <reply name="replyOutput" partnerLink="client"
               portType="client:PostGLSIStgTableInsert" operation="process"
               variable="Exception" faultName="bpelx:remoteFault"/>  -->
        <throw name="ThrowRemoteFault" faultName="bpelx:remoteFault"
               faultVariable="Exception"/>
      </sequence>
    </catch>
    <catchAll>
      <sequence name="Sequence_4">
        <bpelx:exec name="GetThreadInfo" language="java" version="1.5">
          <![CDATA[Thread t = Thread.currentThread();    
    StringBuffer sb = new StringBuffer();    
    sb.append(getVariableData("ThreadInfoText"));   
    sb.append(" Thread Group Name: " + t.getThreadGroup().getName() + " Thread Name: " + t.getName() + ".");   
    addAuditTrailEntry(sb.toString());         
    setVariableData("ThreadInfoText", sb.toString());]]>
        </bpelx:exec>
        <assign name="asnCatchAll">
          <copy>
            <from expression="concat(&quot;Interface I0985_GL_Import - EBS GL Journal Inbound failed while inserting data into the table. The batch ID is &quot;, bpws:getVariableData('inputVariable','payload','/ns1:PostJournalEntry/ns1:DataArea/ns1:JournalEntry/ns1:JournalEntryHeader/ns1:GLEntityID'), &quot; . &quot;, bpws:getVariableData('ThreadInfoText'))"/>
            <to variable="ErrorMessageText"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:SystemName"/>
          </copy>
          <copy>
            <from expression="xp20:current-dateTime()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'Catch All on the Main Sequence'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ProcessInfo/ns10:BusinessProcessStep"/>
          </copy>
          <copy>
            <from expression="ora:getFaultName()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorCode"/>
          </copy>
          <copy>
            <from variable="ErrorMessageText"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorDescription"/>
          </copy>
          <copy>
            <from expression="ora:getFaultAsString()"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorText"/>
          </copy>
          <copy>
            <from expression="'system'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorType"/>
          </copy>
          <copy>
            <from expression="'fatal'"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:ErrorDetails/ns10:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
            <to variable="invkCatchAll_initiate" part="payload"
                query="/ns10:ErrorData/ns10:Notification/ns10:sendNotification"/>
          </copy>
        </assign>
        <invoke name="invkCatchAll" partnerLink="ODErrorLogger"
                portType="ns9:ODErrorLogger" operation="initiate"
                inputVariable="invkCatchAll_initiate"/>
        <assign name="AssignGLSIResponse">
          <copy>
            <from expression="'E'"/>
            <to variable="outputVariable" part="payload"
                query="/client:PostGLSIStgTableInsertProcessResponse/client:result"/>
          </copy>
        </assign>
        <invoke name="callbackClient" partnerLink="client"
                portType="client:PostGLSIStgTableInsertCallback"
                operation="onResult" inputVariable="outputVariable"/>
        <scope name="LogTransactionError">
          <sequence name="SeqTransLog">
            <assign name="copyTransactionData">
              <copy>
                <from expression="'Error'"/>
                <to variable="logTransactionInput" part="payload"
                    query="/ns14:TransactionData/ns14:ProcessInfo/ns14:ProcessStatus"/>
              </copy>
            </assign>
            <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                    portType="ns13:ODTransactionLogger" operation="initiate"
                    inputVariable="logTransactionInput"/>
          </sequence>
        </scope>
        <!-- <reply name="replyOutput" partnerLink="client"
               portType="client:PostGLSIStgTableInsert" operation="process"
               variable="Exception" faultName="bpelx:remoteFault"/>   -->
        <throw name="ThrowException" faultVariable="Exception"
               faultName="bpelx:remoteFault"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in PostGLSIStgTableInsert.wsdl) -->
    <receive name="receiveInput" partnerLink="client"
             portType="client:PostGLSIStgTableInsert" operation="initiate"
             variable="inputVariable" createInstance="yes"/>
    <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
    <scope name="ProcessTitle">
      <sequence name="SeqProcessTitle">
        <assign name="InitializeInstanceTitle">
          <copy>
            <from expression="substring(concat('PostGLSI - ', bpws:getVariableData('inputVariable','payload','/ns1:PostJournalEntry/ns1:DataArea/ns1:JournalEntry/ns1:JournalEntryHeader/ns2:Batch/ns1:FileName')),1,50)"/>
            <to variable="ProcessHeader"/>
          </copy>
          <copy>
            <from expression="substring-after(bpws:getVariableData('ProcessHeader'),'- ')"/>
            <to variable="XSLT_PARAM"
                query="/ns4:parameters/ns4:item/ns4:value"/>
          </copy>
          <copy>
            <from expression="'GLFileName'"/>
            <to variable="XSLT_PARAM"
                query="/ns4:parameters/ns4:item/ns4:name"/>
          </copy>
          <copy>
            <from expression="'Group_Id'"/>
            <to variable="XSLT_PARAM1"
                query="/ns4:parameters/ns4:item/ns4:name"/>
          </copy>
          <copy>
            <from expression="substring-after(concat('X',bpws:getVariableData('inputVariable','payload','/ns1:PostJournalEntry/ns1:DataArea/ns1:JournalEntry/ns1:JournalEntryHeader/ns1:GLEntityID')),'X')"/>
            <to variable="XSLT_PARAM1"
                query="/ns4:parameters/ns4:item/ns4:value"/>
          </copy>
          <copy>
            <from expression="bpws:getVariableData('inputVariable','payload','/ns1:PostJournalEntry/ns1:DataArea/ns1:JournalEntry[1]/ns1:JournalEntryHeader/ns2:Batch/ns1:FileName')"/>
            <to variable="GLFileName"/>
          </copy>
          <copy>
            <from expression="bpws:getVariableData('inputVariable','payload','/ns1:PostJournalEntry/ns1:DataArea/ns1:JournalEntry[1]/ns1:JournalEntryHeader/ns1:GLEntityID')"/>
            <to variable="GLEntityID"/>
          </copy>
        </assign>
        <bpelx:exec name="SetProcessTitle" language="java" version="1.5">
          <![CDATA[try {               
  String title = (String)getVariableData("ProcessHeader");               
  setTitle(title);               
  addAuditTrailEntry(title) ;               
} catch (Exception ex) {               
  addAuditTrailEntry(ex.toString());               
  ex.printStackTrace();               
}]]>
        </bpelx:exec>
      </sequence>
    </scope>
    <scope name="LogTransactionStart">
      <sequence name="SeqTransLog">
        <assign name="TransformParameters">
          <bpelx:annotation>
            <bpelx:pattern>transformation</bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from expression="ora:processXSLT('TransformationParam.xsl',bpws:getVariableData('XSLT_PARAM'),bpws:getVariableData('XSLT_PARAM1'))"/>
            <to variable="XSLT_PARAM"/>
          </copy>
        </assign>
        <assign name="copyTransactionData">
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:ProcessInfo/ns14:Domain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:ProcessInfo/ns14:ProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:ProcessInfo/ns14:InstanceId"/>
          </copy>
          <copy>
            <from expression="'Start'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:ProcessInfo/ns14:ProcessStatus"/>
          </copy>
          <copy>
            <from expression="'GL File Read'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:MessageDetails/ns14:MessageOperation"/>
          </copy>
          <copy>
            <from expression="'Legacy GL Files'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:MessageDetails/ns14:MessageSourceSystem"/>
          </copy>
          <copy>
            <from expression="'Payload'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:MessageDetails/ns14:MessageType"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:MessageDetails/ns14:MessageDateTime"/>
          </copy>
          <copy>
            <from expression="'I0985_EBS_GL_Journal_Import'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:ProcessInfo/ns14:SystemName"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityList xmlns=&quot;http://xmlns.oracle.com/TransactionData&quot;>&lt;EntityID EntityType=&quot;SourceFileName&quot;>',bpws:getVariableData('GLFileName'),'&lt;/EntityID>&lt;EntityID EntityType=&quot;GroupID&quot;>',bpws:getVariableData('GLEntityID'),'&lt;/EntityID>&lt;/EntityList>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:EntiltyList"/>
          </copy>
        </assign>
        <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                portType="ns13:ODTransactionLogger" operation="initiate"
                inputVariable="logTransactionInput"/>
      </sequence>
    </scope>
    <assign name="TransformFromOagisToGLStgTable">
      <bpelx:annotation>
        <bpelx:pattern>transformation</bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from expression="ora:processXSLT('Transformation_2.xsl',bpws:getVariableData('inputVariable','payload'))"/>
        <to variable="Invoke_1_insert_InputVariable"
            part="XxGlInterfaceNaStgCollection"/>
      </copy>
    </assign>
    <invoke name="InvokeGLStgTableInsert" partnerLink="GLStgTableInsert"
            portType="ns3:GLStgTableInsert_ptt" operation="insert"
            inputVariable="Invoke_1_insert_InputVariable"/>
    <assign name="AssignGLSIResponse">
      <copy>
        <from expression="'S'"/>
        <to variable="outputVariable" part="payload"
            query="/client:PostGLSIStgTableInsertProcessResponse/client:result"/>
      </copy>
    </assign>
    <scope name="LogTransactionEnd">
      <sequence name="SeqTransLog">
        <assign name="copyTransactionData">
          <copy>
            <from expression="'Success'"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:ProcessInfo/ns14:ProcessStatus"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityList xmlns=&quot;http://xmlns.oracle.com/TransactionData&quot;>&lt;EntityID EntityType=&quot;SourceFileName&quot;>',bpws:getVariableData('GLFileName'),'&lt;/EntityID>&lt;EntityID EntityType=&quot;GroupID&quot;>',bpws:getVariableData('GLEntityID'),'&lt;/EntityID>&lt;EntityID EntityType=&quot;TableName&quot;>XX_GL_INTERFACE_NA_STG&lt;/EntityID>&lt;EntityID EntityType=&quot;ReleaseESPJob&quot;>NO&lt;/EntityID>&lt;/EntityList>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="logTransactionInput" part="payload"
                query="/ns14:TransactionData/ns14:EntiltyList"/>
          </copy>
        </assign>
        <invoke name="logTransaction" partnerLink="ODTransactionLogger"
                portType="ns13:ODTransactionLogger" operation="initiate"
                inputVariable="logTransactionInput"/>
      </sequence>
    </scope>
    <!--<reply name="replyOutput" partnerLink="client"
           portType="client:PostGLSIStgTableInsert" operation="process"
           variable="outputVariable"/>-->
    <invoke name="callbackClient" partnerLink="client"
            portType="client:PostGLSIStgTableInsertCallback"
            operation="onResult" inputVariable="outputVariable"/>
  </sequence>
</process>