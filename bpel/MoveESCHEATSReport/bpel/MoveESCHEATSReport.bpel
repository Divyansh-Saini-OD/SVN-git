<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Tue Aug 28 09:59:20 EDT 2007
  Author:  Cecilia-Macean
  Purpose: Empty BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="MoveESCHEATSReport"
         targetNamespace="http://xmlns.oracle.com/MoveESCHEATSReport"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns4="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:ns7="http://xmlns.oracle.com/pcbpel/adapter/ftp/"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns12="http://xmlns.oracle.com/ias/pcbpel/NotificationService"
         xmlns:ns5="ODError"
         xmlns:ns18="http://schemas.oracle.com/service/bpel/common"
         xmlns:client="http://xmlns.oracle.com/MoveESCHEATSReport"
         xmlns:ns6="http://xmlns.oracle.com/pcbpel/adapter/file/attachment/"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:ns11="http://xmlns.oracle.com/TransactionData"
         xmlns:ns9="http://xmlns.oracle.com/ODTransactionLogger"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/ftp/ReadESCHEATS/"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/opaque/"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/ftp/WriteESCHEATS/"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns8="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ns10="http://xmlns.oracle.com/BPELInvokeESP">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <partnerLinks>
    <partnerLink myRole="Get_role" name="ReadESCHEATS"
                 partnerLinkType="ns1:Get_plt"/>
    <partnerLink name="WriteESCHEATS" partnerRole="Put_role"
                 partnerLinkType="ns2:Put_plt"/>
    <partnerLink myRole="ODErrorLoggerRequester" name="ODErrorLogger"
                 partnerRole="ODErrorLoggerProvider"
                 partnerLinkType="ns4:ODErrorLogger"/>
    <partnerLink myRole="ODTransactionLoggerRequester"
                 name="ODTransactionLogger"
                 partnerRole="ODTransactionLoggerProvider"
                 partnerLinkType="ns9:ODTransactionLogger"/>
    <partnerLink name="NotificationService"
                 partnerRole="NotificationServiceProvider"
                 partnerLinkType="ns12:NotificationServiceLink"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <variable name="InvokeODErrorAll_initiate_In"
              messageType="ns4:ODErrorLoggerRequestMessage"/>
    <variable name="ReceiveESCHEATS_Get_In"
              messageType="ns1:attachmentElement_msg"/>
    <variable name="InvokeWriteESCHEATS_Put_In"
              messageType="ns2:attachmentElement_msg"/>
    <variable name="ReceiveEscheatsHeader" messageType="ns7:InboundHeader_msg"/>
    <variable name="ErrorMessageText" type="xsd:string"/>
    <variable name="ProcessHeader" type="xsd:string"/>
    <variable name="XSLT_PARAM" element="ns18:parameters"/>
    <variable name="ThreadInfoText" type="xsd:string"/>
    <variable name="invkTransactionLogger_initiate_InputVariable"
              messageType="ns9:ODTransactionLoggerRequestMessage"/>
    <variable name="varEmail" type="xsd:string"/>
    <variable name="varMessage" type="xsd:string"/>
    <variable name="varFileNameIn" type="xsd:string"/>
    <variable name="xmlFragment" type="xsd:string"/>
    <variable name="WriteEscheatsHeader" element="ns7:OutboundFTPHeaderType"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence_ErrorAll">
        <bpelx:exec name="GetThreadInfo" language="java" version="1.5">
          <![CDATA[Thread t = Thread.currentThread();    
    StringBuffer sb = new StringBuffer();    
    sb.append(getVariableData("ThreadInfoText"));   
    sb.append(" Thread Group Name: " + t.getThreadGroup().getName() + " Thread Name: " + t.getName() + ".");   
    addAuditTrailEntry(sb.toString());         
    setVariableData("ThreadInfoText", sb.toString());]]>
        </bpelx:exec>
        <assign name="AssignODErrorAll">
          <copy>
            <from expression="concat(&quot;Interface E0055 Automated Refund for Abondoned Property failed while processing file &quot;, bpws:getVariableData('ReceiveEscheatsHeader','inboundHeader','/ns7:InboundFTPHeaderType/ns7:fileName'), &quot;. &quot;,  bpws:getVariableData('ThreadInfoText'))"/>
            <to variable="ErrorMessageText"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:ProcessInfo/ns5:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:ProcessInfo/ns5:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:ProcessInfo/ns5:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessURL()"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:ProcessInfo/ns5:SystemName"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="'Catch All on the Main Sequence'"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:ProcessInfo/ns5:BusinessProcessStep"/>
          </copy>
          <copy>
            <from expression="ora:getFaultName()"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorCode"/>
          </copy>
          <copy>
            <from variable="ErrorMessageText"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorDescription"/>
          </copy>
          <copy>
            <from expression="ora:getFaultAsString()"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorText"/>
          </copy>
          <copy>
            <from expression="'system'"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorType"/>
          </copy>
          <copy>
            <from expression="'fatal'"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:ErrorDetails/ns5:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
            <to variable="InvokeODErrorAll_initiate_In" part="payload"
                query="/ns5:ErrorData/ns5:Notification/ns5:sendNotification"/>
          </copy>
        </assign>
        <scope name="logTransactionErrorLogger">
          <sequence name="Sequence_3">
            <assign name="logTrnLoggerData">
              <copy>
                <from expression="'Error'"/>
                <to variable="invkTransactionLogger_initiate_InputVariable"
                    part="payload"
                    query="/ns11:TransactionData/ns11:ProcessInfo/ns11:ProcessStatus"/>
              </copy>
            </assign>
            <invoke name="invkTrnErrorLogger" partnerLink="ODTransactionLogger"
                    portType="ns9:ODTransactionLogger" operation="initiate"
                    inputVariable="invkTransactionLogger_initiate_InputVariable"/>
          </sequence>
        </scope>
        <invoke name="InvokeODErrorAll" partnerLink="ODErrorLogger"
                portType="ns4:ODErrorLogger" operation="initiate"
                inputVariable="InvokeODErrorAll_initiate_In"/>
        <terminate name="Terminate"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <receive name="ReceiveESCHEATS" partnerLink="ReadESCHEATS"
             portType="ns1:Get_ptt" operation="Get"
             variable="ReceiveESCHEATS_Get_In" createInstance="yes"
             bpelx:headerVariable="ReceiveEscheatsHeader"/>
    <scope name="setProcessHeader">
      <sequence name="setProcessTitle">
        <assign name="initializeInstanceTitle">
          <copy>
            <from expression="substring( concat( &quot;Reading &quot;, bpws:getVariableData('ReceiveEscheatsHeader','inboundHeader','/ns7:InboundFTPHeaderType/ns7:fileName')),1,50)"/>
            <to variable="ProcessHeader"/>
          </copy>
          <copy>
            <from expression="'ESCHEATSFileName'"/>
            <to variable="XSLT_PARAM"
                query="/ns18:parameters/ns18:item/ns18:name"/>
          </copy>
          <copy>
            <from variable="ReceiveEscheatsHeader" part="inboundHeader"
                  query="/ns7:InboundFTPHeaderType/ns7:fileName"/>
            <to variable="XSLT_PARAM"
                query="/ns18:parameters/ns18:item/ns18:value"/>
          </copy>
        </assign>
        <bpelx:exec name="setTitle" language="java" version="1.5">
          <![CDATA[try {             
                         String title = (String)getVariableData("ProcessHeader");             
                         setTitle(title);             
                         addAuditTrailEntry(title) ;             
                       } catch (Exception ex) {             
                         addAuditTrailEntry(ex.toString());             
                         ex.printStackTrace();             
          }]]>
        </bpelx:exec>
      </sequence>
    </scope>
    <scope name="LogTransactionData">
      <sequence name="Sequence_1">
        <assign name="copyTransactionData">
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:ProcessInfo/ns11:Domain"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:ProcessInfo/ns11:ProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getInstanceId()"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:ProcessInfo/ns11:InstanceId"/>
          </copy>
          <copy>
            <from expression="'Start'"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:ProcessInfo/ns11:ProcessStatus"/>
          </copy>
          <copy>
            <from variable="ReceiveEscheatsHeader" part="inboundHeader"
                  query="/ns7:InboundFTPHeaderType/ns7:fileName"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:EntiltyList/ns11:EntityID"/>
          </copy>
          <copy>
            <from expression="'FTP'"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:MessageDetails/ns11:MessageOperation"/>
          </copy>
          <copy>
            <from expression="'Moving ESCHEATS report'"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:MessageDetails/ns11:MessageSourceSystem"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:MessageDetails/ns11:MessageDateTime"/>
          </copy>
          <copy>
            <from expression="'payload'"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:MessageDetails/ns11:MessageType"/>
          </copy>
          <copy>
            <from>
              <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                <EntityID EntityType="SourceFileName"/>
              </EntiltyList>
            </from>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload" query="/ns11:TransactionData/ns11:EntiltyList"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>', bpws:getVariableData('ReceiveEscheatsHeader','inboundHeader','/ns7:InboundFTPHeaderType/ns7:fileName'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:EntiltyList/ns11:EntityID[1]"/>
          </copy>
          <copy>
            <from expression="'E0055 AR Automated Refund for Abondoned Property'"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:ProcessInfo/ns11:SystemName"/>
          </copy>
          <copy>
            <from expression="'EBS'"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:ProcessInfo/ns11:TradingPartnerDetails/ns11:TPFrom"/>
          </copy>
          <copy>
            <from expression="'ESCHEATS'"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:ProcessInfo/ns11:TradingPartnerDetails/ns11:TPTo"/>
          </copy>
        </assign>
        <invoke name="invkTransactionLogger" partnerLink="ODTransactionLogger"
                portType="ns9:ODTransactionLogger" operation="initiate"
                inputVariable="invkTransactionLogger_initiate_InputVariable"/>
      </sequence>
    </scope>
    <assign name="AssignESCHEATS">
      <copy>
        <from part="attachmentElement" query="/ns6:attachmentElement"
              variable="ReceiveESCHEATS_Get_In"/>
        <to part="attachmentElement" query="/ns6:attachmentElement"
            variable="InvokeWriteESCHEATS_Put_In"/>
      </copy>
      <copy>
        <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/MoveESCHEATSReport/EmailAddress')"/>
        <to variable="varEmail"/>
      </copy>
      <copy>
        <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/MoveESCHEATSReport/message')"/>
        <to variable="varMessage"/>
      </copy>
      <copy>
        <from variable="ReceiveEscheatsHeader" part="inboundHeader"
              query="/ns7:InboundFTPHeaderType/ns7:fileName"/>
        <to variable="varFileNameIn"/>
      </copy>
      <copy>
        <from variable="ReceiveEscheatsHeader" part="inboundHeader"
              query="/ns7:InboundFTPHeaderType/ns7:fileName"/>
        <to variable="WriteEscheatsHeader"
            query="/ns7:OutboundFTPHeaderType/ns7:fileName"/>
      </copy>
    </assign>
    <invoke name="InvokeWriteESCHEATS" partnerLink="WriteESCHEATS"
            portType="ns2:Put_ptt" operation="Put"
            inputVariable="InvokeWriteESCHEATS_Put_In"
            bpelx:inputHeaderVariable="WriteEscheatsHeader"/>
    <scope name="Email_1">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:email"></bpelx:pattern>
      </bpelx:annotation>
      <variables>
        <variable name="varNotificationReq"
                  messageType="ns12:EmailNotificationRequest"/>
        <variable name="varNotificationResponse"
                  messageType="ns12:ArrayOfResponse"/>
        <variable name="NotificationServiceFaultVariable"
                  messageType="ns12:NotificationServiceErrorMessage"/>
      </variables>
      <sequence name="Sequence_5">
        <assign name="EmailParamsAssign">
          <copy>
            <from expression="string('SOAEmailNotify')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns12:FromAccountName"/>
          </copy>
          <copy>
            <from expression="string('')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns12:Bcc"/>
          </copy>
          <copy>
            <from expression="string('')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns12:Cc"/>
          </copy>
          <copy>
            <from expression="string('')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns12:ReplyToAddress"/>
          </copy>
          <copy>
            <from expression="concat('Input file name is ',bpws:getVariableData('varFileNameIn'))"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns12:Subject"/>
          </copy>
          <copy>
            <from expression="bpws:getVariableData('varEmail')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns12:To"/>
          </copy>
          <copy>
            <from expression="bpws:getVariableData('varMessage')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns12:Content/ns12:ContentBody"/>
          </copy>
          <copy>
            <from expression="string('text/html; charset=UTF-8')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns12:Content/ns12:MimeType"/>
          </copy>
        </assign>
        <invoke name="InvokeNotificationService"
                partnerLink="NotificationService"
                portType="ns12:NotificationService"
                operation="sendEmailNotification"
                inputVariable="varNotificationReq"
                outputVariable="varNotificationResponse"/>
      </sequence>
    </scope>
    <scope name="logTransactionEnd">
      <sequence name="Sequence_2">
        <assign name="logTransactionEndData">
          <copy>
            <from expression="'Success'"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:ProcessInfo/ns11:ProcessStatus"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:MessageDetails/ns11:MessageDateTime"/>
          </copy>
          <copy>
            <from>
              <EntiltyList xmlns="http://xmlns.oracle.com/TransactionData">
                <EntityID EntityType="SourceFileName"/>
                <EntityID EntityType="TargetFileName"/>
                <EntityID EntityType="ReleaseESPJob"/>
              </EntiltyList>
            </from>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload" query="/ns11:TransactionData/ns11:EntiltyList"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;SourceFileName&quot;>', bpws:getVariableData('ReceiveEscheatsHeader','inboundHeader','/ns7:InboundFTPHeaderType/ns7:fileName'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:EntiltyList/ns11:EntityID[1]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;TargetFileName&quot;>', bpws:getVariableData('ReceiveEscheatsHeader','inboundHeader','/ns7:InboundFTPHeaderType/ns7:fileName'), '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:EntiltyList/ns11:EntityID[2]"/>
          </copy>
          <copy>
            <from expression="concat('&lt;EntityID EntityType=&quot;ReleaseESPJob&quot;>', 'YES', '&lt;/EntityID>')"/>
            <to variable="xmlFragment"/>
          </copy>
          <copy>
            <from expression="ora:parseEscapedXML(bpws:getVariableData('xmlFragment'))"/>
            <to variable="invkTransactionLogger_initiate_InputVariable"
                part="payload"
                query="/ns11:TransactionData/ns11:EntiltyList/ns11:EntityID[3]"/>
          </copy>
        </assign>
        <invoke name="invkLogTransactionEndData"
                partnerLink="ODTransactionLogger"
                portType="ns9:ODTransactionLogger" operation="initiate"
                inputVariable="invkTransactionLogger_initiate_InputVariable"/>
      </sequence>
    </scope>
  </sequence>
</process>