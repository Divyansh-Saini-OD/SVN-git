<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Tue Apr 10 15:45:31 IST 2007
  Author:  shereen
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="I1153_DPSNowPrintEBS_JobConfRel_Master"
         targetNamespace="http://xmlns.oracle.com/I1153_DPSNowPrintEBS_JobConfRel_Master"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns4="ODError"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns5="http://xmlns.oracle.com/I1153_DPSNowPrintEBS_Rel"
         xmlns:client="http://xmlns.oracle.com/I1153_DPSNowPrintEBS_JobConfRel_Master"
         xmlns:ns6="http://xmlns.oracle.com/I1153_DPSNowPrintEBS_JobConfRel_Child"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns1="http://xmlns.oracle.com/I1153_DPS_NowPrintEBS_JobConfirmRel_Child"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:ns2="http://xmlbeans.orderProcessing.externalVendors.officedepot.com"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="plNowDocs"
                 partnerLinkType="client:I1153_DPSNowPrintEBS_JobConfRel_Master"
                 myRole="I1153_DPSNowPrintEBS_JobConfRel_MasterProvider"/>
    <partnerLink name="ODErrorLogger" partnerRole="ODErrorLoggerProvider"
                 partnerLinkType="ns3:ODErrorLogger"/>
    <partnerLink name="svcJobConfRelChild"
                 partnerRole="I1153_DPSNowPrintEBS_JobConfRel_ChildProvider"
                 partnerLinkType="ns6:I1153_DPSNowPrintEBS_JobConfRel_Child"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <!-- Reference to the message that will be returned to the requester-->
    <variable name="RemoteFaultVar" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="asnActivityName" type="xsd:string"/>
    <variable name="BindingFaultVar" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="invkODErrorLoggerBindingIn"
              messageType="ns3:ODErrorLoggerRequestMessage"/>
    <variable name="rcvNowDocsIn"
              messageType="client:I1153_DPSNowPrintEBS_JobConfRel_MasterRequestMessage"/>
    <variable name="replyNowDocsOut"
              messageType="client:I1153_DPSNowPrintEBS_JobConfRel_MasterResponseMessage"/>
    <variable name="invksvcJobConfRelChildIn"
              messageType="ns6:I1153_DPSNowPrintEBS_JobConfRel_ChildRequestMessage"/>
    <variable name="invkODErrorLoggerCatchAllIn"
              messageType="ns3:ODErrorLoggerRequestMessage"/>
    <variable name="messageDataVar" type="xsd:string"/>
    <variable name="invkODErrorLoggerRemoteIn"
              messageType="ns3:ODErrorLoggerRequestMessage"/>
    <variable name="activityNameVar" type="xsd:string"/>
  </variables>
  <faultHandlers>
    <catch faultName="bpelx:remoteFault" faultVariable="RemoteFaultVar">
      <sequence name="SequenceRemoteFault">
        <assign name="assignRemExcepVar">
          <bpelx:annotation>
            <bpelx:documentation>This activity is used to assign the error
                                 paramters to the ODError logger service</bpelx:documentation>
          </bpelx:annotation>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:generateGUID()"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from variable="RemoteFaultVar" part="code"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorCode"/>
          </copy>
          <copy>
            <from variable="RemoteFaultVar" part="detail"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="RemoteFaultVar" part="detail"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorText"/>
          </copy>
          <copy>
            <from variable="activityNameVar"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessStep"/>
          </copy>
          <copy>
            <from expression="ids:getDefaultRealmName()"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:SystemName"/>
          </copy>
          <copy>
            <from expression="'Fatal'"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:MessageDetails/ns4:MessageDateTime"/>
          </copy>
          <copy>
            <from expression="ora:getContentAsString(bpws:getVariableData('rcvNowDocsIn'))"/>
            <to variable="invkODErrorLoggerRemoteIn" part="payload"
                query="/ns4:ErrorData/ns4:MessageDetails/ns4:MessageData"/>
          </copy>
        </assign>
        <invoke name="invokeRemErrorLogger" partnerLink="ODErrorLogger"
                portType="ns3:ODErrorLogger" operation="initiate"
                inputVariable="invkODErrorLoggerRemoteIn">
          <bpelx:annotation>
            <bpelx:documentation>This activity is used to invoke the service
                                 ODError Logger and log the error details</bpelx:documentation>
          </bpelx:annotation>
        </invoke>
        <assign name="assignReply">
          <bpelx:annotation>
            <bpelx:documentation>This Activity is used to assign the Reply to
                                 the Nowdocs</bpelx:documentation>
          </bpelx:annotation>
          <copy>
            <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/JobConfirm/EnqueueDelay")'/>
            <to variable="replyNowDocsOut" part="payload"
                query="/client:I1153_DPSNowPrintEBS_JobConfRel_MasterProcessResponse/client:result"/>
          </copy>
        </assign>
      </sequence>
    </catch>
    <catch faultName="bpelx:bindingFault" faultVariable="BindingFaultVar">
      <sequence name="SequenceBindingFault">
        <assign name="assignBindingExcepVar">
          <bpelx:annotation>
            <bpelx:documentation>This activity is used to assign the error
                                 paramters to the ODError logger service</bpelx:documentation>
          </bpelx:annotation>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessName"/>
          </copy>
          <copy>
            <from expression="ora:generateGUID()"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from variable="BindingFaultVar" part="code"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorCode"/>
          </copy>
          <copy>
            <from variable="BindingFaultVar" part="detail"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorDescription"/>
          </copy>
          <copy>
            <from variable="BindingFaultVar" part="detail"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorText"/>
          </copy>
          <copy>
            <from variable="activityNameVar"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessStep"/>
          </copy>
          <copy>
            <from expression="ids:getDefaultRealmName()"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:SystemName"/>
          </copy>
          <copy>
            <from expression="'Fatal'"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorSeverity"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorDateTime"/>
          </copy>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:MessageDetails/ns4:MessageDateTime"/>
          </copy>
          <copy>
            <from expression="ora:getContentAsString(bpws:getVariableData('rcvNowDocsIn'))"/>
            <to variable="invkODErrorLoggerBindingIn" part="payload"
                query="/ns4:ErrorData/ns4:MessageDetails/ns4:MessageData"/>
          </copy>
        </assign>
        <invoke name="invokeBindODErrorLogger" partnerLink="ODErrorLogger"
                portType="ns3:ODErrorLogger"
                inputVariable="invkODErrorLoggerBindingIn" operation="initiate">
          <bpelx:annotation>
            <bpelx:documentation>This activity is used to invoke the service
                                 ODError Logger and log the error details</bpelx:documentation>
          </bpelx:annotation>
        </invoke>
        <assign name="assignReply">
          <bpelx:annotation>
            <bpelx:documentation>This Activity is used to assign the Reply to
                                 the Nowdocs</bpelx:documentation>
          </bpelx:annotation>
          <copy>
            <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/JobConfirm/EnqueueDelay")  '/>
            <to variable="replyNowDocsOut" part="payload"
                query="/client:I1153_DPSNowPrintEBS_JobConfRel_MasterProcessResponse/client:result"/>
          </copy>
        </assign>
      </sequence>
    </catch>
    <catchAll>
      <sequence name="SequenceCatchAll">
        <assign name="assignExcepVarCatchAll">
          <bpelx:annotation>
            <bpelx:documentation>This activity is used to assign the error
                                 paramters to the ODError logger service</bpelx:documentation>
          </bpelx:annotation>
          <copy>
            <from expression="ora:getCurrentDateTime()"/>
            <to variable="invkODErrorLoggerCatchAllIn" part="payload"
                query="/ns4:ErrorData/ns4:MessageDetails/ns4:MessageDateTime"/>
          </copy>
          <copy>
            <from expression="ora:getDomainId()"/>
            <to variable="invkODErrorLoggerCatchAllIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessDomain"/>
          </copy>
          <copy>
            <from expression="ora:generateGUID()"/>
            <to variable="invkODErrorLoggerCatchAllIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessId"/>
          </copy>
          <copy>
            <from expression="ora:getProcessId()"/>
            <to variable="invkODErrorLoggerCatchAllIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessName"/>
          </copy>
          <copy>
            <from variable="activityNameVar"/>
            <to variable="invkODErrorLoggerCatchAllIn" part="payload"
                query="/ns4:ErrorData/ns4:ProcessInfo/ns4:BusinessProcessStep"/>
          </copy>
          <copy>
            <from expression="ora:getContentAsString(bpws:getVariableData('rcvNowDocsIn'))"/>
            <to variable="invkODErrorLoggerCatchAllIn" part="payload"
                query="/ns4:ErrorData/ns4:MessageDetails/ns4:MessageData"/>
          </copy>
          <copy>
            <from expression="concat('Error Occurred In This Step',activityNameVar)"/>
            <to variable="invkODErrorLoggerCatchAllIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorDescription"/>
          </copy>
          <copy>
            <from expression="concat('Error Occurred In This Step',activityNameVar)"/>
            <to variable="invkODErrorLoggerCatchAllIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorCode"/>
          </copy>
          <copy>
            <from expression="concat('Error Occurred In This Step',activityNameVar)"/>
            <to variable="invkODErrorLoggerCatchAllIn" part="payload"
                query="/ns4:ErrorData/ns4:ErrorDetails/ns4:ErrorText"/>
          </copy>
        </assign>
        <invoke name="invokeErrorLogger" partnerLink="ODErrorLogger"
                portType="ns3:ODErrorLogger" operation="initiate"
                inputVariable="invkODErrorLoggerCatchAllIn">
          <bpelx:annotation>
            <bpelx:documentation>This activity is used to invoke the service
                                 ODError Logger and log the error details</bpelx:documentation>
          </bpelx:annotation>
        </invoke>
        <assign name="assignReply">
          <bpelx:annotation>
            <bpelx:documentation>This Activity is used to assign the Reply to
                                 the Nowdocs</bpelx:documentation>
          </bpelx:annotation>
          <copy>
            <from expression='ora:doc("${server_url}/xmllib/otc/GlobalParameters.xml","/GlobalParameters/OTC/DPS/JobConfirm/Status")'/>
            <to variable="replyNowDocsOut" part="payload"
                query="/client:I1153_DPSNowPrintEBS_JobConfRel_MasterProcessResponse/client:result"/>
          </copy>
        </assign>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in I1153_DPSNowPrintEBS_JobConfRel_Master.wsdl) -->
    <receive name="receiveNowDocs" partnerLink="plNowDocs"
             portType="client:I1153_DPSNowPrintEBS_JobConfRel_Master"
             operation="process" variable="rcvNowDocsIn" createInstance="yes">
      <bpelx:annotation>
        <bpelx:documentation>This activity is used to receive the Release
                             Acknowledgement message from the Nowdocs as a part
                             of the Process</bpelx:documentation>
      </bpelx:annotation>
    </receive>
    <!-- Generate reply to synchronous request -->
    <assign name="assignInput">
      <bpelx:annotation>
        <bpelx:documentation>This activity is used to assign the input message
                             from the Nowdocs to invoke the child Process DB
                             Package for updation of the acknowedgement</bpelx:documentation>
      </bpelx:annotation>
      <copy>
        <from expression="'invsvcJobConfRelChild - Invoking the Child Process for Releasing the Hold And Updating the DPS Status in the Order Lines table'"/>
        <to variable="asnActivityName"/>
      </copy>
      <copy>
        <from variable="rcvNowDocsIn" part="payload"
              query="/ns2:ReleaseOrderRequest"/>
        <to variable="invksvcJobConfRelChildIn" part="payload"
            query="/ns2:ReleaseOrderRequest"/>
      </copy>
    </assign>
    <invoke name="invokeRelHoldChild" partnerLink="svcJobConfRelChild"
            portType="ns6:I1153_DPSNowPrintEBS_JobConfRel_Child"
            operation="initiate" inputVariable="invksvcJobConfRelChildIn">
      <bpelx:annotation>
        <bpelx:documentation>This activity is used to invoke the Child Process
                             which inturn for updates the acknowledgement from
                             Nowdocs</bpelx:documentation>
      </bpelx:annotation>
    </invoke>
    <reply name="replyNowDocs" partnerLink="plNowDocs"
           portType="client:I1153_DPSNowPrintEBS_JobConfRel_Master"
           operation="process" variable="replyNowDocsOut">
      <bpelx:annotation>
        <bpelx:documentation>This activity is used to send the reply back to the
                             Nowdocs</bpelx:documentation>
      </bpelx:annotation>
    </reply>
  </sequence>
</process>