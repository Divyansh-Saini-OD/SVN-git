<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Fri Jul 27 13:02:05 EDT 2007
  Author:  bsonai
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ValidateGLCOASegments"
         targetNamespace="http://xmlns.oracle.com/ValidateGLCOASegments"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns4="http://xmlns.oracle.com/ODTransactionLogger"
         xmlns:ns7="http://xmlns.oracle.com/TransactionData"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns5="http://xmlns.oracle.com/BPELInvokeESP"
         xmlns:client="http://xmlns.oracle.com/ValidateGLCOASegments"
         xmlns:ns6="http://xmlns.oracle.com/ODErrorLogger"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/GL_Cross_Reference/"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://www.officedepot.com/glcoa/validation/"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XX_GL_CROSS_VALIDATION/"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns15="ODError"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc">
    <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="client"
                     partnerLinkType="client:ValidateGLCOASegments"
                     myRole="ValidateGLCOASegmentsProvider"
                     partnerRole="ValidateGLCOASegmentsProvider"/>
        <partnerLink name="ODErrorLogger" partnerRole="ODErrorLoggerProvider"
                     partnerLinkType="ns6:ODErrorLogger"
                     myRole="ODErrorLoggerRequester"/>
        <partnerLink name="GL_Cross_Reference"
                     partnerRole="GL_Cross_Reference_role"
                     partnerLinkType="ns1:GL_Cross_Reference_plt"/>
    </partnerLinks>
    <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable"
                  messageType="client:ValidateGLCOASegmentsRequestMessage"/>
        <!-- Reference to the message that will be returned to the requester-->
        <variable name="outputVariable"
                  messageType="client:ValidateGLCOASegmentsResponseMessage"/>
        <variable name="invkCatchAll_initiate"
                  messageType="ns6:ODErrorLoggerRequestMessage"/>
        <variable name="Invoke_GL_Validation_GL_Cross_Reference_InputVariable"
                  messageType="ns1:args_in_msg"/>
        <variable name="GL_Validation_In" messageType="ns1:args_in_msg"/>
        <variable name="ProcessHeader" type="xsd:string"/>
        <variable name="GL_Validation_Out" messageType="ns1:args_out_msg"/>
        <variable name="ErrorMessageText" type="xsd:string"/>
    </variables>
    <faultHandlers>
        <catchAll>
            <sequence name="Sequence_4">
                <assign name="asnCatchAll">
                    <copy>
                        <from expression="'Error encountered in Process ValidateGLCOASegments'"/>
                        <to variable="ErrorMessageText"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getInstanceId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessId"/>
                    </copy>
                    <copy>
                        <from expression="ora:getDomainId()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessDomain"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessURL()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ProcessInfo/ns15:SystemName"/>
                    </copy>
                    <copy>
                        <from expression="ora:getCurrentDateTime()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorDateTime"/>
                    </copy>
                    <copy>
                        <from expression="'Catch All on the Main Sequence'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ProcessInfo/ns15:BusinessProcessStep"/>
                    </copy>
                    <copy>
                        <from expression="ora:getFaultName()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorCode"/>
                    </copy>
                    <copy>
                        <from variable="ErrorMessageText"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorDescription"/>
                    </copy>
                    <copy>
                        <from expression="ora:getFaultAsString()"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorText"/>
                    </copy>
                    <copy>
                        <from expression="'system'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorType"/>
                    </copy>
                    <copy>
                        <from expression="'fatal'"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:ErrorDetails/ns15:ErrorSeverity"/>
                    </copy>
                    <copy>
                        <from expression="ora:doc('${server_url}/xmllib/fin/GlobalParameters.xml','/GlobalParameters/FaultNotification/SendNotification')"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:Notification/ns15:sendNotification"/>
                    </copy>
                    <copy>
                        <from expression="ora:getContentAsString(bpws:getVariableData('inputVariable','input','/ns3:GLCOARequest'))"/>
                        <to variable="invkCatchAll_initiate" part="payload"
                            query="/ns15:ErrorData/ns15:MessageDetails/ns15:MessageData"/>
                    </copy>
                </assign>
                <invoke name="invkCatchAll" partnerLink="ODErrorLogger"
                        portType="ns6:ODErrorLogger" operation="initiate"
                        inputVariable="invkCatchAll_initiate"/>
                <terminate name="Terminate"/>
            </sequence>
        </catchAll>
    </faultHandlers>
    <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in ValidateGLCOASegments.wsdl) -->
        <receive name="receiveInput" partnerLink="client"
                 portType="client:ValidateGLCOASegments" operation="process"
                 variable="inputVariable" createInstance="yes"/>
        <!-- Generate reply to synchronous request -->
        <scope name="SetProcessHeader">
            <sequence name="Sequence_9">
                <assign name="initializeInstanceTitle">
                    <copy>
                        <from expression="substring(concat('CA:', bpws:getVariableData('inputVariable','input','/ns3:GLCOARequest/ns3:COAName'), ',C:', bpws:getVariableData('inputVariable','input','/ns3:GLCOARequest/ns3:Company'), ',CC:', bpws:getVariableData('inputVariable','input','/ns3:GLCOARequest/ns3:CostCenter'), ',A:', bpws:getVariableData('inputVariable','input','/ns3:GLCOARequest/ns3:Account'), ',L:', bpws:getVariableData('inputVariable','input','/ns3:GLCOARequest/ns3:Location'), ',I:', bpws:getVariableData('inputVariable','input','/ns3:GLCOARequest/ns3:Intercompany'), ',LOB:', bpws:getVariableData('inputVariable','input','/ns3:GLCOARequest/ns3:LOB') ),1,50)"/>
                        <to variable="ProcessHeader"/>
                    </copy>
                </assign>
                <bpelx:exec name="setTitleCode" language="java" version="1.5">
                    <![CDATA[try {                  
  String title = (String)getVariableData("ProcessHeader");                  
  setTitle(title);                  
  addAuditTrailEntry(title) ;                  
} catch (Exception ex) {                  
  addAuditTrailEntry(ex.toString());                  
  ex.printStackTrace();                  
}]]>
                </bpelx:exec>
            </sequence>
        </scope>
        <scope name="Scope_Invoke">
            <variables>
                <variable name="RemoteFaultVar"
                          messageType="bpelx:RuntimeFaultMessage"/>
            </variables>
            <sequence name="sequence_1">
                <assign name="Transform_GL">
                    <bpelx:annotation>
                        <bpelx:pattern>transformation</bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                        <from expression="ora:processXSLT('Transformation_GL.xsl',bpws:getVariableData('inputVariable','input'))"/>
                        <to variable="GL_Validation_In" part="InputParameters"/>
                    </copy>
                </assign>
                <invoke name="Invoke_GL_Validation"
                        partnerLink="GL_Cross_Reference"
                        portType="ns1:GL_Cross_Reference_ptt"
                        operation="GL_Cross_Reference"
                        inputVariable="GL_Validation_In"
                        outputVariable="GL_Validation_Out"/>
                <assign name="Transform_Out">
                    <bpelx:annotation>
                        <bpelx:pattern>transformation</bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                        <from expression="ora:processXSLT('Transformation_Out.xsl',bpws:getVariableData('GL_Validation_Out','OutputParameters'))"/>
                        <to variable="outputVariable" part="result"/>
                    </copy>
                </assign>
                <reply name="replyOutput" partnerLink="client"
                       portType="client:ValidateGLCOASegments"
                       operation="process" variable="outputVariable"/>
            </sequence>
        </scope>
    </sequence>
</process>