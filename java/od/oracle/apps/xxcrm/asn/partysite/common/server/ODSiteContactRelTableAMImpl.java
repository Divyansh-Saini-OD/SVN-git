/*===========================================================================+
 |                       Office Depot - Project Simplify                     |
 |            Oracle NAIO/WIPRO/Office Depot/Consulting Organization         |
 +===========================================================================+
 |  FILENAME                                                                 |
 |             ODSiteContactRelTableAMImpl.java                                |
 |                                                                           |
 |  DESCRIPTION                                                              |
 |    Application Module for party site level contact relationships.         |
 |                                                                           |
 |  NOTES                                                                    |
 |                                                                           |
 |                                                                           |
 |  DEPENDENCIES                                                             |
 |    This class file is called from ODSiteContactRelTableCO.java              |
 |                                                                           |
 |  HISTORY                                                                  |
 |                                                                           |
 |    04/09/2007 Ashok Kumar   Created                                       |
 |                                                                           |
 +===========================================================================*/
package od.oracle.apps.xxcrm.asn.partysite.common.server;
import java.io.Serializable;

import java.sql.SQLException;

import od.oracle.apps.xxcrm.asn.common.fwk.server.ODASNApplicationModuleImpl;

import oracle.apps.fnd.common.MessageToken;
import oracle.apps.fnd.common.VersionInfo;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.OAFwkConstants;
import oracle.apps.fnd.framework.OAViewObject;
import oracle.apps.fnd.framework.server.OADBTransaction;

import oracle.jbo.domain.Number;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;


//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODSiteContactRelTableAMImpl extends OAApplicationModuleImpl
{
  /**
  * Oracle Applications internal source control identifier.
  */
  public static final String RCS_ID="$Header: /home/cvs/repository/Office_Depot/SRC/CRM/E1307_SiteLevel_Attributes_ASN/3.\040Source\040Code\040&\040Install\040Files/E1307C_SiteLevel_Attributes_(SiteViewUpdates)/ODSiteContactRelTableAMImpl.java,v 1.5 2007/10/18 14:06:01 akumar Exp $";

  /**
  * Oracle Applications internal source control identifier.
  */
  public static final boolean RCS_ID_RECORDED =
    VersionInfo.recordClassVersion(RCS_ID, "od.oracle.apps.xxcrm.asn.partysite.common.server");

  /**
   *
   * This is the default constructor (do not remove)
   */
  public ODSiteContactRelTableAMImpl()
  {
  }

  /**
   *
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxcrm.asn.partysite.common.server", "ODSiteContactRelTableAMLocal");
  }


  /**
   * Method to initialize the contact’s region.
   */
  public void initTableQuery(String partySiteId)
  {
    final String METHOD_NAME = "xxcrm.asn.partysite.common.server.ODSiteContactRelTableAMImpl.initTableQuery";
    OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();
    boolean isProcLogEnabled = dbTrx.isLoggingEnabled(OAFwkConstants.PROCEDURE);

    if (isProcLogEnabled)
    {
      dbTrx.writeDiagnostics(METHOD_NAME, "Begin", OAFwkConstants.PROCEDURE);
    }

     //All parameters passed using invokeMethod() must be serializable.
     Serializable[] parameters =  { partySiteId };
     OAViewObject vo = (OAViewObject)findViewObject("ODHzSiteContRelTableVO");
     if (vo == null)
     {
        MessageToken[] tokens = { new MessageToken("OBJECT_NAME", "ODHzSiteContRelTableVOImpl") };
        throw new OAException("ASN", "ASN_CMMN_OBJ_MISS_ERR", tokens);
     }
     vo.invokeMethod("initQuery", parameters);

     if (isProcLogEnabled)
     {
       dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);
     }

  }

  public void deleteRelationships(String extensionId)
  {
    final String METHOD_NAME = "xxcrm.asn.partysite.common.server.ODSiteContactRelTableAMImpl.deleteRelationships";
    OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();
    boolean isProcLogEnabled = dbTrx.isLoggingEnabled(OAFwkConstants.PROCEDURE);

    if (isProcLogEnabled)
    {
      dbTrx.writeDiagnostics(METHOD_NAME, "Begin", OAFwkConstants.PROCEDURE);
    }

    ODHzSiteContRelTableVOImpl vo = (ODHzSiteContRelTableVOImpl)getODHzSiteContRelTableVO();
    try
    {
        ODHzSiteContRelTableVORowImpl row =  (ODHzSiteContRelTableVORowImpl)vo.getFirstFilteredRow("ExtensionId",new Number(extensionId));
        row.remove();
    }
    catch(SQLException e)
    {
        dbTrx.writeDiagnostics(METHOD_NAME,"ODSiteContactRelTableAM.deleteRelationships:SQL Exception", OAFwkConstants.PROCEDURE);
    };

    getTransaction().commit();
    vo.executeQuery();


    if (isProcLogEnabled)
    {
      dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);
    }
  }

  /**
   *
   * Container's getter for ODHzSiteContRelTableVO
   */
  public ODHzSiteContRelTableVOImpl getODHzSiteContRelTableVO()
  {
    return (ODHzSiteContRelTableVOImpl)findViewObject("ODHzSiteContRelTableVO");
  }


}