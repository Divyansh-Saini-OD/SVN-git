/*===========================================================================+
 |                       Office Depot - Project Simplify                     |
 |            Oracle NAIO/WIPRO/Office Depot/Consulting Organization         |
 +===========================================================================+
 |  FILENAME                                                                 |
 |             ODTasksEOImpl.java                                            |
 |                                                                           |
 |  DESCRIPTION                                                              |
 |     Entity Object for Tasks - JTF_TASKS_B                                 | 
 |                                                                           |
 |  NOTES                                                                    |
 |                                                                           |
 |                                                                           |
 |  DEPENDENCIES                                                             |
 |    No dependencies.                                                       |
 |                                                                           |
 |  HISTORY                                                                  |
 |                                                                           |
 |    01/OCT/2007 Sudeept Maharana   Created  / Generated                    |
 |                                                                           |
 +===========================================================================*/
package od.oracle.apps.xxcrm.asn.partysite.schema.server;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODTasksEOImpl extends OAEntityImpl 
{
  protected static final int TASKID = 0;
  protected static final int CREATEDBY = 1;
  protected static final int CREATIONDATE = 2;
  protected static final int LASTUPDATEDBY = 3;
  protected static final int LASTUPDATEDATE = 4;
  protected static final int LASTUPDATELOGIN = 5;
  protected static final int OBJECTVERSIONNUMBER = 6;
  protected static final int TASKNUMBER = 7;
  protected static final int TASKNAME = 8;
  protected static final int TASKTYPEID = 9;
  protected static final int TASKSTATUSID = 10;
  protected static final int TASKPRIORITYID = 11;
  protected static final int OWNERID = 12;
  protected static final int OWNERTYPECODE = 13;
  protected static final int OWNERTERRITORYID = 14;
  protected static final int ASSIGNEDBYID = 15;
  protected static final int CUSTACCOUNTID = 16;
  protected static final int CUSTOMERID = 17;
  protected static final int ADDRESSID = 18;
  protected static final int PLANNEDSTARTDATE = 19;
  protected static final int PLANNEDENDDATE = 20;
  protected static final int SCHEDULEDSTARTDATE = 21;
  protected static final int SCHEDULEDENDDATE = 22;
  protected static final int ACTUALSTARTDATE = 23;
  protected static final int ACTUALENDDATE = 24;
  protected static final int SOURCEOBJECTTYPECODE = 25;
  protected static final int TIMEZONEID = 26;
  protected static final int SOURCEOBJECTID = 27;
  protected static final int SOURCEOBJECTNAME = 28;
  protected static final int DURATION = 29;
  protected static final int DURATIONUOM = 30;
  protected static final int PLANNEDEFFORT = 31;
  protected static final int PLANNEDEFFORTUOM = 32;
  protected static final int ACTUALEFFORT = 33;
  protected static final int ACTUALEFFORTUOM = 34;
  protected static final int PERCENTAGECOMPLETE = 35;
  protected static final int REASONCODE = 36;
  protected static final int PRIVATEFLAG = 37;
  protected static final int PUBLISHFLAG = 38;
  protected static final int RESTRICTCLOSUREFLAG = 39;
  protected static final int MULTIBOOKEDFLAG = 40;
  protected static final int MILESTONEFLAG = 41;
  protected static final int HOLIDAYFLAG = 42;
  protected static final int BILLABLEFLAG = 43;
  protected static final int BOUNDMODECODE = 44;
  protected static final int SOFTBOUNDFLAG = 45;
  protected static final int WORKFLOWPROCESSID = 46;
  protected static final int NOTIFICATIONFLAG = 47;
  protected static final int NOTIFICATIONPERIOD = 48;
  protected static final int NOTIFICATIONPERIODUOM = 49;
  protected static final int PARENTTASKID = 50;
  protected static final int RECURRENCERULEID = 51;
  protected static final int ALARMSTART = 52;
  protected static final int ALARMSTARTUOM = 53;
  protected static final int ALARMON = 54;
  protected static final int ALARMCOUNT = 55;
  protected static final int ALARMFIREDCOUNT = 56;
  protected static final int ALARMINTERVAL = 57;
  protected static final int ALARMINTERVALUOM = 58;
  protected static final int DELETEDFLAG = 59;
  protected static final int PALMFLAG = 60;
  protected static final int WINCEFLAG = 61;
  protected static final int LAPTOPFLAG = 62;
  protected static final int DEVICE1FLAG = 63;
  protected static final int DEVICE2FLAG = 64;
  protected static final int DEVICE3FLAG = 65;
  protected static final int COSTS = 66;
  protected static final int CURRENCYCODE = 67;
  protected static final int ORGID = 68;
  protected static final int ESCALATIONLEVEL = 69;
  protected static final int ATTRIBUTE1 = 70;
  protected static final int ATTRIBUTE2 = 71;
  protected static final int ATTRIBUTE3 = 72;
  protected static final int ATTRIBUTE4 = 73;
  protected static final int ATTRIBUTE5 = 74;
  protected static final int ATTRIBUTE6 = 75;
  protected static final int ATTRIBUTE7 = 76;
  protected static final int ATTRIBUTE8 = 77;
  protected static final int ATTRIBUTE9 = 78;
  protected static final int ATTRIBUTE10 = 79;
  protected static final int ATTRIBUTE11 = 80;
  protected static final int ATTRIBUTE12 = 81;
  protected static final int ATTRIBUTE13 = 82;
  protected static final int ATTRIBUTE14 = 83;
  protected static final int ATTRIBUTE15 = 84;
  protected static final int ATTRIBUTECATEGORY = 85;
  protected static final int SECURITYGROUPID = 86;
  protected static final int ORIGSYSTEMREFERENCE = 87;
  protected static final int ORIGSYSTEMREFERENCEID = 88;
  protected static final int UPDATESTATUSFLAG = 89;
  protected static final int CALENDARSTARTDATE = 90;
  protected static final int CALENDARENDDATE = 91;
  protected static final int DATESELECTED = 92;
  protected static final int TEMPLATEID = 93;
  protected static final int TEMPLATEGROUPID = 94;
  protected static final int OBJECTCHANGEDDATE = 95;
  protected static final int TASKCONFIRMATIONSTATUS = 96;
  protected static final int TASKCONFIRMATIONCOUNTER = 97;
  protected static final int TASKSPLITFLAG = 98;
  protected static final int OPENFLAG = 99;
  protected static final int ENTITY = 100;
  protected static final int CHILDPOSITION = 101;
  protected static final int CHILDSEQUENCENUM = 102;
  protected static final int DESCRIPTION = 103;
  protected static final int ROWID = 104;
  protected static final int OA_TL_ENTITIES = 105;





































































  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODTasksEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxcrm.asn.partysite.schema.server.ODTasksEO");
    }
    return mDefinitionObject;
  }






































































  /**
   * 
   * Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    super.create(attributeList);
  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**
   * 
   * Add locking logic here.
   */
  public void lock()
  {
    super.lock();
  }

  /**
   * 
   * Custom DML update/insert/delete logic here.
   */
  protected void doDML(int operation, TransactionEvent e)
  {
    super.doDML(operation, e);
  }

  /**
   * 
   * Gets the attribute value for TaskId, using the alias name TaskId
   */
  public Number getTaskId()
  {
    return (Number)getAttributeInternal(TASKID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaskId
   */
  public void setTaskId(Number value)
  {
    setAttributeInternal(TASKID, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber
   */
  public Number getObjectVersionNumber()
  {
    return (Number)getAttributeInternal(OBJECTVERSIONNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ObjectVersionNumber
   */
  public void setObjectVersionNumber(Number value)
  {
    setAttributeInternal(OBJECTVERSIONNUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for TaskNumber, using the alias name TaskNumber
   */
  public String getTaskNumber()
  {
    return (String)getAttributeInternal(TASKNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaskNumber
   */
  public void setTaskNumber(String value)
  {
    setAttributeInternal(TASKNUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for TaskTypeId, using the alias name TaskTypeId
   */
  public Number getTaskTypeId()
  {
    return (Number)getAttributeInternal(TASKTYPEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaskTypeId
   */
  public void setTaskTypeId(Number value)
  {
    setAttributeInternal(TASKTYPEID, value);
  }

  /**
   * 
   * Gets the attribute value for TaskStatusId, using the alias name TaskStatusId
   */
  public Number getTaskStatusId()
  {
    return (Number)getAttributeInternal(TASKSTATUSID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaskStatusId
   */
  public void setTaskStatusId(Number value)
  {
    setAttributeInternal(TASKSTATUSID, value);
  }

  /**
   * 
   * Gets the attribute value for TaskPriorityId, using the alias name TaskPriorityId
   */
  public Number getTaskPriorityId()
  {
    return (Number)getAttributeInternal(TASKPRIORITYID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaskPriorityId
   */
  public void setTaskPriorityId(Number value)
  {
    setAttributeInternal(TASKPRIORITYID, value);
  }

  /**
   * 
   * Gets the attribute value for OwnerId, using the alias name OwnerId
   */
  public Number getOwnerId()
  {
    return (Number)getAttributeInternal(OWNERID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OwnerId
   */
  public void setOwnerId(Number value)
  {
    setAttributeInternal(OWNERID, value);
  }

  /**
   * 
   * Gets the attribute value for OwnerTypeCode, using the alias name OwnerTypeCode
   */
  public String getOwnerTypeCode()
  {
    return (String)getAttributeInternal(OWNERTYPECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OwnerTypeCode
   */
  public void setOwnerTypeCode(String value)
  {
    setAttributeInternal(OWNERTYPECODE, value);
  }

  /**
   * 
   * Gets the attribute value for OwnerTerritoryId, using the alias name OwnerTerritoryId
   */
  public Number getOwnerTerritoryId()
  {
    return (Number)getAttributeInternal(OWNERTERRITORYID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OwnerTerritoryId
   */
  public void setOwnerTerritoryId(Number value)
  {
    setAttributeInternal(OWNERTERRITORYID, value);
  }

  /**
   * 
   * Gets the attribute value for AssignedById, using the alias name AssignedById
   */
  public Number getAssignedById()
  {
    return (Number)getAttributeInternal(ASSIGNEDBYID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AssignedById
   */
  public void setAssignedById(Number value)
  {
    setAttributeInternal(ASSIGNEDBYID, value);
  }

  /**
   * 
   * Gets the attribute value for CustAccountId, using the alias name CustAccountId
   */
  public Number getCustAccountId()
  {
    return (Number)getAttributeInternal(CUSTACCOUNTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CustAccountId
   */
  public void setCustAccountId(Number value)
  {
    setAttributeInternal(CUSTACCOUNTID, value);
  }

  /**
   * 
   * Gets the attribute value for CustomerId, using the alias name CustomerId
   */
  public Number getCustomerId()
  {
    return (Number)getAttributeInternal(CUSTOMERID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CustomerId
   */
  public void setCustomerId(Number value)
  {
    setAttributeInternal(CUSTOMERID, value);
  }

  /**
   * 
   * Gets the attribute value for AddressId, using the alias name AddressId
   */
  public Number getAddressId()
  {
    return (Number)getAttributeInternal(ADDRESSID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AddressId
   */
  public void setAddressId(Number value)
  {
    setAttributeInternal(ADDRESSID, value);
  }

  /**
   * 
   * Gets the attribute value for PlannedStartDate, using the alias name PlannedStartDate
   */
  public Date getPlannedStartDate()
  {
    return (Date)getAttributeInternal(PLANNEDSTARTDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PlannedStartDate
   */
  public void setPlannedStartDate(Date value)
  {
    setAttributeInternal(PLANNEDSTARTDATE, value);
  }

  /**
   * 
   * Gets the attribute value for PlannedEndDate, using the alias name PlannedEndDate
   */
  public Date getPlannedEndDate()
  {
    return (Date)getAttributeInternal(PLANNEDENDDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PlannedEndDate
   */
  public void setPlannedEndDate(Date value)
  {
    setAttributeInternal(PLANNEDENDDATE, value);
  }

  /**
   * 
   * Gets the attribute value for ScheduledStartDate, using the alias name ScheduledStartDate
   */
  public Date getScheduledStartDate()
  {
    return (Date)getAttributeInternal(SCHEDULEDSTARTDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ScheduledStartDate
   */
  public void setScheduledStartDate(Date value)
  {
    setAttributeInternal(SCHEDULEDSTARTDATE, value);
  }

  /**
   * 
   * Gets the attribute value for ScheduledEndDate, using the alias name ScheduledEndDate
   */
  public Date getScheduledEndDate()
  {
    return (Date)getAttributeInternal(SCHEDULEDENDDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ScheduledEndDate
   */
  public void setScheduledEndDate(Date value)
  {
    setAttributeInternal(SCHEDULEDENDDATE, value);
  }

  /**
   * 
   * Gets the attribute value for ActualStartDate, using the alias name ActualStartDate
   */
  public Date getActualStartDate()
  {
    return (Date)getAttributeInternal(ACTUALSTARTDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ActualStartDate
   */
  public void setActualStartDate(Date value)
  {
    setAttributeInternal(ACTUALSTARTDATE, value);
  }

  /**
   * 
   * Gets the attribute value for ActualEndDate, using the alias name ActualEndDate
   */
  public Date getActualEndDate()
  {
    return (Date)getAttributeInternal(ACTUALENDDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ActualEndDate
   */
  public void setActualEndDate(Date value)
  {
    setAttributeInternal(ACTUALENDDATE, value);
  }

  /**
   * 
   * Gets the attribute value for SourceObjectTypeCode, using the alias name SourceObjectTypeCode
   */
  public String getSourceObjectTypeCode()
  {
    return (String)getAttributeInternal(SOURCEOBJECTTYPECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SourceObjectTypeCode
   */
  public void setSourceObjectTypeCode(String value)
  {
    setAttributeInternal(SOURCEOBJECTTYPECODE, value);
  }

  /**
   * 
   * Gets the attribute value for TimezoneId, using the alias name TimezoneId
   */
  public Number getTimezoneId()
  {
    return (Number)getAttributeInternal(TIMEZONEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TimezoneId
   */
  public void setTimezoneId(Number value)
  {
    setAttributeInternal(TIMEZONEID, value);
  }

  /**
   * 
   * Gets the attribute value for SourceObjectId, using the alias name SourceObjectId
   */
  public Number getSourceObjectId()
  {
    return (Number)getAttributeInternal(SOURCEOBJECTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SourceObjectId
   */
  public void setSourceObjectId(Number value)
  {
    setAttributeInternal(SOURCEOBJECTID, value);
  }

  /**
   * 
   * Gets the attribute value for SourceObjectName, using the alias name SourceObjectName
   */
  public String getSourceObjectName()
  {
    return (String)getAttributeInternal(SOURCEOBJECTNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SourceObjectName
   */
  public void setSourceObjectName(String value)
  {
    setAttributeInternal(SOURCEOBJECTNAME, value);
  }

  /**
   * 
   * Gets the attribute value for Duration, using the alias name Duration
   */
  public Number getDuration()
  {
    return (Number)getAttributeInternal(DURATION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Duration
   */
  public void setDuration(Number value)
  {
    setAttributeInternal(DURATION, value);
  }

  /**
   * 
   * Gets the attribute value for DurationUom, using the alias name DurationUom
   */
  public String getDurationUom()
  {
    return (String)getAttributeInternal(DURATIONUOM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DurationUom
   */
  public void setDurationUom(String value)
  {
    setAttributeInternal(DURATIONUOM, value);
  }

  /**
   * 
   * Gets the attribute value for PlannedEffort, using the alias name PlannedEffort
   */
  public Number getPlannedEffort()
  {
    return (Number)getAttributeInternal(PLANNEDEFFORT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PlannedEffort
   */
  public void setPlannedEffort(Number value)
  {
    setAttributeInternal(PLANNEDEFFORT, value);
  }

  /**
   * 
   * Gets the attribute value for PlannedEffortUom, using the alias name PlannedEffortUom
   */
  public String getPlannedEffortUom()
  {
    return (String)getAttributeInternal(PLANNEDEFFORTUOM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PlannedEffortUom
   */
  public void setPlannedEffortUom(String value)
  {
    setAttributeInternal(PLANNEDEFFORTUOM, value);
  }

  /**
   * 
   * Gets the attribute value for ActualEffort, using the alias name ActualEffort
   */
  public Number getActualEffort()
  {
    return (Number)getAttributeInternal(ACTUALEFFORT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ActualEffort
   */
  public void setActualEffort(Number value)
  {
    setAttributeInternal(ACTUALEFFORT, value);
  }

  /**
   * 
   * Gets the attribute value for ActualEffortUom, using the alias name ActualEffortUom
   */
  public String getActualEffortUom()
  {
    return (String)getAttributeInternal(ACTUALEFFORTUOM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ActualEffortUom
   */
  public void setActualEffortUom(String value)
  {
    setAttributeInternal(ACTUALEFFORTUOM, value);
  }

  /**
   * 
   * Gets the attribute value for PercentageComplete, using the alias name PercentageComplete
   */
  public Number getPercentageComplete()
  {
    return (Number)getAttributeInternal(PERCENTAGECOMPLETE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PercentageComplete
   */
  public void setPercentageComplete(Number value)
  {
    setAttributeInternal(PERCENTAGECOMPLETE, value);
  }

  /**
   * 
   * Gets the attribute value for ReasonCode, using the alias name ReasonCode
   */
  public String getReasonCode()
  {
    return (String)getAttributeInternal(REASONCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ReasonCode
   */
  public void setReasonCode(String value)
  {
    setAttributeInternal(REASONCODE, value);
  }

  /**
   * 
   * Gets the attribute value for PrivateFlag, using the alias name PrivateFlag
   */
  public String getPrivateFlag()
  {
    return (String)getAttributeInternal(PRIVATEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PrivateFlag
   */
  public void setPrivateFlag(String value)
  {
    setAttributeInternal(PRIVATEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for PublishFlag, using the alias name PublishFlag
   */
  public String getPublishFlag()
  {
    return (String)getAttributeInternal(PUBLISHFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PublishFlag
   */
  public void setPublishFlag(String value)
  {
    setAttributeInternal(PUBLISHFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for RestrictClosureFlag, using the alias name RestrictClosureFlag
   */
  public String getRestrictClosureFlag()
  {
    return (String)getAttributeInternal(RESTRICTCLOSUREFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RestrictClosureFlag
   */
  public void setRestrictClosureFlag(String value)
  {
    setAttributeInternal(RESTRICTCLOSUREFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for MultiBookedFlag, using the alias name MultiBookedFlag
   */
  public String getMultiBookedFlag()
  {
    return (String)getAttributeInternal(MULTIBOOKEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MultiBookedFlag
   */
  public void setMultiBookedFlag(String value)
  {
    setAttributeInternal(MULTIBOOKEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for MilestoneFlag, using the alias name MilestoneFlag
   */
  public String getMilestoneFlag()
  {
    return (String)getAttributeInternal(MILESTONEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MilestoneFlag
   */
  public void setMilestoneFlag(String value)
  {
    setAttributeInternal(MILESTONEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for HolidayFlag, using the alias name HolidayFlag
   */
  public String getHolidayFlag()
  {
    return (String)getAttributeInternal(HOLIDAYFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for HolidayFlag
   */
  public void setHolidayFlag(String value)
  {
    setAttributeInternal(HOLIDAYFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for BillableFlag, using the alias name BillableFlag
   */
  public String getBillableFlag()
  {
    return (String)getAttributeInternal(BILLABLEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BillableFlag
   */
  public void setBillableFlag(String value)
  {
    setAttributeInternal(BILLABLEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for BoundModeCode, using the alias name BoundModeCode
   */
  public String getBoundModeCode()
  {
    return (String)getAttributeInternal(BOUNDMODECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BoundModeCode
   */
  public void setBoundModeCode(String value)
  {
    setAttributeInternal(BOUNDMODECODE, value);
  }

  /**
   * 
   * Gets the attribute value for SoftBoundFlag, using the alias name SoftBoundFlag
   */
  public String getSoftBoundFlag()
  {
    return (String)getAttributeInternal(SOFTBOUNDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SoftBoundFlag
   */
  public void setSoftBoundFlag(String value)
  {
    setAttributeInternal(SOFTBOUNDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for WorkflowProcessId, using the alias name WorkflowProcessId
   */
  public Number getWorkflowProcessId()
  {
    return (Number)getAttributeInternal(WORKFLOWPROCESSID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WorkflowProcessId
   */
  public void setWorkflowProcessId(Number value)
  {
    setAttributeInternal(WORKFLOWPROCESSID, value);
  }

  /**
   * 
   * Gets the attribute value for NotificationFlag, using the alias name NotificationFlag
   */
  public String getNotificationFlag()
  {
    return (String)getAttributeInternal(NOTIFICATIONFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NotificationFlag
   */
  public void setNotificationFlag(String value)
  {
    setAttributeInternal(NOTIFICATIONFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for NotificationPeriod, using the alias name NotificationPeriod
   */
  public Number getNotificationPeriod()
  {
    return (Number)getAttributeInternal(NOTIFICATIONPERIOD);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NotificationPeriod
   */
  public void setNotificationPeriod(Number value)
  {
    setAttributeInternal(NOTIFICATIONPERIOD, value);
  }

  /**
   * 
   * Gets the attribute value for NotificationPeriodUom, using the alias name NotificationPeriodUom
   */
  public String getNotificationPeriodUom()
  {
    return (String)getAttributeInternal(NOTIFICATIONPERIODUOM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NotificationPeriodUom
   */
  public void setNotificationPeriodUom(String value)
  {
    setAttributeInternal(NOTIFICATIONPERIODUOM, value);
  }

  /**
   * 
   * Gets the attribute value for ParentTaskId, using the alias name ParentTaskId
   */
  public Number getParentTaskId()
  {
    return (Number)getAttributeInternal(PARENTTASKID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ParentTaskId
   */
  public void setParentTaskId(Number value)
  {
    setAttributeInternal(PARENTTASKID, value);
  }

  /**
   * 
   * Gets the attribute value for RecurrenceRuleId, using the alias name RecurrenceRuleId
   */
  public Number getRecurrenceRuleId()
  {
    return (Number)getAttributeInternal(RECURRENCERULEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RecurrenceRuleId
   */
  public void setRecurrenceRuleId(Number value)
  {
    setAttributeInternal(RECURRENCERULEID, value);
  }

  /**
   * 
   * Gets the attribute value for AlarmStart, using the alias name AlarmStart
   */
  public Number getAlarmStart()
  {
    return (Number)getAttributeInternal(ALARMSTART);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AlarmStart
   */
  public void setAlarmStart(Number value)
  {
    setAttributeInternal(ALARMSTART, value);
  }

  /**
   * 
   * Gets the attribute value for AlarmStartUom, using the alias name AlarmStartUom
   */
  public String getAlarmStartUom()
  {
    return (String)getAttributeInternal(ALARMSTARTUOM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AlarmStartUom
   */
  public void setAlarmStartUom(String value)
  {
    setAttributeInternal(ALARMSTARTUOM, value);
  }

  /**
   * 
   * Gets the attribute value for AlarmOn, using the alias name AlarmOn
   */
  public String getAlarmOn()
  {
    return (String)getAttributeInternal(ALARMON);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AlarmOn
   */
  public void setAlarmOn(String value)
  {
    setAttributeInternal(ALARMON, value);
  }

  /**
   * 
   * Gets the attribute value for AlarmCount, using the alias name AlarmCount
   */
  public Number getAlarmCount()
  {
    return (Number)getAttributeInternal(ALARMCOUNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AlarmCount
   */
  public void setAlarmCount(Number value)
  {
    setAttributeInternal(ALARMCOUNT, value);
  }

  /**
   * 
   * Gets the attribute value for AlarmFiredCount, using the alias name AlarmFiredCount
   */
  public Number getAlarmFiredCount()
  {
    return (Number)getAttributeInternal(ALARMFIREDCOUNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AlarmFiredCount
   */
  public void setAlarmFiredCount(Number value)
  {
    setAttributeInternal(ALARMFIREDCOUNT, value);
  }

  /**
   * 
   * Gets the attribute value for AlarmInterval, using the alias name AlarmInterval
   */
  public Number getAlarmInterval()
  {
    return (Number)getAttributeInternal(ALARMINTERVAL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AlarmInterval
   */
  public void setAlarmInterval(Number value)
  {
    setAttributeInternal(ALARMINTERVAL, value);
  }

  /**
   * 
   * Gets the attribute value for AlarmIntervalUom, using the alias name AlarmIntervalUom
   */
  public String getAlarmIntervalUom()
  {
    return (String)getAttributeInternal(ALARMINTERVALUOM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AlarmIntervalUom
   */
  public void setAlarmIntervalUom(String value)
  {
    setAttributeInternal(ALARMINTERVALUOM, value);
  }

  /**
   * 
   * Gets the attribute value for DeletedFlag, using the alias name DeletedFlag
   */
  public String getDeletedFlag()
  {
    return (String)getAttributeInternal(DELETEDFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DeletedFlag
   */
  public void setDeletedFlag(String value)
  {
    setAttributeInternal(DELETEDFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for PalmFlag, using the alias name PalmFlag
   */
  public String getPalmFlag()
  {
    return (String)getAttributeInternal(PALMFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PalmFlag
   */
  public void setPalmFlag(String value)
  {
    setAttributeInternal(PALMFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for WinceFlag, using the alias name WinceFlag
   */
  public String getWinceFlag()
  {
    return (String)getAttributeInternal(WINCEFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WinceFlag
   */
  public void setWinceFlag(String value)
  {
    setAttributeInternal(WINCEFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for LaptopFlag, using the alias name LaptopFlag
   */
  public String getLaptopFlag()
  {
    return (String)getAttributeInternal(LAPTOPFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LaptopFlag
   */
  public void setLaptopFlag(String value)
  {
    setAttributeInternal(LAPTOPFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for Device1Flag, using the alias name Device1Flag
   */
  public String getDevice1Flag()
  {
    return (String)getAttributeInternal(DEVICE1FLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Device1Flag
   */
  public void setDevice1Flag(String value)
  {
    setAttributeInternal(DEVICE1FLAG, value);
  }

  /**
   * 
   * Gets the attribute value for Device2Flag, using the alias name Device2Flag
   */
  public String getDevice2Flag()
  {
    return (String)getAttributeInternal(DEVICE2FLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Device2Flag
   */
  public void setDevice2Flag(String value)
  {
    setAttributeInternal(DEVICE2FLAG, value);
  }

  /**
   * 
   * Gets the attribute value for Device3Flag, using the alias name Device3Flag
   */
  public String getDevice3Flag()
  {
    return (String)getAttributeInternal(DEVICE3FLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Device3Flag
   */
  public void setDevice3Flag(String value)
  {
    setAttributeInternal(DEVICE3FLAG, value);
  }

  /**
   * 
   * Gets the attribute value for Costs, using the alias name Costs
   */
  public Number getCosts()
  {
    return (Number)getAttributeInternal(COSTS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Costs
   */
  public void setCosts(Number value)
  {
    setAttributeInternal(COSTS, value);
  }

  /**
   * 
   * Gets the attribute value for CurrencyCode, using the alias name CurrencyCode
   */
  public String getCurrencyCode()
  {
    return (String)getAttributeInternal(CURRENCYCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CurrencyCode
   */
  public void setCurrencyCode(String value)
  {
    setAttributeInternal(CURRENCYCODE, value);
  }

  /**
   * 
   * Gets the attribute value for OrgId, using the alias name OrgId
   */
  public Number getOrgId()
  {
    return (Number)getAttributeInternal(ORGID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OrgId
   */
  public void setOrgId(Number value)
  {
    setAttributeInternal(ORGID, value);
  }

  /**
   * 
   * Gets the attribute value for EscalationLevel, using the alias name EscalationLevel
   */
  public String getEscalationLevel()
  {
    return (String)getAttributeInternal(ESCALATIONLEVEL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EscalationLevel
   */
  public void setEscalationLevel(String value)
  {
    setAttributeInternal(ESCALATIONLEVEL, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute1, using the alias name Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute2, using the alias name Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute3, using the alias name Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute4, using the alias name Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute5, using the alias name Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute6, using the alias name Attribute6
   */
  public String getAttribute6()
  {
    return (String)getAttributeInternal(ATTRIBUTE6);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute6
   */
  public void setAttribute6(String value)
  {
    setAttributeInternal(ATTRIBUTE6, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute7, using the alias name Attribute7
   */
  public String getAttribute7()
  {
    return (String)getAttributeInternal(ATTRIBUTE7);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute7
   */
  public void setAttribute7(String value)
  {
    setAttributeInternal(ATTRIBUTE7, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute8, using the alias name Attribute8
   */
  public String getAttribute8()
  {
    return (String)getAttributeInternal(ATTRIBUTE8);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute8
   */
  public void setAttribute8(String value)
  {
    setAttributeInternal(ATTRIBUTE8, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute9, using the alias name Attribute9
   */
  public String getAttribute9()
  {
    return (String)getAttributeInternal(ATTRIBUTE9);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute9
   */
  public void setAttribute9(String value)
  {
    setAttributeInternal(ATTRIBUTE9, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute10, using the alias name Attribute10
   */
  public String getAttribute10()
  {
    return (String)getAttributeInternal(ATTRIBUTE10);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute10
   */
  public void setAttribute10(String value)
  {
    setAttributeInternal(ATTRIBUTE10, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute11, using the alias name Attribute11
   */
  public String getAttribute11()
  {
    return (String)getAttributeInternal(ATTRIBUTE11);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute11
   */
  public void setAttribute11(String value)
  {
    setAttributeInternal(ATTRIBUTE11, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute12, using the alias name Attribute12
   */
  public String getAttribute12()
  {
    return (String)getAttributeInternal(ATTRIBUTE12);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute12
   */
  public void setAttribute12(String value)
  {
    setAttributeInternal(ATTRIBUTE12, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute13, using the alias name Attribute13
   */
  public String getAttribute13()
  {
    return (String)getAttributeInternal(ATTRIBUTE13);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute13
   */
  public void setAttribute13(String value)
  {
    setAttributeInternal(ATTRIBUTE13, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute14, using the alias name Attribute14
   */
  public String getAttribute14()
  {
    return (String)getAttributeInternal(ATTRIBUTE14);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute14
   */
  public void setAttribute14(String value)
  {
    setAttributeInternal(ATTRIBUTE14, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute15, using the alias name Attribute15
   */
  public String getAttribute15()
  {
    return (String)getAttributeInternal(ATTRIBUTE15);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute15
   */
  public void setAttribute15(String value)
  {
    setAttributeInternal(ATTRIBUTE15, value);
  }

  /**
   * 
   * Gets the attribute value for AttributeCategory, using the alias name AttributeCategory
   */
  public String getAttributeCategory()
  {
    return (String)getAttributeInternal(ATTRIBUTECATEGORY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AttributeCategory
   */
  public void setAttributeCategory(String value)
  {
    setAttributeInternal(ATTRIBUTECATEGORY, value);
  }

  /**
   * 
   * Gets the attribute value for SecurityGroupId, using the alias name SecurityGroupId
   */
  public Number getSecurityGroupId()
  {
    return (Number)getAttributeInternal(SECURITYGROUPID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for SecurityGroupId
   */
  public void setSecurityGroupId(Number value)
  {
    setAttributeInternal(SECURITYGROUPID, value);
  }

  /**
   * 
   * Gets the attribute value for OrigSystemReference, using the alias name OrigSystemReference
   */
  public String getOrigSystemReference()
  {
    return (String)getAttributeInternal(ORIGSYSTEMREFERENCE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OrigSystemReference
   */
  public void setOrigSystemReference(String value)
  {
    setAttributeInternal(ORIGSYSTEMREFERENCE, value);
  }

  /**
   * 
   * Gets the attribute value for OrigSystemReferenceId, using the alias name OrigSystemReferenceId
   */
  public Number getOrigSystemReferenceId()
  {
    return (Number)getAttributeInternal(ORIGSYSTEMREFERENCEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OrigSystemReferenceId
   */
  public void setOrigSystemReferenceId(Number value)
  {
    setAttributeInternal(ORIGSYSTEMREFERENCEID, value);
  }

  /**
   * 
   * Gets the attribute value for UpdateStatusFlag, using the alias name UpdateStatusFlag
   */
  public String getUpdateStatusFlag()
  {
    return (String)getAttributeInternal(UPDATESTATUSFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UpdateStatusFlag
   */
  public void setUpdateStatusFlag(String value)
  {
    setAttributeInternal(UPDATESTATUSFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for CalendarStartDate, using the alias name CalendarStartDate
   */
  public Date getCalendarStartDate()
  {
    return (Date)getAttributeInternal(CALENDARSTARTDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CalendarStartDate
   */
  public void setCalendarStartDate(Date value)
  {
    setAttributeInternal(CALENDARSTARTDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CalendarEndDate, using the alias name CalendarEndDate
   */
  public Date getCalendarEndDate()
  {
    return (Date)getAttributeInternal(CALENDARENDDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CalendarEndDate
   */
  public void setCalendarEndDate(Date value)
  {
    setAttributeInternal(CALENDARENDDATE, value);
  }

  /**
   * 
   * Gets the attribute value for DateSelected, using the alias name DateSelected
   */
  public String getDateSelected()
  {
    return (String)getAttributeInternal(DATESELECTED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DateSelected
   */
  public void setDateSelected(String value)
  {
    setAttributeInternal(DATESELECTED, value);
  }

  /**
   * 
   * Gets the attribute value for TemplateId, using the alias name TemplateId
   */
  public Number getTemplateId()
  {
    return (Number)getAttributeInternal(TEMPLATEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TemplateId
   */
  public void setTemplateId(Number value)
  {
    setAttributeInternal(TEMPLATEID, value);
  }

  /**
   * 
   * Gets the attribute value for TemplateGroupId, using the alias name TemplateGroupId
   */
  public Number getTemplateGroupId()
  {
    return (Number)getAttributeInternal(TEMPLATEGROUPID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TemplateGroupId
   */
  public void setTemplateGroupId(Number value)
  {
    setAttributeInternal(TEMPLATEGROUPID, value);
  }

  /**
   * 
   * Gets the attribute value for ObjectChangedDate, using the alias name ObjectChangedDate
   */
  public Date getObjectChangedDate()
  {
    return (Date)getAttributeInternal(OBJECTCHANGEDDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ObjectChangedDate
   */
  public void setObjectChangedDate(Date value)
  {
    setAttributeInternal(OBJECTCHANGEDDATE, value);
  }

  /**
   * 
   * Gets the attribute value for TaskConfirmationStatus, using the alias name TaskConfirmationStatus
   */
  public String getTaskConfirmationStatus()
  {
    return (String)getAttributeInternal(TASKCONFIRMATIONSTATUS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaskConfirmationStatus
   */
  public void setTaskConfirmationStatus(String value)
  {
    setAttributeInternal(TASKCONFIRMATIONSTATUS, value);
  }

  /**
   * 
   * Gets the attribute value for TaskConfirmationCounter, using the alias name TaskConfirmationCounter
   */
  public Number getTaskConfirmationCounter()
  {
    return (Number)getAttributeInternal(TASKCONFIRMATIONCOUNTER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaskConfirmationCounter
   */
  public void setTaskConfirmationCounter(Number value)
  {
    setAttributeInternal(TASKCONFIRMATIONCOUNTER, value);
  }

  /**
   * 
   * Gets the attribute value for TaskSplitFlag, using the alias name TaskSplitFlag
   */
  public String getTaskSplitFlag()
  {
    return (String)getAttributeInternal(TASKSPLITFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaskSplitFlag
   */
  public void setTaskSplitFlag(String value)
  {
    setAttributeInternal(TASKSPLITFLAG, value);
  }

  /**
   * 
   * Gets the attribute value for OpenFlag, using the alias name OpenFlag
   */
  public String getOpenFlag()
  {
    return (String)getAttributeInternal(OPENFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OpenFlag
   */
  public void setOpenFlag(String value)
  {
    setAttributeInternal(OPENFLAG, value);
  }



  /**
   * 
   * Gets the attribute value for ChildPosition, using the alias name ChildPosition
   */
  public String getChildPosition()
  {
    return (String)getAttributeInternal(CHILDPOSITION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ChildPosition
   */
  public void setChildPosition(String value)
  {
    setAttributeInternal(CHILDPOSITION, value);
  }

  /**
   * 
   * Gets the attribute value for ChildSequenceNum, using the alias name ChildSequenceNum
   */
  public Number getChildSequenceNum()
  {
    return (Number)getAttributeInternal(CHILDSEQUENCENUM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ChildSequenceNum
   */
  public void setChildSequenceNum(Number value)
  {
    setAttributeInternal(CHILDSEQUENCENUM, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case TASKID:
        return getTaskId();
      case CREATEDBY:
        return getCreatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case OBJECTVERSIONNUMBER:
        return getObjectVersionNumber();
      case TASKNUMBER:
        return getTaskNumber();
      case TASKNAME:
        return getTaskName();
      case TASKTYPEID:
        return getTaskTypeId();
      case TASKSTATUSID:
        return getTaskStatusId();
      case TASKPRIORITYID:
        return getTaskPriorityId();
      case OWNERID:
        return getOwnerId();
      case OWNERTYPECODE:
        return getOwnerTypeCode();
      case OWNERTERRITORYID:
        return getOwnerTerritoryId();
      case ASSIGNEDBYID:
        return getAssignedById();
      case CUSTACCOUNTID:
        return getCustAccountId();
      case CUSTOMERID:
        return getCustomerId();
      case ADDRESSID:
        return getAddressId();
      case PLANNEDSTARTDATE:
        return getPlannedStartDate();
      case PLANNEDENDDATE:
        return getPlannedEndDate();
      case SCHEDULEDSTARTDATE:
        return getScheduledStartDate();
      case SCHEDULEDENDDATE:
        return getScheduledEndDate();
      case ACTUALSTARTDATE:
        return getActualStartDate();
      case ACTUALENDDATE:
        return getActualEndDate();
      case SOURCEOBJECTTYPECODE:
        return getSourceObjectTypeCode();
      case TIMEZONEID:
        return getTimezoneId();
      case SOURCEOBJECTID:
        return getSourceObjectId();
      case SOURCEOBJECTNAME:
        return getSourceObjectName();
      case DURATION:
        return getDuration();
      case DURATIONUOM:
        return getDurationUom();
      case PLANNEDEFFORT:
        return getPlannedEffort();
      case PLANNEDEFFORTUOM:
        return getPlannedEffortUom();
      case ACTUALEFFORT:
        return getActualEffort();
      case ACTUALEFFORTUOM:
        return getActualEffortUom();
      case PERCENTAGECOMPLETE:
        return getPercentageComplete();
      case REASONCODE:
        return getReasonCode();
      case PRIVATEFLAG:
        return getPrivateFlag();
      case PUBLISHFLAG:
        return getPublishFlag();
      case RESTRICTCLOSUREFLAG:
        return getRestrictClosureFlag();
      case MULTIBOOKEDFLAG:
        return getMultiBookedFlag();
      case MILESTONEFLAG:
        return getMilestoneFlag();
      case HOLIDAYFLAG:
        return getHolidayFlag();
      case BILLABLEFLAG:
        return getBillableFlag();
      case BOUNDMODECODE:
        return getBoundModeCode();
      case SOFTBOUNDFLAG:
        return getSoftBoundFlag();
      case WORKFLOWPROCESSID:
        return getWorkflowProcessId();
      case NOTIFICATIONFLAG:
        return getNotificationFlag();
      case NOTIFICATIONPERIOD:
        return getNotificationPeriod();
      case NOTIFICATIONPERIODUOM:
        return getNotificationPeriodUom();
      case PARENTTASKID:
        return getParentTaskId();
      case RECURRENCERULEID:
        return getRecurrenceRuleId();
      case ALARMSTART:
        return getAlarmStart();
      case ALARMSTARTUOM:
        return getAlarmStartUom();
      case ALARMON:
        return getAlarmOn();
      case ALARMCOUNT:
        return getAlarmCount();
      case ALARMFIREDCOUNT:
        return getAlarmFiredCount();
      case ALARMINTERVAL:
        return getAlarmInterval();
      case ALARMINTERVALUOM:
        return getAlarmIntervalUom();
      case DELETEDFLAG:
        return getDeletedFlag();
      case PALMFLAG:
        return getPalmFlag();
      case WINCEFLAG:
        return getWinceFlag();
      case LAPTOPFLAG:
        return getLaptopFlag();
      case DEVICE1FLAG:
        return getDevice1Flag();
      case DEVICE2FLAG:
        return getDevice2Flag();
      case DEVICE3FLAG:
        return getDevice3Flag();
      case COSTS:
        return getCosts();
      case CURRENCYCODE:
        return getCurrencyCode();
      case ORGID:
        return getOrgId();
      case ESCALATIONLEVEL:
        return getEscalationLevel();
      case ATTRIBUTE1:
        return getAttribute1();
      case ATTRIBUTE2:
        return getAttribute2();
      case ATTRIBUTE3:
        return getAttribute3();
      case ATTRIBUTE4:
        return getAttribute4();
      case ATTRIBUTE5:
        return getAttribute5();
      case ATTRIBUTE6:
        return getAttribute6();
      case ATTRIBUTE7:
        return getAttribute7();
      case ATTRIBUTE8:
        return getAttribute8();
      case ATTRIBUTE9:
        return getAttribute9();
      case ATTRIBUTE10:
        return getAttribute10();
      case ATTRIBUTE11:
        return getAttribute11();
      case ATTRIBUTE12:
        return getAttribute12();
      case ATTRIBUTE13:
        return getAttribute13();
      case ATTRIBUTE14:
        return getAttribute14();
      case ATTRIBUTE15:
        return getAttribute15();
      case ATTRIBUTECATEGORY:
        return getAttributeCategory();
      case SECURITYGROUPID:
        return getSecurityGroupId();
      case ORIGSYSTEMREFERENCE:
        return getOrigSystemReference();
      case ORIGSYSTEMREFERENCEID:
        return getOrigSystemReferenceId();
      case UPDATESTATUSFLAG:
        return getUpdateStatusFlag();
      case CALENDARSTARTDATE:
        return getCalendarStartDate();
      case CALENDARENDDATE:
        return getCalendarEndDate();
      case DATESELECTED:
        return getDateSelected();
      case TEMPLATEID:
        return getTemplateId();
      case TEMPLATEGROUPID:
        return getTemplateGroupId();
      case OBJECTCHANGEDDATE:
        return getObjectChangedDate();
      case TASKCONFIRMATIONSTATUS:
        return getTaskConfirmationStatus();
      case TASKCONFIRMATIONCOUNTER:
        return getTaskConfirmationCounter();
      case TASKSPLITFLAG:
        return getTaskSplitFlag();
      case OPENFLAG:
        return getOpenFlag();
      case ENTITY:
        return getEntity();
      case CHILDPOSITION:
        return getChildPosition();
      case CHILDSEQUENCENUM:
        return getChildSequenceNum();
      case DESCRIPTION:
        return getDescription();
      case ROWID:
        return getRowId();
      case OA_TL_ENTITIES:
        return getOA_TL_ENTITIES();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case TASKID:
        setTaskId((Number)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case OBJECTVERSIONNUMBER:
        setObjectVersionNumber((Number)value);
        return;
      case TASKNUMBER:
        setTaskNumber((String)value);
        return;
      case TASKNAME:
        setTaskName((String)value);
        return;
      case TASKTYPEID:
        setTaskTypeId((Number)value);
        return;
      case TASKSTATUSID:
        setTaskStatusId((Number)value);
        return;
      case TASKPRIORITYID:
        setTaskPriorityId((Number)value);
        return;
      case OWNERID:
        setOwnerId((Number)value);
        return;
      case OWNERTYPECODE:
        setOwnerTypeCode((String)value);
        return;
      case OWNERTERRITORYID:
        setOwnerTerritoryId((Number)value);
        return;
      case ASSIGNEDBYID:
        setAssignedById((Number)value);
        return;
      case CUSTACCOUNTID:
        setCustAccountId((Number)value);
        return;
      case CUSTOMERID:
        setCustomerId((Number)value);
        return;
      case ADDRESSID:
        setAddressId((Number)value);
        return;
      case PLANNEDSTARTDATE:
        setPlannedStartDate((Date)value);
        return;
      case PLANNEDENDDATE:
        setPlannedEndDate((Date)value);
        return;
      case SCHEDULEDSTARTDATE:
        setScheduledStartDate((Date)value);
        return;
      case SCHEDULEDENDDATE:
        setScheduledEndDate((Date)value);
        return;
      case ACTUALSTARTDATE:
        setActualStartDate((Date)value);
        return;
      case ACTUALENDDATE:
        setActualEndDate((Date)value);
        return;
      case SOURCEOBJECTTYPECODE:
        setSourceObjectTypeCode((String)value);
        return;
      case TIMEZONEID:
        setTimezoneId((Number)value);
        return;
      case SOURCEOBJECTID:
        setSourceObjectId((Number)value);
        return;
      case SOURCEOBJECTNAME:
        setSourceObjectName((String)value);
        return;
      case DURATION:
        setDuration((Number)value);
        return;
      case DURATIONUOM:
        setDurationUom((String)value);
        return;
      case PLANNEDEFFORT:
        setPlannedEffort((Number)value);
        return;
      case PLANNEDEFFORTUOM:
        setPlannedEffortUom((String)value);
        return;
      case ACTUALEFFORT:
        setActualEffort((Number)value);
        return;
      case ACTUALEFFORTUOM:
        setActualEffortUom((String)value);
        return;
      case PERCENTAGECOMPLETE:
        setPercentageComplete((Number)value);
        return;
      case REASONCODE:
        setReasonCode((String)value);
        return;
      case PRIVATEFLAG:
        setPrivateFlag((String)value);
        return;
      case PUBLISHFLAG:
        setPublishFlag((String)value);
        return;
      case RESTRICTCLOSUREFLAG:
        setRestrictClosureFlag((String)value);
        return;
      case MULTIBOOKEDFLAG:
        setMultiBookedFlag((String)value);
        return;
      case MILESTONEFLAG:
        setMilestoneFlag((String)value);
        return;
      case HOLIDAYFLAG:
        setHolidayFlag((String)value);
        return;
      case BILLABLEFLAG:
        setBillableFlag((String)value);
        return;
      case BOUNDMODECODE:
        setBoundModeCode((String)value);
        return;
      case SOFTBOUNDFLAG:
        setSoftBoundFlag((String)value);
        return;
      case WORKFLOWPROCESSID:
        setWorkflowProcessId((Number)value);
        return;
      case NOTIFICATIONFLAG:
        setNotificationFlag((String)value);
        return;
      case NOTIFICATIONPERIOD:
        setNotificationPeriod((Number)value);
        return;
      case NOTIFICATIONPERIODUOM:
        setNotificationPeriodUom((String)value);
        return;
      case PARENTTASKID:
        setParentTaskId((Number)value);
        return;
      case RECURRENCERULEID:
        setRecurrenceRuleId((Number)value);
        return;
      case ALARMSTART:
        setAlarmStart((Number)value);
        return;
      case ALARMSTARTUOM:
        setAlarmStartUom((String)value);
        return;
      case ALARMON:
        setAlarmOn((String)value);
        return;
      case ALARMCOUNT:
        setAlarmCount((Number)value);
        return;
      case ALARMFIREDCOUNT:
        setAlarmFiredCount((Number)value);
        return;
      case ALARMINTERVAL:
        setAlarmInterval((Number)value);
        return;
      case ALARMINTERVALUOM:
        setAlarmIntervalUom((String)value);
        return;
      case DELETEDFLAG:
        setDeletedFlag((String)value);
        return;
      case PALMFLAG:
        setPalmFlag((String)value);
        return;
      case WINCEFLAG:
        setWinceFlag((String)value);
        return;
      case LAPTOPFLAG:
        setLaptopFlag((String)value);
        return;
      case DEVICE1FLAG:
        setDevice1Flag((String)value);
        return;
      case DEVICE2FLAG:
        setDevice2Flag((String)value);
        return;
      case DEVICE3FLAG:
        setDevice3Flag((String)value);
        return;
      case COSTS:
        setCosts((Number)value);
        return;
      case CURRENCYCODE:
        setCurrencyCode((String)value);
        return;
      case ORGID:
        setOrgId((Number)value);
        return;
      case ESCALATIONLEVEL:
        setEscalationLevel((String)value);
        return;
      case ATTRIBUTE1:
        setAttribute1((String)value);
        return;
      case ATTRIBUTE2:
        setAttribute2((String)value);
        return;
      case ATTRIBUTE3:
        setAttribute3((String)value);
        return;
      case ATTRIBUTE4:
        setAttribute4((String)value);
        return;
      case ATTRIBUTE5:
        setAttribute5((String)value);
        return;
      case ATTRIBUTE6:
        setAttribute6((String)value);
        return;
      case ATTRIBUTE7:
        setAttribute7((String)value);
        return;
      case ATTRIBUTE8:
        setAttribute8((String)value);
        return;
      case ATTRIBUTE9:
        setAttribute9((String)value);
        return;
      case ATTRIBUTE10:
        setAttribute10((String)value);
        return;
      case ATTRIBUTE11:
        setAttribute11((String)value);
        return;
      case ATTRIBUTE12:
        setAttribute12((String)value);
        return;
      case ATTRIBUTE13:
        setAttribute13((String)value);
        return;
      case ATTRIBUTE14:
        setAttribute14((String)value);
        return;
      case ATTRIBUTE15:
        setAttribute15((String)value);
        return;
      case ATTRIBUTECATEGORY:
        setAttributeCategory((String)value);
        return;
      case SECURITYGROUPID:
        setSecurityGroupId((Number)value);
        return;
      case ORIGSYSTEMREFERENCE:
        setOrigSystemReference((String)value);
        return;
      case ORIGSYSTEMREFERENCEID:
        setOrigSystemReferenceId((Number)value);
        return;
      case UPDATESTATUSFLAG:
        setUpdateStatusFlag((String)value);
        return;
      case CALENDARSTARTDATE:
        setCalendarStartDate((Date)value);
        return;
      case CALENDARENDDATE:
        setCalendarEndDate((Date)value);
        return;
      case DATESELECTED:
        setDateSelected((String)value);
        return;
      case TEMPLATEID:
        setTemplateId((Number)value);
        return;
      case TEMPLATEGROUPID:
        setTemplateGroupId((Number)value);
        return;
      case OBJECTCHANGEDDATE:
        setObjectChangedDate((Date)value);
        return;
      case TASKCONFIRMATIONSTATUS:
        setTaskConfirmationStatus((String)value);
        return;
      case TASKCONFIRMATIONCOUNTER:
        setTaskConfirmationCounter((Number)value);
        return;
      case TASKSPLITFLAG:
        setTaskSplitFlag((String)value);
        return;
      case OPENFLAG:
        setOpenFlag((String)value);
        return;
      case ENTITY:
        setEntity((String)value);
        return;
      case CHILDPOSITION:
        setChildPosition((String)value);
        return;
      case CHILDSEQUENCENUM:
        setChildSequenceNum((Number)value);
        return;
      case DESCRIPTION:
        setDescription((String)value);
        return;
      case ROWID:
        setRowId((RowID)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }




  /**
   * 
   * Gets the attribute value for TaskName, using the alias name TaskName
   */
  public String getTaskName()
  {
    return (String)getAttributeInternal(TASKNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaskName
   */
  public void setTaskName(String value)
  {
    setAttributeInternal(TASKNAME, value);
  }

  /**
   * 
   * Gets the attribute value for Description, using the alias name Description
   */
  public String getDescription()
  {
    return (String)getAttributeInternal(DESCRIPTION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Description
   */
  public void setDescription(String value)
  {
    setAttributeInternal(DESCRIPTION, value);
  }




  /**
   * 
   * Gets the attribute value for Entity, using the alias name Entity
   */
  public String getEntity()
  {
    return (String)getAttributeInternal(ENTITY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Entity
   */
  public void setEntity(String value)
  {
    setAttributeInternal(ENTITY, value);
  }


  /**
   * 
   * Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getOA_TL_ENTITIES()
  {
    return (RowIterator)getAttributeInternal(OA_TL_ENTITIES);
  }


  /**
   * 
   * Gets the attribute value for RowId, using the alias name RowId
   */
  public RowID getRowId()
  {
    return (RowID)getAttributeInternal(ROWID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RowId
   */
  public void setRowId(RowID value)
  {
    setAttributeInternal(ROWID, value);
  }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number taskId)
  {
    return new Key(new Object[] {taskId});
  }





































































}