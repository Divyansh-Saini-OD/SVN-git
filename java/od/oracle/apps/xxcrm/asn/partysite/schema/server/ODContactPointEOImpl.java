/*===========================================================================+
 |                       Office Depot - Project Simplify                     |
 |            Oracle NAIO/WIPRO/Office Depot/Consulting Organization         |
 +===========================================================================+
 |  FILENAME                                                                 |
 |             ODContactPointEOImpl.java                                     |
 |                                                                           |
 |  DESCRIPTION                                                              |
 |     Entity Object for Contact Points - HZ_CONTACT_POINTS                  |
 |                                                                           |
 |  NOTES                                                                    |
 |                                                                           |
 |                                                                           |
 |  DEPENDENCIES                                                             |
 |    No dependencies.                                                       |
 |                                                                           |
 |  HISTORY                                                                  |
 |                                                                           |
 |    01/OCT/2007 Sudeept Maharana   Created  / Generated                    |
 |                                                                           |
 +===========================================================================*/
package od.oracle.apps.xxcrm.asn.partysite.schema.server;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODContactPointEOImpl extends OAEntityImpl
{
  protected static final int CONTACTPOINTID = 0;
  protected static final int CONTACTPOINTTYPE = 1;
  protected static final int STATUS = 2;
  protected static final int OWNERTABLENAME = 3;
  protected static final int OWNERTABLEID = 4;
  protected static final int PRIMARYFLAG = 5;
  protected static final int ORIGSYSTEMREFERENCE = 6;
  protected static final int LASTUPDATEDATE = 7;
  protected static final int LASTUPDATEDBY = 8;
  protected static final int CREATIONDATE = 9;
  protected static final int CREATEDBY = 10;
  protected static final int LASTUPDATELOGIN = 11;
  protected static final int WHUPDATEDATE = 12;
  protected static final int REQUESTID = 13;
  protected static final int PROGRAMAPPLICATIONID = 14;
  protected static final int PROGRAMID = 15;
  protected static final int PROGRAMUPDATEDATE = 16;
  protected static final int ATTRIBUTECATEGORY = 17;
  protected static final int ATTRIBUTE1 = 18;
  protected static final int ATTRIBUTE2 = 19;
  protected static final int ATTRIBUTE3 = 20;
  protected static final int ATTRIBUTE4 = 21;
  protected static final int ATTRIBUTE5 = 22;
  protected static final int ATTRIBUTE6 = 23;
  protected static final int ATTRIBUTE7 = 24;
  protected static final int ATTRIBUTE8 = 25;
  protected static final int ATTRIBUTE9 = 26;
  protected static final int ATTRIBUTE10 = 27;
  protected static final int ATTRIBUTE11 = 28;
  protected static final int ATTRIBUTE12 = 29;
  protected static final int ATTRIBUTE13 = 30;
  protected static final int ATTRIBUTE14 = 31;
  protected static final int ATTRIBUTE15 = 32;
  protected static final int ATTRIBUTE16 = 33;
  protected static final int ATTRIBUTE17 = 34;
  protected static final int ATTRIBUTE18 = 35;
  protected static final int ATTRIBUTE19 = 36;
  protected static final int ATTRIBUTE20 = 37;
  protected static final int GLOBALATTRIBUTECATEGORY = 38;
  protected static final int GLOBALATTRIBUTE1 = 39;
  protected static final int GLOBALATTRIBUTE2 = 40;
  protected static final int GLOBALATTRIBUTE3 = 41;
  protected static final int GLOBALATTRIBUTE4 = 42;
  protected static final int GLOBALATTRIBUTE5 = 43;
  protected static final int GLOBALATTRIBUTE6 = 44;
  protected static final int GLOBALATTRIBUTE7 = 45;
  protected static final int GLOBALATTRIBUTE8 = 46;
  protected static final int GLOBALATTRIBUTE9 = 47;
  protected static final int GLOBALATTRIBUTE10 = 48;
  protected static final int GLOBALATTRIBUTE11 = 49;
  protected static final int GLOBALATTRIBUTE12 = 50;
  protected static final int GLOBALATTRIBUTE13 = 51;
  protected static final int GLOBALATTRIBUTE14 = 52;
  protected static final int GLOBALATTRIBUTE15 = 53;
  protected static final int GLOBALATTRIBUTE16 = 54;
  protected static final int GLOBALATTRIBUTE17 = 55;
  protected static final int GLOBALATTRIBUTE18 = 56;
  protected static final int GLOBALATTRIBUTE19 = 57;
  protected static final int GLOBALATTRIBUTE20 = 58;
  protected static final int EDITRANSACTIONHANDLING = 59;
  protected static final int EDIIDNUMBER = 60;
  protected static final int EDIPAYMENTMETHOD = 61;
  protected static final int EDIPAYMENTFORMAT = 62;
  protected static final int EDIREMITTANCEMETHOD = 63;
  protected static final int EDIREMITTANCEINSTRUCTION = 64;
  protected static final int EDITPHEADERID = 65;
  protected static final int EDIECETPLOCATIONCODE = 66;
  protected static final int EMAILFORMAT = 67;
  protected static final int EMAILADDRESS = 68;
  protected static final int BESTTIMETOCONTACTSTART = 69;
  protected static final int BESTTIMETOCONTACTEND = 70;
  protected static final int PHONECALLINGCALENDAR = 71;
  protected static final int CONTACTATTEMPTS = 72;
  protected static final int CONTACTS = 73;
  protected static final int DECLAREDBUSINESSPHONEFLAG = 74;
  protected static final int DONOTUSEFLAG = 75;
  protected static final int DONOTUSEREASON = 76;
  protected static final int LASTCONTACTDTTIME = 77;
  protected static final int PHONEPREFERREDORDER = 78;
  protected static final int PRIORITYOFUSECODE = 79;
  protected static final int TELEPHONETYPE = 80;
  protected static final int TIMEZONE = 81;
  protected static final int PHONETOUCHTONETYPEFLAG = 82;
  protected static final int PHONEAREACODE = 83;
  protected static final int PHONECOUNTRYCODE = 84;
  protected static final int PHONENUMBER = 85;
  protected static final int PHONEEXTENSION = 86;
  protected static final int PHONELINETYPE = 87;
  protected static final int TELEXNUMBER = 88;
  protected static final int WEBTYPE = 89;
  protected static final int URL = 90;
  protected static final int CONTENTSOURCETYPE = 91;
  protected static final int RAWPHONENUMBER = 92;
  protected static final int OBJECTVERSIONNUMBER = 93;
  protected static final int CREATEDBYMODULE = 94;
  protected static final int APPLICATIONID = 95;
  protected static final int TIMEZONEID = 96;
  protected static final int CONTACTPOINTPURPOSE = 97;
  protected static final int PRIMARYBYPURPOSE = 98;
  protected static final int TRANSPOSEDPHONENUMBER = 99;
  protected static final int EFTTRANSMISSIONPROGRAMID = 100;
  protected static final int EFTPRINTINGPROGRAMID = 101;
  protected static final int EFTUSERNUMBER = 102;
  protected static final int EFTSWIFTCODE = 103;
  protected static final int ACTUALCONTENTSOURCE = 104;


  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   *
   * This is the default constructor (do not remove)
   */
  public ODContactPointEOImpl()
  {
  }

  /**
   *
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxcrm.asn.partysite.schema.server.ODContactPointEO");
    }
    return mDefinitionObject;
  }



  /**
   *
   * Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    super.create(attributeList);
  }

  /**
   *
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**
   *
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**
   *
   * Add locking logic here.
   */
  public void lock()
  {
   // super.lock();
  }

  /**
   *
   * Custom DML update/insert/delete logic here.
   */
  protected void doDML(int operation, TransactionEvent e)
  {
    super.doDML(operation, e);
  }

  /**
   *
   * Gets the attribute value for ContactPointId, using the alias name ContactPointId
   */
  public Number getContactPointId()
  {
    return (Number)getAttributeInternal(CONTACTPOINTID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for ContactPointId
   */
  public void setContactPointId(Number value)
  {
    setAttributeInternal(CONTACTPOINTID, value);
  }

  /**
   *
   * Gets the attribute value for ContactPointType, using the alias name ContactPointType
   */
  public String getContactPointType()
  {
    return (String)getAttributeInternal(CONTACTPOINTTYPE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for ContactPointType
   */
  public void setContactPointType(String value)
  {
    setAttributeInternal(CONTACTPOINTTYPE, value);
  }

  /**
   *
   * Gets the attribute value for Status, using the alias name Status
   */
  public String getStatus()
  {
    return (String)getAttributeInternal(STATUS);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Status
   */
  public void setStatus(String value)
  {
    setAttributeInternal(STATUS, value);
  }

  /**
   *
   * Gets the attribute value for OwnerTableName, using the alias name OwnerTableName
   */
  public String getOwnerTableName()
  {
    return (String)getAttributeInternal(OWNERTABLENAME);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for OwnerTableName
   */
  public void setOwnerTableName(String value)
  {
    setAttributeInternal(OWNERTABLENAME, value);
  }

  /**
   *
   * Gets the attribute value for OwnerTableId, using the alias name OwnerTableId
   */
  public Number getOwnerTableId()
  {
    return (Number)getAttributeInternal(OWNERTABLEID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for OwnerTableId
   */
  public void setOwnerTableId(Number value)
  {
    setAttributeInternal(OWNERTABLEID, value);
  }

  /**
   *
   * Gets the attribute value for PrimaryFlag, using the alias name PrimaryFlag
   */
  public String getPrimaryFlag()
  {
    return (String)getAttributeInternal(PRIMARYFLAG);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for PrimaryFlag
   */
  public void setPrimaryFlag(String value)
  {
    setAttributeInternal(PRIMARYFLAG, value);
  }

  /**
   *
   * Gets the attribute value for OrigSystemReference, using the alias name OrigSystemReference
   */
  public String getOrigSystemReference()
  {
    return (String)getAttributeInternal(ORIGSYSTEMREFERENCE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for OrigSystemReference
   */
  public void setOrigSystemReference(String value)
  {
    setAttributeInternal(ORIGSYSTEMREFERENCE, value);
  }

  /**
   *
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   *
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   *
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   *
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   *
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   *
   * Gets the attribute value for WhUpdateDate, using the alias name WhUpdateDate
   */
  public Date getWhUpdateDate()
  {
    return (Date)getAttributeInternal(WHUPDATEDATE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for WhUpdateDate
   */
  public void setWhUpdateDate(Date value)
  {
    setAttributeInternal(WHUPDATEDATE, value);
  }

  /**
   *
   * Gets the attribute value for RequestId, using the alias name RequestId
   */
  public Number getRequestId()
  {
    return (Number)getAttributeInternal(REQUESTID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for RequestId
   */
  public void setRequestId(Number value)
  {
    setAttributeInternal(REQUESTID, value);
  }

  /**
   *
   * Gets the attribute value for ProgramApplicationId, using the alias name ProgramApplicationId
   */
  public Number getProgramApplicationId()
  {
    return (Number)getAttributeInternal(PROGRAMAPPLICATIONID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for ProgramApplicationId
   */
  public void setProgramApplicationId(Number value)
  {
    setAttributeInternal(PROGRAMAPPLICATIONID, value);
  }

  /**
   *
   * Gets the attribute value for ProgramId, using the alias name ProgramId
   */
  public Number getProgramId()
  {
    return (Number)getAttributeInternal(PROGRAMID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for ProgramId
   */
  public void setProgramId(Number value)
  {
    setAttributeInternal(PROGRAMID, value);
  }

  /**
   *
   * Gets the attribute value for ProgramUpdateDate, using the alias name ProgramUpdateDate
   */
  public Date getProgramUpdateDate()
  {
    return (Date)getAttributeInternal(PROGRAMUPDATEDATE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for ProgramUpdateDate
   */
  public void setProgramUpdateDate(Date value)
  {
    setAttributeInternal(PROGRAMUPDATEDATE, value);
  }

  /**
   *
   * Gets the attribute value for AttributeCategory, using the alias name AttributeCategory
   */
  public String getAttributeCategory()
  {
    return (String)getAttributeInternal(ATTRIBUTECATEGORY);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for AttributeCategory
   */
  public void setAttributeCategory(String value)
  {
    setAttributeInternal(ATTRIBUTECATEGORY, value);
  }

  /**
   *
   * Gets the attribute value for Attribute1, using the alias name Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**
   *
   * Gets the attribute value for Attribute2, using the alias name Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**
   *
   * Gets the attribute value for Attribute3, using the alias name Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**
   *
   * Gets the attribute value for Attribute4, using the alias name Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**
   *
   * Gets the attribute value for Attribute5, using the alias name Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**
   *
   * Gets the attribute value for Attribute6, using the alias name Attribute6
   */
  public String getAttribute6()
  {
    return (String)getAttributeInternal(ATTRIBUTE6);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute6
   */
  public void setAttribute6(String value)
  {
    setAttributeInternal(ATTRIBUTE6, value);
  }

  /**
   *
   * Gets the attribute value for Attribute7, using the alias name Attribute7
   */
  public String getAttribute7()
  {
    return (String)getAttributeInternal(ATTRIBUTE7);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute7
   */
  public void setAttribute7(String value)
  {
    setAttributeInternal(ATTRIBUTE7, value);
  }

  /**
   *
   * Gets the attribute value for Attribute8, using the alias name Attribute8
   */
  public String getAttribute8()
  {
    return (String)getAttributeInternal(ATTRIBUTE8);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute8
   */
  public void setAttribute8(String value)
  {
    setAttributeInternal(ATTRIBUTE8, value);
  }

  /**
   *
   * Gets the attribute value for Attribute9, using the alias name Attribute9
   */
  public String getAttribute9()
  {
    return (String)getAttributeInternal(ATTRIBUTE9);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute9
   */
  public void setAttribute9(String value)
  {
    setAttributeInternal(ATTRIBUTE9, value);
  }

  /**
   *
   * Gets the attribute value for Attribute10, using the alias name Attribute10
   */
  public String getAttribute10()
  {
    return (String)getAttributeInternal(ATTRIBUTE10);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute10
   */
  public void setAttribute10(String value)
  {
    setAttributeInternal(ATTRIBUTE10, value);
  }

  /**
   *
   * Gets the attribute value for Attribute11, using the alias name Attribute11
   */
  public String getAttribute11()
  {
    return (String)getAttributeInternal(ATTRIBUTE11);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute11
   */
  public void setAttribute11(String value)
  {
    setAttributeInternal(ATTRIBUTE11, value);
  }

  /**
   *
   * Gets the attribute value for Attribute12, using the alias name Attribute12
   */
  public String getAttribute12()
  {
    return (String)getAttributeInternal(ATTRIBUTE12);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute12
   */
  public void setAttribute12(String value)
  {
    setAttributeInternal(ATTRIBUTE12, value);
  }

  /**
   *
   * Gets the attribute value for Attribute13, using the alias name Attribute13
   */
  public String getAttribute13()
  {
    return (String)getAttributeInternal(ATTRIBUTE13);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute13
   */
  public void setAttribute13(String value)
  {
    setAttributeInternal(ATTRIBUTE13, value);
  }

  /**
   *
   * Gets the attribute value for Attribute14, using the alias name Attribute14
   */
  public String getAttribute14()
  {
    return (String)getAttributeInternal(ATTRIBUTE14);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute14
   */
  public void setAttribute14(String value)
  {
    setAttributeInternal(ATTRIBUTE14, value);
  }

  /**
   *
   * Gets the attribute value for Attribute15, using the alias name Attribute15
   */
  public String getAttribute15()
  {
    return (String)getAttributeInternal(ATTRIBUTE15);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute15
   */
  public void setAttribute15(String value)
  {
    setAttributeInternal(ATTRIBUTE15, value);
  }

  /**
   *
   * Gets the attribute value for Attribute16, using the alias name Attribute16
   */
  public String getAttribute16()
  {
    return (String)getAttributeInternal(ATTRIBUTE16);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute16
   */
  public void setAttribute16(String value)
  {
    setAttributeInternal(ATTRIBUTE16, value);
  }

  /**
   *
   * Gets the attribute value for Attribute17, using the alias name Attribute17
   */
  public String getAttribute17()
  {
    return (String)getAttributeInternal(ATTRIBUTE17);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute17
   */
  public void setAttribute17(String value)
  {
    setAttributeInternal(ATTRIBUTE17, value);
  }

  /**
   *
   * Gets the attribute value for Attribute18, using the alias name Attribute18
   */
  public String getAttribute18()
  {
    return (String)getAttributeInternal(ATTRIBUTE18);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute18
   */
  public void setAttribute18(String value)
  {
    setAttributeInternal(ATTRIBUTE18, value);
  }

  /**
   *
   * Gets the attribute value for Attribute19, using the alias name Attribute19
   */
  public String getAttribute19()
  {
    return (String)getAttributeInternal(ATTRIBUTE19);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute19
   */
  public void setAttribute19(String value)
  {
    setAttributeInternal(ATTRIBUTE19, value);
  }

  /**
   *
   * Gets the attribute value for Attribute20, using the alias name Attribute20
   */
  public String getAttribute20()
  {
    return (String)getAttributeInternal(ATTRIBUTE20);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Attribute20
   */
  public void setAttribute20(String value)
  {
    setAttributeInternal(ATTRIBUTE20, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttributeCategory, using the alias name GlobalAttributeCategory
   */
  public String getGlobalAttributeCategory()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTECATEGORY);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttributeCategory
   */
  public void setGlobalAttributeCategory(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTECATEGORY, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute1, using the alias name GlobalAttribute1
   */
  public String getGlobalAttribute1()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE1);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute1
   */
  public void setGlobalAttribute1(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE1, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute2, using the alias name GlobalAttribute2
   */
  public String getGlobalAttribute2()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE2);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute2
   */
  public void setGlobalAttribute2(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE2, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute3, using the alias name GlobalAttribute3
   */
  public String getGlobalAttribute3()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE3);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute3
   */
  public void setGlobalAttribute3(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE3, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute4, using the alias name GlobalAttribute4
   */
  public String getGlobalAttribute4()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE4);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute4
   */
  public void setGlobalAttribute4(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE4, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute5, using the alias name GlobalAttribute5
   */
  public String getGlobalAttribute5()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE5);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute5
   */
  public void setGlobalAttribute5(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE5, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute6, using the alias name GlobalAttribute6
   */
  public String getGlobalAttribute6()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE6);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute6
   */
  public void setGlobalAttribute6(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE6, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute7, using the alias name GlobalAttribute7
   */
  public String getGlobalAttribute7()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE7);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute7
   */
  public void setGlobalAttribute7(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE7, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute8, using the alias name GlobalAttribute8
   */
  public String getGlobalAttribute8()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE8);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute8
   */
  public void setGlobalAttribute8(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE8, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute9, using the alias name GlobalAttribute9
   */
  public String getGlobalAttribute9()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE9);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute9
   */
  public void setGlobalAttribute9(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE9, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute10, using the alias name GlobalAttribute10
   */
  public String getGlobalAttribute10()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE10);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute10
   */
  public void setGlobalAttribute10(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE10, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute11, using the alias name GlobalAttribute11
   */
  public String getGlobalAttribute11()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE11);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute11
   */
  public void setGlobalAttribute11(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE11, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute12, using the alias name GlobalAttribute12
   */
  public String getGlobalAttribute12()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE12);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute12
   */
  public void setGlobalAttribute12(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE12, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute13, using the alias name GlobalAttribute13
   */
  public String getGlobalAttribute13()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE13);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute13
   */
  public void setGlobalAttribute13(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE13, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute14, using the alias name GlobalAttribute14
   */
  public String getGlobalAttribute14()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE14);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute14
   */
  public void setGlobalAttribute14(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE14, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute15, using the alias name GlobalAttribute15
   */
  public String getGlobalAttribute15()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE15);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute15
   */
  public void setGlobalAttribute15(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE15, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute16, using the alias name GlobalAttribute16
   */
  public String getGlobalAttribute16()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE16);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute16
   */
  public void setGlobalAttribute16(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE16, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute17, using the alias name GlobalAttribute17
   */
  public String getGlobalAttribute17()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE17);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute17
   */
  public void setGlobalAttribute17(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE17, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute18, using the alias name GlobalAttribute18
   */
  public String getGlobalAttribute18()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE18);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute18
   */
  public void setGlobalAttribute18(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE18, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute19, using the alias name GlobalAttribute19
   */
  public String getGlobalAttribute19()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE19);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute19
   */
  public void setGlobalAttribute19(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE19, value);
  }

  /**
   *
   * Gets the attribute value for GlobalAttribute20, using the alias name GlobalAttribute20
   */
  public String getGlobalAttribute20()
  {
    return (String)getAttributeInternal(GLOBALATTRIBUTE20);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for GlobalAttribute20
   */
  public void setGlobalAttribute20(String value)
  {
    setAttributeInternal(GLOBALATTRIBUTE20, value);
  }

  /**
   *
   * Gets the attribute value for EdiTransactionHandling, using the alias name EdiTransactionHandling
   */
  public String getEdiTransactionHandling()
  {
    return (String)getAttributeInternal(EDITRANSACTIONHANDLING);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EdiTransactionHandling
   */
  public void setEdiTransactionHandling(String value)
  {
    setAttributeInternal(EDITRANSACTIONHANDLING, value);
  }

  /**
   *
   * Gets the attribute value for EdiIdNumber, using the alias name EdiIdNumber
   */
  public String getEdiIdNumber()
  {
    return (String)getAttributeInternal(EDIIDNUMBER);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EdiIdNumber
   */
  public void setEdiIdNumber(String value)
  {
    setAttributeInternal(EDIIDNUMBER, value);
  }

  /**
   *
   * Gets the attribute value for EdiPaymentMethod, using the alias name EdiPaymentMethod
   */
  public String getEdiPaymentMethod()
  {
    return (String)getAttributeInternal(EDIPAYMENTMETHOD);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EdiPaymentMethod
   */
  public void setEdiPaymentMethod(String value)
  {
    setAttributeInternal(EDIPAYMENTMETHOD, value);
  }

  /**
   *
   * Gets the attribute value for EdiPaymentFormat, using the alias name EdiPaymentFormat
   */
  public String getEdiPaymentFormat()
  {
    return (String)getAttributeInternal(EDIPAYMENTFORMAT);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EdiPaymentFormat
   */
  public void setEdiPaymentFormat(String value)
  {
    setAttributeInternal(EDIPAYMENTFORMAT, value);
  }

  /**
   *
   * Gets the attribute value for EdiRemittanceMethod, using the alias name EdiRemittanceMethod
   */
  public String getEdiRemittanceMethod()
  {
    return (String)getAttributeInternal(EDIREMITTANCEMETHOD);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EdiRemittanceMethod
   */
  public void setEdiRemittanceMethod(String value)
  {
    setAttributeInternal(EDIREMITTANCEMETHOD, value);
  }

  /**
   *
   * Gets the attribute value for EdiRemittanceInstruction, using the alias name EdiRemittanceInstruction
   */
  public String getEdiRemittanceInstruction()
  {
    return (String)getAttributeInternal(EDIREMITTANCEINSTRUCTION);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EdiRemittanceInstruction
   */
  public void setEdiRemittanceInstruction(String value)
  {
    setAttributeInternal(EDIREMITTANCEINSTRUCTION, value);
  }

  /**
   *
   * Gets the attribute value for EdiTpHeaderId, using the alias name EdiTpHeaderId
   */
  public Number getEdiTpHeaderId()
  {
    return (Number)getAttributeInternal(EDITPHEADERID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EdiTpHeaderId
   */
  public void setEdiTpHeaderId(Number value)
  {
    setAttributeInternal(EDITPHEADERID, value);
  }

  /**
   *
   * Gets the attribute value for EdiEceTpLocationCode, using the alias name EdiEceTpLocationCode
   */
  public String getEdiEceTpLocationCode()
  {
    return (String)getAttributeInternal(EDIECETPLOCATIONCODE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EdiEceTpLocationCode
   */
  public void setEdiEceTpLocationCode(String value)
  {
    setAttributeInternal(EDIECETPLOCATIONCODE, value);
  }

  /**
   *
   * Gets the attribute value for EmailFormat, using the alias name EmailFormat
   */
  public String getEmailFormat()
  {
    return (String)getAttributeInternal(EMAILFORMAT);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EmailFormat
   */
  public void setEmailFormat(String value)
  {
    setAttributeInternal(EMAILFORMAT, value);
  }

  /**
   *
   * Gets the attribute value for EmailAddress, using the alias name EmailAddress
   */
  public String getEmailAddress()
  {
    return (String)getAttributeInternal(EMAILADDRESS);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EmailAddress
   */
  public void setEmailAddress(String value)
  {
    setAttributeInternal(EMAILADDRESS, value);
  }

  /**
   *
   * Gets the attribute value for BestTimeToContactStart, using the alias name BestTimeToContactStart
   */
  public Date getBestTimeToContactStart()
  {
    return (Date)getAttributeInternal(BESTTIMETOCONTACTSTART);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for BestTimeToContactStart
   */
  public void setBestTimeToContactStart(Date value)
  {
    setAttributeInternal(BESTTIMETOCONTACTSTART, value);
  }

  /**
   *
   * Gets the attribute value for BestTimeToContactEnd, using the alias name BestTimeToContactEnd
   */
  public Date getBestTimeToContactEnd()
  {
    return (Date)getAttributeInternal(BESTTIMETOCONTACTEND);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for BestTimeToContactEnd
   */
  public void setBestTimeToContactEnd(Date value)
  {
    setAttributeInternal(BESTTIMETOCONTACTEND, value);
  }

  /**
   *
   * Gets the attribute value for PhoneCallingCalendar, using the alias name PhoneCallingCalendar
   */
  public String getPhoneCallingCalendar()
  {
    return (String)getAttributeInternal(PHONECALLINGCALENDAR);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for PhoneCallingCalendar
   */
  public void setPhoneCallingCalendar(String value)
  {
    setAttributeInternal(PHONECALLINGCALENDAR, value);
  }

  /**
   *
   * Gets the attribute value for ContactAttempts, using the alias name ContactAttempts
   */
  public Number getContactAttempts()
  {
    return (Number)getAttributeInternal(CONTACTATTEMPTS);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for ContactAttempts
   */
  public void setContactAttempts(Number value)
  {
    setAttributeInternal(CONTACTATTEMPTS, value);
  }

  /**
   *
   * Gets the attribute value for Contacts, using the alias name Contacts
   */
  public Number getContacts()
  {
    return (Number)getAttributeInternal(CONTACTS);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Contacts
   */
  public void setContacts(Number value)
  {
    setAttributeInternal(CONTACTS, value);
  }

  /**
   *
   * Gets the attribute value for DeclaredBusinessPhoneFlag, using the alias name DeclaredBusinessPhoneFlag
   */
  public String getDeclaredBusinessPhoneFlag()
  {
    return (String)getAttributeInternal(DECLAREDBUSINESSPHONEFLAG);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for DeclaredBusinessPhoneFlag
   */
  public void setDeclaredBusinessPhoneFlag(String value)
  {
    setAttributeInternal(DECLAREDBUSINESSPHONEFLAG, value);
  }

  /**
   *
   * Gets the attribute value for DoNotUseFlag, using the alias name DoNotUseFlag
   */
  public String getDoNotUseFlag()
  {
    return (String)getAttributeInternal(DONOTUSEFLAG);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for DoNotUseFlag
   */
  public void setDoNotUseFlag(String value)
  {
    setAttributeInternal(DONOTUSEFLAG, value);
  }

  /**
   *
   * Gets the attribute value for DoNotUseReason, using the alias name DoNotUseReason
   */
  public String getDoNotUseReason()
  {
    return (String)getAttributeInternal(DONOTUSEREASON);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for DoNotUseReason
   */
  public void setDoNotUseReason(String value)
  {
    setAttributeInternal(DONOTUSEREASON, value);
  }

  /**
   *
   * Gets the attribute value for LastContactDtTime, using the alias name LastContactDtTime
   */
  public Date getLastContactDtTime()
  {
    return (Date)getAttributeInternal(LASTCONTACTDTTIME);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for LastContactDtTime
   */
  public void setLastContactDtTime(Date value)
  {
    setAttributeInternal(LASTCONTACTDTTIME, value);
  }

  /**
   *
   * Gets the attribute value for PhonePreferredOrder, using the alias name PhonePreferredOrder
   */
  public Number getPhonePreferredOrder()
  {
    return (Number)getAttributeInternal(PHONEPREFERREDORDER);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for PhonePreferredOrder
   */
  public void setPhonePreferredOrder(Number value)
  {
    setAttributeInternal(PHONEPREFERREDORDER, value);
  }

  /**
   *
   * Gets the attribute value for PriorityOfUseCode, using the alias name PriorityOfUseCode
   */
  public String getPriorityOfUseCode()
  {
    return (String)getAttributeInternal(PRIORITYOFUSECODE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for PriorityOfUseCode
   */
  public void setPriorityOfUseCode(String value)
  {
    setAttributeInternal(PRIORITYOFUSECODE, value);
  }

  /**
   *
   * Gets the attribute value for TelephoneType, using the alias name TelephoneType
   */
  public String getTelephoneType()
  {
    return (String)getAttributeInternal(TELEPHONETYPE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for TelephoneType
   */
  public void setTelephoneType(String value)
  {
    setAttributeInternal(TELEPHONETYPE, value);
  }

  /**
   *
   * Gets the attribute value for TimeZone, using the alias name TimeZone
   */
  public Number getTimeZone()
  {
    return (Number)getAttributeInternal(TIMEZONE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for TimeZone
   */
  public void setTimeZone(Number value)
  {
    setAttributeInternal(TIMEZONE, value);
  }

  /**
   *
   * Gets the attribute value for PhoneTouchToneTypeFlag, using the alias name PhoneTouchToneTypeFlag
   */
  public String getPhoneTouchToneTypeFlag()
  {
    return (String)getAttributeInternal(PHONETOUCHTONETYPEFLAG);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for PhoneTouchToneTypeFlag
   */
  public void setPhoneTouchToneTypeFlag(String value)
  {
    setAttributeInternal(PHONETOUCHTONETYPEFLAG, value);
  }

  /**
   *
   * Gets the attribute value for PhoneAreaCode, using the alias name PhoneAreaCode
   */
  public String getPhoneAreaCode()
  {
    return (String)getAttributeInternal(PHONEAREACODE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for PhoneAreaCode
   */
  public void setPhoneAreaCode(String value)
  {
    setAttributeInternal(PHONEAREACODE, value);
  }

  /**
   *
   * Gets the attribute value for PhoneCountryCode, using the alias name PhoneCountryCode
   */
  public String getPhoneCountryCode()
  {
    return (String)getAttributeInternal(PHONECOUNTRYCODE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for PhoneCountryCode
   */
  public void setPhoneCountryCode(String value)
  {
    setAttributeInternal(PHONECOUNTRYCODE, value);
  }

  /**
   *
   * Gets the attribute value for PhoneNumber, using the alias name PhoneNumber
   */
  public String getPhoneNumber()
  {
    return (String)getAttributeInternal(PHONENUMBER);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for PhoneNumber
   */
  public void setPhoneNumber(String value)
  {
    setAttributeInternal(PHONENUMBER, value);
  }

  /**
   *
   * Gets the attribute value for PhoneExtension, using the alias name PhoneExtension
   */
  public String getPhoneExtension()
  {
    return (String)getAttributeInternal(PHONEEXTENSION);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for PhoneExtension
   */
  public void setPhoneExtension(String value)
  {
    setAttributeInternal(PHONEEXTENSION, value);
  }

  /**
   *
   * Gets the attribute value for PhoneLineType, using the alias name PhoneLineType
   */
  public String getPhoneLineType()
  {
    return (String)getAttributeInternal(PHONELINETYPE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for PhoneLineType
   */
  public void setPhoneLineType(String value)
  {
    setAttributeInternal(PHONELINETYPE, value);
  }

  /**
   *
   * Gets the attribute value for TelexNumber, using the alias name TelexNumber
   */
  public String getTelexNumber()
  {
    return (String)getAttributeInternal(TELEXNUMBER);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for TelexNumber
   */
  public void setTelexNumber(String value)
  {
    setAttributeInternal(TELEXNUMBER, value);
  }

  /**
   *
   * Gets the attribute value for WebType, using the alias name WebType
   */
  public String getWebType()
  {
    return (String)getAttributeInternal(WEBTYPE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for WebType
   */
  public void setWebType(String value)
  {
    setAttributeInternal(WEBTYPE, value);
  }

  /**
   *
   * Gets the attribute value for Url, using the alias name Url
   */
  public String getUrl()
  {
    return (String)getAttributeInternal(URL);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for Url
   */
  public void setUrl(String value)
  {
    setAttributeInternal(URL, value);
  }

  /**
   *
   * Gets the attribute value for ContentSourceType, using the alias name ContentSourceType
   */
  public String getContentSourceType()
  {
    return (String)getAttributeInternal(CONTENTSOURCETYPE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for ContentSourceType
   */
  public void setContentSourceType(String value)
  {
    setAttributeInternal(CONTENTSOURCETYPE, value);
  }

  /**
   *
   * Gets the attribute value for RawPhoneNumber, using the alias name RawPhoneNumber
   */
  public String getRawPhoneNumber()
  {
    return (String)getAttributeInternal(RAWPHONENUMBER);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for RawPhoneNumber
   */
  public void setRawPhoneNumber(String value)
  {
    setAttributeInternal(RAWPHONENUMBER, value);
  }

  /**
   *
   * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber
   */
  public Number getObjectVersionNumber()
  {
    return (Number)getAttributeInternal(OBJECTVERSIONNUMBER);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for ObjectVersionNumber
   */
  public void setObjectVersionNumber(Number value)
  {
    setAttributeInternal(OBJECTVERSIONNUMBER, value);
  }

  /**
   *
   * Gets the attribute value for CreatedByModule, using the alias name CreatedByModule
   */
  public String getCreatedByModule()
  {
    return (String)getAttributeInternal(CREATEDBYMODULE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for CreatedByModule
   */
  public void setCreatedByModule(String value)
  {
    setAttributeInternal(CREATEDBYMODULE, value);
  }

  /**
   *
   * Gets the attribute value for ApplicationId, using the alias name ApplicationId
   */
  public Number getApplicationId()
  {
    return (Number)getAttributeInternal(APPLICATIONID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for ApplicationId
   */
  public void setApplicationId(Number value)
  {
    setAttributeInternal(APPLICATIONID, value);
  }

  /**
   *
   * Gets the attribute value for TimezoneId, using the alias name TimezoneId
   */
  public Number getTimezoneId()
  {
    return (Number)getAttributeInternal(TIMEZONEID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for TimezoneId
   */
  public void setTimezoneId(Number value)
  {
    setAttributeInternal(TIMEZONEID, value);
  }

  /**
   *
   * Gets the attribute value for ContactPointPurpose, using the alias name ContactPointPurpose
   */
  public String getContactPointPurpose()
  {
    return (String)getAttributeInternal(CONTACTPOINTPURPOSE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for ContactPointPurpose
   */
  public void setContactPointPurpose(String value)
  {
    setAttributeInternal(CONTACTPOINTPURPOSE, value);
  }

  /**
   *
   * Gets the attribute value for PrimaryByPurpose, using the alias name PrimaryByPurpose
   */
  public String getPrimaryByPurpose()
  {
    return (String)getAttributeInternal(PRIMARYBYPURPOSE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for PrimaryByPurpose
   */
  public void setPrimaryByPurpose(String value)
  {
    setAttributeInternal(PRIMARYBYPURPOSE, value);
  }

  /**
   *
   * Gets the attribute value for TransposedPhoneNumber, using the alias name TransposedPhoneNumber
   */
  public String getTransposedPhoneNumber()
  {
    return (String)getAttributeInternal(TRANSPOSEDPHONENUMBER);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for TransposedPhoneNumber
   */
  public void setTransposedPhoneNumber(String value)
  {
    setAttributeInternal(TRANSPOSEDPHONENUMBER, value);
  }

  /**
   *
   * Gets the attribute value for EftTransmissionProgramId, using the alias name EftTransmissionProgramId
   */
  public Number getEftTransmissionProgramId()
  {
    return (Number)getAttributeInternal(EFTTRANSMISSIONPROGRAMID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EftTransmissionProgramId
   */
  public void setEftTransmissionProgramId(Number value)
  {
    setAttributeInternal(EFTTRANSMISSIONPROGRAMID, value);
  }

  /**
   *
   * Gets the attribute value for EftPrintingProgramId, using the alias name EftPrintingProgramId
   */
  public Number getEftPrintingProgramId()
  {
    return (Number)getAttributeInternal(EFTPRINTINGPROGRAMID);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EftPrintingProgramId
   */
  public void setEftPrintingProgramId(Number value)
  {
    setAttributeInternal(EFTPRINTINGPROGRAMID, value);
  }

  /**
   *
   * Gets the attribute value for EftUserNumber, using the alias name EftUserNumber
   */
  public String getEftUserNumber()
  {
    return (String)getAttributeInternal(EFTUSERNUMBER);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EftUserNumber
   */
  public void setEftUserNumber(String value)
  {
    setAttributeInternal(EFTUSERNUMBER, value);
  }

  /**
   *
   * Gets the attribute value for EftSwiftCode, using the alias name EftSwiftCode
   */
  public String getEftSwiftCode()
  {
    return (String)getAttributeInternal(EFTSWIFTCODE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for EftSwiftCode
   */
  public void setEftSwiftCode(String value)
  {
    setAttributeInternal(EFTSWIFTCODE, value);
  }

  /**
   *
   * Gets the attribute value for ActualContentSource, using the alias name ActualContentSource
   */
  public String getActualContentSource()
  {
    return (String)getAttributeInternal(ACTUALCONTENTSOURCE);
  }

  /**
   *
   * Sets <code>value</code> as the attribute value for ActualContentSource
   */
  public void setActualContentSource(String value)
  {
    setAttributeInternal(ACTUALCONTENTSOURCE, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CONTACTPOINTID:
        return getContactPointId();
      case CONTACTPOINTTYPE:
        return getContactPointType();
      case STATUS:
        return getStatus();
      case OWNERTABLENAME:
        return getOwnerTableName();
      case OWNERTABLEID:
        return getOwnerTableId();
      case PRIMARYFLAG:
        return getPrimaryFlag();
      case ORIGSYSTEMREFERENCE:
        return getOrigSystemReference();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case WHUPDATEDATE:
        return getWhUpdateDate();
      case REQUESTID:
        return getRequestId();
      case PROGRAMAPPLICATIONID:
        return getProgramApplicationId();
      case PROGRAMID:
        return getProgramId();
      case PROGRAMUPDATEDATE:
        return getProgramUpdateDate();
      case ATTRIBUTECATEGORY:
        return getAttributeCategory();
      case ATTRIBUTE1:
        return getAttribute1();
      case ATTRIBUTE2:
        return getAttribute2();
      case ATTRIBUTE3:
        return getAttribute3();
      case ATTRIBUTE4:
        return getAttribute4();
      case ATTRIBUTE5:
        return getAttribute5();
      case ATTRIBUTE6:
        return getAttribute6();
      case ATTRIBUTE7:
        return getAttribute7();
      case ATTRIBUTE8:
        return getAttribute8();
      case ATTRIBUTE9:
        return getAttribute9();
      case ATTRIBUTE10:
        return getAttribute10();
      case ATTRIBUTE11:
        return getAttribute11();
      case ATTRIBUTE12:
        return getAttribute12();
      case ATTRIBUTE13:
        return getAttribute13();
      case ATTRIBUTE14:
        return getAttribute14();
      case ATTRIBUTE15:
        return getAttribute15();
      case ATTRIBUTE16:
        return getAttribute16();
      case ATTRIBUTE17:
        return getAttribute17();
      case ATTRIBUTE18:
        return getAttribute18();
      case ATTRIBUTE19:
        return getAttribute19();
      case ATTRIBUTE20:
        return getAttribute20();
      case GLOBALATTRIBUTECATEGORY:
        return getGlobalAttributeCategory();
      case GLOBALATTRIBUTE1:
        return getGlobalAttribute1();
      case GLOBALATTRIBUTE2:
        return getGlobalAttribute2();
      case GLOBALATTRIBUTE3:
        return getGlobalAttribute3();
      case GLOBALATTRIBUTE4:
        return getGlobalAttribute4();
      case GLOBALATTRIBUTE5:
        return getGlobalAttribute5();
      case GLOBALATTRIBUTE6:
        return getGlobalAttribute6();
      case GLOBALATTRIBUTE7:
        return getGlobalAttribute7();
      case GLOBALATTRIBUTE8:
        return getGlobalAttribute8();
      case GLOBALATTRIBUTE9:
        return getGlobalAttribute9();
      case GLOBALATTRIBUTE10:
        return getGlobalAttribute10();
      case GLOBALATTRIBUTE11:
        return getGlobalAttribute11();
      case GLOBALATTRIBUTE12:
        return getGlobalAttribute12();
      case GLOBALATTRIBUTE13:
        return getGlobalAttribute13();
      case GLOBALATTRIBUTE14:
        return getGlobalAttribute14();
      case GLOBALATTRIBUTE15:
        return getGlobalAttribute15();
      case GLOBALATTRIBUTE16:
        return getGlobalAttribute16();
      case GLOBALATTRIBUTE17:
        return getGlobalAttribute17();
      case GLOBALATTRIBUTE18:
        return getGlobalAttribute18();
      case GLOBALATTRIBUTE19:
        return getGlobalAttribute19();
      case GLOBALATTRIBUTE20:
        return getGlobalAttribute20();
      case EDITRANSACTIONHANDLING:
        return getEdiTransactionHandling();
      case EDIIDNUMBER:
        return getEdiIdNumber();
      case EDIPAYMENTMETHOD:
        return getEdiPaymentMethod();
      case EDIPAYMENTFORMAT:
        return getEdiPaymentFormat();
      case EDIREMITTANCEMETHOD:
        return getEdiRemittanceMethod();
      case EDIREMITTANCEINSTRUCTION:
        return getEdiRemittanceInstruction();
      case EDITPHEADERID:
        return getEdiTpHeaderId();
      case EDIECETPLOCATIONCODE:
        return getEdiEceTpLocationCode();
      case EMAILFORMAT:
        return getEmailFormat();
      case EMAILADDRESS:
        return getEmailAddress();
      case BESTTIMETOCONTACTSTART:
        return getBestTimeToContactStart();
      case BESTTIMETOCONTACTEND:
        return getBestTimeToContactEnd();
      case PHONECALLINGCALENDAR:
        return getPhoneCallingCalendar();
      case CONTACTATTEMPTS:
        return getContactAttempts();
      case CONTACTS:
        return getContacts();
      case DECLAREDBUSINESSPHONEFLAG:
        return getDeclaredBusinessPhoneFlag();
      case DONOTUSEFLAG:
        return getDoNotUseFlag();
      case DONOTUSEREASON:
        return getDoNotUseReason();
      case LASTCONTACTDTTIME:
        return getLastContactDtTime();
      case PHONEPREFERREDORDER:
        return getPhonePreferredOrder();
      case PRIORITYOFUSECODE:
        return getPriorityOfUseCode();
      case TELEPHONETYPE:
        return getTelephoneType();
      case TIMEZONE:
        return getTimeZone();
      case PHONETOUCHTONETYPEFLAG:
        return getPhoneTouchToneTypeFlag();
      case PHONEAREACODE:
        return getPhoneAreaCode();
      case PHONECOUNTRYCODE:
        return getPhoneCountryCode();
      case PHONENUMBER:
        return getPhoneNumber();
      case PHONEEXTENSION:
        return getPhoneExtension();
      case PHONELINETYPE:
        return getPhoneLineType();
      case TELEXNUMBER:
        return getTelexNumber();
      case WEBTYPE:
        return getWebType();
      case URL:
        return getUrl();
      case CONTENTSOURCETYPE:
        return getContentSourceType();
      case RAWPHONENUMBER:
        return getRawPhoneNumber();
      case OBJECTVERSIONNUMBER:
        return getObjectVersionNumber();
      case CREATEDBYMODULE:
        return getCreatedByModule();
      case APPLICATIONID:
        return getApplicationId();
      case TIMEZONEID:
        return getTimezoneId();
      case CONTACTPOINTPURPOSE:
        return getContactPointPurpose();
      case PRIMARYBYPURPOSE:
        return getPrimaryByPurpose();
      case TRANSPOSEDPHONENUMBER:
        return getTransposedPhoneNumber();
      case EFTTRANSMISSIONPROGRAMID:
        return getEftTransmissionProgramId();
      case EFTPRINTINGPROGRAMID:
        return getEftPrintingProgramId();
      case EFTUSERNUMBER:
        return getEftUserNumber();
      case EFTSWIFTCODE:
        return getEftSwiftCode();
      case ACTUALCONTENTSOURCE:
        return getActualContentSource();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CONTACTPOINTID:
        setContactPointId((Number)value);
        return;
      case CONTACTPOINTTYPE:
        setContactPointType((String)value);
        return;
      case STATUS:
        setStatus((String)value);
        return;
      case OWNERTABLENAME:
        setOwnerTableName((String)value);
        return;
      case OWNERTABLEID:
        setOwnerTableId((Number)value);
        return;
      case PRIMARYFLAG:
        setPrimaryFlag((String)value);
        return;
      case ORIGSYSTEMREFERENCE:
        setOrigSystemReference((String)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case WHUPDATEDATE:
        setWhUpdateDate((Date)value);
        return;
      case REQUESTID:
        setRequestId((Number)value);
        return;
      case PROGRAMAPPLICATIONID:
        setProgramApplicationId((Number)value);
        return;
      case PROGRAMID:
        setProgramId((Number)value);
        return;
      case PROGRAMUPDATEDATE:
        setProgramUpdateDate((Date)value);
        return;
      case ATTRIBUTECATEGORY:
        setAttributeCategory((String)value);
        return;
      case ATTRIBUTE1:
        setAttribute1((String)value);
        return;
      case ATTRIBUTE2:
        setAttribute2((String)value);
        return;
      case ATTRIBUTE3:
        setAttribute3((String)value);
        return;
      case ATTRIBUTE4:
        setAttribute4((String)value);
        return;
      case ATTRIBUTE5:
        setAttribute5((String)value);
        return;
      case ATTRIBUTE6:
        setAttribute6((String)value);
        return;
      case ATTRIBUTE7:
        setAttribute7((String)value);
        return;
      case ATTRIBUTE8:
        setAttribute8((String)value);
        return;
      case ATTRIBUTE9:
        setAttribute9((String)value);
        return;
      case ATTRIBUTE10:
        setAttribute10((String)value);
        return;
      case ATTRIBUTE11:
        setAttribute11((String)value);
        return;
      case ATTRIBUTE12:
        setAttribute12((String)value);
        return;
      case ATTRIBUTE13:
        setAttribute13((String)value);
        return;
      case ATTRIBUTE14:
        setAttribute14((String)value);
        return;
      case ATTRIBUTE15:
        setAttribute15((String)value);
        return;
      case ATTRIBUTE16:
        setAttribute16((String)value);
        return;
      case ATTRIBUTE17:
        setAttribute17((String)value);
        return;
      case ATTRIBUTE18:
        setAttribute18((String)value);
        return;
      case ATTRIBUTE19:
        setAttribute19((String)value);
        return;
      case ATTRIBUTE20:
        setAttribute20((String)value);
        return;
      case GLOBALATTRIBUTECATEGORY:
        setGlobalAttributeCategory((String)value);
        return;
      case GLOBALATTRIBUTE1:
        setGlobalAttribute1((String)value);
        return;
      case GLOBALATTRIBUTE2:
        setGlobalAttribute2((String)value);
        return;
      case GLOBALATTRIBUTE3:
        setGlobalAttribute3((String)value);
        return;
      case GLOBALATTRIBUTE4:
        setGlobalAttribute4((String)value);
        return;
      case GLOBALATTRIBUTE5:
        setGlobalAttribute5((String)value);
        return;
      case GLOBALATTRIBUTE6:
        setGlobalAttribute6((String)value);
        return;
      case GLOBALATTRIBUTE7:
        setGlobalAttribute7((String)value);
        return;
      case GLOBALATTRIBUTE8:
        setGlobalAttribute8((String)value);
        return;
      case GLOBALATTRIBUTE9:
        setGlobalAttribute9((String)value);
        return;
      case GLOBALATTRIBUTE10:
        setGlobalAttribute10((String)value);
        return;
      case GLOBALATTRIBUTE11:
        setGlobalAttribute11((String)value);
        return;
      case GLOBALATTRIBUTE12:
        setGlobalAttribute12((String)value);
        return;
      case GLOBALATTRIBUTE13:
        setGlobalAttribute13((String)value);
        return;
      case GLOBALATTRIBUTE14:
        setGlobalAttribute14((String)value);
        return;
      case GLOBALATTRIBUTE15:
        setGlobalAttribute15((String)value);
        return;
      case GLOBALATTRIBUTE16:
        setGlobalAttribute16((String)value);
        return;
      case GLOBALATTRIBUTE17:
        setGlobalAttribute17((String)value);
        return;
      case GLOBALATTRIBUTE18:
        setGlobalAttribute18((String)value);
        return;
      case GLOBALATTRIBUTE19:
        setGlobalAttribute19((String)value);
        return;
      case GLOBALATTRIBUTE20:
        setGlobalAttribute20((String)value);
        return;
      case EDITRANSACTIONHANDLING:
        setEdiTransactionHandling((String)value);
        return;
      case EDIIDNUMBER:
        setEdiIdNumber((String)value);
        return;
      case EDIPAYMENTMETHOD:
        setEdiPaymentMethod((String)value);
        return;
      case EDIPAYMENTFORMAT:
        setEdiPaymentFormat((String)value);
        return;
      case EDIREMITTANCEMETHOD:
        setEdiRemittanceMethod((String)value);
        return;
      case EDIREMITTANCEINSTRUCTION:
        setEdiRemittanceInstruction((String)value);
        return;
      case EDITPHEADERID:
        setEdiTpHeaderId((Number)value);
        return;
      case EDIECETPLOCATIONCODE:
        setEdiEceTpLocationCode((String)value);
        return;
      case EMAILFORMAT:
        setEmailFormat((String)value);
        return;
      case EMAILADDRESS:
        setEmailAddress((String)value);
        return;
      case BESTTIMETOCONTACTSTART:
        setBestTimeToContactStart((Date)value);
        return;
      case BESTTIMETOCONTACTEND:
        setBestTimeToContactEnd((Date)value);
        return;
      case PHONECALLINGCALENDAR:
        setPhoneCallingCalendar((String)value);
        return;
      case CONTACTATTEMPTS:
        setContactAttempts((Number)value);
        return;
      case CONTACTS:
        setContacts((Number)value);
        return;
      case DECLAREDBUSINESSPHONEFLAG:
        setDeclaredBusinessPhoneFlag((String)value);
        return;
      case DONOTUSEFLAG:
        setDoNotUseFlag((String)value);
        return;
      case DONOTUSEREASON:
        setDoNotUseReason((String)value);
        return;
      case LASTCONTACTDTTIME:
        setLastContactDtTime((Date)value);
        return;
      case PHONEPREFERREDORDER:
        setPhonePreferredOrder((Number)value);
        return;
      case PRIORITYOFUSECODE:
        setPriorityOfUseCode((String)value);
        return;
      case TELEPHONETYPE:
        setTelephoneType((String)value);
        return;
      case TIMEZONE:
        setTimeZone((Number)value);
        return;
      case PHONETOUCHTONETYPEFLAG:
        setPhoneTouchToneTypeFlag((String)value);
        return;
      case PHONEAREACODE:
        setPhoneAreaCode((String)value);
        return;
      case PHONECOUNTRYCODE:
        setPhoneCountryCode((String)value);
        return;
      case PHONENUMBER:
        setPhoneNumber((String)value);
        return;
      case PHONEEXTENSION:
        setPhoneExtension((String)value);
        return;
      case PHONELINETYPE:
        setPhoneLineType((String)value);
        return;
      case TELEXNUMBER:
        setTelexNumber((String)value);
        return;
      case WEBTYPE:
        setWebType((String)value);
        return;
      case URL:
        setUrl((String)value);
        return;
      case CONTENTSOURCETYPE:
        setContentSourceType((String)value);
        return;
      case RAWPHONENUMBER:
        setRawPhoneNumber((String)value);
        return;
      case OBJECTVERSIONNUMBER:
        setObjectVersionNumber((Number)value);
        return;
      case CREATEDBYMODULE:
        setCreatedByModule((String)value);
        return;
      case APPLICATIONID:
        setApplicationId((Number)value);
        return;
      case TIMEZONEID:
        setTimezoneId((Number)value);
        return;
      case CONTACTPOINTPURPOSE:
        setContactPointPurpose((String)value);
        return;
      case PRIMARYBYPURPOSE:
        setPrimaryByPurpose((String)value);
        return;
      case TRANSPOSEDPHONENUMBER:
        setTransposedPhoneNumber((String)value);
        return;
      case EFTTRANSMISSIONPROGRAMID:
        setEftTransmissionProgramId((Number)value);
        return;
      case EFTPRINTINGPROGRAMID:
        setEftPrintingProgramId((Number)value);
        return;
      case EFTUSERNUMBER:
        setEftUserNumber((String)value);
        return;
      case EFTSWIFTCODE:
        setEftSwiftCode((String)value);
        return;
      case ACTUALCONTENTSOURCE:
        setActualContentSource((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   *
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number contactPointId)
  {
    return new Key(new Object[] {contactPointId});
  }



}