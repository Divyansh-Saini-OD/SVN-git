package od.oracle.apps.xxcrm.scs.fdk.server;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.jbo.Row;
import oracle.apps.fnd.framework.OAViewObject;
import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;
import oracle.jbo.domain.Number;
import od.oracle.apps.xxcrm.cs.custom.lov.server.OptyCnctVOImpl;
import od.oracle.apps.xxcrm.cs.custom.poplist.server.ODFdkActyTypVOImpl;
import od.oracle.apps.xxcrm.cs.custom.poplist.server.ODFlwUpOnCallVOImpl;
import od.oracle.apps.xxcrm.cs.custom.poplist.server.ODOptyCnfmdVOImpl;
import od.oracle.apps.xxcrm.cs.custom.poplist.server.ODOtcmOfCallVOImpl;
import od.oracle.apps.xxcrm.cs.custom.poplist.server.ODRatnlBhvrVOImpl;
import od.oracle.apps.xxcrm.cs.custom.poplist.server.ODCustCntctedVOImpl;
import od.oracle.apps.xxcrm.cs.custom.poplist.server.ODRskCnfmdVOImpl;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.common.MessageToken;
import oracle.jbo.server.ViewLinkImpl;
import oracle.apps.fnd.framework.server.OADBTransactionImpl;
import oracle.apps.fnd.framework.server.OAViewDef;
import oracle.jbo.AttributeDef;
import oracle.jbo.ViewObject;
import oracle.apps.fnd.framework.server.OAViewDefImpl;
import oracle.jbo.server.*;
import od.oracle.apps.xxcrm.scs.fdk.server.ODSCSFdbkHdrStgVOImpl;
import od.oracle.apps.xxcrm.scs.fdk.server.ODSCSFdbkLineDtlStgVOImpl;
import od.oracle.apps.xxcrm.cs.custom.server.FDKFMVOImpl;
import od.oracle.apps.xxcrm.cs.custom.server.FeedbackFormResponseVOImpl;
import od.oracle.apps.xxcrm.cs.custom.server.FdkBkRsltVOImpl;
import od.oracle.apps.xxcrm.cs.custom.server.FdkFmDtlsVOImpl;
import od.oracle.apps.xxcrm.cs.custom.server.TempMasterVOImpl;
import od.oracle.apps.xxcrm.cs.custom.server.TempDtlVOImpl;
import od.oracle.apps.xxcrm.cs.custom.server.TempPropertiesVOImpl;
import od.oracle.apps.xxcrm.cs.custom.server.TempPropertiesVORowImpl;
import od.oracle.apps.xxcrm.cs.custom.server.DymamicVOImpl;
import od.oracle.apps.xxcrm.cs.custom.server.XxcsFdbkQstnVOImpl;

//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODCsDshbdAMImpl extends OAApplicationModuleImpl implements od.oracle.apps.xxcrm.scs.fdk.ODCsDshbdAM 
{
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODCsDshbdAMImpl()
  {
  }

  /**
   * 
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxcrm.cs.custom.server", "ODCsDshbdAMLocal");
  }

  /**
   * 
   * Container's getter for FDKFMVO
   */
  public FDKFMVOImpl getFDKFMVO()
  {
    return (FDKFMVOImpl)findViewObject("FDKFMVO");
  }

  /**
   * 
   * Container's getter for OptyCnctVO
   */
  public OptyCnctVOImpl getOptyCnctVO()
  {
    return (OptyCnctVOImpl)findViewObject("OptyCnctVO");
  }

  /**
   * 
   * Container's getter for ODFdkActyTypVO
   */
  public ODFdkActyTypVOImpl getODFdkActyTypVO()
  {
    return (ODFdkActyTypVOImpl)findViewObject("ODFdkActyTypVO");
  }

  /**
   * 
   * Container's getter for ODFlwUpOnCallVO
   */
  public ODFlwUpOnCallVOImpl getODFlwUpOnCallVO()
  {
    return (ODFlwUpOnCallVOImpl)findViewObject("ODFlwUpOnCallVO");
  }

  /**
   * 
   * Container's getter for ODOptyCnfmdVO
   */
  public ODOptyCnfmdVOImpl getODOptyCnfmdVO()
  {
    return (ODOptyCnfmdVOImpl)findViewObject("ODOptyCnfmdVO");
  }

  /**
   * 
   * Container's getter for ODOtcmOfCallVO
   */
  public ODOtcmOfCallVOImpl getODOtcmOfCallVO()
  {
    return (ODOtcmOfCallVOImpl)findViewObject("ODOtcmOfCallVO");
  }

  /**
   * 
   * Container's getter for ODRatnlBhvrVO
   */
  public ODRatnlBhvrVOImpl getODRatnlBhvrVO()
  {
    return (ODRatnlBhvrVOImpl)findViewObject("ODRatnlBhvrVO");
  }

  /**
   * 
   * Container's getter for ODCustCntctedVO
   */
  public ODCustCntctedVOImpl getODCustCntctedVO()
  {
    return (ODCustCntctedVOImpl)findViewObject("ODCustCntctedVO");
  }

  /**
   * 
   * Container's getter for ODRskCnfmdVO
   */
  public ODRskCnfmdVOImpl getODRskCnfmdVO()
  {
    return (ODRskCnfmdVOImpl)findViewObject("ODRskCnfmdVO");
  }
  public FeedbackFormResponseVOImpl getFeedbackFormResponseVO()
  {
    return (FeedbackFormResponseVOImpl)findViewObject("FeedbackFormResponseVO");
  }
 public void  createFdksrch(String val){
 OAViewObject vo = (OAViewObject)getOptyCnctVO();
  if ((val != null) && 
         (!("".equals(val.trim()))))
     {

       // Do the following conversion for type consistency.
       Number num = null;
   
       try
       {
         num = new Number(val);
       } 
       catch(Exception e) 
       {
         throw new OAException("AK", "FWK_TBX_INVALID_EMP_NUMBER");
       }
       vo.setWhereClause("LEAD_ID = :1");
       vo.setWhereClauseParams(null); // Always reset
       vo.setWhereClauseParam(0, num);
       vo.executeQuery();
 }}
  public void createFdkFm(String val)
  {
    OAViewObject vo = (OAViewObject)getFDKFMVO();
 

    // Per the coding standards, this is the proper way to initialize a    // VO that is used for both inserts and queries.  See View Objects    // in Detail in the Developer's Guide for additional information.     
    if (!vo.isPreparedForExecution())     {     
    vo.executeQuery();     } 
    Row row = vo.createRow();
    Number num=null;
    try
    {
      num = new Number(val);
    } catch (Exception e) {}
    row.setAttribute("OppId",num);
    vo.insertRow(row);    // Required per OA Framework Model Coding Standard M69
   row.setNewRowState(Row.STATUS_INITIALIZED);
   

  } // end 


 
  public void createFdkRes(String fId, String cd, String vl)
  {
  System.out.println(" "+fId+" . "+cd +" . "+vl);
    OAViewObject vo = (OAViewObject)getFeedbackFormResponseVO();


    // Per the coding standards, this is the proper way to initialize a    // VO that is used for both inserts and queries.  See View Objects    // in Detail in the Developer's Guide for additional information.     
    if (!vo.isPreparedForExecution())     {     
    vo.executeQuery();     } 
      Row row = vo.createRow();   
    vo.insertRow(row);    // Required per OA Framework Model Coding Standard M69

   row.setNewRowState(Row.STATUS_INITIALIZED);
     OAViewObject vo1 = (OAViewObject)this.findViewObject("FeedbackFormResponseVO");
  // vo1.getCurrentRow();
   Row crow = vo1.getCurrentRow();  
    try{
    Number x= new Number(fId);
    crow.setAttribute("FdkfmId",x);
          crow.setAttribute("QuestionCode",cd);
    crow.setAttribute("ResponseCode",vl);
   // String employeeName = (String)vo.getCurrentRow().getAttribute("EmployeeName");
        Number fmNum = (Number)vo1.getCurrentRow().getAttribute("FdkfmId");
   
    } catch (Exception e) {System.out.println(e.getMessage());}
  } // end 

  public void apply()
{
  getTransaction().commit();
} // end apply()


 public void crtFdkFm(String val, String entyTyp)
  {
  System.out.println("  gkjhgjhghghj   "+val+entyTyp);
    ODSCSFdbkHdrStgVOImpl vo = (ODSCSFdbkHdrStgVOImpl)getODSCSFdbkHdrStgVO();
 
initQueryOppDtls (val);

   ODSCSOpportunityDtlsVOImpl asnviewobjectimpl = getODSCSOpportunityDtlsVO();
//        if(asnviewobjectimpl == null)
//        {
//            oracle.apps.fnd.common.MessageToken amessagetoken[] = {
//                new MessageToken("NAME", "ODSCSOpportunityDtlsVO")
//            };
//            throw new OAException("ASN", "ASN_CMMN_OBJ_MISS_ERR", amessagetoken);
//        }
      // asnviewobjectimpl.reset();
        Object obj = null;
        oracle.jbo.domain.Number number= new Number(0); 
        oracle.jbo.domain.Number number1= new Number(0); 
        oracle.jbo.domain.Number number2= new Number(0) ;
        oracle.jbo.domain.Number number3= new Number(0) ;
        oracle.jbo.domain.Number number4= new Number(0) ;
        oracle.jbo.domain.Number number5= new Number(0) ;
        java.lang.String s6 = "";
        java.lang.String s5 = "";
        int i = asnviewobjectimpl.getFetchedRowCount();
        for(int j = 0; j < i; j++)
        {
            oracle.jbo.Row row = asnviewobjectimpl.next();
            if(row == null)
                continue;
            number = (oracle.jbo.domain.Number)row.getAttribute("LeadId");
            java.lang.String s2 = "";
            if(number != null)
                s2 = number.toString();
        number1 = (oracle.jbo.domain.Number)row.getAttribute("AddressId");
            java.lang.String s3 = "";
            if(number1 != null)
                s3 = number1.toString();
            number2 = (oracle.jbo.domain.Number)row.getAttribute("CustomerId");
       
          
            s5 = (java.lang.String)row.getAttribute("Customer");
               s6= (java.lang.String)row.getAttribute("Sequence");
        number3 = (oracle.jbo.domain.Number)row.getAttribute("ResourceId");
             number4 = (oracle.jbo.domain.Number)row.getAttribute("ResourceRoleId");
         number5 = (oracle.jbo.domain.Number)row.getAttribute("GroupId");
         
        

    // Per the coding standards, this is the proper way to initialize a    // VO that is used for both inserts and queries.  See View Objects    // in Detail in the Developer's Guide for additional information.     
  
        }
  if (!vo.isPreparedForExecution())     {     
    vo.executeQuery();     } 


    Row hrow = vo.createRow();
    Number num=null;
    try
    {
      num = new Number(val);
    } catch (Exception e) {}


    System.out.println(num+" "+entyTyp+" "+number1+" "+number2+" "+number3+" "+number4+" "+number5+" "+s5+" "+s6 );
    hrow.setAttribute("EntityId",num);
    hrow.setAttribute("EntityType",(String)entyTyp);
hrow.setAttribute("PartyId",number2);
      hrow.setAttribute("PartySiteId",number1);
       hrow.setAttribute("CustomerAccountId",s5);
       hrow.setAttribute("AddressId",s6);
//        hrow.setAttribute("ResourceId",number3);
//      hrow.setAttribute("RoleId",number4);
//      hrow.setAttribute("GroupId",number5);
      
    // Required per OA Framework Model Coding Standard M69
   hrow.setNewRowState(hrow.STATUS_INITIALIZED);
     vo.insertRow(hrow);
     getOADBTransaction().commit();
  } // end 

  public void initQueryOppDtls(java.lang.String s)
    {
        java.lang.String s1 = "od.oracle.apps.xxcrm.scs.fdk.server.ODCSDshbdAMimpl.initQuery";
        oracle.apps.fnd.framework.server.OADBTransaction oadbtransaction = getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        java.lang.StringBuffer stringbuffer = new StringBuffer(100);
        if(flag)
            oadbtransaction.writeDiagnostics(s1, "Begin", 2);
ODSCSOpportunityDtlsVOImpl oppDtls = getODSCSOpportunityDtlsVO();
        if(oppDtls != null)
                 oppDtls.initQuery(s);
           if(flag)
        {
            oppDtls.writeDiagnostics(s1, stringbuffer.toString(), 2);
            oppDtls.writeDiagnostics(s1, "End", 2);
        }
    }

 
  public void crtFdkRes(String fId, String cd, String vl)
  {
  System.out.println(" "+fId+" . "+cd +" . "+vl);
    OAViewObject vo = (OAViewObject)getFeedbackFormResponseVO();


    // Per the coding standards, this is the proper way to initialize a    // VO that is used for both inserts and queries.  See View Objects    // in Detail in the Developer's Guide for additional information.     
    if (!vo.isPreparedForExecution())     {     
    vo.executeQuery();     } 
      Row row = vo.createRow();   
    vo.insertRow(row);    // Required per OA Framework Model Coding Standard M69

   row.setNewRowState(Row.STATUS_INITIALIZED);
     OAViewObject vo1 = (OAViewObject)this.findViewObject("FeedbackFormResponseVO");
  // vo1.getCurrentRow();
   Row crow = vo1.getCurrentRow();  
    try{
    Number x= new Number(fId);
    crow.setAttribute("FdkfmId",x);
          crow.setAttribute("QuestionCode",cd);
    crow.setAttribute("ResponseCode",vl);
   // String employeeName = (String)vo.getCurrentRow().getAttribute("EmployeeName");
        Number fmNum = (Number)vo1.getCurrentRow().getAttribute("FdkfmId");
   
    } catch (Exception e) {System.out.println(e.getMessage());}
  } // end 



  /**
   * 
   * Container's getter for FdkBkRsltVO
   */
  public FdkBkRsltVOImpl getFdkBkRsltVO()
  {
    return (FdkBkRsltVOImpl)findViewObject("FdkBkRsltVO");
  }

  /**
   * 
   * Container's getter for FdkFmDtlsVO
   */
  public FdkFmDtlsVOImpl getFdkFmDtlsVO()
  {
    return (FdkFmDtlsVOImpl)findViewObject("FdkFmDtlsVO");
  }
  public void initDetails(String num)
  {
    FdkFmDtlsVOImpl vo = getFdkFmDtlsVO();
    if (vo == null)
    {
      MessageToken[] errTokens = { new MessageToken("OBJECT_NAME", "EmployeeFullVO1")};
      throw new OAException("AK", "FWK_TBX_OBJECT_NOT_FOUND", errTokens);
    } 
    vo.initQuery(num);
    FdkBkRsltVOImpl rvo= getFdkBkRsltVO();
     if (rvo == null)
    {
      MessageToken[] errTokens = { new MessageToken("OBJECT_NAME", "EmployeeFullVO1")};
      throw new OAException("AK", "FWK_TBX_OBJECT_NOT_FOUND", errTokens);
    } 
     rvo.initQuery(num);
    
   
  } // end initDetails()

  /**
   * 
   * Container's getter for TempMasterVO
   */
  public TempMasterVOImpl getTempMasterVO()
  {
    return (TempMasterVOImpl)findViewObject("TempMasterVO");
  }

  /**
   * 
   * Container's getter for TempDtlVO
   */
  public TempDtlVOImpl getTempDtlVO()
  {
    return (TempDtlVOImpl)findViewObject("TempDtlVO");
  }

  /**
   * 
   * Container's getter for TempPropertiesVO
   */
  public TempPropertiesVOImpl getTempPropertiesVO()
  {
    return (TempPropertiesVOImpl)findViewObject("TempPropertiesVO");
  }

 public void setSalesCycleProperties(java.lang.String s, java.lang.String s1)
    {
        java.lang.String s2 = "asn.common.server.SCStgStackAMImpl.setSalesCycleProperties";
        oracle.apps.fnd.framework.server.OADBTransaction oadbtransaction = getOADBTransaction();
        boolean flag = oadbtransaction.isLoggingEnabled(2);
        if(flag)
            oadbtransaction.writeDiagnostics(s2, "Begin", 2);
        oracle.apps.fnd.framework.server.OAViewObjectImpl oaviewobjectimpl =getTempPropertiesVO();
       TempPropertiesVORowImpl scstgapppropertiesvorowimpl = null;
        if(oaviewobjectimpl == null)
        {
            oracle.apps.fnd.common.MessageToken amessagetoken[] = {
                new MessageToken("NAME", "SCStgAppPropertiesVO")
            };
            throw new OAException("ASN", "ASN_CMMN_OBJ_MISS_ERR", amessagetoken);
        }
        int i = oaviewobjectimpl.getFetchedRowCount();
        if(i <= 0)
        {
            oaviewobjectimpl.setMaxFetchSize(0);
            oaviewobjectimpl.insertRow(oaviewobjectimpl.createRow());
        }
        scstgapppropertiesvorowimpl = (TempPropertiesVORowImpl)oaviewobjectimpl.first();

// scstgapppropertiesvorowimpl.setCMPLTD_READ_ONLY(java.lang.Boolean.TRUE);
        if(scstgapppropertiesvorowimpl != null)
        {
            if("Y".equals(s1))
                scstgapppropertiesvorowimpl.setCMPLTD_READ_ONLY(java.lang.Boolean.TRUE);
            else
                scstgapppropertiesvorowimpl.setCMPLTD_READ_ONLY(java.lang.Boolean.FALSE);
         /*   java.lang.String s3 = scstgapppropertiesvorowimpl.getVIEW_STG_SELECTION();
            if(s3 == null || "".equals(s3.trim()))
            {
             //   scstgapppropertiesvorowimpl.CMPLTD_READ_ONLY(s);
                s3 = s;
            }
            if("ALL_STAGES".equals(s3))
                scstgapppropertiesvorowimpl.setAPCBLTY_COLUMN_RENDERED(java.lang.Boolean.TRUE);
            else
                scstgapppropertiesvorowimpl.setAPCBLTY_COLUMN_RENDERED(java.lang.Boolean.FALSE);
            oaviewobjectimpl.setCurrentRow(scstgapppropertiesvorowimpl);
      */  }
        if(flag)
            oadbtransaction.writeDiagnostics(s2, "End", 2);
    oaviewobjectimpl.setCurrentRow((scstgapppropertiesvorowimpl));
    }
    

public void dynamicVO()
{
//OADBTransactionImpl txn =(OADBTransactionImpl) this.getTransaction();
//OAViewDef viewDef = txn.createViewDef();
//viewDef.setSql("SELECT EmpEO.EMPNO,EmpEO.JOB FROM SCOTT.EMP EmpEO");
//viewDef.setExpertMode(true);
//viewDef.addEntityUsage("EmpEO","od.oracle.apps.xxcrm.cs.custom.server.EmpEO",false);
//viewDef.setViewObjectClass("oracle.apps.fnd.framework.server.OAViewObjectImpl");
//viewDef.setViewRowClass("oracle.apps.fnd.framework.server.OAViewRowImpl");
//viewDef.addPersistentAttrDef("Empno", "EmpEO", "Empno", true, AttributeDef.UPDATEABLE); 
//viewDef.addPersistentAttrDef("Job", "EmpEO", "Job", true, AttributeDef.UPDATEABLE);
// OAViewObject DynamicEmpVO = (OAViewObject)this.createViewObject("MyEmp1VO",viewDef);
////ViewObject vo = createViewObject("MyEmp1VO", viewDef);
//System.out.println(" createViewObject");



//
//OADBTransactionImpl dbTx = (OADBTransactionImpl)this.getTransaction();
//OAViewDef viewDef = dbTx.createViewDef();
//
//viewDef.setSql("select EmpUsage.EMPNO, EmpUsage.ENAME, EmpUsage.JOB, EmpUsage.DEPTNO from EMP EmpUsage"); 
//viewDef.setExpertMode(true);
//viewDef.setViewObjectClass("oracle.apps.fnd.framework.server.OAViewObjectImpl");
//viewDef.setViewRowClass("oracle.apps.fnd.framework.server.OAViewRowImpl");
//
//// false means it's not reference-only entity.
//viewDef.addEntityUsage("EmpUsage", "od.oracle.apps.xxcrm.cs.custom.server.EmpUsage", false);
//
//viewDef.addPersistentAttrDef("MyEmpNum", "EmpUsage", "EmpNum", true, AttributeDef.READONLY); 
//viewDef.addPersistentAttrDef("MyEmpName", "EmpUsage", "EmpName", true, AttributeDef.READONLY);
//viewDef.addPersistentAttrDef("MyEmpJob", "EmpUsage", "EmpJob", true, AttributeDef.READONLY);
//viewDef.addPersistentAttrDef("MyEmpDeptNum", "EmpUsage", "EmpDeptNum", true, AttributeDef.READONLY);
////OAViewObject DynamicEmpVO = (OAViewObject)am1.createViewObject("MyEmp1VO",viewDef);  
////am1.createViewObject("MyEmp1VO",viewDef);
//ViewObject vo1 = this.createViewObject("MyEmpVO", viewDef);



//OADBTransactionImpl txn =(OADBTransactionImpl) this.getTransaction();
//OAViewDef viewDef = txn.createViewDef();
//viewDef.setSql("SELECT EmpEO.EMPNO,EmpEO.JOB FROM SCOTT.EMP EmpEO");
//viewDef.setExpertMode(true);
//viewDef.addEntityUsage("EmpEO","od.oracle.apps.xxcrm.cs.custom.server.EmpEO",true);
//viewDef.setViewObjectClass("oracle.apps.fnd.framework.server.OAViewObjectImpl");
//viewDef.setViewRowClass("oracle.apps.fnd.framework.server.OAViewRowImpl");
//viewDef.addPersistentAttrDef("Empno", "EmpEO", "Empno", true, AttributeDef.UPDATEABLE); 
//viewDef.addPersistentAttrDef("Job", "EmpEO", "Job", true, AttributeDef.UPDATEABLE);
//// OAViewObject DynamicEmpVO = (OAViewObject)this.createViewObject("MyEmp1VO",viewDef);
//ViewObject vo = createViewObject("MyEmp1VO", viewDef);
System.out.println(" createViewObject");
ViewObject vo1 = createOAViewObject("MyEmp2VO", "SELECT EmpEO.EMPNO,EmpEO.JOB FROM SCOTT.EMP EmpEO");
System.out.println(" createViewObject1");

}
  /**
   * 
   * Container's getter for FeedbackFormResponseVO
   */


public void dQuery(){
OADBTransaction dbTransaction=getOADBTransaction();
OAViewDefImpl vd = (OAViewDefImpl)dbTransaction.createViewDef();
vd.setExpertMode(true);
vd.setQuery("SELECT EMPNO,JOB FROM SCOTT.EMP ");
ViewObject vo = (ViewObject)this.createViewObject("od.oracle.apps.xxcrm.cs.custom.server.XxCdeExportVO2", (
ViewDefImpl)vd);
vo.executeQuery();
}
protected OAViewObject createOAViewObject(String viewObjectName, String sql) 
{

OADBTransaction dbTransaction =
(OADBTransaction)this.getTransaction();
//If we have a viewObject with this name, remove it
if (this.findViewObject(viewObjectName) != null) 
{
this.findViewObject(viewObjectName).remove();
}
//Create the ViewObject
OAViewDefImpl vd = (OAViewDefImpl)dbTransaction.createViewDef();
vd.setExpertMode(true);
vd.setQuery(sql);
OAViewObject vo = (OAViewObject)this.createViewObject(viewObjectName, (OAViewDef)vd);
return vo; 
}

  /**
   * 
   * Container's getter for DymamicVO
   */
  public DymamicVOImpl getDymamicVO()
  {
    return (DymamicVOImpl)findViewObject("DymamicVO");
  }

  /**
   * 
   * Container's getter for XxcsFdbkQstnVO
   */
  public XxcsFdbkQstnVOImpl getXxcsFdbkQstnVO()
  {
    return (XxcsFdbkQstnVOImpl)findViewObject("XxcsFdbkQstnVO");
  }

  /**
   * 
   * Container's getter for ODSCSFdbkHdrStgVO
   */
  public ODSCSFdbkHdrStgVOImpl getODSCSFdbkHdrStgVO()
  {
    return (ODSCSFdbkHdrStgVOImpl)findViewObject("ODSCSFdbkHdrStgVO");
  }

  /**
   * 
   * Container's getter for ODSCSFdbkLineDtlStgVO
   */
  public ODSCSFdbkLineDtlStgVOImpl getODSCSFdbkLineDtlStgVO()
  {
    return (ODSCSFdbkLineDtlStgVOImpl)findViewObject("ODSCSFdbkLineDtlStgVO");
  }

  /**
   * 
   * Container's getter for ODSCSOpportunityDtlsVO
   */
  public ODSCSOpportunityDtlsVOImpl getODSCSOpportunityDtlsVO()
  {
    return (ODSCSOpportunityDtlsVOImpl)findViewObject("ODSCSOpportunityDtlsVO");
  }
}