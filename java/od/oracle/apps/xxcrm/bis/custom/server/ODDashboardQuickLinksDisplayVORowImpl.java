package od.oracle.apps.xxcrm.bis.custom.server;

import od.oracle.apps.xxcrm.bis.custom.schema.server.ODDashboardQuickLinksEOImpl;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ODDashboardQuickLinksDisplayVORowImpl extends OAViewRowImpl {
    public static final int LABEL = 0;
    public static final int DESCRIPTION = 1;
    public static final int ORDEROFDISPLAY = 2;
    public static final int RESPONSIBILITYKEY = 3;
    public static final int CREATIONDATE = 4;
    public static final int CREATEDBY = 5;
    public static final int LASTUPDATEDATE = 6;
    public static final int LASTUPDATEDBY = 7;
    public static final int LASTUPDATELOGIN = 8;
    public static final int QUICKLINKID = 9;
    public static final int PATH = 10;
    public static final int FULLPATH = 11;
    public static final int CATEGORYID = 12;
    public static final int RESPKEYFV = 13;
    public static final int MEANING = 14;
    public static final int RESPONSIBILITYNAME = 15;
    public static final int ACTPATH = 16;

    /**This is the default constructor (do not remove)
     */
    public ODDashboardQuickLinksDisplayVORowImpl() {
    }

    /**Gets ODDashboardQuickLinksEO entity object.
     */
    public ODDashboardQuickLinksEOImpl getODDashboardQuickLinksEO() {
        return (ODDashboardQuickLinksEOImpl)getEntity(0);
    }

    /**Gets the attribute value for LABEL using the alias name Label
     */
    public String getLabel() {
        return (String) getAttributeInternal(LABEL);
    }

    /**Sets <code>value</code> as attribute value for LABEL using the alias name Label
     */
    public void setLabel(String value) {
        setAttributeInternal(LABEL, value);
    }

    /**Gets the attribute value for DESCRIPTION using the alias name Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**Gets the attribute value for ORDER_OF_DISPLAY using the alias name OrderOfDisplay
     */
    public Number getOrderOfDisplay() {
        return (Number) getAttributeInternal(ORDEROFDISPLAY);
    }

    /**Sets <code>value</code> as attribute value for ORDER_OF_DISPLAY using the alias name OrderOfDisplay
     */
    public void setOrderOfDisplay(Number value) {
        setAttributeInternal(ORDEROFDISPLAY, value);
    }

    /**Gets the attribute value for RESPONSIBILITY_KEY using the alias name ResponsibilityKey
     */
    public String getResponsibilityKey() {
        return (String) getAttributeInternal(RESPONSIBILITYKEY);
    }

    /**Sets <code>value</code> as attribute value for RESPONSIBILITY_KEY using the alias name ResponsibilityKey
     */
    public void setResponsibilityKey(String value) {
        setAttributeInternal(RESPONSIBILITYKEY, value);
    }

    /**Gets the attribute value for CREATION_DATE using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**Gets the attribute value for CREATED_BY using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**Gets the attribute value for QUICKLINK_ID using the alias name QuicklinkId
     */
    public Number getQuicklinkId() {
        return (Number) getAttributeInternal(QUICKLINKID);
    }

    /**Sets <code>value</code> as attribute value for QUICKLINK_ID using the alias name QuicklinkId
     */
    public void setQuicklinkId(Number value) {
        setAttributeInternal(QUICKLINKID, value);
    }

    /**Gets the attribute value for PATH using the alias name Path
     */
    public String getPath() {
        return (String) getAttributeInternal(PATH);
    }

    /**Sets <code>value</code> as attribute value for PATH using the alias name Path
     */
    public void setPath(String value) {
        setAttributeInternal(PATH, value);
    }

    /**Gets the attribute value for FULL_PATH using the alias name FullPath
     */
    public String getFullPath() {
        return (String) getAttributeInternal(FULLPATH);
    }

    /**Sets <code>value</code> as attribute value for FULL_PATH using the alias name FullPath
     */
    public void setFullPath(String value) {
        setAttributeInternal(FULLPATH, value);
    }

    /**Gets the attribute value for CATEGORY_ID using the alias name CategoryId
     */
    public String getCategoryId() {
        return (String) getAttributeInternal(CATEGORYID);
    }

    /**Sets <code>value</code> as attribute value for CATEGORY_ID using the alias name CategoryId
     */
    public void setCategoryId(String value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case LABEL:
            return getLabel();
        case DESCRIPTION:
            return getDescription();
        case ORDEROFDISPLAY:
            return getOrderOfDisplay();
        case RESPONSIBILITYKEY:
            return getResponsibilityKey();
        case CREATIONDATE:
            return getCreationDate();
        case CREATEDBY:
            return getCreatedBy();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        case QUICKLINKID:
            return getQuicklinkId();
        case PATH:
            return getPath();
        case FULLPATH:
            return getFullPath();
        case CATEGORYID:
            return getCategoryId();
        case RESPKEYFV:
            return getRespKeyFv();
        case MEANING:
            return getMeaning();
        case RESPONSIBILITYNAME:
            return getResponsibilityName();
        case ACTPATH:
            return getActPath();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case LABEL:
            setLabel((String)value);
            return;
        case DESCRIPTION:
            setDescription((String)value);
            return;
        case ORDEROFDISPLAY:
            setOrderOfDisplay((Number)value);
            return;
        case RESPONSIBILITYKEY:
            setResponsibilityKey((String)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        case QUICKLINKID:
            setQuicklinkId((Number)value);
            return;
        case PATH:
            setPath((String)value);
            return;
        case FULLPATH:
            setFullPath((String)value);
            return;
        case CATEGORYID:
            setCategoryId((String)value);
            return;
        case RESPKEYFV:
            setRespKeyFv((String)value);
            return;
        case MEANING:
            setMeaning((String)value);
            return;
        case RESPONSIBILITYNAME:
            setResponsibilityName((String)value);
            return;
        case ACTPATH:
            setActPath((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute RespKeyFv
     */
    public String getRespKeyFv() {
        return (String) getAttributeInternal(RESPKEYFV);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute RespKeyFv
     */
    public void setRespKeyFv(String value) {
        setAttributeInternal(RESPKEYFV, value);
    }

    /**Gets the attribute value for the calculated attribute Meaning
     */
    public String getMeaning() {
        return (String) getAttributeInternal(MEANING);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Meaning
     */
    public void setMeaning(String value) {
        setAttributeInternal(MEANING, value);
    }

    /**Gets the attribute value for the calculated attribute ResponsibilityName
     */
    public String getResponsibilityName() {
        return (String) getAttributeInternal(RESPONSIBILITYNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ResponsibilityName
     */
    public void setResponsibilityName(String value) {
        setAttributeInternal(RESPONSIBILITYNAME, value);
    }

    /**Gets the attribute value for the calculated attribute ActPath
     */
    public String getActPath() {
        return (String) getAttributeInternal(ACTPATH);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ActPath
     */
    public void setActPath(String value) {
        setAttributeInternal(ACTPATH, value);
    }
}
