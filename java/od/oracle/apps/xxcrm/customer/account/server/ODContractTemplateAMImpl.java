package od.oracle.apps.xxcrm.customer.account.server;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.OAException;
import oracle.jbo.server.ViewLinkImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
import java.sql.SQLException;
import oracle.apps.fnd.framework.OAFwkConstants;
import od.oracle.apps.xxcrm.customer.account.server.ODContractsAssignedVOImpl;
import od.oracle.apps.xxcrm.customer.account.server.ODContractsAssignedVORowImpl;
import od.oracle.apps.xxcrm.customer.account.server.ODContractTemplatesVOImpl;
import od.oracle.apps.xxcrm.customer.account.server.ODContractTemplatesVORowImpl;
import od.oracle.apps.xxcrm.customer.account.server.ODCdhContractProgCodesVOImpl;
import od.oracle.apps.xxcrm.customer.account.server.ODCdhContractProgCodesVORowImpl;
import oracle.jbo.Row;
import java.sql.SQLException;
import oracle.jbo.domain.Number;
import java.util.HashSet;
import java.util.Set;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;
import oracle.apps.fnd.common.MessageToken;
import oracle.apps.fnd.framework.OAFwkConstants;


//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODContractTemplateAMImpl extends OAApplicationModuleImpl
{
  /**
   *
   * This is the default constructor (do not remove)
   */
  public ODContractTemplateAMImpl()
  {
  }


  /**
   *
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxcrm.customer.account.server", "ODContractTemplateAMLocal");
  }



  public void createNewRow()
  {

  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.createNewRow";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);


    ODContractTemplatesVOImpl contTempVO = (ODContractTemplatesVOImpl)getODContractTemplatesVO1();
    Row row = contTempVO.createRow();

    contTempVO.insertRow(row);

		dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);

 }

 public void initQuery(String templateId)
 {
  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.initQuery";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);
		dbTrx.writeDiagnostics(METHOD_NAME,"Template ID = "+templateId, OAFwkConstants.PROCEDURE);

    ODContractTemplatesVOImpl contTempVO = (ODContractTemplatesVOImpl)getODContractTemplatesVO1();
    contTempVO.setWhereClause(null);
    contTempVO.setWhereClause("CONTRACT_TEMPLATE_ID = :1");
    contTempVO.setWhereClauseParam(0,templateId);

    contTempVO.setMaxFetchSize(-1);
    contTempVO.executeQuery();
    contTempVO.setCurrentRow(contTempVO.first())  ;

    //ODContractsAssignedVOImpl contAssVO = (ODContractsAssignedVOImpl)getODContractsAssignedVO1();
    //contAssVO.executeQuery();

    //((ODContractTemplatesVORowImpl)contTempVO.getCurrentRow()).getODContractsAssignedVO().getRowCount();

    getODContractsAssignedVO1().setMaxFetchSize(-1);
    getODContractsAssignedVO1().executeQuery();

    ODContractsAssignedVORowImpl carow = (ODContractsAssignedVORowImpl)getODContractsAssignedVO1().first();
    while (carow != null )
    {
      carow.setContDelete("CY");
      carow = (ODContractsAssignedVORowImpl)getODContractsAssignedVO1().next();
    }

    getODContractsPricePlanVO1().setMaxFetchSize(-1);
    getODContractsPricePlanVO1().executeQuery();

    ODContractsPricePlanVORowImpl pprow = (ODContractsPricePlanVORowImpl)getODContractsPricePlanVO1().first();
    while (pprow != null )
    {
      pprow.setPPDelete("PY");
      pprow = (ODContractsPricePlanVORowImpl)getODContractsPricePlanVO1().next();
    }

    getODCdhContractProgCodesVO().setMaxFetchSize(-1);
    getODCdhContractProgCodesVO().executeQuery();

    ODCdhContractProgCodesVORowImpl pcrow = (ODCdhContractProgCodesVORowImpl)getODCdhContractProgCodesVO().first();
    while (pcrow != null )
    {
      pcrow.setPCDelete("UY");
      pcrow = (ODCdhContractProgCodesVORowImpl)getODCdhContractProgCodesVO().next();
    }

		dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);

 }

 public void addRows()
 {
  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.addRows";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);

    ODContractsAssignedVOImpl vo = (ODContractsAssignedVOImpl)getODContractsAssignedVO1();
    if (vo.last() != null)
    vo.setCurrentRow(vo.last());

     ODContractsAssignedVORowImpl row = (ODContractsAssignedVORowImpl)getODContractsAssignedVO1().createRow();
     row.setContractTemplateId(((ODContractTemplatesVORowImpl)getODContractTemplatesVO1().getCurrentRow()).getContractTemplateId() );
     row.setAssignedContractId(getOADBTransaction().getSequenceValue("XX_CDH_CONTRACTS_ASSIGNED_S"));
     row.setContDelete("CN");

//     exclVO.getRowCountInRange()

     vo.insertRowAtRangeIndex(vo.getRowCountInRange() , row);

//     getODContractsAssignedVO1().insertRow(row);

		dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);

 }

 public void addPricePlanRows()
 {

  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.addPricePlanRows";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);

    ODContractsPricePlanVOImpl vo = (ODContractsPricePlanVOImpl)getODContractsPricePlanVO1();
    if (vo.last() != null)
    vo.setCurrentRow(vo.last());

   ODContractsPricePlanVORowImpl row = (ODContractsPricePlanVORowImpl)getODContractsPricePlanVO1().createRow();
   row.setContractTemplateId(((ODContractTemplatesVORowImpl)getODContractTemplatesVO1().getCurrentRow()).getContractTemplateId() );
   row.setPricePlanId(getOADBTransaction().getSequenceValue("XX_CDH_CONTRACTS_PRICE_PLAN_S"));
   row.setPPDelete("PN");

//   getODContractsPricePlanVO1().insertRow(row);

   vo.insertRowAtRangeIndex(vo.getRowCountInRange() , row);


		dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);

 }
 public void addProgCodesRows()
 {

    final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.addProgCodesRows";
        OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

        dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);

    ODCdhContractProgCodesVOImpl vo1 = (ODCdhContractProgCodesVOImpl)getODCdhContractProgCodesVO();
    if (vo1.last() != null)
    vo1.setCurrentRow(vo1.last());

    ODCdhContractProgCodesVORowImpl row = (ODCdhContractProgCodesVORowImpl)getODCdhContractProgCodesVO().createRow();
    row.setContractTemplateId(((ODContractTemplatesVORowImpl)getODContractTemplatesVO1().getCurrentRow()).getContractTemplateId() );
    row.setProgCodeId(getOADBTransaction().getSequenceValue("XX_CDH_CONTRACT_PROG_CODES_S"));
    row.setPCDelete("UN");

    vo1.insertRowAtRangeIndex(vo1.getRowCountInRange() , row);

    dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);

 }

  public void commitAll()
  {

  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.commitAll";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);

    ODContractTemplatesVOImpl vo1 = (ODContractTemplatesVOImpl)getODContractTemplatesVO1();
    ODContractTemplatesVORowImpl curRow = (ODContractTemplatesVORowImpl)vo1.getCurrentRow();

        Number offContractPercent = curRow.getOffContractPercent();

        if ( (offContractPercent != null) && (offContractPercent).intValue() > 100 )
        {
          MessageToken[] tokens = { new MessageToken("REQ_VAL", "Off Contract Percentage")};
      		throw new OAException("XXCRM", "XX_SFA_070_PERCENT", tokens, OAException.ERROR, null);
        }

        Number wholeSalePercent = curRow.getOffWholesalePercent();

        if ( wholeSalePercent != null &&  (wholeSalePercent).intValue() > 100 )
        {
          MessageToken[] tokens = { new MessageToken("REQ_VAL", "Off Wholesale Percentage")};
      		throw new OAException("XXCRM", "XX_SFA_070_PERCENT", tokens, OAException.ERROR, null);
        }

        Number gpFloor = curRow.getGpFloorPercent();

        if ( gpFloor != null && (gpFloor).intValue() > 100 )
        {
          MessageToken[] tokens = { new MessageToken("REQ_VAL", "GP Floor Percentage")};
      		throw new OAException("XXCRM", "XX_SFA_070_PERCENT", tokens, OAException.ERROR, null);
        }


    ODContractsAssignedVOImpl vo = (ODContractsAssignedVOImpl)getODContractsAssignedVO1();
    ODContractsAssignedVORowImpl row=(ODContractsAssignedVORowImpl) vo.first();

    Set set = new HashSet();
    while (row != null)
    {
      if ( row.getContractNumber() == null)
      {
          MessageToken[] tokens = { new MessageToken("REQ_VAL", "Contract Number")};
          throw new OAException("XXCRM", "XX_SFA_083_NOT_NULL", tokens, OAException.ERROR, null);
      }
      if (!set.add(row.getPriority()))
      {
          MessageToken[] tokens = { new MessageToken("REQ_VAL", row.getPriority())};
      		throw new OAException("XXCRM", "XX_SFA_069_PRIORITY_DUP", tokens, OAException.ERROR, null);
      }
      row = (ODContractsAssignedVORowImpl)vo.next();

    };

    ODContractsPricePlanVOImpl vo2 = (ODContractsPricePlanVOImpl)getODContractsPricePlanVO1();
    ODContractsPricePlanVORowImpl row2=(ODContractsPricePlanVORowImpl) vo2.first();

      if (row2 == null)
	    { MessageToken[] tokens = { new MessageToken("REQ_VAL", "Price Plan")};
          throw new OAException("XXCRM", "XX_SFA_083_NOT_NULL", tokens, OAException.ERROR, null);}

   while (row2 != null)
    {
      if (row2.getPricePlan() == null)
      {
          MessageToken[] tokens = { new MessageToken("REQ_VAL", "Price Plan")};
          throw new OAException("XXCRM", "XX_SFA_083_NOT_NULL", tokens, OAException.ERROR, null);

//        throw new OAException("Price Plan cannot be NULL");
      }

      row2 = (ODContractsPricePlanVORowImpl)vo2.next();
    };

    getOADBTransaction().commit();

/*    initQuery(curRow.getContractTemplateId().stringValue()  );

/*

    row=(ODContractsAssignedVORowImpl) vo.first();

    while(row != null)
    {
      row.setContDelete("CY");
      row = (ODContractsAssignedVORowImpl)vo.next();
    }

    row2=(ODContractsPricePlanVORowImpl) vo2.first();

    while(row2 != null)
    {
      row2.setPPDelete("PY");
      row2 = (ODContractsPricePlanVORowImpl)vo2.next();
    }
*/

		dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);

  }


  public void deleteTemplate(String templateId)
  {
  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.deleteTemplate";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);

    ODContractTemplatesVOImpl vo = getODContractTemplatesVO1();

    try {

        Row row = vo.getFirstFilteredRow("ContractTemplateId",new Number(templateId));
        vo.setCurrentRow(row);

        ODContractsAssignedVOImpl vo2 = getODContractsAssignedVO1();
        vo2.executeQuery();
        Row row2 = vo2.first();
        while (row2 !=null)
        {    row2.remove();
            row2 = vo2.next();
        }

        row.remove();

    } catch ( SQLException e)
    {
		dbTrx.writeDiagnostics(METHOD_NAME,"SQLException "+e, OAFwkConstants.PROCEDURE);
    }
    getOADBTransaction().commit();

		dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);

  }

  public void deleteContract(String contAssId)
  {
  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.deleteContract";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);

    ODContractsAssignedVOImpl vo = getODContractsAssignedVO1();

    try {
    (vo.getFirstFilteredRow("AssignedContractId",new Number(contAssId))).remove();;
    } catch ( SQLException e)
    {
		dbTrx.writeDiagnostics(METHOD_NAME,"SQLException "+e, OAFwkConstants.PROCEDURE);
    }

		dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);

  }

  public void deletePricePlan(String ppId)
  {
  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.deletePricePlan";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);

    ODContractsPricePlanVOImpl vo = getODContractsPricePlanVO1();

    try {
    (vo.getFirstFilteredRow("PricePlanId",new Number(ppId))).remove();;
    } catch ( SQLException e)
    {
		dbTrx.writeDiagnostics(METHOD_NAME,"SQL Exception "+e, OAFwkConstants.PROCEDURE);
    }

		dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);

  }

  public void deleteProgCode(String pcId)
  {
  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.deleteProgCode";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);

    ODCdhContractProgCodesVOImpl vo = getODCdhContractProgCodesVO();

    try {
    (vo.getFirstFilteredRow("ProgCodeId",new Number(pcId))).remove();;
    } catch ( SQLException e)
    {
		dbTrx.writeDiagnostics(METHOD_NAME,"SQL Exception "+e, OAFwkConstants.PROCEDURE);
    }

		dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);

  }


  public void createTemplate()
  {
  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.createTemplate";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);

   ODContractTemplatesVORowImpl row = (ODContractTemplatesVORowImpl)getODContractTemplatesVO1().createRow();
   row.setContractTemplateId(getOADBTransaction().getSequenceValue("XX_CDH_CONTRACT_TEMPLATE_S") );
   getODContractTemplatesVO1().insertRow(row);

		dbTrx.writeDiagnostics(METHOD_NAME,"End", OAFwkConstants.PROCEDURE);

  }

  /**
   *
   * Container's getter for ODContractTemplatesVO1
   */
  public ODContractTemplatesVOImpl getODContractTemplatesVO1()
  {
    return (ODContractTemplatesVOImpl)findViewObject("ODContractTemplatesVO1");
  }

  /**
   *
   * Container's getter for ODContractsAssignedVO1
   */
  public ODContractsAssignedVOImpl getODContractsAssignedVO1()
  {
    return (ODContractsAssignedVOImpl)findViewObject("ODContractsAssignedVO1");
  }

  /**
   *
   * Container's getter for ODContTempToContAssVL1
   */
  public ViewLinkImpl getODContTempToContAssVL1()
  {
    return (ViewLinkImpl)findViewLink("ODContTempToContAssVL1");
  }

  /**
   *
   * Container's getter for ODContractsPricePlanVO1
   */
  public ODContractsPricePlanVOImpl getODContractsPricePlanVO1()
  {
    return (ODContractsPricePlanVOImpl)findViewObject("ODContractsPricePlanVO1");
  }

  /**
   *
   * Container's getter for ODContractProgCodesVO
   */
  public ODCdhContractProgCodesVOImpl getODCdhContractProgCodesVO()
  {
    return (ODCdhContractProgCodesVOImpl)findViewObject("ODCdhContractProgCodesVO");
  }

  /**
   *
   * Container's getter for ODContTempToPricePlanVL1
   */
  public ViewLinkImpl getODContTempToPricePlanVL1()
  {
    return (ViewLinkImpl)findViewLink("ODContTempToPricePlanVL1");
  }

/**
 * method to set all the updateable fields to readonly = true and set rendered = false
*/
public void setReadOnly()
{
  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.setReadOnly";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);
		boolean isProcLogEnabled = dbTrx.isLoggingEnabled(OAFwkConstants.PROCEDURE);
		if (isProcLogEnabled)
		{
			StringBuffer buf = new StringBuffer();
			buf.append("Input Parameters: none");

			dbTrx.writeDiagnostics(METHOD_NAME,buf.toString(), OAFwkConstants.PROCEDURE);
		}


		ODContTempCUPVOImpl pvo = (ODContTempCUPVOImpl)getODContTempCUPVO1();
		pvo.setMaxFetchSize(0) ;

		ODContTempCUPVORowImpl pvoRow = ( ODContTempCUPVORowImpl)pvo.createRow();

		pvo.insertRow(pvoRow);

		pvoRow.setReadOnly(Boolean.TRUE );
		pvoRow.setRendered(Boolean.FALSE );

		if (isProcLogEnabled)
		{
			dbTrx.writeDiagnostics(METHOD_NAME, "End", OAFwkConstants.PROCEDURE);
		}

}


/**
 * method to set all the updateable fields to readonly = false and set rendered = true
*/
public void setUpdate()
{
  	final String METHOD_NAME = "od.oracle.apps.xxcrm.customer.account.server.ODContractTemplateAMImpl.setUpdate";
		OADBTransaction dbTrx = (OADBTransaction)getOADBTransaction();

		dbTrx.writeDiagnostics(METHOD_NAME,"Begin", OAFwkConstants.PROCEDURE);
		boolean isProcLogEnabled = dbTrx.isLoggingEnabled(OAFwkConstants.PROCEDURE);
		if (isProcLogEnabled)
		{
			StringBuffer buf = new StringBuffer();
			buf.append("Input Parameters: none");

			dbTrx.writeDiagnostics(METHOD_NAME,buf.toString(), OAFwkConstants.PROCEDURE);
		}


		ODContTempCUPVOImpl pvo = (ODContTempCUPVOImpl)getODContTempCUPVO1();
		pvo.setMaxFetchSize(0) ;

		ODContTempCUPVORowImpl pvoRow = ( ODContTempCUPVORowImpl)pvo.createRow();

		pvo.insertRow(pvoRow);

		pvoRow.setReadOnly(Boolean.FALSE );
		pvoRow.setRendered(Boolean.TRUE );

		if (isProcLogEnabled)
		{
			dbTrx.writeDiagnostics(METHOD_NAME, "End", OAFwkConstants.PROCEDURE);
		}

}


  /**
   *
   * Container's getter for ODContTempCUPVO1
   */
  public ODContTempCUPVOImpl getODContTempCUPVO1()
  {
    return (ODContTempCUPVOImpl)findViewObject("ODContTempCUPVO1");
  }

  /**
   * 
   * Container's getter for ODUnivPriceProgCodesLOVVO
   */
  public ODUnivPriceProgCodesLOVVOImpl getODUnivPriceProgCodesLOVVO()
  {
    return (ODUnivPriceProgCodesLOVVOImpl)findViewObject("ODUnivPriceProgCodesLOVVO");
  }


  /**
   * 
   * Container's getter for ODContTempToProgCodesVL1
   */
  public ViewLinkImpl getODContTempToProgCodesVL1()
  {
    return (ViewLinkImpl)findViewLink("ODContTempToProgCodesVL1");
  }



}