package od.oracle.apps.xxcrm.cdh.ebl.eblmain.schema.server;

/*
  -- +===========================================================================+
  -- |                  Office Depot - eBilling Project                          |
  -- |                         WIPRO/Office Depot                                |
  -- +===========================================================================+
  -- | Name        :  ODEBillTransmissionEOImpl                                  |
  -- | Description :                                                             |
  -- | This is the Entity Object for eBill Transmission Details                  |
  -- |                                                                           |
  -- |                                                                           |
  -- |                                                                           |
  -- |Change Record:                                                             |
  -- |===============                                                            |
  -- |Version  Date        Author               Remarks                          |
  -- |======== =========== ================     ================================ |
  -- |DRAFT 1A 15-JAN-2010 Devi Viswanathan     Initial draft version            |
  -- |1.1      12-Aug-2013 Darshini             I2186 - Modified for R12 Upgrade |
  -- |                                          Retrofit                         |
  -- |1.2      16-FEB-2017 Havish Kasina        Closing the leaked connection/   |
  -- |                                          statement                        | 
  -- |                                                                           |
  -- |===========================================================================|
  -- | Subversion Info:                                                          |
  -- | $HeadURL$                                                               |
  -- | $Rev$                                                                   |
  -- | $Date$                                                                  |
  -- |                                                                           |
  -- +===========================================================================+
*/

import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
import oracle.jbo.Key;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------
import oracle.apps.fnd.framework.server.OAPlsqlEntityImpl;
import od.oracle.apps.xxcrm.cdh.ebl.server.ODUtil;
import java.sql.SQLException;
/* Commented and added by Darshini for R12 Upgrade Retrofit
import oracle.jdbc.driver.OracleCallableStatement;*/
import oracle.jdbc.OracleCallableStatement;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OADBTransactionImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.OAAttrValException;
import oracle.apps.fnd.framework.OARowValException;
import com.sun.java.util.collections.ArrayList;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.regex.*;

import java.sql.Types;
import oracle.jdbc.OracleResultSet;
import java.sql.ResultSet;

public class ODEBillTransmissionEOImpl extends OAPlsqlEntityImpl  //OAEntityImpl 
{
  protected static final int CUSTDOCID = 0;
  protected static final int EMAILSUBJECT = 1;
  protected static final int EMAILSTDMESSAGE = 2;
  protected static final int EMAILCUSTOMMESSAGE = 3;
  protected static final int EMAILSTDDISCLAIMER = 4;
  protected static final int EMAILSIGNATURE = 5;
  protected static final int EMAILLOGOREQUIRED = 6;
  protected static final int EMAILLOGOFILENAME = 7;
  protected static final int FTPDIRECTION = 8;
  protected static final int FTPTRANSFERTYPE = 9;
  protected static final int FTPDESTINATIONSITE = 10;
  protected static final int FTPDESTINATIONFOLDER = 11;
  protected static final int FTPUSERNAME = 12;
  protected static final int FTPPASSWORD = 13;
  protected static final int FTPPICKUPSERVER = 14;
  protected static final int FTPPICKUPFOLDER = 15;
  protected static final int FTPCUSTCONTACTNAME = 16;
  protected static final int FTPCUSTCONTACTEMAIL = 17;
  protected static final int FTPCUSTCONTACTPHONE = 18;
  protected static final int FTPNOTIFYCUSTOMER = 19;
  protected static final int FTPCCEMAILS = 20;
  protected static final int FTPEMAILSUB = 21;
  protected static final int FTPEMAILCONTENT = 22;
  protected static final int FTPSENDZEROBYTEFILE = 23;
  protected static final int FTPZEROBYTEFILETEXT = 24;
  protected static final int FTPZEROBYTENOTIFICATIONTXT = 25;
  protected static final int CDFILELOCATION = 26;
  protected static final int CDSENDTOADDRESS = 27;
  protected static final int COMMENTS = 28;
  protected static final int ATTRIBUTE1 = 29;
  protected static final int ATTRIBUTE2 = 30;
  protected static final int ATTRIBUTE3 = 31;
  protected static final int ATTRIBUTE4 = 32;
  protected static final int ATTRIBUTE5 = 33;
  protected static final int ATTRIBUTE6 = 34;
  protected static final int ATTRIBUTE7 = 35;
  protected static final int ATTRIBUTE8 = 36;
  protected static final int ATTRIBUTE9 = 37;
  protected static final int ATTRIBUTE10 = 38;
  protected static final int ATTRIBUTE11 = 39;
  protected static final int ATTRIBUTE12 = 40;
  protected static final int ATTRIBUTE13 = 41;
  protected static final int ATTRIBUTE14 = 42;
  protected static final int ATTRIBUTE15 = 43;
  protected static final int ATTRIBUTE16 = 44;
  protected static final int ATTRIBUTE17 = 45;
  protected static final int ATTRIBUTE18 = 46;
  protected static final int ATTRIBUTE19 = 47;
  protected static final int ATTRIBUTE20 = 48;
  protected static final int LASTUPDATEDATE = 49;
  protected static final int LASTUPDATEDBY = 50;
  protected static final int CREATIONDATE = 51;
  protected static final int CREATEDBY = 52;
  protected static final int LASTUPDATELOGIN = 53;
  protected static final int REQUESTID = 54;
  protected static final int PROGRAMAPPLICATIONID = 55;
  protected static final int PROGRAMID = 56;
  protected static final int PROGRAMUPDATEDATE = 57;
  protected static final int WHUPDATEDATE = 58;




  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODEBillTransmissionEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxcrm.cdh.ebl.eblmain.schema.server.ODEBillTransmissionEO");
    }
    return mDefinitionObject;
  }





  /**
   * 
   * Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    super.create(attributeList);
  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**
   * 
   * Add locking logic here.
   */
  public void lock()
  {
  //  super.lock();
  }

  /**
   * 
   * Custom DML update/insert/delete logic here.
   */
/*  protected void doDML(int operation, TransactionEvent e)
  {
    super.doDML(operation, e);
  } */

  /**
   * 
   * Gets the attribute value for CustDocId, using the alias name CustDocId
   */
  public Number getCustDocId()
  {
    return (Number)getAttributeInternal(CUSTDOCID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CustDocId
   */
  public void setCustDocId(Number value)
  {
    setAttributeInternal(CUSTDOCID, value);
  }

  /**
   * 
   * Gets the attribute value for EmailSubject, using the alias name EmailSubject
   */
  public String getEmailSubject()
  {
    return (String)getAttributeInternal(EMAILSUBJECT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EmailSubject
   */
  public void setEmailSubject(String value)
  {
    setAttributeInternal(EMAILSUBJECT, value);
  }

  /**
   * 
   * Gets the attribute value for EmailStdMessage, using the alias name EmailStdMessage
   */
  public String getEmailStdMessage()
  {
    return (String)getAttributeInternal(EMAILSTDMESSAGE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EmailStdMessage
   */
  public void setEmailStdMessage(String value)
  {
    setAttributeInternal(EMAILSTDMESSAGE, value);
  }

  /**
   * 
   * Gets the attribute value for EmailCustomMessage, using the alias name EmailCustomMessage
   */
  public String getEmailCustomMessage()
  {
    return (String)getAttributeInternal(EMAILCUSTOMMESSAGE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EmailCustomMessage
   */
  public void setEmailCustomMessage(String value)
  {
    setAttributeInternal(EMAILCUSTOMMESSAGE, value);
  }

  /**
   * 
   * Gets the attribute value for EmailStdDisclaimer, using the alias name EmailStdDisclaimer
   */
  public String getEmailStdDisclaimer()
  {
    return (String)getAttributeInternal(EMAILSTDDISCLAIMER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EmailStdDisclaimer
   */
  public void setEmailStdDisclaimer(String value)
  {
    setAttributeInternal(EMAILSTDDISCLAIMER, value);
  }

  /**
   * 
   * Gets the attribute value for EmailSignature, using the alias name EmailSignature
   */
  public String getEmailSignature()
  {
    return (String)getAttributeInternal(EMAILSIGNATURE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EmailSignature
   */
  public void setEmailSignature(String value)
  {
    setAttributeInternal(EMAILSIGNATURE, value);
  }

  /**
   * 
   * Gets the attribute value for EmailLogoRequired, using the alias name EmailLogoRequired
   */
  public String getEmailLogoRequired()
  {
    return (String)getAttributeInternal(EMAILLOGOREQUIRED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EmailLogoRequired
   */
  public void setEmailLogoRequired(String value)
  {
    setAttributeInternal(EMAILLOGOREQUIRED, value);
  }

  /**
   * 
   * Gets the attribute value for EmailLogoFileName, using the alias name EmailLogoFileName
   */
  public String getEmailLogoFileName()
  {
    return (String)getAttributeInternal(EMAILLOGOFILENAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EmailLogoFileName
   */
  public void setEmailLogoFileName(String value)
  {
    setAttributeInternal(EMAILLOGOFILENAME, value);
  }

  /**
   * 
   * Gets the attribute value for FtpDirection, using the alias name FtpDirection
   */
  public String getFtpDirection()
  {
    return (String)getAttributeInternal(FTPDIRECTION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpDirection
   */
  public void setFtpDirection(String value)
  {
    setAttributeInternal(FTPDIRECTION, value);
  }

  /**
   * 
   * Gets the attribute value for FtpTransferType, using the alias name FtpTransferType
   */
  public String getFtpTransferType()
  {
    return (String)getAttributeInternal(FTPTRANSFERTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpTransferType
   */
  public void setFtpTransferType(String value)
  {
    setAttributeInternal(FTPTRANSFERTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for FtpDestinationSite, using the alias name FtpDestinationSite
   */
  public String getFtpDestinationSite()
  {
    return (String)getAttributeInternal(FTPDESTINATIONSITE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpDestinationSite
   */
  public void setFtpDestinationSite(String value)
  {
    setAttributeInternal(FTPDESTINATIONSITE, value);
  }

  /**
   * 
   * Gets the attribute value for FtpDestinationFolder, using the alias name FtpDestinationFolder
   */
  public String getFtpDestinationFolder()
  {
    return (String)getAttributeInternal(FTPDESTINATIONFOLDER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpDestinationFolder
   */
  public void setFtpDestinationFolder(String value)
  {
    setAttributeInternal(FTPDESTINATIONFOLDER, value);
  }

  /**
   * 
   * Gets the attribute value for FtpUserName, using the alias name FtpUserName
   */
  public String getFtpUserName()
  {
    return (String)getAttributeInternal(FTPUSERNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpUserName
   */
  public void setFtpUserName(String value)
  {
    setAttributeInternal(FTPUSERNAME, value);
  }

  /**
   * 
   * Gets the attribute value for FtpPassword, using the alias name FtpPassword
   */
  public String getFtpPassword()
  {
    return (String)getAttributeInternal(FTPPASSWORD);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpPassword
   */
  public void setFtpPassword(String value)
  {
    setAttributeInternal(FTPPASSWORD, value);
  }

  /**
   * 
   * Gets the attribute value for FtpPickupServer, using the alias name FtpPickupServer
   */
  public String getFtpPickupServer()
  {
    return (String)getAttributeInternal(FTPPICKUPSERVER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpPickupServer
   */
  public void setFtpPickupServer(String value)
  {
    setAttributeInternal(FTPPICKUPSERVER, value);
  }

  /**
   * 
   * Gets the attribute value for FtpPickupFolder, using the alias name FtpPickupFolder
   */
  public String getFtpPickupFolder()
  {
    return (String)getAttributeInternal(FTPPICKUPFOLDER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpPickupFolder
   */
  public void setFtpPickupFolder(String value)
  {
    setAttributeInternal(FTPPICKUPFOLDER, value);
  }

  /**
   * 
   * Gets the attribute value for FtpCustContactName, using the alias name FtpCustContactName
   */
  public String getFtpCustContactName()
  {
    return (String)getAttributeInternal(FTPCUSTCONTACTNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpCustContactName
   */
  public void setFtpCustContactName(String value)
  {
    setAttributeInternal(FTPCUSTCONTACTNAME, value);
  }

  /**
   * 
   * Gets the attribute value for FtpCustContactEmail, using the alias name FtpCustContactEmail
   */
  public String getFtpCustContactEmail()
  {
    return (String)getAttributeInternal(FTPCUSTCONTACTEMAIL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpCustContactEmail
   */
  public void setFtpCustContactEmail(String value)
  {
    //setAttributeInternal(FTPCUSTCONTACTEMAIL, value);
      if (value==null)
      {
        setAttributeInternal(FTPCUSTCONTACTEMAIL, value);
	      return;
      }
    OADBTransaction transaction = getOADBTransaction();
    ODUtil utl = new ODUtil(transaction);   
    utl.log(" Inside setFtpCustEmail ");

     boolean b1 = true;
     char[] StringArray; 
   if(value!="")
   {
     if(value.length()>340)
		b1=false;
	 if(value.indexOf("@")>64)
        b1=false;
     StringArray=value.toCharArray();
        for (int i=0;i<StringArray.length;i++ )
        {
          if(i<(StringArray.length-1))
          {
            if(StringArray[i]=='.'&&StringArray[i]==StringArray[i+1])
	 			    {
                      b1=false;
                      utl.log("Inside ftp successive periods");
    				}
            if(StringArray[i]=='-'&&StringArray[i]==StringArray[i+1])
				    {
                     b1=false;
                     utl.log("Inside client successive hyphens");
					}
          }
        }

    if (b1!=false)
    {
        /*
        String name_format="^[^.][(_|.|!|#|$|%|&|'|*|+|-|/|=|?|^|`|{|}|~|a-zA-Z|0-9)|-]*[^.@]";
        String org_format="([@][A-Z|a-z|0-9|.][A-Z|a-z|0-9|.|-]*[A-Z|a-z|0-9|.])";
        String domain_format="[.]([A-Z|a-z|.][a-zA-Z|-|.]*[A-Z|a-z|.|-])+[^.-]";
        */
        String name_format="(?<!(-|\\.))[a-z|A-Z|0-9|_|!|#|$|%|&|'|*|+|-|/|=|?|^|`|{|}|~][_|.|!|#|$|%|&|'|*|+|-|/|=|?|^|`|{|}|~|a-zA-Z|0-9|-]*";//final
        String org_format="(?<!(-|\\.))[@](?!(-|\\.))[A-Z|a-z|0-9|.|-]*[a-z|A-Z|0-9]";//final
        String domain_format="[.](?!-)([a-z|A-Z|.|-]*[a-z|A-Z|-|.]*[a-z|A-Z|.|-]*)[a-z|A-Z]";//final
        Pattern p=Pattern.compile(name_format +org_format+domain_format);
        Matcher m =p.matcher(value);
        b1=m.matches();
        utl.log(" Value of B1 in Inside ftp B1 is not false" + b1);
    }
   }


   if(value!=""&&b1==false)
    {
     utl.log("Enters FtpCust false exception");
              throw new OAAttrValException(OAException.TYP_ENTITY_OBJECT,
              getEntityDef().getFullName(), // EO name
              getPrimaryKey(), // EO PK
              "FtpCustContactEmail", // Attribute Name
               value, // Attribute value
              "XXCRM", // Message product short name
              "XXOD_EBL_INVALID_EMAILID"); // Message name
      //return;
    } 
    setAttributeInternal(FTPCUSTCONTACTEMAIL, value);

  }

  /**
   * 
   * Gets the attribute value for FtpCustContactPhone, using the alias name FtpCustContactPhone
   */
  public String getFtpCustContactPhone()
  {
    return (String)getAttributeInternal(FTPCUSTCONTACTPHONE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpCustContactPhone
   */
  public void setFtpCustContactPhone(String value)
  {
    setAttributeInternal(FTPCUSTCONTACTPHONE, value);
  }

  /**
   * 
   * Gets the attribute value for FtpNotifyCustomer, using the alias name FtpNotifyCustomer
   */
  public String getFtpNotifyCustomer()
  {
    return (String)getAttributeInternal(FTPNOTIFYCUSTOMER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpNotifyCustomer
   */
  public void setFtpNotifyCustomer(String value)
  {
    setAttributeInternal(FTPNOTIFYCUSTOMER, value);
  }

  /**
   * 
   * Gets the attribute value for FtpCcEmails, using the alias name FtpCcEmails
   */
  public String getFtpCcEmails()
  {
    return (String)getAttributeInternal(FTPCCEMAILS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpCcEmails
   */
  public void setFtpCcEmails(String value)
  {
    setAttributeInternal(FTPCCEMAILS, value);
  }

  /**
   * 
   * Gets the attribute value for FtpEmailSub, using the alias name FtpEmailSub
   */
  public String getFtpEmailSub()
  {
    return (String)getAttributeInternal(FTPEMAILSUB);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpEmailSub
   */
  public void setFtpEmailSub(String value)
  {
    setAttributeInternal(FTPEMAILSUB, value);
  }

  /**
   * 
   * Gets the attribute value for FtpEmailContent, using the alias name FtpEmailContent
   */
  public String getFtpEmailContent()
  {
    return (String)getAttributeInternal(FTPEMAILCONTENT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpEmailContent
   */
  public void setFtpEmailContent(String value)
  {
    setAttributeInternal(FTPEMAILCONTENT, value);
  }

  /**
   * 
   * Gets the attribute value for FtpSendZeroByteFile, using the alias name FtpSendZeroByteFile
   */
  public String getFtpSendZeroByteFile()
  {
    return (String)getAttributeInternal(FTPSENDZEROBYTEFILE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpSendZeroByteFile
   */
  public void setFtpSendZeroByteFile(String value)
  {
    setAttributeInternal(FTPSENDZEROBYTEFILE, value);
  }

  /**
   * 
   * Gets the attribute value for FtpZeroByteFileText, using the alias name FtpZeroByteFileText
   */
  public String getFtpZeroByteFileText()
  {
    return (String)getAttributeInternal(FTPZEROBYTEFILETEXT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpZeroByteFileText
   */
  public void setFtpZeroByteFileText(String value)
  {
    setAttributeInternal(FTPZEROBYTEFILETEXT, value);
  }

  /**
   * 
   * Gets the attribute value for FtpZeroByteNotificationTxt, using the alias name FtpZeroByteNotificationTxt
   */
  public String getFtpZeroByteNotificationTxt()
  {
    return (String)getAttributeInternal(FTPZEROBYTENOTIFICATIONTXT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FtpZeroByteNotificationTxt
   */
  public void setFtpZeroByteNotificationTxt(String value)
  {
    setAttributeInternal(FTPZEROBYTENOTIFICATIONTXT, value);
  }

  /**
   * 
   * Gets the attribute value for CdFileLocation, using the alias name CdFileLocation
   */
  public String getCdFileLocation()
  {
    return (String)getAttributeInternal(CDFILELOCATION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CdFileLocation
   */
  public void setCdFileLocation(String value)
  {
    setAttributeInternal(CDFILELOCATION, value);
  }

  /**
   * 
   * Gets the attribute value for CdSendToAddress, using the alias name CdSendToAddress
   */
  public String getCdSendToAddress()
  {
    return (String)getAttributeInternal(CDSENDTOADDRESS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CdSendToAddress
   */
  public void setCdSendToAddress(String value)
  {
    setAttributeInternal(CDSENDTOADDRESS, value);
  }

  /**
   * 
   * Gets the attribute value for Comments, using the alias name Comments
   */
  public String getComments()
  {
    return (String)getAttributeInternal(COMMENTS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Comments
   */
  public void setComments(String value)
  {
    setAttributeInternal(COMMENTS, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute1, using the alias name Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute2, using the alias name Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute3, using the alias name Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute4, using the alias name Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute5, using the alias name Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute6, using the alias name Attribute6
   */
  public String getAttribute6()
  {
    return (String)getAttributeInternal(ATTRIBUTE6);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute6
   */
  public void setAttribute6(String value)
  {
    setAttributeInternal(ATTRIBUTE6, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute7, using the alias name Attribute7
   */
  public String getAttribute7()
  {
    return (String)getAttributeInternal(ATTRIBUTE7);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute7
   */
  public void setAttribute7(String value)
  {
    setAttributeInternal(ATTRIBUTE7, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute8, using the alias name Attribute8
   */
  public String getAttribute8()
  {
    return (String)getAttributeInternal(ATTRIBUTE8);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute8
   */
  public void setAttribute8(String value)
  {
    setAttributeInternal(ATTRIBUTE8, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute9, using the alias name Attribute9
   */
  public String getAttribute9()
  {
    return (String)getAttributeInternal(ATTRIBUTE9);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute9
   */
  public void setAttribute9(String value)
  {
    setAttributeInternal(ATTRIBUTE9, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute10, using the alias name Attribute10
   */
  public String getAttribute10()
  {
    return (String)getAttributeInternal(ATTRIBUTE10);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute10
   */
  public void setAttribute10(String value)
  {
    setAttributeInternal(ATTRIBUTE10, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute11, using the alias name Attribute11
   */
  public String getAttribute11()
  {
    return (String)getAttributeInternal(ATTRIBUTE11);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute11
   */
  public void setAttribute11(String value)
  {
    setAttributeInternal(ATTRIBUTE11, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute12, using the alias name Attribute12
   */
  public String getAttribute12()
  {
    return (String)getAttributeInternal(ATTRIBUTE12);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute12
   */
  public void setAttribute12(String value)
  {
    setAttributeInternal(ATTRIBUTE12, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute13, using the alias name Attribute13
   */
  public String getAttribute13()
  {
    return (String)getAttributeInternal(ATTRIBUTE13);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute13
   */
  public void setAttribute13(String value)
  {
    setAttributeInternal(ATTRIBUTE13, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute14, using the alias name Attribute14
   */
  public String getAttribute14()
  {
    return (String)getAttributeInternal(ATTRIBUTE14);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute14
   */
  public void setAttribute14(String value)
  {
    setAttributeInternal(ATTRIBUTE14, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute15, using the alias name Attribute15
   */
  public String getAttribute15()
  {
    return (String)getAttributeInternal(ATTRIBUTE15);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute15
   */
  public void setAttribute15(String value)
  {
    setAttributeInternal(ATTRIBUTE15, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute16, using the alias name Attribute16
   */
  public String getAttribute16()
  {
    return (String)getAttributeInternal(ATTRIBUTE16);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute16
   */
  public void setAttribute16(String value)
  {
    setAttributeInternal(ATTRIBUTE16, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute17, using the alias name Attribute17
   */
  public String getAttribute17()
  {
    return (String)getAttributeInternal(ATTRIBUTE17);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute17
   */
  public void setAttribute17(String value)
  {
    setAttributeInternal(ATTRIBUTE17, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute18, using the alias name Attribute18
   */
  public String getAttribute18()
  {
    return (String)getAttributeInternal(ATTRIBUTE18);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute18
   */
  public void setAttribute18(String value)
  {
    setAttributeInternal(ATTRIBUTE18, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute19, using the alias name Attribute19
   */
  public String getAttribute19()
  {
    return (String)getAttributeInternal(ATTRIBUTE19);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute19
   */
  public void setAttribute19(String value)
  {
    setAttributeInternal(ATTRIBUTE19, value);
  }

  /**
   * 
   * Gets the attribute value for Attribute20, using the alias name Attribute20
   */
  public String getAttribute20()
  {
    return (String)getAttributeInternal(ATTRIBUTE20);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Attribute20
   */
  public void setAttribute20(String value)
  {
    setAttributeInternal(ATTRIBUTE20, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for RequestId, using the alias name RequestId
   */
  public Number getRequestId()
  {
    return (Number)getAttributeInternal(REQUESTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RequestId
   */
  public void setRequestId(Number value)
  {
    setAttributeInternal(REQUESTID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramApplicationId, using the alias name ProgramApplicationId
   */
  public Number getProgramApplicationId()
  {
    return (Number)getAttributeInternal(PROGRAMAPPLICATIONID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramApplicationId
   */
  public void setProgramApplicationId(Number value)
  {
    setAttributeInternal(PROGRAMAPPLICATIONID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramId, using the alias name ProgramId
   */
  public Number getProgramId()
  {
    return (Number)getAttributeInternal(PROGRAMID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramId
   */
  public void setProgramId(Number value)
  {
    setAttributeInternal(PROGRAMID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramUpdateDate, using the alias name ProgramUpdateDate
   */
  public Date getProgramUpdateDate()
  {
    return (Date)getAttributeInternal(PROGRAMUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramUpdateDate
   */
  public void setProgramUpdateDate(Date value)
  {
    setAttributeInternal(PROGRAMUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for WhUpdateDate, using the alias name WhUpdateDate
   */
  public Date getWhUpdateDate()
  {
    return (Date)getAttributeInternal(WHUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for WhUpdateDate
   */
  public void setWhUpdateDate(Date value)
  {
    setAttributeInternal(WHUPDATEDATE, value);
  }

  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CUSTDOCID:
        return getCustDocId();
      case EMAILSUBJECT:
        return getEmailSubject();
      case EMAILSTDMESSAGE:
        return getEmailStdMessage();
      case EMAILCUSTOMMESSAGE:
        return getEmailCustomMessage();
      case EMAILSTDDISCLAIMER:
        return getEmailStdDisclaimer();
      case EMAILSIGNATURE:
        return getEmailSignature();
      case EMAILLOGOREQUIRED:
        return getEmailLogoRequired();
      case EMAILLOGOFILENAME:
        return getEmailLogoFileName();
      case FTPDIRECTION:
        return getFtpDirection();
      case FTPTRANSFERTYPE:
        return getFtpTransferType();
      case FTPDESTINATIONSITE:
        return getFtpDestinationSite();
      case FTPDESTINATIONFOLDER:
        return getFtpDestinationFolder();
      case FTPUSERNAME:
        return getFtpUserName();
      case FTPPASSWORD:
        return getFtpPassword();
      case FTPPICKUPSERVER:
        return getFtpPickupServer();
      case FTPPICKUPFOLDER:
        return getFtpPickupFolder();
      case FTPCUSTCONTACTNAME:
        return getFtpCustContactName();
      case FTPCUSTCONTACTEMAIL:
        return getFtpCustContactEmail();
      case FTPCUSTCONTACTPHONE:
        return getFtpCustContactPhone();
      case FTPNOTIFYCUSTOMER:
        return getFtpNotifyCustomer();
      case FTPCCEMAILS:
        return getFtpCcEmails();
      case FTPEMAILSUB:
        return getFtpEmailSub();
      case FTPEMAILCONTENT:
        return getFtpEmailContent();
      case FTPSENDZEROBYTEFILE:
        return getFtpSendZeroByteFile();
      case FTPZEROBYTEFILETEXT:
        return getFtpZeroByteFileText();
      case FTPZEROBYTENOTIFICATIONTXT:
        return getFtpZeroByteNotificationTxt();
      case CDFILELOCATION:
        return getCdFileLocation();
      case CDSENDTOADDRESS:
        return getCdSendToAddress();
      case COMMENTS:
        return getComments();
      case ATTRIBUTE1:
        return getAttribute1();
      case ATTRIBUTE2:
        return getAttribute2();
      case ATTRIBUTE3:
        return getAttribute3();
      case ATTRIBUTE4:
        return getAttribute4();
      case ATTRIBUTE5:
        return getAttribute5();
      case ATTRIBUTE6:
        return getAttribute6();
      case ATTRIBUTE7:
        return getAttribute7();
      case ATTRIBUTE8:
        return getAttribute8();
      case ATTRIBUTE9:
        return getAttribute9();
      case ATTRIBUTE10:
        return getAttribute10();
      case ATTRIBUTE11:
        return getAttribute11();
      case ATTRIBUTE12:
        return getAttribute12();
      case ATTRIBUTE13:
        return getAttribute13();
      case ATTRIBUTE14:
        return getAttribute14();
      case ATTRIBUTE15:
        return getAttribute15();
      case ATTRIBUTE16:
        return getAttribute16();
      case ATTRIBUTE17:
        return getAttribute17();
      case ATTRIBUTE18:
        return getAttribute18();
      case ATTRIBUTE19:
        return getAttribute19();
      case ATTRIBUTE20:
        return getAttribute20();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case REQUESTID:
        return getRequestId();
      case PROGRAMAPPLICATIONID:
        return getProgramApplicationId();
      case PROGRAMID:
        return getProgramId();
      case PROGRAMUPDATEDATE:
        return getProgramUpdateDate();
      case WHUPDATEDATE:
        return getWhUpdateDate();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CUSTDOCID:
        setCustDocId((Number)value);
        return;
      case EMAILSUBJECT:
        setEmailSubject((String)value);
        return;
      case EMAILSTDMESSAGE:
        setEmailStdMessage((String)value);
        return;
      case EMAILCUSTOMMESSAGE:
        setEmailCustomMessage((String)value);
        return;
      case EMAILSTDDISCLAIMER:
        setEmailStdDisclaimer((String)value);
        return;
      case EMAILSIGNATURE:
        setEmailSignature((String)value);
        return;
      case EMAILLOGOREQUIRED:
        setEmailLogoRequired((String)value);
        return;
      case EMAILLOGOFILENAME:
        setEmailLogoFileName((String)value);
        return;
      case FTPDIRECTION:
        setFtpDirection((String)value);
        return;
      case FTPTRANSFERTYPE:
        setFtpTransferType((String)value);
        return;
      case FTPDESTINATIONSITE:
        setFtpDestinationSite((String)value);
        return;
      case FTPDESTINATIONFOLDER:
        setFtpDestinationFolder((String)value);
        return;
      case FTPUSERNAME:
        setFtpUserName((String)value);
        return;
      case FTPPASSWORD:
        setFtpPassword((String)value);
        return;
      case FTPPICKUPSERVER:
        setFtpPickupServer((String)value);
        return;
      case FTPPICKUPFOLDER:
        setFtpPickupFolder((String)value);
        return;
      case FTPCUSTCONTACTNAME:
        setFtpCustContactName((String)value);
        return;
      case FTPCUSTCONTACTEMAIL:
        setFtpCustContactEmail((String)value);
        return;
      case FTPCUSTCONTACTPHONE:
        setFtpCustContactPhone((String)value);
        return;
      case FTPNOTIFYCUSTOMER:
        setFtpNotifyCustomer((String)value);
        return;
      case FTPCCEMAILS:
        setFtpCcEmails((String)value);
        return;
      case FTPEMAILSUB:
        setFtpEmailSub((String)value);
        return;
      case FTPEMAILCONTENT:
        setFtpEmailContent((String)value);
        return;
      case FTPSENDZEROBYTEFILE:
        setFtpSendZeroByteFile((String)value);
        return;
      case FTPZEROBYTEFILETEXT:
        setFtpZeroByteFileText((String)value);
        return;
      case FTPZEROBYTENOTIFICATIONTXT:
        setFtpZeroByteNotificationTxt((String)value);
        return;
      case CDFILELOCATION:
        setCdFileLocation((String)value);
        return;
      case CDSENDTOADDRESS:
        setCdSendToAddress((String)value);
        return;
      case COMMENTS:
        setComments((String)value);
        return;
      case ATTRIBUTE1:
        setAttribute1((String)value);
        return;
      case ATTRIBUTE2:
        setAttribute2((String)value);
        return;
      case ATTRIBUTE3:
        setAttribute3((String)value);
        return;
      case ATTRIBUTE4:
        setAttribute4((String)value);
        return;
      case ATTRIBUTE5:
        setAttribute5((String)value);
        return;
      case ATTRIBUTE6:
        setAttribute6((String)value);
        return;
      case ATTRIBUTE7:
        setAttribute7((String)value);
        return;
      case ATTRIBUTE8:
        setAttribute8((String)value);
        return;
      case ATTRIBUTE9:
        setAttribute9((String)value);
        return;
      case ATTRIBUTE10:
        setAttribute10((String)value);
        return;
      case ATTRIBUTE11:
        setAttribute11((String)value);
        return;
      case ATTRIBUTE12:
        setAttribute12((String)value);
        return;
      case ATTRIBUTE13:
        setAttribute13((String)value);
        return;
      case ATTRIBUTE14:
        setAttribute14((String)value);
        return;
      case ATTRIBUTE15:
        setAttribute15((String)value);
        return;
      case ATTRIBUTE16:
        setAttribute16((String)value);
        return;
      case ATTRIBUTE17:
        setAttribute17((String)value);
        return;
      case ATTRIBUTE18:
        setAttribute18((String)value);
        return;
      case ATTRIBUTE19:
        setAttribute19((String)value);
        return;
      case ATTRIBUTE20:
        setAttribute20((String)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case REQUESTID:
        setRequestId((Number)value);
        return;
      case PROGRAMAPPLICATIONID:
        setProgramApplicationId((Number)value);
        return;
      case PROGRAMID:
        setProgramId((Number)value);
        return;
      case PROGRAMUPDATEDATE:
        setProgramUpdateDate((Date)value);
        return;
      case WHUPDATEDATE:
        setWhUpdateDate((Date)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number custDocId)
  {
    return new Key(new Object[] {custDocId});
  }

   //Overridden method to call custom PLSQL API
   public void insertRow()
   {  
        OracleCallableStatement oraclecallablestatement = null;   
        try
        {
            OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getDBTransaction();
            String s= "BEGIN"
                        +" XX_CDH_EBL_TRANS_DTL_PKG.insert_row(p_cust_doc_id  => :1"
                        +" ,p_email_subject                      =>:2"
                        +" ,p_email_std_message                  =>:3"
                        +" ,p_email_custom_message               =>:4"
                        +" ,p_email_std_disclaimer               =>:5"
                        +" ,p_email_signature                    =>:6"
                        +" ,p_email_logo_required                =>:7" 
                        +" ,p_email_logo_file_name               =>:8" 
                        +" ,p_ftp_direction                      =>:9" 
                        +" ,p_ftp_transfer_type                  =>:10"
                        +" ,p_ftp_destination_site               =>:11"
                        +" ,p_ftp_destination_folder             =>:12"
                        +" ,p_ftp_user_name                      =>:13" 
                        +" ,p_ftp_password                       =>:14" 
                        +" ,p_ftp_pickup_server                  =>:15" 
                        +" ,p_ftp_pickup_folder                  =>:16" 
                        +" ,p_ftp_cust_contact_name              =>:17" 
                        +" ,p_ftp_cust_contact_email             =>:18" 
                        +" ,p_ftp_cust_contact_phone             =>:19" 
                        +" ,p_ftp_notify_customer                =>:20"  
                        +" ,p_ftp_cc_emails                      =>:21"  
                        +" ,p_ftp_email_sub                      =>:22" 
                        +" ,p_ftp_email_content                  =>:23"  
                        +" ,p_ftp_send_zero_byte_file            =>:24"  
                        +" ,p_ftp_zero_byte_file_text            =>:25"  
                        +" ,p_ftp_zero_byte_notifi_txt           =>:26"  
                        +" ,p_cd_file_location                   =>:27" 
                        +" ,p_cd_send_to_address                 =>:28" 
                        +" ,p_comments                           =>:29"
                        +" ,p_attribute1                         =>:30"
                        +" ,p_attribute2                         =>:31"
                        +" ,p_attribute3                         =>:32"
                        +" ,p_attribute4                         =>:33"
                        +" ,p_attribute5                         =>:34"
                        +" ,p_attribute6                         =>:35"
                        +" ,p_attribute7                         =>:36"
                        +" ,p_attribute8                         =>:37"
                        +" ,p_attribute9                         =>:38"
                        +" ,p_attribute10                        =>:39"
                        +" ,p_attribute11                        =>:40"
                        +" ,p_attribute12                        =>:41"
                        +" ,p_attribute13                        =>:42"
                        +" ,p_attribute14                        =>:43"
                        +" ,p_attribute15                        =>:44"
                        +" ,p_attribute16                        =>:45"
                        +" ,p_attribute17                        =>:46"
                        +" ,p_attribute18                        =>:47"
                        +" ,p_attribute19                        =>:48"
                        +" ,p_attribute20                        =>:49);"
                        +" END;" ;
            oraclecallablestatement = (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, -1);
            oraclecallablestatement.setNUMBER(1,this.getCustDocId());
            oraclecallablestatement.setString(2,this.getEmailSubject());
            oraclecallablestatement.setString(3,this.getEmailStdMessage());
            oraclecallablestatement.setString(4,this.getEmailCustomMessage());
            oraclecallablestatement.setString(5,this.getEmailStdDisclaimer());
            oraclecallablestatement.setString(6,this.getEmailSignature());
            oraclecallablestatement.setString(7,this.getEmailLogoRequired());
            oraclecallablestatement.setString(8,this.getEmailLogoFileName());
            oraclecallablestatement.setString(9,this.getFtpDirection());
            oraclecallablestatement.setString(10,this.getFtpTransferType());
            oraclecallablestatement.setString(11,this.getFtpDestinationSite());
            oraclecallablestatement.setString(12,this.getFtpDestinationFolder());
            oraclecallablestatement.setString(13,this.getFtpUserName());
            oraclecallablestatement.setString(14,this.getFtpPassword());
            oraclecallablestatement.setString(15,this.getFtpPickupServer());
            oraclecallablestatement.setString(16,this.getFtpPickupFolder());
            oraclecallablestatement.setString(17,this.getFtpCustContactName());
            oraclecallablestatement.setString(18,this.getFtpCustContactEmail());
            oraclecallablestatement.setString(19,this.getFtpCustContactPhone());
            oraclecallablestatement.setString(20,this.getFtpNotifyCustomer());
            oraclecallablestatement.setString(21,this.getFtpCcEmails());
            oraclecallablestatement.setString(22,this.getFtpEmailSub());
            oraclecallablestatement.setString(23,this.getFtpEmailContent());
            oraclecallablestatement.setString(24,this.getFtpSendZeroByteFile());
            oraclecallablestatement.setString(25,this.getFtpZeroByteFileText());
            oraclecallablestatement.setString(26,this.getFtpZeroByteNotificationTxt());
            oraclecallablestatement.setString(27,this.getCdFileLocation());
            oraclecallablestatement.setString(28,this.getCdSendToAddress());
            oraclecallablestatement.setString(29,this.getComments());   
            oraclecallablestatement.setString(30,this.getAttribute1());
            oraclecallablestatement.setString(31,this.getAttribute2());
            oraclecallablestatement.setString(32,this.getAttribute3());
            oraclecallablestatement.setString(33,this.getAttribute4());
            oraclecallablestatement.setString(34,this.getAttribute5());
            oraclecallablestatement.setString(35,this.getAttribute6());
            oraclecallablestatement.setString(36,this.getAttribute7());
            oraclecallablestatement.setString(37,this.getAttribute8());
            oraclecallablestatement.setString(38,this.getAttribute9());
            oraclecallablestatement.setString(39,this.getAttribute10());
            oraclecallablestatement.setString(40,this.getAttribute11());
            oraclecallablestatement.setString(41,this.getAttribute12());
            oraclecallablestatement.setString(42,this.getAttribute13());
            oraclecallablestatement.setString(43,this.getAttribute14());
            oraclecallablestatement.setString(44,this.getAttribute15());
            oraclecallablestatement.setString(45,this.getAttribute16());
            oraclecallablestatement.setString(46,this.getAttribute17());
            oraclecallablestatement.setString(47,this.getAttribute18());
            oraclecallablestatement.setString(48,this.getAttribute19());
            oraclecallablestatement.setString(49,this.getAttribute20());
            oraclecallablestatement.execute();
        }
        catch(SQLException sqlexception)
        {
            throw OAException.wrapperException(sqlexception);
        }
        catch(Exception exception)
        {
            throw OAException.wrapperException(exception);
        }
		finally
        {
           try{
                if(oraclecallablestatement != null)
                   oraclecallablestatement.close();
              }
		   catch(Exception e){}
        }
    }//Insert Row

    public void updateRow()
    {  
	    OracleCallableStatement oraclecallablestatement = null; 
        try
        {
            OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getDBTransaction();
            String s= "BEGIN"
                        +" XX_CDH_EBL_TRANS_DTL_PKG.update_row(p_cust_doc_id  => :1"
                        +" ,p_email_subject                      =>:2"
                        +" ,p_email_std_message                  =>:3"
                        +" ,p_email_custom_message               =>:4"
                        +" ,p_email_std_disclaimer               =>:5"
                        +" ,p_email_signature                    =>:6"
                        +" ,p_email_logo_required                =>:7" 
                        +" ,p_email_logo_file_name               =>:8" 
                        +" ,p_ftp_direction                      =>:9" 
                        +" ,p_ftp_transfer_type                  =>:10"
                        +" ,p_ftp_destination_site               =>:11"
                        +" ,p_ftp_destination_folder             =>:12"
                        +" ,p_ftp_user_name                      =>:13" 
                        +" ,p_ftp_password                       =>:14" 
                        +" ,p_ftp_pickup_server                  =>:15" 
                        +" ,p_ftp_pickup_folder                  =>:16" 
                        +" ,p_ftp_cust_contact_name              =>:17" 
                        +" ,p_ftp_cust_contact_email             =>:18" 
                        +" ,p_ftp_cust_contact_phone             =>:19" 
                        +" ,p_ftp_notify_customer                =>:20"  
                        +" ,p_ftp_cc_emails                      =>:21"  
                        +" ,p_ftp_email_sub                      =>:22" 
                        +" ,p_ftp_email_content                  =>:23"  
                        +" ,p_ftp_send_zero_byte_file            =>:24"  
                        +" ,p_ftp_zero_byte_file_text            =>:25"  
                        +" ,p_ftp_zero_byte_notifi_txt           =>:26"  
                        +" ,p_cd_file_location                   =>:27" 
                        +" ,p_cd_send_to_address                 =>:28" 
                        +" ,p_comments                           =>:29"
                        +" ,p_attribute1                         =>:30"
                        +" ,p_attribute2                         =>:31"
                        +" ,p_attribute3                         =>:32"
                        +" ,p_attribute4                         =>:33"
                        +" ,p_attribute5                         =>:34"
                        +" ,p_attribute6                         =>:35"
                        +" ,p_attribute7                         =>:36"
                        +" ,p_attribute8                         =>:37"
                        +" ,p_attribute9                         =>:38"
                        +" ,p_attribute10                        =>:39"
                        +" ,p_attribute11                        =>:40"
                        +" ,p_attribute12                        =>:41"
                        +" ,p_attribute13                        =>:42"
                        +" ,p_attribute14                        =>:43"
                        +" ,p_attribute15                        =>:44"
                        +" ,p_attribute16                        =>:45"
                        +" ,p_attribute17                        =>:46"
                        +" ,p_attribute18                        =>:47"
                        +" ,p_attribute19                        =>:48"
                        +" ,p_attribute20                        =>:49);"
                        +" END;" ;
            oraclecallablestatement = (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, -1);
            oraclecallablestatement.setNUMBER(1,this.getCustDocId());
            oraclecallablestatement.setString(2,this.getEmailSubject());
            oraclecallablestatement.setString(3,this.getEmailStdMessage());
            oraclecallablestatement.setString(4,this.getEmailCustomMessage());
            oraclecallablestatement.setString(5,this.getEmailStdDisclaimer());
            oraclecallablestatement.setString(6,this.getEmailSignature());
            oraclecallablestatement.setString(7,this.getEmailLogoRequired());
            oraclecallablestatement.setString(8,this.getEmailLogoFileName());
            oraclecallablestatement.setString(9,this.getFtpDirection());
            oraclecallablestatement.setString(10,this.getFtpTransferType());
            oraclecallablestatement.setString(11,this.getFtpDestinationSite());
            oraclecallablestatement.setString(12,this.getFtpDestinationFolder());
            oraclecallablestatement.setString(13,this.getFtpUserName());
            oraclecallablestatement.setString(14,this.getFtpPassword());
            oraclecallablestatement.setString(15,this.getFtpPickupServer());
            oraclecallablestatement.setString(16,this.getFtpPickupFolder());
            oraclecallablestatement.setString(17,this.getFtpCustContactName());
            oraclecallablestatement.setString(18,this.getFtpCustContactEmail());
            oraclecallablestatement.setString(19,this.getFtpCustContactPhone());
            oraclecallablestatement.setString(20,this.getFtpNotifyCustomer());
            oraclecallablestatement.setString(21,this.getFtpCcEmails());
            oraclecallablestatement.setString(22,this.getFtpEmailSub());
            oraclecallablestatement.setString(23,this.getFtpEmailContent());
            oraclecallablestatement.setString(24,this.getFtpSendZeroByteFile());
            oraclecallablestatement.setString(25,this.getFtpZeroByteFileText());
            oraclecallablestatement.setString(26,this.getFtpZeroByteNotificationTxt());
            oraclecallablestatement.setString(27,this.getCdFileLocation());
            oraclecallablestatement.setString(28,this.getCdSendToAddress());
            oraclecallablestatement.setString(29,this.getComments());   
            oraclecallablestatement.setString(30,this.getAttribute1());
            oraclecallablestatement.setString(31,this.getAttribute2());
            oraclecallablestatement.setString(32,this.getAttribute3());
            oraclecallablestatement.setString(33,this.getAttribute4());
            oraclecallablestatement.setString(34,this.getAttribute5());
            oraclecallablestatement.setString(35,this.getAttribute6());
            oraclecallablestatement.setString(36,this.getAttribute7());
            oraclecallablestatement.setString(37,this.getAttribute8());
            oraclecallablestatement.setString(38,this.getAttribute9());
            oraclecallablestatement.setString(39,this.getAttribute10());
            oraclecallablestatement.setString(40,this.getAttribute11());
            oraclecallablestatement.setString(41,this.getAttribute12());
            oraclecallablestatement.setString(42,this.getAttribute13());
            oraclecallablestatement.setString(43,this.getAttribute14());
            oraclecallablestatement.setString(44,this.getAttribute15());
            oraclecallablestatement.setString(45,this.getAttribute16());
            oraclecallablestatement.setString(46,this.getAttribute17());
            oraclecallablestatement.setString(47,this.getAttribute18());
            oraclecallablestatement.setString(48,this.getAttribute19());
            oraclecallablestatement.setString(49,this.getAttribute20());
            oraclecallablestatement.execute();
        }
        catch(SQLException sqlexception)
        {
            throw OAException.wrapperException(sqlexception);
        }
        catch(Exception exception)
        {
            throw OAException.wrapperException(exception);
        }
		finally
        {
           try{
                if(oraclecallablestatement != null)
                   oraclecallablestatement.close();
              }
		   catch(Exception e){}
        }
        
   }//Update Row  
  
   public void deleteRow()
   {
	 OracleCallableStatement oraclecallablestatement = null; 
     try
     {
        OADBTransactionImpl oadbtransactionimpl = (OADBTransactionImpl)getDBTransaction();
            
        String s= "BEGIN"
                    +" XX_CDH_EBL_TRANS_DTL_PKG.delete_row(p_cust_doc_id  => :1);"
                    +" END;" ;
        oraclecallablestatement = (OracleCallableStatement)oadbtransactionimpl.createCallableStatement(s, -1);
        oraclecallablestatement.setNUMBER(1,this.getCustDocId());
        oraclecallablestatement.execute();
      }
      catch(SQLException sqlexception)
      {
        throw OAException.wrapperException(sqlexception);
      }
      catch(Exception exception)
      {
        throw OAException.wrapperException(exception);
      }
	  finally
        {
           try{
                if(oraclecallablestatement != null)
                   oraclecallablestatement.close();
              }
		   catch(Exception e){}
        }
   }//Delete Row 

}