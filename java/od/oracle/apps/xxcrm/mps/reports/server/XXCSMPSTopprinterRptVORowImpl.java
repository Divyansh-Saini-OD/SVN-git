package od.oracle.apps.xxcrm.mps.reports.server;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class XXCSMPSTopprinterRptVORowImpl extends OAViewRowImpl {


    public static final int MODEL = 0;
    public static final int PROGRAMTYPE = 1;
    public static final int MANAGEDSTATUS = 2;
    public static final int ACTIVESTATUS = 3;
    public static final int TOTALCOUNT = 4;
    public static final int TOTALBLACKCOUNT = 5;
    public static final int TOTALCOLORCOUNT = 6;

    /**
     * 
     * This is the default constructor (do not remove)
     */
  public XXCSMPSTopprinterRptVORowImpl()
  {
  }












  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        switch (index) {
        case MODEL:
            return getModel();
        case PROGRAMTYPE:
            return getProgramType();
        case MANAGEDSTATUS:
            return getManagedStatus();
        case ACTIVESTATUS:
            return getActiveStatus();
        case TOTALCOUNT:
            return getTotalcount();
        case TOTALBLACKCOUNT:
            return getTotalblackcount();
        case TOTALCOLORCOUNT:
            return getTotalcolorcount();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        switch (index) {
        case MODEL:
            setModel((String)value);
            return;
        case PROGRAMTYPE:
            setProgramType((String)value);
            return;
        case MANAGEDSTATUS:
            setManagedStatus((String)value);
            return;
        case ACTIVESTATUS:
            setActiveStatus((String)value);
            return;
        case TOTALCOUNT:
            setTotalcount((Number)value);
            return;
        case TOTALBLACKCOUNT:
            setTotalblackcount((Number)value);
            return;
        case TOTALCOLORCOUNT:
            setTotalcolorcount((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

  /**
   * 
   * Gets the attribute value for the calculated attribute Model
   */
  public String getModel()
  {
    return (String)getAttributeInternal(MODEL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Model
   */
  public void setModel(String value)
  {
    setAttributeInternal(MODEL, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ProgramType
   */
  public String getProgramType()
  {
    return (String)getAttributeInternal(PROGRAMTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ProgramType
   */
  public void setProgramType(String value)
  {
    setAttributeInternal(PROGRAMTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Totalcount
   */
  public Number getTotalcount()
  {
    return (Number)getAttributeInternal(TOTALCOUNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Totalcount
   */
  public void setTotalcount(Number value)
  {
    setAttributeInternal(TOTALCOUNT, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Totalblackcount
   */
  public Number getTotalblackcount()
  {
    return (Number)getAttributeInternal(TOTALBLACKCOUNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Totalblackcount
   */
  public void setTotalblackcount(Number value)
  {
    setAttributeInternal(TOTALBLACKCOUNT, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Totalcolorcount
   */
  public Number getTotalcolorcount()
  {
    return (Number)getAttributeInternal(TOTALCOLORCOUNT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Totalcolorcount
   */
  public void setTotalcolorcount(Number value)
  {
    setAttributeInternal(TOTALCOLORCOUNT, value);
  }


    /**Gets the attribute value for the calculated attribute ManagedStatus
     */
    public String getManagedStatus() {
        return (String) getAttributeInternal(MANAGEDSTATUS);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ManagedStatus
     */
    public void setManagedStatus(String value) {
        setAttributeInternal(MANAGEDSTATUS, value);
    }

    /**Gets the attribute value for the calculated attribute ActiveStatus
     */
    public String getActiveStatus() {
        return (String) getAttributeInternal(ACTIVESTATUS);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ActiveStatus
     */
    public void setActiveStatus(String value) {
        setAttributeInternal(ACTIVESTATUS, value);
    }
}
