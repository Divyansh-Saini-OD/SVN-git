package od.oracle.apps.xxcrm.tds.server;

import java.sql.Types;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OADBTransactionImpl;

import oracle.jdbc.OracleCallableStatement;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XXTDSAutoReprocessMainAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public XXTDSAutoReprocessMainAMImpl() {
    }


    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) { /* package name */
            /* Configuration Name */launchTester("od.oracle.apps.xxcrm.tds.server", 
                                                 "XXTDSAutoReprocessMainAMLocal");
    }

    /**Container's getter for xxTDSFlexValueVO
     */
    public xxTDSFlexValueVOImpl getxxTDSFlexValueVO() {
        return (xxTDSFlexValueVOImpl)findViewObject("xxTDSFlexValueVO");
    }

    /**Container's getter for xxTDSNCQuery
     */
    public xxTDSNCQueryImpl getxxTDSNCQuery() {
        return (xxTDSNCQueryImpl)findViewObject("xxTDSNCQuery");
    }

    public void invokeResults(String chooseActionValue, 
                              String chooseDateFrom) {

        if (chooseActionValue.equals("NC")) {
            xxTDSNCQueryImpl vo = getxxTDSNCQuery();
            //vo.executeQuery();
            vo.executeResults(chooseDateFrom);
        }
        if (chooseActionValue.equals("NT")) {
            xxTDSNTQueryImpl vo = getxxTDSNTQuery();
            //vo.executeQuery();
            vo.executeResults(chooseDateFrom);
        }
    }

    public String reprocessOneNC(String fromDate, String incNum, String taskId, 
                                 String taskDesc, String taskObjNum) {
        OADBTransaction oadbtransaction = (OADBTransaction)getTransaction();
        OADBTransactionImpl oadbtransactionimpl = 
            (OADBTransactionImpl)getTransaction();

        String retValues;
        int taskObjNumber = Integer.valueOf(taskObjNum).intValue();

        StringBuffer str = new StringBuffer();
        str.append(" BEGIN ");
        str.append("  XX_TDS_AUTO_REPROCESS_PKG.REPROCESS_NC_ONE( ");
        str.append("        P_FROM_DATE           => :1, ");
        str.append("        P_INCIDENT_NUMBER           => :2, ");
        str.append("       P_TASK_ID   => :3,  ");
        str.append("       P_TASK_DESC   => :4 , ");
        str.append("       P_TASK_OBJ_NUM  => :5 , ");
        str.append("       X_RETURN_VAL    => :6  ");
        str.append("    ); ");
        str.append(" END; ");
        System.out.println("str=" + str);
        System.out.println("fromDate=" + fromDate);
        System.out.println("taskid=" + taskId);
        System.out.println("taskDesc=" + taskDesc);
        System.out.println("taskObjNum=" + taskObjNumber);

        OracleCallableStatement oraclecallablestatement = 
            (OracleCallableStatement)oadbtransaction.createCallableStatement(str.toString(), 
                                                                             1);

        try {
            oraclecallablestatement.setString(1, fromDate);
            oraclecallablestatement.setString(2, incNum);
            oraclecallablestatement.setString(3, taskId);
            oraclecallablestatement.setString(4, taskDesc);
            oraclecallablestatement.setInt(5, taskObjNumber);

            oraclecallablestatement.registerOutParameter(6, Types.VARCHAR);

            oraclecallablestatement.execute();
            retValues = oraclecallablestatement.getString(6);

        } catch (Exception e) {
            throw OAException.wrapperException(e);
        }
        return retValues;

    }

    public String reprocessOneNT(String fromDate, String incNum) {
        OADBTransaction oadbtransaction = (OADBTransaction)getTransaction();
        OADBTransactionImpl oadbtransactionimpl = 
            (OADBTransactionImpl)getTransaction();

        String retValues;

        StringBuffer str = new StringBuffer();
        str.append(" BEGIN ");
        str.append("  XX_TDS_AUTO_REPROCESS_PKG.REPROCESS_NT_ONE( ");
        str.append("        P_FROM_DATE           => :1, ");
        str.append("        P_INCIDENT_NUM           => :2, ");
        str.append("       X_RETURN_VAL    => :3  ");
        str.append("    ); ");
        str.append(" END; ");
        System.out.println("str=" + str);
        System.out.println("fromDate=" + fromDate);
        System.out.println("incNum=" + incNum);

        OracleCallableStatement oraclecallablestatement = 
            (OracleCallableStatement)oadbtransaction.createCallableStatement(str.toString(), 
                                                                             1);

        try {
            oraclecallablestatement.setString(1, fromDate);
            oraclecallablestatement.setString(2, incNum);

            //      oraclecallablestatement.setInt(1,  Integer.parseInt(item1) );
            //    oraclecallablestatement.setInt(2,  Integer.parseInt(item2) );

            oraclecallablestatement.registerOutParameter(3, Types.VARCHAR);

            oraclecallablestatement.execute();
            retValues = oraclecallablestatement.getString(3);

        } catch (Exception e) {
            throw OAException.wrapperException(e);
        }
        return retValues;

    }

    /**Container's getter for xxTDSReprocessVO
     */
    public xxTDSReprocessVOImpl getxxTDSReprocessVO() {
        return (xxTDSReprocessVOImpl)findViewObject("xxTDSReprocessVO");
    }

    /**Container's getter for xxTDSNTQuery
     */
    public xxTDSNTQueryImpl getxxTDSNTQuery() {
        return (xxTDSNTQueryImpl)findViewObject("xxTDSNTQuery");
    }

    /**Container's getter for xxGetDateDisplayVO1
     */
    public xxGetDateDisplayVOImpl getxxGetDateDisplayVO1() {
        return (xxGetDateDisplayVOImpl)findViewObject("xxGetDateDisplayVO1");
    }
    
    public String executeDateDisplay(){
        xxGetDateDisplayVOImpl vo=getxxGetDateDisplayVO1();
        vo.executeQuery();
        String text = vo.first().getAttribute("Datedisplay").toString(); 
        System.out.println("Text ="+text);
        return text;
    }
}
