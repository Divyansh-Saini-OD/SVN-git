package od.oracle.apps.xxcrm.hz.account.customer.server;
import oracle.apps.fnd.framework.server.OAViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODAccContactsRolesVORowImpl extends OAViewRowImpl 
{


  protected static final int USAGEMEANING = 0;
  protected static final int PRIMARYFLAG = 1;
  protected static final int CONTACTROLEID = 2;
  protected static final int CONTACTID = 3;
  protected static final int USAGECODE = 4;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODAccContactsRolesVORowImpl()
  {
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute UsageMeaning
   */
  public String getUsageMeaning()
  {
    return (String)getAttributeInternal(USAGEMEANING);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute UsageMeaning
   */
  public void setUsageMeaning(String value)
  {
    setAttributeInternal(USAGEMEANING, value);
  }



  /**
   * 
   * Gets the attribute value for the calculated attribute ContactRoleId
   */
  public Number getContactRoleId()
  {
    return (Number)getAttributeInternal(CONTACTROLEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ContactRoleId
   */
  public void setContactRoleId(Number value)
  {
    setAttributeInternal(CONTACTROLEID, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute ContactId
   */
  public Number getContactId()
  {
    return (Number)getAttributeInternal(CONTACTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute ContactId
   */
  public void setContactId(Number value)
  {
    setAttributeInternal(CONTACTID, value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute UsageCode
   */
  public String getUsageCode()
  {
    return (String)getAttributeInternal(USAGECODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute UsageCode
   */
  public void setUsageCode(String value)
  {
    setAttributeInternal(USAGECODE, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case USAGEMEANING:
        return getUsageMeaning();
      case PRIMARYFLAG:
        return getPrimaryFlag();
      case CONTACTROLEID:
        return getContactRoleId();
      case CONTACTID:
        return getContactId();
      case USAGECODE:
        return getUsageCode();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case USAGEMEANING:
        setUsageMeaning((String)value);
        return;
      case PRIMARYFLAG:
        setPrimaryFlag((String)value);
        return;
      case CONTACTROLEID:
        setContactRoleId((Number)value);
        return;
      case CONTACTID:
        setContactId((Number)value);
        return;
      case USAGECODE:
        setUsageCode((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute PrimaryFlag
   */
  public String getPrimaryFlag()
  {
    return (String)getAttributeInternal(PRIMARYFLAG);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute PrimaryFlag
   */
  public void setPrimaryFlag(String value)
  {
    setAttributeInternal(PRIMARYFLAG, value);
  }
}