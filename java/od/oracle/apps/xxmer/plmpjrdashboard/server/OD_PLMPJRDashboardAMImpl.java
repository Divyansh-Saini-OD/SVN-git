package od.oracle.apps.xxmer.plmpjrdashboard.server;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import od.oracle.apps.xxmer.plmpjrdashboard.lov.server.OD_TaskNameLOVVOImpl;
import oracle.apps.fnd.framework.OAViewObject;
import oracle.jbo.Row;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class OD_PLMPJRDashboardAMImpl extends OAApplicationModuleImpl 
{
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public OD_PLMPJRDashboardAMImpl()
  {
  }

  /**
   * 
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxmer.plmpjrdashboard.server", "PLMPJRDashboardAMLocal");
  }

  /**
   * 
   * Container's getter for OD_MyAssignmentsVO
   */
  public OD_MyAssignmentsVOImpl getOD_MyAssignmentsVO()
  {
    return (OD_MyAssignmentsVOImpl)findViewObject("OD_MyAssignmentsVO");
  }

  /**
   * 
   * Container's getter for OD_TaskNameLOVVO1
   */
  public OD_TaskNameLOVVOImpl getOD_TaskNameLOVVO1()
  {
    return (OD_TaskNameLOVVOImpl)findViewObject("OD_TaskNameLOVVO1");
  }


  /**
   * 
   * Container's getter for OD_NotesVO
   */
  public OD_NotesVOImpl getOD_NotesVO()
  {
    return (OD_NotesVOImpl)findViewObject("OD_NotesVO");
  }

  /**
   * 
   * Container's getter for OD_PA_NOTES_VO
   */
  public OD_PA_NOTES_VOImpl getOD_PA_NOTES_VO()
  {
    return (OD_PA_NOTES_VOImpl)findViewObject("OD_PA_NOTES_VO");
  }

  public void initDefault(String days, String personId)
  {
    String where =  "(scheduled_finish_date <= sysdate or scheduled_finish_date between sysdate and sysdate+"+days+") AND Task_Manager_Person_Id="+personId ;
    OD_MyAssignmentsVOImpl myAssignmentsVO = (OD_MyAssignmentsVOImpl)findViewObject("OD_MyAssignmentsVO");
    myAssignmentsVO.setWhereClause(where);
    myAssignmentsVO.executeQuery();
//    System.out.println("## Default Query="+myAssignmentsVO.getQuery());
  }
  public void invokewhereClause(String where)
  {
    OD_MyAssignmentsVOImpl myAssignmentsVO = (OD_MyAssignmentsVOImpl)findViewObject("OD_MyAssignmentsVO");
    myAssignmentsVO.whereClause(where);
  }

  public void invokeReExecuteQuery(String where)
  {
    OD_MyAssignmentsVOImpl myAssignmentsVO = (OD_MyAssignmentsVOImpl)findViewObject("OD_MyAssignmentsVO");
    myAssignmentsVO.whereClause(where);
    myAssignmentsVO.executeQuery();
  }

  public void invokenoteswhereClause(String where)
  {
    OD_PA_NOTES_VOImpl panotesVO = (OD_PA_NOTES_VOImpl)findViewObject("OD_PA_NOTES_VO");
//    panotesVO.executeQuery();
    panotesVO.setWhereClause(where);
//    System.out.println("### Where Clause for Search Query="+panotesVO.getQuery());
    panotesVO.executeQuery();
    System.out.println("### Where Clause Row Count="+panotesVO.getRowCount());
//    panotesVO.wh

  }

  public void executeNotes()
  {
    OD_NotesVOImpl notesVO = (OD_NotesVOImpl)findViewObject("OD_NotesVO");
    notesVO.getexecuteQuery();
  }

  public void executePANotes()
  {
    OD_PA_NOTES_VOImpl panotesVO = (OD_PA_NOTES_VOImpl)findViewObject("OD_PA_NOTES_VO");
    panotesVO.executeQuery();
  }
  
  public void executeNotesByUser(String userId)
  {
    OD_NotesVOImpl notesVO = (OD_NotesVOImpl)findViewObject("OD_NotesVO");
    notesVO.setWhereClause("created_by="+userId);
    notesVO.getexecuteQuery();
  }

  public void executePANotesByUser(String userId)
  {
    OD_PA_NOTES_VOImpl panotesVO = (OD_PA_NOTES_VOImpl)findViewObject("OD_PA_NOTES_VO");
    panotesVO.setWhereClause("created_by="+userId);
    panotesVO.executeQuery();
  }  

  public void setWhereNotes(String projectId, String taskId)
  {
    OD_NotesVOImpl notesVO = (OD_NotesVOImpl)findViewObject("OD_NotesVO");
    notesVO.setWhereClause(" PROJECT_ID = "+projectId + " AND TASK_ID = "+taskId);
    notesVO.getexecuteQuery();
    System.out.println("## after projId,taskId Row Count="+notesVO.getRowCount());
  }  

  public void setWherePANotes(String projectId, String taskId)
  {
    OD_PA_NOTES_VOImpl panotesVO = (OD_PA_NOTES_VOImpl)findViewObject("OD_PA_NOTES_VO");
    panotesVO.setWhereClause(" PROJECT_ID = "+projectId + " AND TASK_ID = "+taskId);
    panotesVO.executeQuery();
    System.out.println("## after pa notes projId,taskId Row Count="+panotesVO.getRowCount());
  }  

  public void apply()
  {
//    System.out.println("IN Apply notes="+notes);
//    OD_NotesVORowImpl row = null;
////    OD_NotesVOImpl notesVO = (OD_NotesVOImpl)findViewObject("OD_NotesVO");
//    OAViewObject notesVO = (OAViewObject)findViewObject("OD_NotesVO");
//    Row notesVORow = (Row)notesVO.getCurrentRow();
//    notesVORow.setAttribute("NoteDesc",notes);
    this.getTransaction().commit();
  }

  public void setNotes(String notes, String projectId, String taskId)
  {
    System.out.println("IN Apply notes="+notes);
    OD_NotesVORowImpl row = null;
//    OD_NotesVOImpl notesVO = (OD_NotesVOImpl)findViewObject("OD_NotesVO");
    OAViewObject notesVO = (OAViewObject)findViewObject("OD_NotesVO");
    Row notesVORow = (Row)notesVO.getCurrentRow();
    notesVORow.setAttribute("NoteDesc",notes);    
    notesVORow.setAttribute("ProjectId",projectId);
    notesVORow.setAttribute("TaskId",taskId);    
  }

  public void create()
  {
  OAViewObject vo = getOD_NotesVO();
  if (!vo.isPreparedForExecution()) 
  { 
    vo.executeQuery(); 
  } 
  Row row = vo.createRow();
  vo.insertRow(row);
  row.setNewRowState(Row.STATUS_INITIALIZED);
  }  

  /**
   * 
   * Container's getter for OD_MyProjectPortfolioVO
   */
  public OD_MyProjectPortfolioVOImpl getOD_MyProjectPortfolioVO()
  {
    return (OD_MyProjectPortfolioVOImpl)findViewObject("OD_MyProjectPortfolioVO");
  }

  /**
   * 
   * Container's getter for OD_MyProjectPortfolioResultsVO
   */
  public OD_MyProjectPortfolioResultsVOImpl getOD_MyProjectPortfolioResultsVO()
  {
    return (OD_MyProjectPortfolioResultsVOImpl)findViewObject("OD_MyProjectPortfolioResultsVO");
  }

}