package od.oracle.apps.xxmer.plmpjrdashboard.schema.server;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
import oracle.jbo.AttributeList;
import oracle.apps.fnd.framework.server.OADBTransaction;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class OD_NotesEOImpl extends OAEntityImpl 
{
  protected static final int NOTEID = 0;
  protected static final int NOTENUMBER = 1;
  protected static final int PROJECTID = 2;
  protected static final int TASKID = 3;
  protected static final int NOTEDESC = 4;
  protected static final int CREATIONDATE = 5;
  protected static final int CREATEDBY = 6;
  protected static final int LASTUPDATEDATE = 7;
  protected static final int LASTUPDATEDBY = 8;
  protected static final int LASTUPDATELOGIN = 9;
  protected static final int ROWID = 10;



  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public OD_NotesEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxmer.plmpjrdashboard.schema.server.OD_NotesEO");
    }
    return mDefinitionObject;
  }




  /**
   * 
   * Gets the attribute value for NoteId, using the alias name NoteId
   */
  public Number getNoteId()
  {
    return (Number)getAttributeInternal(NOTEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NoteId
   */
  public void setNoteId(Number value)
  {
    setAttributeInternal(NOTEID, value);
  }

  /**
   * 
   * Gets the attribute value for NoteNumber, using the alias name NoteNumber
   */
  public String getNoteNumber()
  {
    return (String)getAttributeInternal(NOTENUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NoteNumber
   */
  public void setNoteNumber(String value)
  {
    setAttributeInternal(NOTENUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for ProjectId, using the alias name ProjectId
   */
  public Number getProjectId()
  {
    return (Number)getAttributeInternal(PROJECTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProjectId
   */
  public void setProjectId(Number value)
  {
    setAttributeInternal(PROJECTID, value);
  }

  /**
   * 
   * Gets the attribute value for TaskId, using the alias name TaskId
   */
  public Number getTaskId()
  {
    return (Number)getAttributeInternal(TASKID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TaskId
   */
  public void setTaskId(Number value)
  {
    setAttributeInternal(TASKID, value);
  }

  /**
   * 
   * Gets the attribute value for NoteDesc, using the alias name NoteDesc
   */
  public String getNoteDesc()
  {
    return (String)getAttributeInternal(NOTEDESC);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NoteDesc
   */
  public void setNoteDesc(String value)
  {
    setAttributeInternal(NOTEDESC, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for RowID, using the alias name RowID
   */
  public RowID getRowID()
  {
    return (RowID)getAttributeInternal(ROWID);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case NOTEID:
        return getNoteId();
      case NOTENUMBER:
        return getNoteNumber();
      case PROJECTID:
        return getProjectId();
      case TASKID:
        return getTaskId();
      case NOTEDESC:
        return getNoteDesc();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case ROWID:
        return getRowID();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case NOTEID:
        setNoteId((Number)value);
        return;
      case NOTENUMBER:
        setNoteNumber((String)value);
        return;
      case PROJECTID:
        setProjectId((Number)value);
        return;
      case TASKID:
        setTaskId((Number)value);
        return;
      case NOTEDESC:
        setNoteDesc((String)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  public void create(AttributeList attributeList)
  {
  super.create(attributeList);
  OADBTransaction transaction = getOADBTransaction();
  // note id is obtained from the table's sequence
//  Number noteId = transaction.getSequenceValue("FWK_TBX_SUPPLIERS_S");
  Number noteId = transaction.getSequenceValue("OD_PA_NOTES_S");
  setNoteId(noteId);
//  setProjectId(new Number(1000));
  setTaskId(new Number(1));
  // Start date should be set to sysdate
//  setStartDate(transaction.getCurrentDBDate());
  } // end create()
}