package od.oracle.apps.xxmer.schema.server;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class AllocationHeaderEOImpl extends OAEntityImpl 
{
  protected static final int ALLOCATIONHEADERID = 0;
  protected static final int ORGID = 1;
  protected static final int BATCHNO = 2;
  protected static final int BATCHDESC = 3;
  protected static final int ITEMID = 4;
  protected static final int VENDORID = 5;
  protected static final int VENDORSITEID = 6;
  protected static final int AGENTID = 7;
  protected static final int LASTUPDATEDATE = 8;
  protected static final int LASTUPDATEDBY = 9;
  protected static final int CREATIONDATE = 10;
  protected static final int CREATEDBY = 11;
  protected static final int LASTUPDATELOGIN = 12;
  protected static final int ALLOCATIONLINESEO = 13;





  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public AllocationHeaderEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxmer.schema.server.AllocationHeaderEO");
    }
    return mDefinitionObject;
  }






  /**
   * 
   * Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    super.create(attributeList);
  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**
   * 
   * Gets the attribute value for AllocationHeaderId, using the alias name AllocationHeaderId
   */
  public Number getAllocationHeaderId()
  {
    return (Number)getAttributeInternal(ALLOCATIONHEADERID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AllocationHeaderId
   */
  public void setAllocationHeaderId(Number value)
  {
    setAttributeInternal(ALLOCATIONHEADERID, value);
  }

  /**
   * 
   * Gets the attribute value for OrgId, using the alias name OrgId
   */
  public Number getOrgId()
  {
    return (Number)getAttributeInternal(ORGID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OrgId
   */
  public void setOrgId(Number value)
  {
    setAttributeInternal(ORGID, value);
  }

  /**
   * 
   * Gets the attribute value for BatchNo, using the alias name BatchNo
   */
  public Number getBatchNo()
  {
    return (Number)getAttributeInternal(BATCHNO);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BatchNo
   */
  public void setBatchNo(Number value)
  {
    setAttributeInternal(BATCHNO, value);
  }

  /**
   * 
   * Gets the attribute value for BatchDesc, using the alias name BatchDesc
   */
  public String getBatchDesc()
  {
    return (String)getAttributeInternal(BATCHDESC);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BatchDesc
   */
  public void setBatchDesc(String value)
  {
    setAttributeInternal(BATCHDESC, value);
  }

  /**
   * 
   * Gets the attribute value for ItemId, using the alias name ItemId
   */
  public Number getItemId()
  {
    return (Number)getAttributeInternal(ITEMID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ItemId
   */
  public void setItemId(Number value)
  {
    setAttributeInternal(ITEMID, value);
  }

  /**
   * 
   * Gets the attribute value for VendorId, using the alias name VendorId
   */
  public Number getVendorId()
  {
    return (Number)getAttributeInternal(VENDORID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VendorId
   */
  public void setVendorId(Number value)
  {
    setAttributeInternal(VENDORID, value);
  }

  /**
   * 
   * Gets the attribute value for VendorSiteId, using the alias name VendorSiteId
   */
  public Number getVendorSiteId()
  {
    return (Number)getAttributeInternal(VENDORSITEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for VendorSiteId
   */
  public void setVendorSiteId(Number value)
  {
    setAttributeInternal(VENDORSITEID, value);
  }

  /**
   * 
   * Gets the attribute value for AgentId, using the alias name AgentId
   */
  public Number getAgentId()
  {
    return (Number)getAttributeInternal(AGENTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AgentId
   */
  public void setAgentId(Number value)
  {
    setAttributeInternal(AGENTID, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
    System.out.println("Header Updated");
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ALLOCATIONHEADERID:
        return getAllocationHeaderId();
      case ORGID:
        return getOrgId();
      case BATCHNO:
        return getBatchNo();
      case BATCHDESC:
        return getBatchDesc();
      case ITEMID:
        return getItemId();
      case VENDORID:
        return getVendorId();
      case VENDORSITEID:
        return getVendorSiteId();
      case AGENTID:
        return getAgentId();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case ALLOCATIONLINESEO:
        return getAllocationLinesEO();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ALLOCATIONHEADERID:
        setAllocationHeaderId((Number)value);
        return;
      case ORGID:
        setOrgId((Number)value);
        return;
      case BATCHNO:
        setBatchNo((Number)value);
        return;
      case BATCHDESC:
        setBatchDesc((String)value);
        return;
      case ITEMID:
        setItemId((Number)value);
        return;
      case VENDORID:
        setVendorId((Number)value);
        return;
      case VENDORSITEID:
        setVendorSiteId((Number)value);
        return;
      case AGENTID:
        setAgentId((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }



  /**
   * 
   * Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getAllocationLinesEO()
  {
    return (RowIterator)getAttributeInternal(ALLOCATIONLINESEO);
  }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number allocationHeaderId)
  {
    return new Key(new Object[] {allocationHeaderId});
  }





}