package od.oracle.apps.xxfin.iby.disbursement.setup.component.server;
import oracle.apps.iby.disbursement.setup.component.server.AllPaymentMthdAssignmentsVORowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class XXIbyAllPaymentMthdAssignmentsVORowImpl extends AllPaymentMthdAssignmentsVORowImpl 
{
  protected static final int MAXATTRCONST = oracle.jbo.server.ViewDefImpl.getMaxAttrConst("oracle.apps.iby.disbursement.setup.component.server.AllPaymentMthdAssignmentsVO");;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public XXIbyAllPaymentMthdAssignmentsVORowImpl()
  {
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute PaymentMethodName
   */
  public String getPaymentMethodName()
  {
    return (String)getAttributeInternal("PaymentMethodName");
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute PaymentMethodName
   */
  public void setPaymentMethodName(String value)
  {
    setAttributeInternal("PaymentMethodName", value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute PaymentMethodCode
   */
  public String getPaymentMethodCode()
  {
    return (String)getAttributeInternal("PaymentMethodCode");
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute PaymentMethodCode
   */
  public void setPaymentMethodCode(String value)
  {
    setAttributeInternal("PaymentMethodCode", value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute InactiveDate
   */
  public Date getInactiveDate()
  {
    return (Date)getAttributeInternal("InactiveDate");
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute InactiveDate
   */
  public void setInactiveDate(Date value)
  {
    setAttributeInternal("InactiveDate", value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute PrimaryFlag
   */
  public String getPrimaryFlag()
  {
    return (String)getAttributeInternal("PrimaryFlag");
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute PrimaryFlag
   */
  public void setPrimaryFlag(String value)
  {
    setAttributeInternal("PrimaryFlag", value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Global1
   */
  public String getGlobal1()
  {
    return (String)getAttributeInternal("Global1");
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Global1
   */
  public void setGlobal1(String value)
  {
    setAttributeInternal("Global1", value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Changed1
   */
  public String getChanged1()
  {
    return (String)getAttributeInternal("Changed1");
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Changed1
   */
  public void setChanged1(String value)
  {
    setAttributeInternal("Changed1", value);
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute Order1
   */
  public Number getOrder1()
  {
    return (Number)getAttributeInternal("Order1");
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute Order1
   */
  public void setOrder1(Number value)
  {
    setAttributeInternal("Order1", value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    return super.getAttrInvokeAccessor(index, attrDef);
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    super.setAttrInvokeAccessor(index, value, attrDef);
    return;
  }
}