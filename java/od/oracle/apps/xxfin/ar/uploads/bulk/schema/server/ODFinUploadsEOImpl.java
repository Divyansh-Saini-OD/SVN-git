package od.oracle.apps.xxfin.ar.uploads.bulk.schema.server;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODFinUploadsEOImpl extends OAEntityImpl 
{
  protected static final int FILEUPLOADID = 0;
  protected static final int CLOBTYPE = 1;
  protected static final int CLOBCODE = 2;
  protected static final int FILENAME = 3;
  protected static final int FILESTATUS = 4;
  protected static final int FILECONTENTTYPE = 5;
  protected static final int FILEDATA = 6;
  protected static final int PROGRAM = 7;
  protected static final int CREATEDBY = 8;
  protected static final int CREATIONDATE = 9;
  protected static final int LASTUPDATEDBY = 10;
  protected static final int LASTUPDATEDATE = 11;
  protected static final int REQUESTID = 12;
  protected static final int ERRORFILEDATA = 13;
  protected static final int LASTUPDATELOGIN = 14;
  protected static final int OUTPUTFILEDATA = 15;
  protected static final int TOTALPROCESSEDRECORDS = 16;
  protected static final int NOOFSUCCESSRECORDS = 17;
  protected static final int NOOFERRORRECORDS = 18;


  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODFinUploadsEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("od.oracle.apps.xxfin.ar.uploads.bulk.schema.server.ODFinUploadsEO");
    }
    return mDefinitionObject;
  }



  /**
   * 
   * Gets the attribute value for FileUploadId, using the alias name FileUploadId
   */
  public Number getFileUploadId()
  {
    return (Number)getAttributeInternal(FILEUPLOADID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FileUploadId
   */
  public void setFileUploadId(Number value)
  {
    setAttributeInternal(FILEUPLOADID, value);
  }

  /**
   * 
   * Gets the attribute value for ClobType, using the alias name ClobType
   */
  public String getClobType()
  {
    return (String)getAttributeInternal(CLOBTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ClobType
   */
  public void setClobType(String value)
  {
    setAttributeInternal(CLOBTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for ClobCode, using the alias name ClobCode
   */
  public String getClobCode()
  {
    return (String)getAttributeInternal(CLOBCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ClobCode
   */
  public void setClobCode(String value)
  {
    setAttributeInternal(CLOBCODE, value);
  }

  /**
   * 
   * Gets the attribute value for FileName, using the alias name FileName
   */
  public String getFileName()
  {
    return (String)getAttributeInternal(FILENAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FileName
   */
  public void setFileName(String value)
  {
    setAttributeInternal(FILENAME, value);
  }

  /**
   * 
   * Gets the attribute value for FileStatus, using the alias name FileStatus
   */
  public String getFileStatus()
  {
    return (String)getAttributeInternal(FILESTATUS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FileStatus
   */
  public void setFileStatus(String value)
  {
    setAttributeInternal(FILESTATUS, value);
  }

  /**
   * 
   * Gets the attribute value for FileContentType, using the alias name FileContentType
   */
  public String getFileContentType()
  {
    return (String)getAttributeInternal(FILECONTENTTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FileContentType
   */
  public void setFileContentType(String value)
  {
    setAttributeInternal(FILECONTENTTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for FileData, using the alias name FileData
   */
  public ClobDomain getFileData()
  {
    return (ClobDomain)getAttributeInternal(FILEDATA);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FileData
   */
  public void setFileData(ClobDomain value)
  {
    setAttributeInternal(FILEDATA, value);
  }

  /**
   * 
   * Gets the attribute value for Program, using the alias name Program
   */
  public String getProgram()
  {
    return (String)getAttributeInternal(PROGRAM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Program
   */
  public void setProgram(String value)
  {
    setAttributeInternal(PROGRAM, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for RequestId, using the alias name RequestId
   */
  public Number getRequestId()
  {
    return (Number)getAttributeInternal(REQUESTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RequestId
   */
  public void setRequestId(Number value)
  {
    setAttributeInternal(REQUESTID, value);
  }

  /**
   * 
   * Gets the attribute value for ErrorFileData, using the alias name ErrorFileData
   */
  public ClobDomain getErrorFileData()
  {
    return (ClobDomain)getAttributeInternal(ERRORFILEDATA);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ErrorFileData
   */
  public void setErrorFileData(ClobDomain value)
  {
    setAttributeInternal(ERRORFILEDATA, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for OutputFileData, using the alias name OutputFileData
   */
  public ClobDomain getOutputFileData()
  {
    return (ClobDomain)getAttributeInternal(OUTPUTFILEDATA);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OutputFileData
   */
  public void setOutputFileData(ClobDomain value)
  {
    setAttributeInternal(OUTPUTFILEDATA, value);
  }

  /**
   * 
   * Gets the attribute value for TotalProcessedRecords, using the alias name TotalProcessedRecords
   */
  public Number getTotalProcessedRecords()
  {
    return (Number)getAttributeInternal(TOTALPROCESSEDRECORDS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for TotalProcessedRecords
   */
  public void setTotalProcessedRecords(Number value)
  {
    setAttributeInternal(TOTALPROCESSEDRECORDS, value);
  }

  /**
   * 
   * Gets the attribute value for NoOfSuccessRecords, using the alias name NoOfSuccessRecords
   */
  public Number getNoOfSuccessRecords()
  {
    return (Number)getAttributeInternal(NOOFSUCCESSRECORDS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NoOfSuccessRecords
   */
  public void setNoOfSuccessRecords(Number value)
  {
    setAttributeInternal(NOOFSUCCESSRECORDS, value);
  }

  /**
   * 
   * Gets the attribute value for NoOfErrorRecords, using the alias name NoOfErrorRecords
   */
  public Number getNoOfErrorRecords()
  {
    return (Number)getAttributeInternal(NOOFERRORRECORDS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for NoOfErrorRecords
   */
  public void setNoOfErrorRecords(Number value)
  {
    setAttributeInternal(NOOFERRORRECORDS, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case FILEUPLOADID:
        return getFileUploadId();
      case CLOBTYPE:
        return getClobType();
      case CLOBCODE:
        return getClobCode();
      case FILENAME:
        return getFileName();
      case FILESTATUS:
        return getFileStatus();
      case FILECONTENTTYPE:
        return getFileContentType();
      case FILEDATA:
        return getFileData();
      case PROGRAM:
        return getProgram();
      case CREATEDBY:
        return getCreatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case REQUESTID:
        return getRequestId();
      case ERRORFILEDATA:
        return getErrorFileData();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case OUTPUTFILEDATA:
        return getOutputFileData();
      case TOTALPROCESSEDRECORDS:
        return getTotalProcessedRecords();
      case NOOFSUCCESSRECORDS:
        return getNoOfSuccessRecords();
      case NOOFERRORRECORDS:
        return getNoOfErrorRecords();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case FILEUPLOADID:
        setFileUploadId((Number)value);
        return;
      case CLOBTYPE:
        setClobType((String)value);
        return;
      case CLOBCODE:
        setClobCode((String)value);
        return;
      case FILENAME:
        setFileName((String)value);
        return;
      case FILESTATUS:
        setFileStatus((String)value);
        return;
      case FILECONTENTTYPE:
        setFileContentType((String)value);
        return;
      case FILEDATA:
        setFileData((ClobDomain)value);
        return;
      case PROGRAM:
        setProgram((String)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case REQUESTID:
        setRequestId((Number)value);
        return;
      case ERRORFILEDATA:
        setErrorFileData((ClobDomain)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case OUTPUTFILEDATA:
        setOutputFileData((ClobDomain)value);
        return;
      case TOTALPROCESSEDRECORDS:
        setTotalProcessedRecords((Number)value);
        return;
      case NOOFSUCCESSRECORDS:
        setNoOfSuccessRecords((Number)value);
        return;
      case NOOFERRORRECORDS:
        setNoOfErrorRecords((Number)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number fileUploadId)
  {
    return new Key(new Object[] {fileUploadId});
  }



}