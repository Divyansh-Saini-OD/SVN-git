package od.oracle.apps.xxfin.ar.uploads.bulk.server;

/*===========================================================================+
 |      Copyright (c) 2001 Oracle Corporation, Redwood Shores, CA, USA       |
 |                         All rights reserved.                              |
 +===========================================================================+
 |  HISTORY                                                                  |
 | 1.1  17-FEB-2017   MBolli  Thread Leak 12.2.5 Upgrade - close all statements, resultsets |
 +===========================================================================*/
 
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import od.oracle.apps.xxfin.ar.uploads.bulk.poplist.server.ODFinTemplateNameFilesPVOImpl;
import od.oracle.apps.xxfin.ar.uploads.bulk.poplist.server.ODFinTemplatePVOImpl;
import oracle.apps.fnd.framework.OAException;
import java.sql.SQLException;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.jdbc.OracleCallableStatement;
import java.sql.Types;
import oracle.jbo.domain.Number;

//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ODFinUploadsAMImpl extends OAApplicationModuleImpl 
{
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ODFinUploadsAMImpl()
  {
  }

  /**
   * 
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("od.oracle.apps.xxfin.ar.uploads.bulk.server", "ODFinUploadsAMLocal");
  }

  /**
   * 
   * Container's getter for ODFinUploadsVO
   */
  public ODFinUploadsVOImpl getODFinUploadsVO()
  {
    return (ODFinUploadsVOImpl)findViewObject("ODFinUploadsVO");
  }

  /**
   * 
   * Container's getter for ODFinUploadsTempVO
   */
  public ODFinUploadsTempVOImpl getODFinUploadsTempVO()
  {
    return (ODFinUploadsTempVOImpl)findViewObject("ODFinUploadsTempVO");
  }

  /**
   * 
   * Container's getter for ODFinTemplateNameFilesPVO
   */
  public ODFinTemplateNameFilesPVOImpl getODFinTemplateNameFilesPVO()
  {
    return (ODFinTemplateNameFilesPVOImpl)findViewObject("ODFinTemplateNameFilesPVO");
  }

  /**
   * 
   * Container's getter for ODFinTemplatePVO
   */
  public ODFinTemplatePVOImpl getODFinTemplatePVO()
  {
    return (ODFinTemplatePVOImpl)findViewObject("ODFinTemplatePVO");
  }

  public String uploadAction( String strUserId, 
                              String strRespId,
                              String strRespApplId,
                              String fileUploadId)
  {
    OADBTransaction db=this.getOADBTransaction();
    Number fileUpdId = null;
    String strReqId = "";
	OracleCallableStatement ocs1 = null;
    try
    {
	     String stmt = "BEGIN fnd_global.apps_initialize( user_id           => :1"
                                                        +", resp_id       => :2"
                                                        +", resp_appl_id  => :3);"
                                                        +" END;" ; 
	    ocs1 = (OracleCallableStatement)db.createCallableStatement(stmt,1);
        ocs1.setInt(1, Integer.parseInt(strUserId));
        ocs1.setInt(2, Integer.parseInt(strRespId));
        ocs1.setInt(3, Integer.parseInt(strRespApplId));
        ocs1.execute();
	      ocs1.close();
    }
    
   catch(SQLException sqlexception)
   {
       throw OAException.wrapperException(sqlexception);
   }
   catch(Exception exception)
   {
       throw OAException.wrapperException(exception);
   }
	finally {
		try {
			if (ocs1 != null)
				ocs1.close();
		}
		catch(Exception exc) {  }
	}	   
	 OracleCallableStatement ocs2 = null;
     try
     { 
       fileUpdId= new Number(fileUploadId);   

      // Modified the code to launch the conc pgm
      String stmt1 = "BEGIN XXFIN_FILE_UPLOADS_CMN_PKG.XXFIN_INITIATE_FILE_UPLOAD( X_REQUEST_ID        => :1"
                                                                               +", P_FILE_UPLOAD_ID    =>:2);" 
                                                                +" END;" ; 
      ocs2 = (OracleCallableStatement)db.createCallableStatement(stmt1,1);
      ocs2.registerOutParameter(1,Types.NUMERIC);
      ocs2.setNUMBER(2,fileUpdId);
      ocs2.execute();
      strReqId = ocs2.getString(1);
      if (strReqId == null)
      {
          strReqId ="Error in submitting concurrent program";
      }
      ocs2.close();
     }

   catch(SQLException sqlexception)
   {
       throw OAException.wrapperException(sqlexception);
   }
   catch(Exception exception)
   {
       throw OAException.wrapperException(exception);
   } 
	finally {
		try {
			if (ocs2 != null)
				ocs2.close();
		}
		catch(Exception exc) {  }
	}	   
      return strReqId;
  } // End of upLoad
}