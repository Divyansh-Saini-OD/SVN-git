//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.3-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.06.21 at 01:38:00 PM IST 
//


package od.otc.mts.config;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the od.otc.mts.config package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _ProviderUrl_QNAME = new QName("", "ProviderUrl");
    private final static QName _Password_QNAME = new QName("", "Password");
    private final static QName _ListenToPort_QNAME = new QName("", "ListenToPort");
    private final static QName _UserName_QNAME = new QName("", "UserName");
    private final static QName _InitialContext_QNAME = new QName("", "InitialContext");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: od.otc.mts.config
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Parent }
     * 
     */
    public Parent createParent() {
        return new Parent();
    }

    /**
     * Create an instance of {@link AppServerConfig }
     * 
     */
    public AppServerConfig createAppServerConfig() {
        return new AppServerConfig();
    }

    /**
     * Create an instance of {@link Worker }
     * 
     */
    public Worker createWorker() {
        return new Worker();
    }

    /**
     * Create an instance of {@link Thread }
     * 
     */
    public Thread createThread() {
        return new Thread();
    }

    /**
     * Create an instance of {@link MTServer }
     * 
     */
    public MTServer createMTServer() {
        return new MTServer();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ProviderUrl")
    public JAXBElement<String> createProviderUrl(String value) {
        return new JAXBElement<String>(_ProviderUrl_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Password")
    public JAXBElement<String> createPassword(String value) {
        return new JAXBElement<String>(_Password_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ListenToPort")
    public JAXBElement<String> createListenToPort(String value) {
        return new JAXBElement<String>(_ListenToPort_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "UserName")
    public JAXBElement<String> createUserName(String value) {
        return new JAXBElement<String>(_UserName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "InitialContext")
    public JAXBElement<String> createInitialContext(String value) {
        return new JAXBElement<String>(_InitialContext_QNAME, String.class, null, value);
    }

}
