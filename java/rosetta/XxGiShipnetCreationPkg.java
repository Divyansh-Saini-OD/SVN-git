/*============================================================================+
 |    Copyright (c) 2007 Oracle Corporation, Redwood Shores, CA, USA          |
 |                          All rights reserved.                              |
 +============================================================================+
 |  FILENAME                                                                  |
 |      XxGiShipnetCreationPkg.java                                           |
 |  DESCRIPTION                                                               |
 |      This file is a Rosetta-generated wrapper for the pl/sql package called|
 |      xx_gi_shipnet_creation_pkg                                            |
 |                                                                            |
 |      Generated by Rosetta Version 2.061                                    |
 |                                                                            |
 |  NOTES                                                                     |
 |                                                                            |
 |  DEPENDANCIES                                                              |
 |  HISTORY                                                                   |
 |      Tue Sep 18 09:50:15 EDT 2007 Rosetta Created.                         |
 |      20-Sep-2013   E0351A2 - Modified for R12 Upgrade retrofit changes.    |
 +============================================================================*/
package od.oracle.apps.xxptp.rosetta;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.SQLException;
import oracle.jbo.server.DBTransaction;
//import oracle.jdbc.driver.OracleCallableStatement;  //Start commented/added by Veronica on 20-Sep-13 as per R12 Retrofit Changes
import oracle.jdbc.OracleCallableStatement;           
//import oracle.jdbc.driver.OracleTypes;
import oracle.jdbc.OracleTypes;                       //end commented/added by Veronica on 20-Sep-13 as per R12 Retrofit Changes
import oracle.sql.ROWID;
import oracle.sql.NUMBER;
import oracle.sql.DATE;
import oracle.sql.CHAR;
import oracle.sql.ARRAY;
import oracle.sql.STRUCT;
import oracle.sql.BLOB;
import oracle.sql.CLOB;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
  // this is generated to call xx_gi_shipnet_creation_pkg_w more easily

public class XxGiShipnetCreationPkg {
  public static final String RCS_ID=
  "$Header: XxGiShipnetCreationPkg.java $";
  // here're java records which give you handles on the PL/SQL records
  public static class GShipnetRec {
    public String source_org_type;
    public String getSourceOrgType() {return source_org_type;}
    public void setSourceOrgType(String __RosettaAttr) {source_org_type= __RosettaAttr;}
    public String target_org_type;
    public String getTargetOrgType() {return target_org_type;}
    public void setTargetOrgType(String __RosettaAttr) {target_org_type= __RosettaAttr;}
    public String source_org_number;
    public String getSourceOrgNumber() {return source_org_number;}
    public void setSourceOrgNumber(String __RosettaAttr) {source_org_number= __RosettaAttr;}
    public String target_org_number;
    public String getTargetOrgNumber() {return target_org_number;}
    public void setTargetOrgNumber(String __RosettaAttr) {target_org_number= __RosettaAttr;}
    public String source_country;
    public String getSourceCountry() {return source_country;}
    public void setSourceCountry(String __RosettaAttr) {source_country= __RosettaAttr;}
    public String target_country;
    public String getTargetCountry() {return target_country;}
    public void setTargetCountry(String __RosettaAttr) {target_country= __RosettaAttr;}
    public String source_sub_type;
    public String getSourceSubType() {return source_sub_type;}
    public void setSourceSubType(String __RosettaAttr) {source_sub_type= __RosettaAttr;}
    public String target_sub_type;
    public String getTargetSubType() {return target_sub_type;}
    public void setTargetSubType(String __RosettaAttr) {target_sub_type= __RosettaAttr;}
    public Number source_org_id;
    public Number getSourceOrgId() {return source_org_id;}
    public void setSourceOrgId(Number __RosettaAttr) {source_org_id= __RosettaAttr;}
    public Number target_org_id;
    public Number getTargetOrgId() {return target_org_id;}
    public void setTargetOrgId(Number __RosettaAttr) {target_org_id= __RosettaAttr;}
    public String source_inv_org;
    public String getSourceInvOrg() {return source_inv_org;}
    public void setSourceInvOrg(String __RosettaAttr) {source_inv_org= __RosettaAttr;}
    public String target_inv_org;
    public String getTargetInvOrg() {return target_inv_org;}
    public void setTargetInvOrg(String __RosettaAttr) {target_inv_org= __RosettaAttr;}
    public String cr_rule_type;
    public String getCrRuleType() {return cr_rule_type;}
    public void setCrRuleType(String __RosettaAttr) {cr_rule_type= __RosettaAttr;}
    public String cr_applicable_rule;
    public String getCrApplicableRule() {return cr_applicable_rule;}
    public void setCrApplicableRule(String __RosettaAttr) {cr_applicable_rule= __RosettaAttr;}
    public String rs_rule_type;
    public String getRsRuleType() {return rs_rule_type;}
    public void setRsRuleType(String __RosettaAttr) {rs_rule_type= __RosettaAttr;}
    public String rs_applicable_rule;
    public String getRsApplicableRule() {return rs_applicable_rule;}
    public void setRsApplicableRule(String __RosettaAttr) {rs_applicable_rule= __RosettaAttr;}
    public String code_reference;
    public String getCodeReference() {return code_reference;}
    public void setCodeReference(String __RosettaAttr) {code_reference= __RosettaAttr;}
    public Number source_default_xdoc;
    public Number getSourceDefaultXdoc() {return source_default_xdoc;}
    public void setSourceDefaultXdoc(Number __RosettaAttr) {source_default_xdoc= __RosettaAttr;}
    public Number source_default_csc;
    public Number getSourceDefaultCsc() {return source_default_csc;}
    public void setSourceDefaultCsc(Number __RosettaAttr) {source_default_csc= __RosettaAttr;}
    public Number target_default_xdoc;
    public Number getTargetDefaultXdoc() {return target_default_xdoc;}
    public void setTargetDefaultXdoc(Number __RosettaAttr) {target_default_xdoc= __RosettaAttr;}
    public Number target_default_csc;
    public Number getTargetDefaultCsc() {return target_default_csc;}
    public void setTargetDefaultCsc(Number __RosettaAttr) {target_default_csc= __RosettaAttr;}
    public String shipnet_create;
    public String getShipnetCreate() {return shipnet_create;}
    public void setShipnetCreate(String __RosettaAttr) {shipnet_create= __RosettaAttr;}
    public String shipnet_exists;
    public String getShipnetExists() {return shipnet_exists;}
    public void setShipnetExists(String __RosettaAttr) {shipnet_exists= __RosettaAttr;}
    public String message;
    public String getMessage() {return message;}
    public void setMessage(String __RosettaAttr) {message= __RosettaAttr;}
    public Number error_code;
    public Number getErrorCode() {return error_code;}
    public void setErrorCode(Number __RosettaAttr) {error_code= __RosettaAttr;}
    public String error_message;
    public String getErrorMessage() {return error_message;}
    public void setErrorMessage(String __RosettaAttr) {error_message= __RosettaAttr;}
    public String source_org_code;
    public String getSourceOrgCode() {return source_org_code;}
    public void setSourceOrgCode(String __RosettaAttr) {source_org_code= __RosettaAttr;}
    public String target_org_code;
    public String getTargetOrgCode() {return target_org_code;}
    public void setTargetOrgCode(String __RosettaAttr) {target_org_code= __RosettaAttr;}
    public Number intransit_type;
    public Number getIntransitType() {return intransit_type;}
    public void setIntransitType(Number __RosettaAttr) {intransit_type= __RosettaAttr;}
    public Number fob_point;
    public Number getFobPoint() {return fob_point;}
    public void setFobPoint(Number __RosettaAttr) {fob_point= __RosettaAttr;}
    public Number interorg_transfer_code;
    public Number getInterorgTransferCode() {return interorg_transfer_code;}
    public void setInterorgTransferCode(Number __RosettaAttr) {interorg_transfer_code= __RosettaAttr;}
    public Number receipt_routing_id;
    public Number getReceiptRoutingId() {return receipt_routing_id;}
    public void setReceiptRoutingId(Number __RosettaAttr) {receipt_routing_id= __RosettaAttr;}
    public Number internal_order_required_flag;
    public Number getInternalOrderRequiredFlag() {return internal_order_required_flag;}
    public void setInternalOrderRequiredFlag(Number __RosettaAttr) {internal_order_required_flag= __RosettaAttr;}
    public String intransit_inv_account;
    public String getIntransitInvAccount() {return intransit_inv_account;}
    public void setIntransitInvAccount(String __RosettaAttr) {intransit_inv_account= __RosettaAttr;}
    public Number intransit_inv_account_id;
    public Number getIntransitInvAccountId() {return intransit_inv_account_id;}
    public void setIntransitInvAccountId(Number __RosettaAttr) {intransit_inv_account_id= __RosettaAttr;}
    public String interorg_transfer_cr_account;
    public String getInterorgTransferCrAccount() {return interorg_transfer_cr_account;}
    public void setInterorgTransferCrAccount(String __RosettaAttr) {interorg_transfer_cr_account= __RosettaAttr;}
    public Number interorg_transfer_cr_accnt_id;
    public Number getInterorgTransferCrAccntId() {return interorg_transfer_cr_accnt_id;}
    public void setInterorgTransferCrAccntId(Number __RosettaAttr) {interorg_transfer_cr_accnt_id= __RosettaAttr;}
    public String interorg_receivables_account;
    public String getInterorgReceivablesAccount() {return interorg_receivables_account;}
    public void setInterorgReceivablesAccount(String __RosettaAttr) {interorg_receivables_account= __RosettaAttr;}
    public Number interorg_receivables_accnt_id;
    public Number getInterorgReceivablesAccntId() {return interorg_receivables_accnt_id;}
    public void setInterorgReceivablesAccntId(Number __RosettaAttr) {interorg_receivables_accnt_id= __RosettaAttr;}
    public String interorg_payables_account;
    public String getInterorgPayablesAccount() {return interorg_payables_account;}
    public void setInterorgPayablesAccount(String __RosettaAttr) {interorg_payables_account= __RosettaAttr;}
    public Number interorg_payables_account_id;
    public Number getInterorgPayablesAccountId() {return interorg_payables_account_id;}
    public void setInterorgPayablesAccountId(Number __RosettaAttr) {interorg_payables_account_id= __RosettaAttr;}
    public Number interorg_price_var_account_id;
    public Number getInterorgPriceVarAccountId() {return interorg_price_var_account_id;}
    public void setInterorgPriceVarAccountId(Number __RosettaAttr) {interorg_price_var_account_id= __RosettaAttr;}
    public String interorg_price_var_account;
    public String getInterorgPriceVarAccount() {return interorg_price_var_account;}
    public void setInterorgPriceVarAccount(String __RosettaAttr) {interorg_price_var_account= __RosettaAttr;}
    public String elemental_visibility_enabled;
    public String getElementalVisibilityEnabled() {return elemental_visibility_enabled;}
    public void setElementalVisibilityEnabled(String __RosettaAttr) {elemental_visibility_enabled= __RosettaAttr;}
    public String manual_receipt_expense;
    public String getManualReceiptExpense() {return manual_receipt_expense;}
    public void setManualReceiptExpense(String __RosettaAttr) {manual_receipt_expense= __RosettaAttr;}
  }

  // here're the utility methods to call the PL/SQL package or
  // the generated PL/SQL wrapper package
  /** This is the Rosetta-generated method to call
    * procedure pre_build
    * in package xx_gi_shipnet_creation_pkg
    */
  public static void preBuild(
    DBTransaction _dbtransaction,
    String p_report_only_mode,
    String p_source_org_type,
    Number p_from_organization_id,
    GShipnetRec [][] p_shipnet_tbl,
    Number  [] x_error_code,
    String  [] x_error_message
  ) throws SQLException {
    ARRAY p_shipnet_tbl_source_org_type;
    String [] p_shipnet_tbl_source_org_type_zoo = null;
    ARRAY p_shipnet_tbl_target_org_type;
    String [] p_shipnet_tbl_target_org_type_zoo = null;
    ARRAY p_shipnet_tbl_source_org_number;
    String [] p_shipnet_tbl_source_org_number_zoo = null;
    ARRAY p_shipnet_tbl_target_org_number;
    String [] p_shipnet_tbl_target_org_number_zoo = null;
    ARRAY p_shipnet_tbl_source_country;
    String [] p_shipnet_tbl_source_country_zoo = null;
    ARRAY p_shipnet_tbl_target_country;
    String [] p_shipnet_tbl_target_country_zoo = null;
    ARRAY p_shipnet_tbl_source_sub_type;
    String [] p_shipnet_tbl_source_sub_type_zoo = null;
    ARRAY p_shipnet_tbl_target_sub_type;
    String [] p_shipnet_tbl_target_sub_type_zoo = null;
    ARRAY p_shipnet_tbl_source_org_id;
    Number [] p_shipnet_tbl_source_org_id_zoo = null;
    ARRAY p_shipnet_tbl_target_org_id;
    Number [] p_shipnet_tbl_target_org_id_zoo = null;
    ARRAY p_shipnet_tbl_source_inv_org;
    String [] p_shipnet_tbl_source_inv_org_zoo = null;
    ARRAY p_shipnet_tbl_target_inv_org;
    String [] p_shipnet_tbl_target_inv_org_zoo = null;
    ARRAY p_shipnet_tbl_cr_rule_type;
    String [] p_shipnet_tbl_cr_rule_type_zoo = null;
    ARRAY p_shipnet_tbl_cr_applicable_rule;
    String [] p_shipnet_tbl_cr_applicable_rule_zoo = null;
    ARRAY p_shipnet_tbl_rs_rule_type;
    String [] p_shipnet_tbl_rs_rule_type_zoo = null;
    ARRAY p_shipnet_tbl_rs_applicable_rule;
    String [] p_shipnet_tbl_rs_applicable_rule_zoo = null;
    ARRAY p_shipnet_tbl_code_reference;
    String [] p_shipnet_tbl_code_reference_zoo = null;
    ARRAY p_shipnet_tbl_source_default_xdoc;
    Number [] p_shipnet_tbl_source_default_xdoc_zoo = null;
    ARRAY p_shipnet_tbl_source_default_csc;
    Number [] p_shipnet_tbl_source_default_csc_zoo = null;
    ARRAY p_shipnet_tbl_target_default_xdoc;
    Number [] p_shipnet_tbl_target_default_xdoc_zoo = null;
    ARRAY p_shipnet_tbl_target_default_csc;
    Number [] p_shipnet_tbl_target_default_csc_zoo = null;
    ARRAY p_shipnet_tbl_shipnet_create;
    String [] p_shipnet_tbl_shipnet_create_zoo = null;
    ARRAY p_shipnet_tbl_shipnet_exists;
    String [] p_shipnet_tbl_shipnet_exists_zoo = null;
    ARRAY p_shipnet_tbl_message;
    String [] p_shipnet_tbl_message_zoo = null;
    ARRAY p_shipnet_tbl_error_code;
    Number [] p_shipnet_tbl_error_code_zoo = null;
    ARRAY p_shipnet_tbl_error_message;
    String [] p_shipnet_tbl_error_message_zoo = null;
    ARRAY p_shipnet_tbl_source_org_code;
    String [] p_shipnet_tbl_source_org_code_zoo = null;
    ARRAY p_shipnet_tbl_target_org_code;
    String [] p_shipnet_tbl_target_org_code_zoo = null;
    ARRAY p_shipnet_tbl_intransit_type;
    Number [] p_shipnet_tbl_intransit_type_zoo = null;
    ARRAY p_shipnet_tbl_fob_point;
    Number [] p_shipnet_tbl_fob_point_zoo = null;
    ARRAY p_shipnet_tbl_interorg_transfer_code;
    Number [] p_shipnet_tbl_interorg_transfer_code_zoo = null;
    ARRAY p_shipnet_tbl_receipt_routing_id;
    Number [] p_shipnet_tbl_receipt_routing_id_zoo = null;
    ARRAY p_shipnet_tbl_internal_order_required_flag;
    Number [] p_shipnet_tbl_internal_order_required_flag_zoo = null;
    ARRAY p_shipnet_tbl_intransit_inv_account;
    String [] p_shipnet_tbl_intransit_inv_account_zoo = null;
    ARRAY p_shipnet_tbl_intransit_inv_account_id;
    Number [] p_shipnet_tbl_intransit_inv_account_id_zoo = null;
    ARRAY p_shipnet_tbl_interorg_transfer_cr_account;
    String [] p_shipnet_tbl_interorg_transfer_cr_account_zoo = null;
    ARRAY p_shipnet_tbl_interorg_transfer_cr_accnt_id;
    Number [] p_shipnet_tbl_interorg_transfer_cr_accnt_id_zoo = null;
    ARRAY p_shipnet_tbl_interorg_receivables_account;
    String [] p_shipnet_tbl_interorg_receivables_account_zoo = null;
    ARRAY p_shipnet_tbl_interorg_receivables_accnt_id;
    Number [] p_shipnet_tbl_interorg_receivables_accnt_id_zoo = null;
    ARRAY p_shipnet_tbl_interorg_payables_account;
    String [] p_shipnet_tbl_interorg_payables_account_zoo = null;
    ARRAY p_shipnet_tbl_interorg_payables_account_id;
    Number [] p_shipnet_tbl_interorg_payables_account_id_zoo = null;
    ARRAY p_shipnet_tbl_interorg_price_var_account_id;
    Number [] p_shipnet_tbl_interorg_price_var_account_id_zoo = null;
    ARRAY p_shipnet_tbl_interorg_price_var_account;
    String [] p_shipnet_tbl_interorg_price_var_account_zoo = null;
    ARRAY p_shipnet_tbl_elemental_visibility_enabled;
    String [] p_shipnet_tbl_elemental_visibility_enabled_zoo = null;
    ARRAY p_shipnet_tbl_manual_receipt_expense;
    String [] p_shipnet_tbl_manual_receipt_expense_zoo = null;
    GShipnetRec [] p_shipnet_tbl_retval;


    OracleCallableStatement ocs = null;
    try {
      ocs = (OracleCallableStatement)
          _dbtransaction.createCallableStatement("begin xx_gi_shipnet_creation_pkg_w.pre_build("+
            ":1, :2, :3, :4, :5, :6, :7, :8, :9, :10, "+
            ":11, :12, :13, :14, :15, :16, :17, :18, :19, :20, "+
            ":21, :22, :23, :24, :25, :26, :27, :28, :29, :30, "+
            ":31, :32, :33, :34, :35, :36, :37, :38, :39, :40, "+
            ":41, :42, :43, :44, :45, :46, :47, :48, :49, :50"+
        "); end;", 1);

      // register types of OUT and IN-OUT params, if any
      ocs.registerOutParameter(4, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(5, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(6, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_200");
      ocs.registerOutParameter(7, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_200");
      ocs.registerOutParameter(8, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(9, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(10, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(11, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(12, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(13, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(14, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_300");
      ocs.registerOutParameter(15, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_300");
      ocs.registerOutParameter(16, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_300");
      ocs.registerOutParameter(17, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_300");
      ocs.registerOutParameter(18, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_300");
      ocs.registerOutParameter(19, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_300");
      ocs.registerOutParameter(20, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_300");
      ocs.registerOutParameter(21, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(22, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(23, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(24, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(25, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(26, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(27, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_500");
      ocs.registerOutParameter(28, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(29, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_500");
      ocs.registerOutParameter(30, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(31, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(32, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(33, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(34, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(35, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(36, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(37, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_500");
      ocs.registerOutParameter(38, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(39, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_500");
      ocs.registerOutParameter(40, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(41, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_500");
      ocs.registerOutParameter(42, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(43, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_500");
      ocs.registerOutParameter(44, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(45, OracleTypes.ARRAY, "JTF_NUMBER_TABLE");
      ocs.registerOutParameter(46, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_500");
      ocs.registerOutParameter(47, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(48, OracleTypes.ARRAY, "JTF_VARCHAR2_TABLE_100");
      ocs.registerOutParameter(49, OracleTypes.NUMBER);
      ocs.registerOutParameter(50, OracleTypes.VARCHAR, 0, 1000);

      // set IN or IN-OUT params, if any
      ocs.setString(1, p_report_only_mode);
      ocs.setString(2, p_source_org_type);
      ocs.setNUMBER(3, p_from_organization_id);

      // call the routine!
      ocs.execute();

      // get OUT and IN-OUT params, if any
      p_shipnet_tbl_source_org_type = ocs.getARRAY(4);
      p_shipnet_tbl_target_org_type = ocs.getARRAY(5);
      p_shipnet_tbl_source_org_number = ocs.getARRAY(6);
      p_shipnet_tbl_target_org_number = ocs.getARRAY(7);
      p_shipnet_tbl_source_country = ocs.getARRAY(8);
      p_shipnet_tbl_target_country = ocs.getARRAY(9);
      p_shipnet_tbl_source_sub_type = ocs.getARRAY(10);
      p_shipnet_tbl_target_sub_type = ocs.getARRAY(11);
      p_shipnet_tbl_source_org_id = ocs.getARRAY(12);
      p_shipnet_tbl_target_org_id = ocs.getARRAY(13);
      p_shipnet_tbl_source_inv_org = ocs.getARRAY(14);
      p_shipnet_tbl_target_inv_org = ocs.getARRAY(15);
      p_shipnet_tbl_cr_rule_type = ocs.getARRAY(16);
      p_shipnet_tbl_cr_applicable_rule = ocs.getARRAY(17);
      p_shipnet_tbl_rs_rule_type = ocs.getARRAY(18);
      p_shipnet_tbl_rs_applicable_rule = ocs.getARRAY(19);
      p_shipnet_tbl_code_reference = ocs.getARRAY(20);
      p_shipnet_tbl_source_default_xdoc = ocs.getARRAY(21);
      p_shipnet_tbl_source_default_csc = ocs.getARRAY(22);
      p_shipnet_tbl_target_default_xdoc = ocs.getARRAY(23);
      p_shipnet_tbl_target_default_csc = ocs.getARRAY(24);
      p_shipnet_tbl_shipnet_create = ocs.getARRAY(25);
      p_shipnet_tbl_shipnet_exists = ocs.getARRAY(26);
      p_shipnet_tbl_message = ocs.getARRAY(27);
      p_shipnet_tbl_error_code = ocs.getARRAY(28);
      p_shipnet_tbl_error_message = ocs.getARRAY(29);
      p_shipnet_tbl_source_org_code = ocs.getARRAY(30);
      p_shipnet_tbl_target_org_code = ocs.getARRAY(31);
      p_shipnet_tbl_intransit_type = ocs.getARRAY(32);
      p_shipnet_tbl_fob_point = ocs.getARRAY(33);
      p_shipnet_tbl_interorg_transfer_code = ocs.getARRAY(34);
      p_shipnet_tbl_receipt_routing_id = ocs.getARRAY(35);
      p_shipnet_tbl_internal_order_required_flag = ocs.getARRAY(36);
      p_shipnet_tbl_intransit_inv_account = ocs.getARRAY(37);
      p_shipnet_tbl_intransit_inv_account_id = ocs.getARRAY(38);
      p_shipnet_tbl_interorg_transfer_cr_account = ocs.getARRAY(39);
      p_shipnet_tbl_interorg_transfer_cr_accnt_id = ocs.getARRAY(40);
      p_shipnet_tbl_interorg_receivables_account = ocs.getARRAY(41);
      p_shipnet_tbl_interorg_receivables_accnt_id = ocs.getARRAY(42);
      p_shipnet_tbl_interorg_payables_account = ocs.getARRAY(43);
      p_shipnet_tbl_interorg_payables_account_id = ocs.getARRAY(44);
      p_shipnet_tbl_interorg_price_var_account_id = ocs.getARRAY(45);
      p_shipnet_tbl_interorg_price_var_account = ocs.getARRAY(46);
      p_shipnet_tbl_elemental_visibility_enabled = ocs.getARRAY(47);
      p_shipnet_tbl_manual_receipt_expense = ocs.getARRAY(48);
      if (x_error_code != null) {
        NUMBER __rosettatemp = ocs.getNUMBER(49);
        x_error_code[0] = ((null == __rosettatemp) ? null : new Number(__rosettatemp));
      }
      if (x_error_message != null) {
        x_error_message[0] = ocs.getString(50);
      }

    } catch (SQLException __RosettaSe) {
      throw __RosettaSe;
    } finally {
      if(ocs!=null) ocs.close();
    }
    if (p_shipnet_tbl != null) {
      if (p_shipnet_tbl_source_org_type == null) {
        p_shipnet_tbl[0] = null;
      } else if (p_shipnet_tbl_source_org_type.length() == 0) {
        p_shipnet_tbl_retval = new GShipnetRec[0];
        p_shipnet_tbl[0] = p_shipnet_tbl_retval;
      } else {
        String [] p_shipnet_tbl_source_org_type_rosettadata  = (String []) p_shipnet_tbl_source_org_type.getArray();
        String [] p_shipnet_tbl_target_org_type_rosettadata  = (String []) p_shipnet_tbl_target_org_type.getArray();
        String [] p_shipnet_tbl_source_org_number_rosettadata  = (String []) p_shipnet_tbl_source_org_number.getArray();
        String [] p_shipnet_tbl_target_org_number_rosettadata  = (String []) p_shipnet_tbl_target_org_number.getArray();
        String [] p_shipnet_tbl_source_country_rosettadata  = (String []) p_shipnet_tbl_source_country.getArray();
        String [] p_shipnet_tbl_target_country_rosettadata  = (String []) p_shipnet_tbl_target_country.getArray();
        String [] p_shipnet_tbl_source_sub_type_rosettadata  = (String []) p_shipnet_tbl_source_sub_type.getArray();
        String [] p_shipnet_tbl_target_sub_type_rosettadata  = (String []) p_shipnet_tbl_target_sub_type.getArray();
        oracle.sql.Datum [] p_shipnet_tbl_source_org_id_rosettadata  = p_shipnet_tbl_source_org_id.getOracleArray();
        oracle.sql.Datum [] p_shipnet_tbl_target_org_id_rosettadata  = p_shipnet_tbl_target_org_id.getOracleArray();
        String [] p_shipnet_tbl_source_inv_org_rosettadata  = (String []) p_shipnet_tbl_source_inv_org.getArray();
        String [] p_shipnet_tbl_target_inv_org_rosettadata  = (String []) p_shipnet_tbl_target_inv_org.getArray();
        String [] p_shipnet_tbl_cr_rule_type_rosettadata  = (String []) p_shipnet_tbl_cr_rule_type.getArray();
        String [] p_shipnet_tbl_cr_applicable_rule_rosettadata  = (String []) p_shipnet_tbl_cr_applicable_rule.getArray();
        String [] p_shipnet_tbl_rs_rule_type_rosettadata  = (String []) p_shipnet_tbl_rs_rule_type.getArray();
        String [] p_shipnet_tbl_rs_applicable_rule_rosettadata  = (String []) p_shipnet_tbl_rs_applicable_rule.getArray();
        String [] p_shipnet_tbl_code_reference_rosettadata  = (String []) p_shipnet_tbl_code_reference.getArray();
        oracle.sql.Datum [] p_shipnet_tbl_source_default_xdoc_rosettadata  = p_shipnet_tbl_source_default_xdoc.getOracleArray();
        oracle.sql.Datum [] p_shipnet_tbl_source_default_csc_rosettadata  = p_shipnet_tbl_source_default_csc.getOracleArray();
        oracle.sql.Datum [] p_shipnet_tbl_target_default_xdoc_rosettadata  = p_shipnet_tbl_target_default_xdoc.getOracleArray();
        oracle.sql.Datum [] p_shipnet_tbl_target_default_csc_rosettadata  = p_shipnet_tbl_target_default_csc.getOracleArray();
        String [] p_shipnet_tbl_shipnet_create_rosettadata  = (String []) p_shipnet_tbl_shipnet_create.getArray();
        String [] p_shipnet_tbl_shipnet_exists_rosettadata  = (String []) p_shipnet_tbl_shipnet_exists.getArray();
        String [] p_shipnet_tbl_message_rosettadata  = (String []) p_shipnet_tbl_message.getArray();
        oracle.sql.Datum [] p_shipnet_tbl_error_code_rosettadata  = p_shipnet_tbl_error_code.getOracleArray();
        String [] p_shipnet_tbl_error_message_rosettadata  = (String []) p_shipnet_tbl_error_message.getArray();
        String [] p_shipnet_tbl_source_org_code_rosettadata  = (String []) p_shipnet_tbl_source_org_code.getArray();
        String [] p_shipnet_tbl_target_org_code_rosettadata  = (String []) p_shipnet_tbl_target_org_code.getArray();
        oracle.sql.Datum [] p_shipnet_tbl_intransit_type_rosettadata  = p_shipnet_tbl_intransit_type.getOracleArray();
        oracle.sql.Datum [] p_shipnet_tbl_fob_point_rosettadata  = p_shipnet_tbl_fob_point.getOracleArray();
        oracle.sql.Datum [] p_shipnet_tbl_interorg_transfer_code_rosettadata  = p_shipnet_tbl_interorg_transfer_code.getOracleArray();
        oracle.sql.Datum [] p_shipnet_tbl_receipt_routing_id_rosettadata  = p_shipnet_tbl_receipt_routing_id.getOracleArray();
        oracle.sql.Datum [] p_shipnet_tbl_internal_order_required_flag_rosettadata  = p_shipnet_tbl_internal_order_required_flag.getOracleArray();
        String [] p_shipnet_tbl_intransit_inv_account_rosettadata  = (String []) p_shipnet_tbl_intransit_inv_account.getArray();
        oracle.sql.Datum [] p_shipnet_tbl_intransit_inv_account_id_rosettadata  = p_shipnet_tbl_intransit_inv_account_id.getOracleArray();
        String [] p_shipnet_tbl_interorg_transfer_cr_account_rosettadata  = (String []) p_shipnet_tbl_interorg_transfer_cr_account.getArray();
        oracle.sql.Datum [] p_shipnet_tbl_interorg_transfer_cr_accnt_id_rosettadata  = p_shipnet_tbl_interorg_transfer_cr_accnt_id.getOracleArray();
        String [] p_shipnet_tbl_interorg_receivables_account_rosettadata  = (String []) p_shipnet_tbl_interorg_receivables_account.getArray();
        oracle.sql.Datum [] p_shipnet_tbl_interorg_receivables_accnt_id_rosettadata  = p_shipnet_tbl_interorg_receivables_accnt_id.getOracleArray();
        String [] p_shipnet_tbl_interorg_payables_account_rosettadata  = (String []) p_shipnet_tbl_interorg_payables_account.getArray();
        oracle.sql.Datum [] p_shipnet_tbl_interorg_payables_account_id_rosettadata  = p_shipnet_tbl_interorg_payables_account_id.getOracleArray();
        oracle.sql.Datum [] p_shipnet_tbl_interorg_price_var_account_id_rosettadata  = p_shipnet_tbl_interorg_price_var_account_id.getOracleArray();
        String [] p_shipnet_tbl_interorg_price_var_account_rosettadata  = (String []) p_shipnet_tbl_interorg_price_var_account.getArray();
        String [] p_shipnet_tbl_elemental_visibility_enabled_rosettadata  = (String []) p_shipnet_tbl_elemental_visibility_enabled.getArray();
        String [] p_shipnet_tbl_manual_receipt_expense_rosettadata  = (String []) p_shipnet_tbl_manual_receipt_expense.getArray();

        p_shipnet_tbl_retval = new GShipnetRec[p_shipnet_tbl_source_org_type_rosettadata.length];
        p_shipnet_tbl[0] = p_shipnet_tbl_retval;
        for (int __i=0; __i<p_shipnet_tbl_source_org_type_rosettadata.length; ++__i) {
          p_shipnet_tbl_retval[__i] = new GShipnetRec();
          p_shipnet_tbl_retval[__i].source_org_type = p_shipnet_tbl_source_org_type_rosettadata[__i];
          p_shipnet_tbl_retval[__i].target_org_type = p_shipnet_tbl_target_org_type_rosettadata[__i];
          p_shipnet_tbl_retval[__i].source_org_number = p_shipnet_tbl_source_org_number_rosettadata[__i];
          p_shipnet_tbl_retval[__i].target_org_number = p_shipnet_tbl_target_org_number_rosettadata[__i];
          p_shipnet_tbl_retval[__i].source_country = p_shipnet_tbl_source_country_rosettadata[__i];
          p_shipnet_tbl_retval[__i].target_country = p_shipnet_tbl_target_country_rosettadata[__i];
          p_shipnet_tbl_retval[__i].source_sub_type = p_shipnet_tbl_source_sub_type_rosettadata[__i];
          p_shipnet_tbl_retval[__i].target_sub_type = p_shipnet_tbl_target_sub_type_rosettadata[__i];
          p_shipnet_tbl_retval[__i].source_org_id = 
            ((null == p_shipnet_tbl_source_org_id_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_source_org_id_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].target_org_id = 
            ((null == p_shipnet_tbl_target_org_id_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_target_org_id_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].source_inv_org = p_shipnet_tbl_source_inv_org_rosettadata[__i];
          p_shipnet_tbl_retval[__i].target_inv_org = p_shipnet_tbl_target_inv_org_rosettadata[__i];
          p_shipnet_tbl_retval[__i].cr_rule_type = p_shipnet_tbl_cr_rule_type_rosettadata[__i];
          p_shipnet_tbl_retval[__i].cr_applicable_rule = p_shipnet_tbl_cr_applicable_rule_rosettadata[__i];
          p_shipnet_tbl_retval[__i].rs_rule_type = p_shipnet_tbl_rs_rule_type_rosettadata[__i];
          p_shipnet_tbl_retval[__i].rs_applicable_rule = p_shipnet_tbl_rs_applicable_rule_rosettadata[__i];
          p_shipnet_tbl_retval[__i].code_reference = p_shipnet_tbl_code_reference_rosettadata[__i];
          p_shipnet_tbl_retval[__i].source_default_xdoc = 
            ((null == p_shipnet_tbl_source_default_xdoc_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_source_default_xdoc_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].source_default_csc = 
            ((null == p_shipnet_tbl_source_default_csc_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_source_default_csc_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].target_default_xdoc = 
            ((null == p_shipnet_tbl_target_default_xdoc_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_target_default_xdoc_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].target_default_csc = 
            ((null == p_shipnet_tbl_target_default_csc_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_target_default_csc_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].shipnet_create = p_shipnet_tbl_shipnet_create_rosettadata[__i];
          p_shipnet_tbl_retval[__i].shipnet_exists = p_shipnet_tbl_shipnet_exists_rosettadata[__i];
          p_shipnet_tbl_retval[__i].message = p_shipnet_tbl_message_rosettadata[__i];
          p_shipnet_tbl_retval[__i].error_code = 
            ((null == p_shipnet_tbl_error_code_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_error_code_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].error_message = p_shipnet_tbl_error_message_rosettadata[__i];
          p_shipnet_tbl_retval[__i].source_org_code = p_shipnet_tbl_source_org_code_rosettadata[__i];
          p_shipnet_tbl_retval[__i].target_org_code = p_shipnet_tbl_target_org_code_rosettadata[__i];
          p_shipnet_tbl_retval[__i].intransit_type = 
            ((null == p_shipnet_tbl_intransit_type_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_intransit_type_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].fob_point = 
            ((null == p_shipnet_tbl_fob_point_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_fob_point_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].interorg_transfer_code = 
            ((null == p_shipnet_tbl_interorg_transfer_code_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_interorg_transfer_code_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].receipt_routing_id = 
            ((null == p_shipnet_tbl_receipt_routing_id_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_receipt_routing_id_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].internal_order_required_flag = 
            ((null == p_shipnet_tbl_internal_order_required_flag_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_internal_order_required_flag_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].intransit_inv_account = p_shipnet_tbl_intransit_inv_account_rosettadata[__i];
          p_shipnet_tbl_retval[__i].intransit_inv_account_id = 
            ((null == p_shipnet_tbl_intransit_inv_account_id_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_intransit_inv_account_id_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].interorg_transfer_cr_account = p_shipnet_tbl_interorg_transfer_cr_account_rosettadata[__i];
          p_shipnet_tbl_retval[__i].interorg_transfer_cr_accnt_id = 
            ((null == p_shipnet_tbl_interorg_transfer_cr_accnt_id_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_interorg_transfer_cr_accnt_id_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].interorg_receivables_account = p_shipnet_tbl_interorg_receivables_account_rosettadata[__i];
          p_shipnet_tbl_retval[__i].interorg_receivables_accnt_id = 
            ((null == p_shipnet_tbl_interorg_receivables_accnt_id_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_interorg_receivables_accnt_id_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].interorg_payables_account = p_shipnet_tbl_interorg_payables_account_rosettadata[__i];
          p_shipnet_tbl_retval[__i].interorg_payables_account_id = 
            ((null == p_shipnet_tbl_interorg_payables_account_id_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_interorg_payables_account_id_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].interorg_price_var_account_id = 
            ((null == p_shipnet_tbl_interorg_price_var_account_id_rosettadata[__i]) ? null : new Number((NUMBER) p_shipnet_tbl_interorg_price_var_account_id_rosettadata[__i]));
          p_shipnet_tbl_retval[__i].interorg_price_var_account = p_shipnet_tbl_interorg_price_var_account_rosettadata[__i];
          p_shipnet_tbl_retval[__i].elemental_visibility_enabled = p_shipnet_tbl_elemental_visibility_enabled_rosettadata[__i];
          p_shipnet_tbl_retval[__i].manual_receipt_expense = p_shipnet_tbl_manual_receipt_expense_rosettadata[__i];
        }
      }
    }
  }
  /** This is the Rosetta-generated method to call
    * procedure dynamic_build
    * in package xx_gi_shipnet_creation_pkg
    */
  public static void dynamicBuild(
    DBTransaction _dbtransaction,
    Number p_from_organization_id,
    Number p_to_organization_id,
    Number p_transfer_type,
    Number p_fob_point,
    Number p_interorg_transfer_code,
    Number p_receipt_routing_id,
    Number p_internal_order_required_flag,
    Number p_intransit_inv_account,
    Number p_interorg_transfer_cr_account,
    Number p_interorg_receivables_account,
    Number p_interorg_payables_account,
    Number p_interorg_price_var_account,
    String p_elemental_visibility_enabled,
    String p_manual_receipt_expense,
    String  [] x_status,
    Number  [] x_error_code,
    String  [] x_error_message
  ) throws SQLException {


    OracleCallableStatement ocs = null;
    try {
      ocs = (OracleCallableStatement)
          _dbtransaction.createCallableStatement("begin xx_gi_shipnet_creation_pkg.dynamic_build("+
            ":1, :2, :3, :4, :5, :6, :7, :8, :9, :10, "+
            ":11, :12, :13, :14, :15, :16, :17"+
        "); end;", 1);

      // register types of OUT and IN-OUT params, if any
      ocs.registerOutParameter(15, OracleTypes.VARCHAR, 0, 1000);
      ocs.registerOutParameter(16, OracleTypes.NUMBER);
      ocs.registerOutParameter(17, OracleTypes.VARCHAR, 0, 1000);

      // set IN or IN-OUT params, if any
      ocs.setNUMBER(1, p_from_organization_id);
      ocs.setNUMBER(2, p_to_organization_id);
      ocs.setNUMBER(3, p_transfer_type);
      ocs.setNUMBER(4, p_fob_point);
      ocs.setNUMBER(5, p_interorg_transfer_code);
      ocs.setNUMBER(6, p_receipt_routing_id);
      ocs.setNUMBER(7, p_internal_order_required_flag);
      ocs.setNUMBER(8, p_intransit_inv_account);
      ocs.setNUMBER(9, p_interorg_transfer_cr_account);
      ocs.setNUMBER(10, p_interorg_receivables_account);
      ocs.setNUMBER(11, p_interorg_payables_account);
      ocs.setNUMBER(12, p_interorg_price_var_account);
      ocs.setString(13, p_elemental_visibility_enabled);
      ocs.setString(14, p_manual_receipt_expense);

      // call the routine!
      ocs.execute();

      // get OUT and IN-OUT params, if any
      if (x_status != null) {
        x_status[0] = ocs.getString(15);
      }
      if (x_error_code != null) {
        NUMBER __rosettatemp = ocs.getNUMBER(16);
        x_error_code[0] = ((null == __rosettatemp) ? null : new Number(__rosettatemp));
      }
      if (x_error_message != null) {
        x_error_message[0] = ocs.getString(17);
      }

    } catch (SQLException __RosettaSe) {
      throw __RosettaSe;
    } finally {
      if(ocs!=null) ocs.close();
    }
  }
}
